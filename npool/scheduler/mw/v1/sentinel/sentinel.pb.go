// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/scheduler/mw/v1/sentinel/sentinel.proto

package sentinel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subsystem string `protobuf:"bytes,10,opt,name=Subsystem,proto3" json:"Subsystem,omitempty"`
	// Types that are assignable to Cond:
	//	*TriggerRequest_GoodID
	//	*TriggerRequest_GoodIDs
	Cond isTriggerRequest_Cond `protobuf_oneof:"Cond"`
}

func (x *TriggerRequest) Reset() {
	*x = TriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRequest) ProtoMessage() {}

func (x *TriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRequest.ProtoReflect.Descriptor instead.
func (*TriggerRequest) Descriptor() ([]byte, []int) {
	return file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerRequest) GetSubsystem() string {
	if x != nil {
		return x.Subsystem
	}
	return ""
}

func (m *TriggerRequest) GetCond() isTriggerRequest_Cond {
	if m != nil {
		return m.Cond
	}
	return nil
}

func (x *TriggerRequest) GetGoodID() string {
	if x, ok := x.GetCond().(*TriggerRequest_GoodID); ok {
		return x.GoodID
	}
	return ""
}

func (x *TriggerRequest) GetGoodIDs() *TriggerRequest_CondGoodIDs {
	if x, ok := x.GetCond().(*TriggerRequest_GoodIDs); ok {
		return x.GoodIDs
	}
	return nil
}

type isTriggerRequest_Cond interface {
	isTriggerRequest_Cond()
}

type TriggerRequest_GoodID struct {
	GoodID string `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof"`
}

type TriggerRequest_GoodIDs struct {
	GoodIDs *TriggerRequest_CondGoodIDs `protobuf:"bytes,30,opt,name=GoodIDs,proto3,oneof"`
}

func (*TriggerRequest_GoodID) isTriggerRequest_Cond() {}

func (*TriggerRequest_GoodIDs) isTriggerRequest_Cond() {}

type TriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TriggerResponse) Reset() {
	*x = TriggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResponse) ProtoMessage() {}

func (x *TriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResponse.ProtoReflect.Descriptor instead.
func (*TriggerResponse) Descriptor() ([]byte, []int) {
	return file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescGZIP(), []int{1}
}

type TriggerRequest_CondGoodIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID []string `protobuf:"bytes,10,rep,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *TriggerRequest_CondGoodIDs) Reset() {
	*x = TriggerRequest_CondGoodIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerRequest_CondGoodIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRequest_CondGoodIDs) ProtoMessage() {}

func (x *TriggerRequest_CondGoodIDs) ProtoReflect() protoreflect.Message {
	mi := &file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRequest_CondGoodIDs.ProtoReflect.Descriptor instead.
func (*TriggerRequest_CondGoodIDs) Descriptor() ([]byte, []int) {
	return file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TriggerRequest_CondGoodIDs) GetGoodID() []string {
	if x != nil {
		return x.GoodID
	}
	return nil
}

var File_npool_scheduler_mw_v1_sentinel_sentinel_proto protoreflect.FileDescriptor

var file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x22, 0xd1, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x58, 0x0a, 0x07,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x07, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x1a, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x64, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x06, 0x0a,
	0x04, 0x43, 0x6f, 0x6e, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x7e, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x70, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x30, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescOnce sync.Once
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescData = file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDesc
)

func file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescGZIP() []byte {
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescOnce.Do(func() {
		file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescData)
	})
	return file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDescData
}

var file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_npool_scheduler_mw_v1_sentinel_sentinel_proto_goTypes = []interface{}{
	(*TriggerRequest)(nil),             // 0: scheduler.middleware.sentinel.v1.TriggerRequest
	(*TriggerResponse)(nil),            // 1: scheduler.middleware.sentinel.v1.TriggerResponse
	(*TriggerRequest_CondGoodIDs)(nil), // 2: scheduler.middleware.sentinel.v1.TriggerRequest.CondGoodIDs
}
var file_npool_scheduler_mw_v1_sentinel_sentinel_proto_depIdxs = []int32{
	2, // 0: scheduler.middleware.sentinel.v1.TriggerRequest.GoodIDs:type_name -> scheduler.middleware.sentinel.v1.TriggerRequest.CondGoodIDs
	0, // 1: scheduler.middleware.sentinel.v1.Middleware.Trigger:input_type -> scheduler.middleware.sentinel.v1.TriggerRequest
	1, // 2: scheduler.middleware.sentinel.v1.Middleware.Trigger:output_type -> scheduler.middleware.sentinel.v1.TriggerResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_npool_scheduler_mw_v1_sentinel_sentinel_proto_init() }
func file_npool_scheduler_mw_v1_sentinel_sentinel_proto_init() {
	if File_npool_scheduler_mw_v1_sentinel_sentinel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerRequest_CondGoodIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TriggerRequest_GoodID)(nil),
		(*TriggerRequest_GoodIDs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_scheduler_mw_v1_sentinel_sentinel_proto_goTypes,
		DependencyIndexes: file_npool_scheduler_mw_v1_sentinel_sentinel_proto_depIdxs,
		MessageInfos:      file_npool_scheduler_mw_v1_sentinel_sentinel_proto_msgTypes,
	}.Build()
	File_npool_scheduler_mw_v1_sentinel_sentinel_proto = out.File
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_rawDesc = nil
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_goTypes = nil
	file_npool_scheduler_mw_v1_sentinel_sentinel_proto_depIdxs = nil
}
