syntax = "proto3";

package project.info.manager.v1;

option go_package = "github.com/NpoolPlatform/message/npool/project-info-manager";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

service ProjectInfoManager {
  rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
    option (google.api.http) = {
        post: "/version"
        body: "*"
    };
}

rpc CreateCoinDescription (CreateCoinDescriptionRequest) returns (CreateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/description"
        body: "*"
    };
}

rpc CreateCoinDescriptions (CreateCoinDescriptionsRequest) returns (CreateCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/descriptions"
        body: "*"
    };
}

rpc UpdateCoinDescription (UpdateCoinDescriptionRequest) returns (UpdateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/update/coin/description"
        body: "*"
    };
}

rpc UpdateAppCoinDescription (UpdateAppCoinDescriptionRequest) returns (UpdateAppCoinDescriptionResponse) {
  option (google.api.http) = {
      post: "/v1/update/app/coin/description"
      body: "*"
  };
}

rpc GetCoinDescription (GetCoinDescriptionRequest) returns (GetCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/description"
        body: "*"
    };
}

rpc GetAppCoinDescription (GetAppCoinDescriptionRequest) returns (GetAppCoinDescriptionResponse) {
  option (google.api.http) = {
      post: "/v1/get/app/coin/description"
      body: "*"
  };
}

rpc GetCoinDescriptions (GetCoinDescriptionsRequest) returns (GetCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/descriptions"
        body: "*"
    };
}

rpc GetAppCoinDescriptions (GetAppCoinDescriptionsRequest) returns (GetAppCoinDescriptionsResponse) {
  option (google.api.http) = {
      post: "/v1/get/app/coin/descriptions"
      body: "*"
  };
}

rpc CountCoinDescriptions (CountCoinDescriptionsRequest) returns (CountCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/count/coin/descriptions"
        body: "*"
    };
}

rpc CountAppCoinDescriptions (CountAppCoinDescriptionsRequest) returns (CountAppCoinDescriptionsResponse) {
  option (google.api.http) = {
      post: "/v1/count/app/coin/descriptions"
      body: "*"
  };
}

rpc DeleteAppCoinDescription (DeleteAppCoinDescriptionRequest) returns (DeleteAppCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/delete/app/coin/description"
        body: "*"
    };
}
}

// for create
message CoinDescriptionBase{
  string AppID      = 20;
  string CoinTypeID = 30;
  string Title      = 40;
  string Message    = 50;
  string UsedFor    = 60;  
}

message CoinDescription {
  string ID         = 10;
  string AppID      = 20;
  string CoinTypeID = 30;
  string Title      = 40;
  string Message    = 50;
  string UsedFor    = 60;
  uint32 CreateAt = 70;
  uint32 UpdateAt = 80;
}
// create
message CreateCoinDescriptionRequest  {
  CoinDescriptionBase Info=10;
}

message CreateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message CreateCoinDescriptionsRequest {
  repeated CoinDescriptionBase Infos = 10;
}

message CreateCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
}

// update for app and admin
message UpdateCoinDescriptionRequest {
  string AppID = 10;
  CoinDescription Info = 20;
}

message UpdateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message UpdateAppCoinDescriptionRequest {
  string TargetAppID = 10;
  CoinDescription Info = 20;
}

message UpdateAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}
// get for app and admin
message GetCoinDescriptionRequest {
  string AppID = 10;
  string ID = 20;
}

message GetCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message GetAppCoinDescriptionRequest {
  string TargetAppID = 10;
  string ID = 20;
}

message GetAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message GetCoinDescriptionsRequest {
  string AppID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

message GetAppCoinDescriptionsRequest {
  string TargetAppID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetAppCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

// count for app and admin
message CountCoinDescriptionsRequest {
  string AppID = 10;
}

message CountCoinDescriptionsResponse {
  uint32 Result = 10;
}

message CountAppCoinDescriptionsRequest {
  string TargetAppID = 10;
}

message CountAppCoinDescriptionsResponse {
  uint32 Result = 10;
}
// delete for admin
message DeleteAppCoinDescriptionRequest {
  string TargetAppID = 10;
  string ID = 20;
}

message DeleteAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}
