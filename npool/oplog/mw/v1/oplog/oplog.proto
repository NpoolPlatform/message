syntax = "proto3";

package oplog.middleware.oplog1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/oplog/mw/v1/oplog";

import "google/api/annotations.proto";
import "npool/basetypes/v1/httpmethod.proto";
import "npool/basetypes/v1/result.proto";
import "npool/basetypes/v1/conds.proto";

service Middleware {
    rpc CreateOpLog   (CreateOpLogRequest)  returns (CreateOpLogResponse)  {}
    rpc UpdateOpLog   (UpdateOpLogRequest)  returns (UpdateOpLogResponse)  {}
    rpc GetOpLogs     (GetOpLogsRequest)    returns (GetOpLogsResponse)    {}
}

message OpLogReq {
    optional uint32 AutoID          = 10;
    optional string AppID           = 20;
    optional string UserID          = 30;
    optional string Path            = 40;
    optional basetypes.v1.HTTPMethod Method = 50;
    optional string Arguments       = 60;
    optional string CurValue        = 70;
    optional string HumanReadable   = 80;
    optional basetypes.v1.Result Result = 90;
    optional string FailReason      = 100;
}

message OpLog {
    // @inject_tag: sql:"auto_id"
    uint32          AutoID          = 10;
    // @inject_tag: sql:"app_id"
    string          AppID           = 20;
    // @inject_tag: sql:"user_id"
    optional string UserID          = 30;
    // @inject_tag: sql:"path"
    string          Path            = 40;
    // @inject_tag: sql:"method"
    string          MethodStr       = 50;
    basetypes.v1.HTTPMethod Method  = 60;
    // @inject_tag: sql:"arguments"
    string          Arguments       = 70;
    // @inject_tag: sql:"cur_value"
    string          CurValue        = 80;
    // @inject_tag: sql:"human_readable"
    string          HumanReadable   = 90;
    // @inject_tag: sql:"result"
    string          ResultStr       = 100;
    basetypes.v1.Result Result      = 110;
    // @inject_tag: sql:"fail_reason"
    string          FailReason      = 120;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val AutoID = 10;
    optional basetypes.v1.StringVal AppID  = 20;
    optional basetypes.v1.StringVal UserID = 30;
    optional basetypes.v1.Uint32Val Result = 40;
}

message CreateOpLogRequest {
    OpLogReq Info = 10;
}

message CreateOpLogResponse {
    OpLog Info = 10;
}

message UpdateOpLogRequest {
    OpLogReq Info = 10;
}

message UpdateOpLogResponse {
    OpLog Info = 10;
}

message GetOpLogsRequest {
    Conds  Conds    = 10;
    int32  Offset   = 20;
    int32  Limit    = 30;
}

message GetOpLogsResponse {
    repeated OpLog Infos = 10;
    uint32         Total = 20;
}

