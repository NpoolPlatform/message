// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/cloud-hashing-billing/cloud-hashing-billing.proto

package cloud_hashing_billing

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoinAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                     string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinTypeID             string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Address                string `protobuf:"bytes,30,opt,name=Address,proto3" json:"Address,omitempty"`
	PlatformHoldPrivateKey bool   `protobuf:"varint,40,opt,name=PlatformHoldPrivateKey,proto3" json:"PlatformHoldPrivateKey,omitempty"`
}

func (x *CoinAccountInfo) Reset() {
	*x = CoinAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinAccountInfo) ProtoMessage() {}

func (x *CoinAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinAccountInfo.ProtoReflect.Descriptor instead.
func (*CoinAccountInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{0}
}

func (x *CoinAccountInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinAccountInfo) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinAccountInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CoinAccountInfo) GetPlatformHoldPrivateKey() bool {
	if x != nil {
		return x.PlatformHoldPrivateKey
	}
	return false
}

type CreateCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinAccountRequest) Reset() {
	*x = CreateCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinAccountRequest) ProtoMessage() {}

func (x *CreateCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCoinAccountRequest) GetInfo() *CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinAccountResponse) Reset() {
	*x = CreateCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinAccountResponse) ProtoMessage() {}

func (x *CreateCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCoinAccountResponse) GetInfo() *CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinAccountRequest) Reset() {
	*x = GetCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountRequest) ProtoMessage() {}

func (x *GetCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoinAccountRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinAccountResponse) Reset() {
	*x = GetCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountResponse) ProtoMessage() {}

func (x *GetCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{4}
}

func (x *GetCoinAccountResponse) GetInfo() *CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinAccountByCoinAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinInfoID string `protobuf:"bytes,10,opt,name=CoinInfoID,proto3" json:"CoinInfoID,omitempty"`
	Address    string `protobuf:"bytes,20,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *GetCoinAccountByCoinAddressRequest) Reset() {
	*x = GetCoinAccountByCoinAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountByCoinAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountByCoinAddressRequest) ProtoMessage() {}

func (x *GetCoinAccountByCoinAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountByCoinAddressRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountByCoinAddressRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{5}
}

func (x *GetCoinAccountByCoinAddressRequest) GetCoinInfoID() string {
	if x != nil {
		return x.CoinInfoID
	}
	return ""
}

func (x *GetCoinAccountByCoinAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetCoinAccountByCoinAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinAccountByCoinAddressResponse) Reset() {
	*x = GetCoinAccountByCoinAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountByCoinAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountByCoinAddressResponse) ProtoMessage() {}

func (x *GetCoinAccountByCoinAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountByCoinAddressResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountByCoinAddressResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{6}
}

func (x *GetCoinAccountByCoinAddressResponse) GetInfo() *CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCoinAccountsRequest) Reset() {
	*x = GetCoinAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountsRequest) ProtoMessage() {}

func (x *GetCoinAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{7}
}

type GetCoinAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinAccountInfo `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinAccountsResponse) Reset() {
	*x = GetCoinAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountsResponse) ProtoMessage() {}

func (x *GetCoinAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{8}
}

func (x *GetCoinAccountsResponse) GetInfos() []*CoinAccountInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type DeleteCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteCoinAccountRequest) Reset() {
	*x = DeleteCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinAccountRequest) ProtoMessage() {}

func (x *DeleteCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCoinAccountRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteCoinAccountResponse) Reset() {
	*x = DeleteCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinAccountResponse) ProtoMessage() {}

func (x *DeleteCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCoinAccountResponse) GetInfo() *CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CoinAccountTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID              string  `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID             string  `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FromAddressID      string  `protobuf:"bytes,40,opt,name=FromAddressID,proto3" json:"FromAddressID,omitempty"`
	ToAddressID        string  `protobuf:"bytes,50,opt,name=ToAddressID,proto3" json:"ToAddressID,omitempty"`
	CoinTypeID         string  `protobuf:"bytes,60,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Amount             float64 `protobuf:"fixed64,70,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Message            string  `protobuf:"bytes,80,opt,name=Message,proto3" json:"Message,omitempty"`
	CreateAt           uint32  `protobuf:"varint,90,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	State              string  `protobuf:"bytes,100,opt,name=State,proto3" json:"State,omitempty"`
	ChainTransactionID string  `protobuf:"bytes,110,opt,name=ChainTransactionID,proto3" json:"ChainTransactionID,omitempty"`
}

func (x *CoinAccountTransaction) Reset() {
	*x = CoinAccountTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinAccountTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinAccountTransaction) ProtoMessage() {}

func (x *CoinAccountTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinAccountTransaction.ProtoReflect.Descriptor instead.
func (*CoinAccountTransaction) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{11}
}

func (x *CoinAccountTransaction) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinAccountTransaction) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CoinAccountTransaction) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CoinAccountTransaction) GetFromAddressID() string {
	if x != nil {
		return x.FromAddressID
	}
	return ""
}

func (x *CoinAccountTransaction) GetToAddressID() string {
	if x != nil {
		return x.ToAddressID
	}
	return ""
}

func (x *CoinAccountTransaction) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinAccountTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinAccountTransaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CoinAccountTransaction) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *CoinAccountTransaction) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CoinAccountTransaction) GetChainTransactionID() string {
	if x != nil {
		return x.ChainTransactionID
	}
	return ""
}

type CreateCoinAccountTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinAccountTransactionRequest) Reset() {
	*x = CreateCoinAccountTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinAccountTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinAccountTransactionRequest) ProtoMessage() {}

func (x *CreateCoinAccountTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinAccountTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{12}
}

func (x *CreateCoinAccountTransactionRequest) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinAccountTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinAccountTransactionResponse) Reset() {
	*x = CreateCoinAccountTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinAccountTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinAccountTransactionResponse) ProtoMessage() {}

func (x *CreateCoinAccountTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinAccountTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{13}
}

func (x *CreateCoinAccountTransactionResponse) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinAccountTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinAccountTransactionRequest) Reset() {
	*x = GetCoinAccountTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{14}
}

func (x *GetCoinAccountTransactionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinAccountTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinAccountTransactionResponse) Reset() {
	*x = GetCoinAccountTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{15}
}

func (x *GetCoinAccountTransactionResponse) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type CoinAccountTransactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID              string           `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID             string           `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FromAddress        *CoinAccountInfo `protobuf:"bytes,40,opt,name=FromAddress,proto3" json:"FromAddress,omitempty"`
	ToAddress          *CoinAccountInfo `protobuf:"bytes,50,opt,name=ToAddress,proto3" json:"ToAddress,omitempty"`
	CoinTypeID         string           `protobuf:"bytes,60,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Amount             float64          `protobuf:"fixed64,70,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Message            string           `protobuf:"bytes,80,opt,name=Message,proto3" json:"Message,omitempty"`
	CreateAt           uint32           `protobuf:"varint,90,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	State              string           `protobuf:"bytes,100,opt,name=State,proto3" json:"State,omitempty"`
	ChainTransactionID string           `protobuf:"bytes,110,opt,name=ChainTransactionID,proto3" json:"ChainTransactionID,omitempty"`
}

func (x *CoinAccountTransactionDetail) Reset() {
	*x = CoinAccountTransactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinAccountTransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinAccountTransactionDetail) ProtoMessage() {}

func (x *CoinAccountTransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinAccountTransactionDetail.ProtoReflect.Descriptor instead.
func (*CoinAccountTransactionDetail) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{16}
}

func (x *CoinAccountTransactionDetail) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetFromAddress() *CoinAccountInfo {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *CoinAccountTransactionDetail) GetToAddress() *CoinAccountInfo {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

func (x *CoinAccountTransactionDetail) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoinAccountTransactionDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *CoinAccountTransactionDetail) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CoinAccountTransactionDetail) GetChainTransactionID() string {
	if x != nil {
		return x.ChainTransactionID
	}
	return ""
}

type GetCoinAccountTransactionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinAccountTransactionDetailRequest) Reset() {
	*x = GetCoinAccountTransactionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionDetailRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionDetailRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{17}
}

func (x *GetCoinAccountTransactionDetailRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinAccountTransactionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *CoinAccountTransactionDetail `protobuf:"bytes,10,opt,name=Detail,proto3" json:"Detail,omitempty"`
}

func (x *GetCoinAccountTransactionDetailResponse) Reset() {
	*x = GetCoinAccountTransactionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionDetailResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionDetailResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionDetailResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{18}
}

func (x *GetCoinAccountTransactionDetailResponse) GetDetail() *CoinAccountTransactionDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetCoinAccountTransactionsByCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID string `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	AddressID  string `protobuf:"bytes,20,opt,name=AddressID,proto3" json:"AddressID,omitempty"`
}

func (x *GetCoinAccountTransactionsByCoinAccountRequest) Reset() {
	*x = GetCoinAccountTransactionsByCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByCoinAccountRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{19}
}

func (x *GetCoinAccountTransactionsByCoinAccountRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *GetCoinAccountTransactionsByCoinAccountRequest) GetAddressID() string {
	if x != nil {
		return x.AddressID
	}
	return ""
}

type GetCoinAccountTransactionsByCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinAccountTransaction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinAccountTransactionsByCoinAccountResponse) Reset() {
	*x = GetCoinAccountTransactionsByCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByCoinAccountResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{20}
}

func (x *GetCoinAccountTransactionsByCoinAccountResponse) GetInfos() []*CoinAccountTransaction {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetCoinAccountTransactionsByStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,10,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *GetCoinAccountTransactionsByStateRequest) Reset() {
	*x = GetCoinAccountTransactionsByStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByStateRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByStateRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByStateRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{21}
}

func (x *GetCoinAccountTransactionsByStateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetCoinAccountTransactionsByStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinAccountTransaction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinAccountTransactionsByStateResponse) Reset() {
	*x = GetCoinAccountTransactionsByStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByStateResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByStateResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByStateResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{22}
}

func (x *GetCoinAccountTransactionsByStateResponse) GetInfos() []*CoinAccountTransaction {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetCoinAccountTransactionsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetCoinAccountTransactionsByAppUserRequest) Reset() {
	*x = GetCoinAccountTransactionsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByAppUserRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{23}
}

func (x *GetCoinAccountTransactionsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetCoinAccountTransactionsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetCoinAccountTransactionsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinAccountTransaction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinAccountTransactionsByAppUserResponse) Reset() {
	*x = GetCoinAccountTransactionsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByAppUserResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{24}
}

func (x *GetCoinAccountTransactionsByAppUserResponse) GetInfos() []*CoinAccountTransaction {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetCoinAccountTransactionsByCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID string `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *GetCoinAccountTransactionsByCoinRequest) Reset() {
	*x = GetCoinAccountTransactionsByCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByCoinRequest) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByCoinRequest.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByCoinRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{25}
}

func (x *GetCoinAccountTransactionsByCoinRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type GetCoinAccountTransactionsByCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinAccountTransaction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinAccountTransactionsByCoinResponse) Reset() {
	*x = GetCoinAccountTransactionsByCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinAccountTransactionsByCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinAccountTransactionsByCoinResponse) ProtoMessage() {}

func (x *GetCoinAccountTransactionsByCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinAccountTransactionsByCoinResponse.ProtoReflect.Descriptor instead.
func (*GetCoinAccountTransactionsByCoinResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{26}
}

func (x *GetCoinAccountTransactionsByCoinResponse) GetInfos() []*CoinAccountTransaction {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateCoinAccountTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinAccountTransactionRequest) Reset() {
	*x = UpdateCoinAccountTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinAccountTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinAccountTransactionRequest) ProtoMessage() {}

func (x *UpdateCoinAccountTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinAccountTransactionRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoinAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateCoinAccountTransactionRequest) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinAccountTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinAccountTransactionResponse) Reset() {
	*x = UpdateCoinAccountTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinAccountTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinAccountTransactionResponse) ProtoMessage() {}

func (x *UpdateCoinAccountTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinAccountTransactionResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoinAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateCoinAccountTransactionResponse) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteCoinAccountTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteCoinAccountTransactionRequest) Reset() {
	*x = DeleteCoinAccountTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinAccountTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinAccountTransactionRequest) ProtoMessage() {}

func (x *DeleteCoinAccountTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinAccountTransactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoinAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteCoinAccountTransactionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteCoinAccountTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinAccountTransaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteCoinAccountTransactionResponse) Reset() {
	*x = DeleteCoinAccountTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinAccountTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinAccountTransactionResponse) ProtoMessage() {}

func (x *DeleteCoinAccountTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinAccountTransactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteCoinAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteCoinAccountTransactionResponse) GetInfo() *CoinAccountTransaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type PlatformBenefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID               string  `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	BenefitAccountID     string  `protobuf:"bytes,30,opt,name=BenefitAccountID,proto3" json:"BenefitAccountID,omitempty"`
	Amount               float64 `protobuf:"fixed64,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreateAt             uint32  `protobuf:"varint,50,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	ChainTransactionID   string  `protobuf:"bytes,60,opt,name=ChainTransactionID,proto3" json:"ChainTransactionID,omitempty"`
	LastBenefitTimestamp uint32  `protobuf:"varint,70,opt,name=LastBenefitTimestamp,proto3" json:"LastBenefitTimestamp,omitempty"`
}

func (x *PlatformBenefit) Reset() {
	*x = PlatformBenefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformBenefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformBenefit) ProtoMessage() {}

func (x *PlatformBenefit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformBenefit.ProtoReflect.Descriptor instead.
func (*PlatformBenefit) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{31}
}

func (x *PlatformBenefit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PlatformBenefit) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *PlatformBenefit) GetBenefitAccountID() string {
	if x != nil {
		return x.BenefitAccountID
	}
	return ""
}

func (x *PlatformBenefit) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PlatformBenefit) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PlatformBenefit) GetChainTransactionID() string {
	if x != nil {
		return x.ChainTransactionID
	}
	return ""
}

func (x *PlatformBenefit) GetLastBenefitTimestamp() uint32 {
	if x != nil {
		return x.LastBenefitTimestamp
	}
	return 0
}

type CreatePlatformBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePlatformBenefitRequest) Reset() {
	*x = CreatePlatformBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformBenefitRequest) ProtoMessage() {}

func (x *CreatePlatformBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformBenefitRequest.ProtoReflect.Descriptor instead.
func (*CreatePlatformBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{32}
}

func (x *CreatePlatformBenefitRequest) GetInfo() *PlatformBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePlatformBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePlatformBenefitResponse) Reset() {
	*x = CreatePlatformBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformBenefitResponse) ProtoMessage() {}

func (x *CreatePlatformBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformBenefitResponse.ProtoReflect.Descriptor instead.
func (*CreatePlatformBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{33}
}

func (x *CreatePlatformBenefitResponse) GetInfo() *PlatformBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPlatformBenefitsByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetPlatformBenefitsByGoodRequest) Reset() {
	*x = GetPlatformBenefitsByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitsByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitsByGoodRequest) ProtoMessage() {}

func (x *GetPlatformBenefitsByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitsByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitsByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{34}
}

func (x *GetPlatformBenefitsByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetPlatformBenefitsByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PlatformBenefit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetPlatformBenefitsByGoodResponse) Reset() {
	*x = GetPlatformBenefitsByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitsByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitsByGoodResponse) ProtoMessage() {}

func (x *GetPlatformBenefitsByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitsByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitsByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{35}
}

func (x *GetPlatformBenefitsByGoodResponse) GetInfos() []*PlatformBenefit {
	if x != nil {
		return x.Infos
	}
	return nil
}

type PlatformBenefitDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID             string           `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	BenefitAddress     *CoinAccountInfo `protobuf:"bytes,30,opt,name=BenefitAddress,proto3" json:"BenefitAddress,omitempty"`
	Amount             float64          `protobuf:"fixed64,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreateAt           uint32           `protobuf:"varint,50,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	ChainTransactionID string           `protobuf:"bytes,60,opt,name=ChainTransactionID,proto3" json:"ChainTransactionID,omitempty"`
}

func (x *PlatformBenefitDetail) Reset() {
	*x = PlatformBenefitDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformBenefitDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformBenefitDetail) ProtoMessage() {}

func (x *PlatformBenefitDetail) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformBenefitDetail.ProtoReflect.Descriptor instead.
func (*PlatformBenefitDetail) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{36}
}

func (x *PlatformBenefitDetail) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PlatformBenefitDetail) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *PlatformBenefitDetail) GetBenefitAddress() *CoinAccountInfo {
	if x != nil {
		return x.BenefitAddress
	}
	return nil
}

func (x *PlatformBenefitDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PlatformBenefitDetail) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PlatformBenefitDetail) GetChainTransactionID() string {
	if x != nil {
		return x.ChainTransactionID
	}
	return ""
}

type GetPlatformBenefitDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPlatformBenefitDetailRequest) Reset() {
	*x = GetPlatformBenefitDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitDetailRequest) ProtoMessage() {}

func (x *GetPlatformBenefitDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitDetailRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitDetailRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{37}
}

func (x *GetPlatformBenefitDetailRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetPlatformBenefitDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *PlatformBenefitDetail `protobuf:"bytes,10,opt,name=Detail,proto3" json:"Detail,omitempty"`
}

func (x *GetPlatformBenefitDetailResponse) Reset() {
	*x = GetPlatformBenefitDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitDetailResponse) ProtoMessage() {}

func (x *GetPlatformBenefitDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitDetailResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitDetailResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{38}
}

func (x *GetPlatformBenefitDetailResponse) GetDetail() *PlatformBenefitDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetPlatformBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPlatformBenefitRequest) Reset() {
	*x = GetPlatformBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitRequest) ProtoMessage() {}

func (x *GetPlatformBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{39}
}

func (x *GetPlatformBenefitRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetPlatformBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPlatformBenefitResponse) Reset() {
	*x = GetPlatformBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformBenefitResponse) ProtoMessage() {}

func (x *GetPlatformBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformBenefitResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{40}
}

func (x *GetPlatformBenefitResponse) GetInfo() *PlatformBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLatestPlatformBenefitByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetLatestPlatformBenefitByGoodRequest) Reset() {
	*x = GetLatestPlatformBenefitByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestPlatformBenefitByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestPlatformBenefitByGoodRequest) ProtoMessage() {}

func (x *GetLatestPlatformBenefitByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestPlatformBenefitByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetLatestPlatformBenefitByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{41}
}

func (x *GetLatestPlatformBenefitByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetLatestPlatformBenefitByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLatestPlatformBenefitByGoodResponse) Reset() {
	*x = GetLatestPlatformBenefitByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestPlatformBenefitByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestPlatformBenefitByGoodResponse) ProtoMessage() {}

func (x *GetLatestPlatformBenefitByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestPlatformBenefitByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetLatestPlatformBenefitByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{42}
}

func (x *GetLatestPlatformBenefitByGoodResponse) GetInfo() *PlatformBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type PlatformSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                          string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	WarmAccountUSDAmount        float64 `protobuf:"fixed64,20,opt,name=WarmAccountUSDAmount,proto3" json:"WarmAccountUSDAmount,omitempty"`
	PaymentAccountUSDAmount     float64 `protobuf:"fixed64,30,opt,name=PaymentAccountUSDAmount,proto3" json:"PaymentAccountUSDAmount,omitempty"`
	WithdrawAutoReviewUSDAmount float64 `protobuf:"fixed64,40,opt,name=WithdrawAutoReviewUSDAmount,proto3" json:"WithdrawAutoReviewUSDAmount,omitempty"`
}

func (x *PlatformSetting) Reset() {
	*x = PlatformSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformSetting) ProtoMessage() {}

func (x *PlatformSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformSetting.ProtoReflect.Descriptor instead.
func (*PlatformSetting) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{43}
}

func (x *PlatformSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PlatformSetting) GetWarmAccountUSDAmount() float64 {
	if x != nil {
		return x.WarmAccountUSDAmount
	}
	return 0
}

func (x *PlatformSetting) GetPaymentAccountUSDAmount() float64 {
	if x != nil {
		return x.PaymentAccountUSDAmount
	}
	return 0
}

func (x *PlatformSetting) GetWithdrawAutoReviewUSDAmount() float64 {
	if x != nil {
		return x.WithdrawAutoReviewUSDAmount
	}
	return 0
}

type CreatePlatformSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePlatformSettingRequest) Reset() {
	*x = CreatePlatformSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformSettingRequest) ProtoMessage() {}

func (x *CreatePlatformSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformSettingRequest.ProtoReflect.Descriptor instead.
func (*CreatePlatformSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{44}
}

func (x *CreatePlatformSettingRequest) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePlatformSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePlatformSettingResponse) Reset() {
	*x = CreatePlatformSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformSettingResponse) ProtoMessage() {}

func (x *CreatePlatformSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformSettingResponse.ProtoReflect.Descriptor instead.
func (*CreatePlatformSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{45}
}

func (x *CreatePlatformSettingResponse) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePlatformSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePlatformSettingRequest) Reset() {
	*x = UpdatePlatformSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlatformSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformSettingRequest) ProtoMessage() {}

func (x *UpdatePlatformSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlatformSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{46}
}

func (x *UpdatePlatformSettingRequest) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePlatformSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePlatformSettingResponse) Reset() {
	*x = UpdatePlatformSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlatformSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformSettingResponse) ProtoMessage() {}

func (x *UpdatePlatformSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlatformSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{47}
}

func (x *UpdatePlatformSettingResponse) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPlatformSettingByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetPlatformSettingByGoodRequest) Reset() {
	*x = GetPlatformSettingByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformSettingByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformSettingByGoodRequest) ProtoMessage() {}

func (x *GetPlatformSettingByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformSettingByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformSettingByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{48}
}

func (x *GetPlatformSettingByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetPlatformSettingByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPlatformSettingByGoodResponse) Reset() {
	*x = GetPlatformSettingByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformSettingByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformSettingByGoodResponse) ProtoMessage() {}

func (x *GetPlatformSettingByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformSettingByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformSettingByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{49}
}

func (x *GetPlatformSettingByGoodResponse) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPlatformSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPlatformSettingRequest) Reset() {
	*x = GetPlatformSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformSettingRequest) ProtoMessage() {}

func (x *GetPlatformSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformSettingRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{50}
}

func (x *GetPlatformSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetPlatformSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PlatformSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPlatformSettingResponse) Reset() {
	*x = GetPlatformSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformSettingResponse) ProtoMessage() {}

func (x *GetPlatformSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformSettingResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{51}
}

func (x *GetPlatformSettingResponse) GetInfo() *PlatformSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserBenefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID               string  `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID                string  `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	GoodID               string  `protobuf:"bytes,40,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Amount               float64 `protobuf:"fixed64,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreateAt             uint32  `protobuf:"varint,60,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	OrderID              string  `protobuf:"bytes,70,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	LastBenefitTimestamp uint32  `protobuf:"varint,80,opt,name=LastBenefitTimestamp,proto3" json:"LastBenefitTimestamp,omitempty"`
}

func (x *UserBenefit) Reset() {
	*x = UserBenefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBenefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBenefit) ProtoMessage() {}

func (x *UserBenefit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBenefit.ProtoReflect.Descriptor instead.
func (*UserBenefit) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{52}
}

func (x *UserBenefit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserBenefit) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserBenefit) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserBenefit) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *UserBenefit) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserBenefit) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *UserBenefit) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UserBenefit) GetLastBenefitTimestamp() uint32 {
	if x != nil {
		return x.LastBenefitTimestamp
	}
	return 0
}

type CreateUserBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserBenefitRequest) Reset() {
	*x = CreateUserBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserBenefitRequest) ProtoMessage() {}

func (x *CreateUserBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserBenefitRequest.ProtoReflect.Descriptor instead.
func (*CreateUserBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{53}
}

func (x *CreateUserBenefitRequest) GetInfo() *UserBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserBenefitResponse) Reset() {
	*x = CreateUserBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserBenefitResponse) ProtoMessage() {}

func (x *CreateUserBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserBenefitResponse.ProtoReflect.Descriptor instead.
func (*CreateUserBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{54}
}

func (x *CreateUserBenefitResponse) GetInfo() *UserBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserBenefitsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserBenefitsByAppUserRequest) Reset() {
	*x = GetUserBenefitsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBenefitsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBenefitsByAppUserRequest) ProtoMessage() {}

func (x *GetUserBenefitsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBenefitsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserBenefitsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{55}
}

func (x *GetUserBenefitsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserBenefitsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserBenefitsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserBenefit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserBenefitsByAppUserResponse) Reset() {
	*x = GetUserBenefitsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBenefitsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBenefitsByAppUserResponse) ProtoMessage() {}

func (x *GetUserBenefitsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBenefitsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserBenefitsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{56}
}

func (x *GetUserBenefitsByAppUserResponse) GetInfos() []*UserBenefit {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserBenefitsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string          `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	PageInfo *npool.PageInfo `protobuf:"bytes,20,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetUserBenefitsByAppRequest) Reset() {
	*x = GetUserBenefitsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBenefitsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBenefitsByAppRequest) ProtoMessage() {}

func (x *GetUserBenefitsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBenefitsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetUserBenefitsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{57}
}

func (x *GetUserBenefitsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserBenefitsByAppRequest) GetPageInfo() *npool.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetUserBenefitsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserBenefit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserBenefitsByAppResponse) Reset() {
	*x = GetUserBenefitsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBenefitsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBenefitsByAppResponse) ProtoMessage() {}

func (x *GetUserBenefitsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBenefitsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetUserBenefitsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{58}
}

func (x *GetUserBenefitsByAppResponse) GetInfos() []*UserBenefit {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetLatestUserBenefitByGoodAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GoodID string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetLatestUserBenefitByGoodAppUserRequest) Reset() {
	*x = GetLatestUserBenefitByGoodAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestUserBenefitByGoodAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestUserBenefitByGoodAppUserRequest) ProtoMessage() {}

func (x *GetLatestUserBenefitByGoodAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestUserBenefitByGoodAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetLatestUserBenefitByGoodAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{59}
}

func (x *GetLatestUserBenefitByGoodAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetLatestUserBenefitByGoodAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetLatestUserBenefitByGoodAppUserRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetLatestUserBenefitByGoodAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLatestUserBenefitByGoodAppUserResponse) Reset() {
	*x = GetLatestUserBenefitByGoodAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestUserBenefitByGoodAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestUserBenefitByGoodAppUserResponse) ProtoMessage() {}

func (x *GetLatestUserBenefitByGoodAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestUserBenefitByGoodAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetLatestUserBenefitByGoodAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{60}
}

func (x *GetLatestUserBenefitByGoodAppUserResponse) GetInfo() *UserBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CoinSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinTypeID               string  `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	WarmAccountCoinAmount    float64 `protobuf:"fixed64,30,opt,name=WarmAccountCoinAmount,proto3" json:"WarmAccountCoinAmount,omitempty"`
	PaymentAccountCoinAmount float64 `protobuf:"fixed64,40,opt,name=PaymentAccountCoinAmount,proto3" json:"PaymentAccountCoinAmount,omitempty"`
	PlatformOfflineAccountID string  `protobuf:"bytes,50,opt,name=PlatformOfflineAccountID,proto3" json:"PlatformOfflineAccountID,omitempty"`
	UserOfflineAccountID     string  `protobuf:"bytes,60,opt,name=UserOfflineAccountID,proto3" json:"UserOfflineAccountID,omitempty"`
	UserOnlineAccountID      string  `protobuf:"bytes,70,opt,name=UserOnlineAccountID,proto3" json:"UserOnlineAccountID,omitempty"`
	GoodIncomingAccountID    string  `protobuf:"bytes,80,opt,name=GoodIncomingAccountID,proto3" json:"GoodIncomingAccountID,omitempty"`
}

func (x *CoinSetting) Reset() {
	*x = CoinSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinSetting) ProtoMessage() {}

func (x *CoinSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinSetting.ProtoReflect.Descriptor instead.
func (*CoinSetting) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{61}
}

func (x *CoinSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinSetting) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinSetting) GetWarmAccountCoinAmount() float64 {
	if x != nil {
		return x.WarmAccountCoinAmount
	}
	return 0
}

func (x *CoinSetting) GetPaymentAccountCoinAmount() float64 {
	if x != nil {
		return x.PaymentAccountCoinAmount
	}
	return 0
}

func (x *CoinSetting) GetPlatformOfflineAccountID() string {
	if x != nil {
		return x.PlatformOfflineAccountID
	}
	return ""
}

func (x *CoinSetting) GetUserOfflineAccountID() string {
	if x != nil {
		return x.UserOfflineAccountID
	}
	return ""
}

func (x *CoinSetting) GetUserOnlineAccountID() string {
	if x != nil {
		return x.UserOnlineAccountID
	}
	return ""
}

func (x *CoinSetting) GetGoodIncomingAccountID() string {
	if x != nil {
		return x.GoodIncomingAccountID
	}
	return ""
}

type CreateCoinSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinSettingRequest) Reset() {
	*x = CreateCoinSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinSettingRequest) ProtoMessage() {}

func (x *CreateCoinSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{62}
}

func (x *CreateCoinSettingRequest) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinSettingResponse) Reset() {
	*x = CreateCoinSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinSettingResponse) ProtoMessage() {}

func (x *CreateCoinSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinSettingResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{63}
}

func (x *CreateCoinSettingResponse) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinSettingRequest) Reset() {
	*x = UpdateCoinSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinSettingRequest) ProtoMessage() {}

func (x *UpdateCoinSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoinSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateCoinSettingRequest) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinSettingResponse) Reset() {
	*x = UpdateCoinSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinSettingResponse) ProtoMessage() {}

func (x *UpdateCoinSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoinSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateCoinSettingResponse) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinSettingRequest) Reset() {
	*x = GetCoinSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinSettingRequest) ProtoMessage() {}

func (x *GetCoinSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinSettingRequest.ProtoReflect.Descriptor instead.
func (*GetCoinSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{66}
}

func (x *GetCoinSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinSettingResponse) Reset() {
	*x = GetCoinSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinSettingResponse) ProtoMessage() {}

func (x *GetCoinSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinSettingResponse.ProtoReflect.Descriptor instead.
func (*GetCoinSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{67}
}

func (x *GetCoinSettingResponse) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinSettingByCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID string `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *GetCoinSettingByCoinRequest) Reset() {
	*x = GetCoinSettingByCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinSettingByCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinSettingByCoinRequest) ProtoMessage() {}

func (x *GetCoinSettingByCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinSettingByCoinRequest.ProtoReflect.Descriptor instead.
func (*GetCoinSettingByCoinRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{68}
}

func (x *GetCoinSettingByCoinRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type GetCoinSettingByCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinSettingByCoinResponse) Reset() {
	*x = GetCoinSettingByCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinSettingByCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinSettingByCoinResponse) ProtoMessage() {}

func (x *GetCoinSettingByCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinSettingByCoinResponse.ProtoReflect.Descriptor instead.
func (*GetCoinSettingByCoinResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{69}
}

func (x *GetCoinSettingByCoinResponse) GetInfo() *CoinSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GoodBenefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID               string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	BenefitAccountID     string `protobuf:"bytes,30,opt,name=BenefitAccountID,proto3" json:"BenefitAccountID,omitempty"`
	BenefitIntervalHours uint32 `protobuf:"varint,70,opt,name=BenefitIntervalHours,proto3" json:"BenefitIntervalHours,omitempty"`
}

func (x *GoodBenefit) Reset() {
	*x = GoodBenefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodBenefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodBenefit) ProtoMessage() {}

func (x *GoodBenefit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodBenefit.ProtoReflect.Descriptor instead.
func (*GoodBenefit) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{70}
}

func (x *GoodBenefit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GoodBenefit) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GoodBenefit) GetBenefitAccountID() string {
	if x != nil {
		return x.BenefitAccountID
	}
	return ""
}

func (x *GoodBenefit) GetBenefitIntervalHours() uint32 {
	if x != nil {
		return x.BenefitIntervalHours
	}
	return 0
}

type CreateGoodBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodBenefitRequest) Reset() {
	*x = CreateGoodBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodBenefitRequest) ProtoMessage() {}

func (x *CreateGoodBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodBenefitRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{71}
}

func (x *CreateGoodBenefitRequest) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateGoodBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodBenefitResponse) Reset() {
	*x = CreateGoodBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodBenefitResponse) ProtoMessage() {}

func (x *CreateGoodBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodBenefitResponse.ProtoReflect.Descriptor instead.
func (*CreateGoodBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{72}
}

func (x *CreateGoodBenefitResponse) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodBenefitRequest) Reset() {
	*x = UpdateGoodBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodBenefitRequest) ProtoMessage() {}

func (x *UpdateGoodBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodBenefitRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{73}
}

func (x *UpdateGoodBenefitRequest) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodBenefitResponse) Reset() {
	*x = UpdateGoodBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodBenefitResponse) ProtoMessage() {}

func (x *UpdateGoodBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodBenefitResponse.ProtoReflect.Descriptor instead.
func (*UpdateGoodBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateGoodBenefitResponse) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetGoodBenefitRequest) Reset() {
	*x = GetGoodBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodBenefitRequest) ProtoMessage() {}

func (x *GetGoodBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodBenefitRequest.ProtoReflect.Descriptor instead.
func (*GetGoodBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{75}
}

func (x *GetGoodBenefitRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetGoodBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGoodBenefitResponse) Reset() {
	*x = GetGoodBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodBenefitResponse) ProtoMessage() {}

func (x *GetGoodBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodBenefitResponse.ProtoReflect.Descriptor instead.
func (*GetGoodBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{76}
}

func (x *GetGoodBenefitResponse) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodBenefitByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetGoodBenefitByGoodRequest) Reset() {
	*x = GetGoodBenefitByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodBenefitByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodBenefitByGoodRequest) ProtoMessage() {}

func (x *GetGoodBenefitByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodBenefitByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetGoodBenefitByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{77}
}

func (x *GetGoodBenefitByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetGoodBenefitByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGoodBenefitByGoodResponse) Reset() {
	*x = GetGoodBenefitByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodBenefitByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodBenefitByGoodResponse) ProtoMessage() {}

func (x *GetGoodBenefitByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodBenefitByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetGoodBenefitByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{78}
}

func (x *GetGoodBenefitByGoodResponse) GetInfo() *GoodBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GoodPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID            string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	PaymentCoinTypeID string `protobuf:"bytes,30,opt,name=PaymentCoinTypeID,proto3" json:"PaymentCoinTypeID,omitempty"`
	AccountID         string `protobuf:"bytes,40,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Idle              bool   `protobuf:"varint,50,opt,name=Idle,proto3" json:"Idle,omitempty"`
	OccupiedBy        string `protobuf:"bytes,60,opt,name=OccupiedBy,proto3" json:"OccupiedBy,omitempty"`
}

func (x *GoodPayment) Reset() {
	*x = GoodPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodPayment) ProtoMessage() {}

func (x *GoodPayment) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodPayment.ProtoReflect.Descriptor instead.
func (*GoodPayment) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{79}
}

func (x *GoodPayment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GoodPayment) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GoodPayment) GetPaymentCoinTypeID() string {
	if x != nil {
		return x.PaymentCoinTypeID
	}
	return ""
}

func (x *GoodPayment) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *GoodPayment) GetIdle() bool {
	if x != nil {
		return x.Idle
	}
	return false
}

func (x *GoodPayment) GetOccupiedBy() string {
	if x != nil {
		return x.OccupiedBy
	}
	return ""
}

type CreateGoodPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodPaymentRequest) Reset() {
	*x = CreateGoodPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodPaymentRequest) ProtoMessage() {}

func (x *CreateGoodPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodPaymentRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{80}
}

func (x *CreateGoodPaymentRequest) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateGoodPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodPaymentResponse) Reset() {
	*x = CreateGoodPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodPaymentResponse) ProtoMessage() {}

func (x *CreateGoodPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodPaymentResponse.ProtoReflect.Descriptor instead.
func (*CreateGoodPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{81}
}

func (x *CreateGoodPaymentResponse) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodPaymentRequest) Reset() {
	*x = UpdateGoodPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodPaymentRequest) ProtoMessage() {}

func (x *UpdateGoodPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodPaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{82}
}

func (x *UpdateGoodPaymentRequest) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodPaymentResponse) Reset() {
	*x = UpdateGoodPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodPaymentResponse) ProtoMessage() {}

func (x *UpdateGoodPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodPaymentResponse.ProtoReflect.Descriptor instead.
func (*UpdateGoodPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{83}
}

func (x *UpdateGoodPaymentResponse) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetGoodPaymentRequest) Reset() {
	*x = GetGoodPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentRequest) ProtoMessage() {}

func (x *GetGoodPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentRequest.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{84}
}

func (x *GetGoodPaymentRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetGoodPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGoodPaymentResponse) Reset() {
	*x = GetGoodPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentResponse) ProtoMessage() {}

func (x *GetGoodPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentResponse.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{85}
}

func (x *GetGoodPaymentResponse) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGoodPaymentsRequest) Reset() {
	*x = GetGoodPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentsRequest) ProtoMessage() {}

func (x *GetGoodPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{86}
}

type GetGoodPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodPayment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetGoodPaymentsResponse) Reset() {
	*x = GetGoodPaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentsResponse) ProtoMessage() {}

func (x *GetGoodPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{87}
}

func (x *GetGoodPaymentsResponse) GetInfos() []*GoodPayment {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetGoodPaymentsByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID   string          `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	PageInfo *npool.PageInfo `protobuf:"bytes,20,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetGoodPaymentsByGoodRequest) Reset() {
	*x = GetGoodPaymentsByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentsByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentsByGoodRequest) ProtoMessage() {}

func (x *GetGoodPaymentsByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentsByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentsByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{88}
}

func (x *GetGoodPaymentsByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GetGoodPaymentsByGoodRequest) GetPageInfo() *npool.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetGoodPaymentsByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodPayment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetGoodPaymentsByGoodResponse) Reset() {
	*x = GetGoodPaymentsByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentsByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentsByGoodResponse) ProtoMessage() {}

func (x *GetGoodPaymentsByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentsByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentsByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{89}
}

func (x *GetGoodPaymentsByGoodResponse) GetInfos() []*GoodPayment {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetIdleGoodPaymentsByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID   string          `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	PageInfo *npool.PageInfo `protobuf:"bytes,20,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetIdleGoodPaymentsByGoodRequest) Reset() {
	*x = GetIdleGoodPaymentsByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdleGoodPaymentsByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdleGoodPaymentsByGoodRequest) ProtoMessage() {}

func (x *GetIdleGoodPaymentsByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdleGoodPaymentsByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetIdleGoodPaymentsByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{90}
}

func (x *GetIdleGoodPaymentsByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GetIdleGoodPaymentsByGoodRequest) GetPageInfo() *npool.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetIdleGoodPaymentsByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodPayment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetIdleGoodPaymentsByGoodResponse) Reset() {
	*x = GetIdleGoodPaymentsByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdleGoodPaymentsByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdleGoodPaymentsByGoodResponse) ProtoMessage() {}

func (x *GetIdleGoodPaymentsByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdleGoodPaymentsByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetIdleGoodPaymentsByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{91}
}

func (x *GetIdleGoodPaymentsByGoodResponse) GetInfos() []*GoodPayment {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetIdleGoodPaymentsByGoodPaymentCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID            string          `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	PaymentCoinTypeID string          `protobuf:"bytes,20,opt,name=PaymentCoinTypeID,proto3" json:"PaymentCoinTypeID,omitempty"`
	PageInfo          *npool.PageInfo `protobuf:"bytes,30,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) Reset() {
	*x = GetIdleGoodPaymentsByGoodPaymentCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdleGoodPaymentsByGoodPaymentCoinRequest) ProtoMessage() {}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdleGoodPaymentsByGoodPaymentCoinRequest.ProtoReflect.Descriptor instead.
func (*GetIdleGoodPaymentsByGoodPaymentCoinRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{92}
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) GetPaymentCoinTypeID() string {
	if x != nil {
		return x.PaymentCoinTypeID
	}
	return ""
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinRequest) GetPageInfo() *npool.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetIdleGoodPaymentsByGoodPaymentCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodPayment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinResponse) Reset() {
	*x = GetIdleGoodPaymentsByGoodPaymentCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdleGoodPaymentsByGoodPaymentCoinResponse) ProtoMessage() {}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdleGoodPaymentsByGoodPaymentCoinResponse.ProtoReflect.Descriptor instead.
func (*GetIdleGoodPaymentsByGoodPaymentCoinResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{93}
}

func (x *GetIdleGoodPaymentsByGoodPaymentCoinResponse) GetInfos() []*GoodPayment {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetGoodPaymentByAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,10,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetGoodPaymentByAccountRequest) Reset() {
	*x = GetGoodPaymentByAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentByAccountRequest) ProtoMessage() {}

func (x *GetGoodPaymentByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentByAccountRequest.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentByAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{94}
}

func (x *GetGoodPaymentByAccountRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type GetGoodPaymentByAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodPayment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGoodPaymentByAccountResponse) Reset() {
	*x = GetGoodPaymentByAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodPaymentByAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodPaymentByAccountResponse) ProtoMessage() {}

func (x *GetGoodPaymentByAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodPaymentByAccountResponse.ProtoReflect.Descriptor instead.
func (*GetGoodPaymentByAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{95}
}

func (x *GetGoodPaymentByAccountResponse) GetInfo() *GoodPayment {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID string `protobuf:"bytes,40,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	AccountID  string `protobuf:"bytes,50,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Name       string `protobuf:"bytes,60,opt,name=Name,proto3" json:"Name,omitempty"`
	Message    string `protobuf:"bytes,70,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UserWithdraw) Reset() {
	*x = UserWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdraw) ProtoMessage() {}

func (x *UserWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdraw.ProtoReflect.Descriptor instead.
func (*UserWithdraw) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{96}
}

func (x *UserWithdraw) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserWithdraw) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserWithdraw) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserWithdraw) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *UserWithdraw) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *UserWithdraw) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserWithdraw) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateUserWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserWithdrawRequest) Reset() {
	*x = CreateUserWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWithdrawRequest) ProtoMessage() {}

func (x *CreateUserWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWithdrawRequest.ProtoReflect.Descriptor instead.
func (*CreateUserWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{97}
}

func (x *CreateUserWithdrawRequest) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserWithdrawResponse) Reset() {
	*x = CreateUserWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWithdrawResponse) ProtoMessage() {}

func (x *CreateUserWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWithdrawResponse.ProtoReflect.Descriptor instead.
func (*CreateUserWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{98}
}

func (x *CreateUserWithdrawResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserWithdrawRequest) Reset() {
	*x = UpdateUserWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawRequest) ProtoMessage() {}

func (x *UpdateUserWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{99}
}

func (x *UpdateUserWithdrawRequest) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserWithdrawResponse) Reset() {
	*x = UpdateUserWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawResponse) ProtoMessage() {}

func (x *UpdateUserWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{100}
}

func (x *UpdateUserWithdrawResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetUserWithdrawRequest) Reset() {
	*x = GetUserWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawRequest) ProtoMessage() {}

func (x *GetUserWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{101}
}

func (x *GetUserWithdrawRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetUserWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserWithdrawResponse) Reset() {
	*x = GetUserWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawResponse) ProtoMessage() {}

func (x *GetUserWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{102}
}

func (x *GetUserWithdrawResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserWithdrawsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserWithdrawsByAppUserRequest) Reset() {
	*x = GetUserWithdrawsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByAppUserRequest) ProtoMessage() {}

func (x *GetUserWithdrawsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{103}
}

func (x *GetUserWithdrawsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserWithdrawsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserWithdrawsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawsByAppUserResponse) Reset() {
	*x = GetUserWithdrawsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByAppUserResponse) ProtoMessage() {}

func (x *GetUserWithdrawsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{104}
}

func (x *GetUserWithdrawsByAppUserResponse) GetInfos() []*UserWithdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserWithdrawsByOtherAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
}

func (x *GetUserWithdrawsByOtherAppUserRequest) Reset() {
	*x = GetUserWithdrawsByOtherAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByOtherAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByOtherAppUserRequest) ProtoMessage() {}

func (x *GetUserWithdrawsByOtherAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByOtherAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByOtherAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{105}
}

func (x *GetUserWithdrawsByOtherAppUserRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetUserWithdrawsByOtherAppUserRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

type GetUserWithdrawsByOtherAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawsByOtherAppUserResponse) Reset() {
	*x = GetUserWithdrawsByOtherAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByOtherAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByOtherAppUserResponse) ProtoMessage() {}

func (x *GetUserWithdrawsByOtherAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByOtherAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByOtherAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{106}
}

func (x *GetUserWithdrawsByOtherAppUserResponse) GetInfos() []*UserWithdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserWithdrawByAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,10,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetUserWithdrawByAccountRequest) Reset() {
	*x = GetUserWithdrawByAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawByAccountRequest) ProtoMessage() {}

func (x *GetUserWithdrawByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawByAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawByAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{107}
}

func (x *GetUserWithdrawByAccountRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type GetUserWithdrawByAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserWithdrawByAccountResponse) Reset() {
	*x = GetUserWithdrawByAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawByAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawByAccountResponse) ProtoMessage() {}

func (x *GetUserWithdrawByAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawByAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawByAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{108}
}

func (x *GetUserWithdrawByAccountResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserDirectBenefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID string `protobuf:"bytes,40,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	AccountID  string `protobuf:"bytes,50,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *UserDirectBenefit) Reset() {
	*x = UserDirectBenefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDirectBenefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDirectBenefit) ProtoMessage() {}

func (x *UserDirectBenefit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDirectBenefit.ProtoReflect.Descriptor instead.
func (*UserDirectBenefit) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{109}
}

func (x *UserDirectBenefit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserDirectBenefit) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserDirectBenefit) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserDirectBenefit) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *UserDirectBenefit) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type CreateUserDirectBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserDirectBenefitRequest) Reset() {
	*x = CreateUserDirectBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDirectBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDirectBenefitRequest) ProtoMessage() {}

func (x *CreateUserDirectBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDirectBenefitRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDirectBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{110}
}

func (x *CreateUserDirectBenefitRequest) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserDirectBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserDirectBenefitResponse) Reset() {
	*x = CreateUserDirectBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDirectBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDirectBenefitResponse) ProtoMessage() {}

func (x *CreateUserDirectBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDirectBenefitResponse.ProtoReflect.Descriptor instead.
func (*CreateUserDirectBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{111}
}

func (x *CreateUserDirectBenefitResponse) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserDirectBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserDirectBenefitRequest) Reset() {
	*x = UpdateUserDirectBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDirectBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDirectBenefitRequest) ProtoMessage() {}

func (x *UpdateUserDirectBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDirectBenefitRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDirectBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateUserDirectBenefitRequest) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserDirectBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserDirectBenefitResponse) Reset() {
	*x = UpdateUserDirectBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDirectBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDirectBenefitResponse) ProtoMessage() {}

func (x *UpdateUserDirectBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDirectBenefitResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDirectBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateUserDirectBenefitResponse) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserDirectBenefitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetUserDirectBenefitRequest) Reset() {
	*x = GetUserDirectBenefitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitRequest) ProtoMessage() {}

func (x *GetUserDirectBenefitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitRequest.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{114}
}

func (x *GetUserDirectBenefitRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetUserDirectBenefitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserDirectBenefitResponse) Reset() {
	*x = GetUserDirectBenefitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitResponse) ProtoMessage() {}

func (x *GetUserDirectBenefitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitResponse.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{115}
}

func (x *GetUserDirectBenefitResponse) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserDirectBenefitsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserDirectBenefitsByAppUserRequest) Reset() {
	*x = GetUserDirectBenefitsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitsByAppUserRequest) ProtoMessage() {}

func (x *GetUserDirectBenefitsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{116}
}

func (x *GetUserDirectBenefitsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserDirectBenefitsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserDirectBenefitsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserDirectBenefit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserDirectBenefitsByAppUserResponse) Reset() {
	*x = GetUserDirectBenefitsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitsByAppUserResponse) ProtoMessage() {}

func (x *GetUserDirectBenefitsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{117}
}

func (x *GetUserDirectBenefitsByAppUserResponse) GetInfos() []*UserDirectBenefit {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserDirectBenefitsByOtherAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
}

func (x *GetUserDirectBenefitsByOtherAppUserRequest) Reset() {
	*x = GetUserDirectBenefitsByOtherAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitsByOtherAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitsByOtherAppUserRequest) ProtoMessage() {}

func (x *GetUserDirectBenefitsByOtherAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitsByOtherAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitsByOtherAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{118}
}

func (x *GetUserDirectBenefitsByOtherAppUserRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetUserDirectBenefitsByOtherAppUserRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

type GetUserDirectBenefitsByOtherAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserDirectBenefit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserDirectBenefitsByOtherAppUserResponse) Reset() {
	*x = GetUserDirectBenefitsByOtherAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitsByOtherAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitsByOtherAppUserResponse) ProtoMessage() {}

func (x *GetUserDirectBenefitsByOtherAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitsByOtherAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitsByOtherAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{119}
}

func (x *GetUserDirectBenefitsByOtherAppUserResponse) GetInfos() []*UserDirectBenefit {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserDirectBenefitByAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,10,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetUserDirectBenefitByAccountRequest) Reset() {
	*x = GetUserDirectBenefitByAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitByAccountRequest) ProtoMessage() {}

func (x *GetUserDirectBenefitByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitByAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitByAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{120}
}

func (x *GetUserDirectBenefitByAccountRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type GetUserDirectBenefitByAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDirectBenefit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserDirectBenefitByAccountResponse) Reset() {
	*x = GetUserDirectBenefitByAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDirectBenefitByAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDirectBenefitByAccountResponse) ProtoMessage() {}

func (x *GetUserDirectBenefitByAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDirectBenefitByAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUserDirectBenefitByAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{121}
}

func (x *GetUserDirectBenefitByAccountResponse) GetInfo() *UserDirectBenefit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserWithdrawItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID                 string  `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                string  `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID            string  `protobuf:"bytes,40,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	WithdrawToAccountID   string  `protobuf:"bytes,50,opt,name=WithdrawToAccountID,proto3" json:"WithdrawToAccountID,omitempty"`
	Amount                float64 `protobuf:"fixed64,60,opt,name=Amount,proto3" json:"Amount,omitempty"`
	PlatformTransactionID string  `protobuf:"bytes,70,opt,name=PlatformTransactionID,proto3" json:"PlatformTransactionID,omitempty"`
}

func (x *UserWithdrawItem) Reset() {
	*x = UserWithdrawItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdrawItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdrawItem) ProtoMessage() {}

func (x *UserWithdrawItem) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdrawItem.ProtoReflect.Descriptor instead.
func (*UserWithdrawItem) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{122}
}

func (x *UserWithdrawItem) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserWithdrawItem) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserWithdrawItem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserWithdrawItem) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *UserWithdrawItem) GetWithdrawToAccountID() string {
	if x != nil {
		return x.WithdrawToAccountID
	}
	return ""
}

func (x *UserWithdrawItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserWithdrawItem) GetPlatformTransactionID() string {
	if x != nil {
		return x.PlatformTransactionID
	}
	return ""
}

type CreateUserWithdrawItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserWithdrawItemRequest) Reset() {
	*x = CreateUserWithdrawItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserWithdrawItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWithdrawItemRequest) ProtoMessage() {}

func (x *CreateUserWithdrawItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWithdrawItemRequest.ProtoReflect.Descriptor instead.
func (*CreateUserWithdrawItemRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{123}
}

func (x *CreateUserWithdrawItemRequest) GetInfo() *UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserWithdrawItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserWithdrawItemResponse) Reset() {
	*x = CreateUserWithdrawItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserWithdrawItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWithdrawItemResponse) ProtoMessage() {}

func (x *CreateUserWithdrawItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWithdrawItemResponse.ProtoReflect.Descriptor instead.
func (*CreateUserWithdrawItemResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{124}
}

func (x *CreateUserWithdrawItemResponse) GetInfo() *UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserWithdrawItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserWithdrawItemRequest) Reset() {
	*x = UpdateUserWithdrawItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawItemRequest) ProtoMessage() {}

func (x *UpdateUserWithdrawItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawItemRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{125}
}

func (x *UpdateUserWithdrawItemRequest) GetInfo() *UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserWithdrawItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserWithdrawItemResponse) Reset() {
	*x = UpdateUserWithdrawItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawItemResponse) ProtoMessage() {}

func (x *UpdateUserWithdrawItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawItemResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{126}
}

func (x *UpdateUserWithdrawItemResponse) GetInfo() *UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserWithdrawItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetUserWithdrawItemRequest) Reset() {
	*x = GetUserWithdrawItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemRequest) ProtoMessage() {}

func (x *GetUserWithdrawItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{127}
}

func (x *GetUserWithdrawItemRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetUserWithdrawItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserWithdrawItemResponse) Reset() {
	*x = GetUserWithdrawItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemResponse) ProtoMessage() {}

func (x *GetUserWithdrawItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{128}
}

func (x *GetUserWithdrawItemResponse) GetInfo() *UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserWithdrawItemsByAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,10,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetUserWithdrawItemsByAccountRequest) Reset() {
	*x = GetUserWithdrawItemsByAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByAccountRequest) ProtoMessage() {}

func (x *GetUserWithdrawItemsByAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{129}
}

func (x *GetUserWithdrawItemsByAccountRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type GetUserWithdrawItemsByAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdrawItem `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawItemsByAccountResponse) Reset() {
	*x = GetUserWithdrawItemsByAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByAccountResponse) ProtoMessage() {}

func (x *GetUserWithdrawItemsByAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{130}
}

func (x *GetUserWithdrawItemsByAccountResponse) GetInfos() []*UserWithdrawItem {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserWithdrawItemsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserWithdrawItemsByAppUserRequest) Reset() {
	*x = GetUserWithdrawItemsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByAppUserRequest) ProtoMessage() {}

func (x *GetUserWithdrawItemsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{131}
}

func (x *GetUserWithdrawItemsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserWithdrawItemsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserWithdrawItemsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdrawItem `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawItemsByAppUserResponse) Reset() {
	*x = GetUserWithdrawItemsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByAppUserResponse) ProtoMessage() {}

func (x *GetUserWithdrawItemsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{132}
}

func (x *GetUserWithdrawItemsByAppUserResponse) GetInfos() []*UserWithdrawItem {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserWithdrawItemsByOtherAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
}

func (x *GetUserWithdrawItemsByOtherAppUserRequest) Reset() {
	*x = GetUserWithdrawItemsByOtherAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByOtherAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByOtherAppUserRequest) ProtoMessage() {}

func (x *GetUserWithdrawItemsByOtherAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByOtherAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByOtherAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{133}
}

func (x *GetUserWithdrawItemsByOtherAppUserRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetUserWithdrawItemsByOtherAppUserRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

type GetUserWithdrawItemsByOtherAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdrawItem `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawItemsByOtherAppUserResponse) Reset() {
	*x = GetUserWithdrawItemsByOtherAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawItemsByOtherAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawItemsByOtherAppUserResponse) ProtoMessage() {}

func (x *GetUserWithdrawItemsByOtherAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawItemsByOtherAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawItemsByOtherAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{134}
}

func (x *GetUserWithdrawItemsByOtherAppUserResponse) GetInfos() []*UserWithdrawItem {
	if x != nil {
		return x.Infos
	}
	return nil
}

type AppWithdrawSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                           string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID                        string  `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	CoinTypeID                   string  `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	WithdrawAutoReviewCoinAmount float64 `protobuf:"fixed64,40,opt,name=WithdrawAutoReviewCoinAmount,proto3" json:"WithdrawAutoReviewCoinAmount,omitempty"`
}

func (x *AppWithdrawSetting) Reset() {
	*x = AppWithdrawSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWithdrawSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWithdrawSetting) ProtoMessage() {}

func (x *AppWithdrawSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWithdrawSetting.ProtoReflect.Descriptor instead.
func (*AppWithdrawSetting) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{135}
}

func (x *AppWithdrawSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppWithdrawSetting) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppWithdrawSetting) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *AppWithdrawSetting) GetWithdrawAutoReviewCoinAmount() float64 {
	if x != nil {
		return x.WithdrawAutoReviewCoinAmount
	}
	return 0
}

type CreateAppWithdrawSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppWithdrawSettingRequest) Reset() {
	*x = CreateAppWithdrawSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppWithdrawSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppWithdrawSettingRequest) ProtoMessage() {}

func (x *CreateAppWithdrawSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppWithdrawSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateAppWithdrawSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{136}
}

func (x *CreateAppWithdrawSettingRequest) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppWithdrawSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppWithdrawSettingResponse) Reset() {
	*x = CreateAppWithdrawSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppWithdrawSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppWithdrawSettingResponse) ProtoMessage() {}

func (x *CreateAppWithdrawSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppWithdrawSettingResponse.ProtoReflect.Descriptor instead.
func (*CreateAppWithdrawSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{137}
}

func (x *CreateAppWithdrawSettingResponse) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppWithdrawSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppWithdrawSettingRequest) Reset() {
	*x = UpdateAppWithdrawSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppWithdrawSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppWithdrawSettingRequest) ProtoMessage() {}

func (x *UpdateAppWithdrawSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppWithdrawSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppWithdrawSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{138}
}

func (x *UpdateAppWithdrawSettingRequest) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppWithdrawSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppWithdrawSettingResponse) Reset() {
	*x = UpdateAppWithdrawSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppWithdrawSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppWithdrawSettingResponse) ProtoMessage() {}

func (x *UpdateAppWithdrawSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppWithdrawSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppWithdrawSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{139}
}

func (x *UpdateAppWithdrawSettingResponse) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppWithdrawSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppWithdrawSettingRequest) Reset() {
	*x = GetAppWithdrawSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingRequest) ProtoMessage() {}

func (x *GetAppWithdrawSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingRequest.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{140}
}

func (x *GetAppWithdrawSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppWithdrawSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppWithdrawSettingResponse) Reset() {
	*x = GetAppWithdrawSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingResponse) ProtoMessage() {}

func (x *GetAppWithdrawSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingResponse.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{141}
}

func (x *GetAppWithdrawSettingResponse) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppWithdrawSettingsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetAppWithdrawSettingsByAppRequest) Reset() {
	*x = GetAppWithdrawSettingsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingsByAppRequest) ProtoMessage() {}

func (x *GetAppWithdrawSettingsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{142}
}

func (x *GetAppWithdrawSettingsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetAppWithdrawSettingsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppWithdrawSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetAppWithdrawSettingsByAppResponse) Reset() {
	*x = GetAppWithdrawSettingsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingsByAppResponse) ProtoMessage() {}

func (x *GetAppWithdrawSettingsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{143}
}

func (x *GetAppWithdrawSettingsByAppResponse) GetInfos() []*AppWithdrawSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetAppWithdrawSettingByAppCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	CoinTypeID string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *GetAppWithdrawSettingByAppCoinRequest) Reset() {
	*x = GetAppWithdrawSettingByAppCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingByAppCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingByAppCoinRequest) ProtoMessage() {}

func (x *GetAppWithdrawSettingByAppCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingByAppCoinRequest.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingByAppCoinRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{144}
}

func (x *GetAppWithdrawSettingByAppCoinRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppWithdrawSettingByAppCoinRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type GetAppWithdrawSettingByAppCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppWithdrawSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppWithdrawSettingByAppCoinResponse) Reset() {
	*x = GetAppWithdrawSettingByAppCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingByAppCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingByAppCoinResponse) ProtoMessage() {}

func (x *GetAppWithdrawSettingByAppCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingByAppCoinResponse.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingByAppCoinResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{145}
}

func (x *GetAppWithdrawSettingByAppCoinResponse) GetInfo() *AppWithdrawSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppWithdrawSettingsByOtherAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *GetAppWithdrawSettingsByOtherAppRequest) Reset() {
	*x = GetAppWithdrawSettingsByOtherAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingsByOtherAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingsByOtherAppRequest) ProtoMessage() {}

func (x *GetAppWithdrawSettingsByOtherAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingsByOtherAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingsByOtherAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{146}
}

func (x *GetAppWithdrawSettingsByOtherAppRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type GetAppWithdrawSettingsByOtherAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppWithdrawSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetAppWithdrawSettingsByOtherAppResponse) Reset() {
	*x = GetAppWithdrawSettingsByOtherAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawSettingsByOtherAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawSettingsByOtherAppResponse) ProtoMessage() {}

func (x *GetAppWithdrawSettingsByOtherAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawSettingsByOtherAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawSettingsByOtherAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP(), []int{147}
}

func (x *GetAppWithdrawSettingsByOtherAppResponse) GetInfos() []*AppWithdrawSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_cloud_hashing_billing_cloud_hashing_billing_proto protoreflect.FileDescriptor

var file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDesc = []byte{
	0x0a, 0x37, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x36, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x48, 0x6f, 0x6c, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x5e, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x64, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x02, 0x0a, 0x16, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x44, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x23, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6c, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x03, 0x0a, 0x1c, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x4b, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x47, 0x0a, 0x09, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x79, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x6e, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x44, 0x22, 0x79, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x40, 0x0a, 0x28,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x73,
	0x0a, 0x29, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x5a, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x75, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x49, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x22, 0x72, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6b, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x6c, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x35, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x32, 0x0a, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5d, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x22, 0x64, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x51, 0x0a, 0x0e, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x6b, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x26, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x57, 0x61, 0x72, 0x6d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x53, 0x44, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x57, 0x61, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x53, 0x44, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x53, 0x44,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x53, 0x44, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x1b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x53, 0x44, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1b, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x53,
	0x44, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x22, 0x61, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x5b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe5, 0x01,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x32, 0x0a, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x63, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x70, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x29, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x87, 0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x57, 0x61, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x57, 0x61, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x32, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x56, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x59, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42,
	0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x64, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x64, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x79, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x42, 0x79,
	0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x55, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x66,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x60, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x57, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x55,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6d, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x3f, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x5e, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x61, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x5f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x55, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x72, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42,
	0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x70, 0x0a, 0x2b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x44, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x68, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf0, 0x01, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x30, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x5f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x60, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x44, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x54, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x71, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42,
	0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x12, 0x42, 0x0a, 0x1c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1c, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x64, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x64, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x61,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x3a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x69, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5d, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x22, 0x6e, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x32, 0x82, 0x63, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08,
	0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x94,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xcb, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x62, 0x79, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f,
	0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa0,
	0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xcd, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01,
	0x2a, 0x12, 0xc1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xfc, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x48, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x31,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x62, 0x79, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0xe3, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2a, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62,
	0x79, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xec, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x44, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xdf, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x41,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x62, 0x79, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xcd, 0x01, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xda, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0xcd, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x69,
	0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xd7, 0x01, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x3f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xc2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x12, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x2f,
	0x62, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x12, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xbd, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x39,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x3a, 0x01,
	0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x36,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xa0,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xbf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0xae, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x35, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70,
	0x70, 0x3a, 0x01, 0x2a, 0x12, 0xe5, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x2c, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12,
	0xa0, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a,
	0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xae, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x62, 0x79, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x94, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xae, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x2f, 0x62, 0x79,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x94,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0xb2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x36, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x6f,
	0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xc3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x64, 0x6c,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x12, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x69, 0x64,
	0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xf1, 0x01, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x45, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x2f, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x69, 0x64, 0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12,
	0xba, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62,
	0x79, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x12, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x33, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x30,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0xc3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xd8, 0x01, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xbe, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x39, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xb9, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0xb9, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12,
	0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0xad, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0xd8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x3f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xed, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x44, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xd3, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2f, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0xb5, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x2f, 0x69, 0x74, 0x65, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0xb5, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x3a, 0x01, 0x2a,
	0x12, 0xa9, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0xd3, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0xd4, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xe9, 0x01, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x43, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xbd, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x39, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xbd, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x39, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xcb, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x3c, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x62, 0x79,
	0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0xd8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x3f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0xe0, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x41, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x70, 0x3a, 0x01, 0x2a, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescOnce sync.Once
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescData = file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDesc
)

func file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescGZIP() []byte {
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescOnce.Do(func() {
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescData)
	})
	return file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDescData
}

var file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 148)
var file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_goTypes = []interface{}{
	(*CoinAccountInfo)(nil),                                 // 0: cloud.hashing.billing.v1.CoinAccountInfo
	(*CreateCoinAccountRequest)(nil),                        // 1: cloud.hashing.billing.v1.CreateCoinAccountRequest
	(*CreateCoinAccountResponse)(nil),                       // 2: cloud.hashing.billing.v1.CreateCoinAccountResponse
	(*GetCoinAccountRequest)(nil),                           // 3: cloud.hashing.billing.v1.GetCoinAccountRequest
	(*GetCoinAccountResponse)(nil),                          // 4: cloud.hashing.billing.v1.GetCoinAccountResponse
	(*GetCoinAccountByCoinAddressRequest)(nil),              // 5: cloud.hashing.billing.v1.GetCoinAccountByCoinAddressRequest
	(*GetCoinAccountByCoinAddressResponse)(nil),             // 6: cloud.hashing.billing.v1.GetCoinAccountByCoinAddressResponse
	(*GetCoinAccountsRequest)(nil),                          // 7: cloud.hashing.billing.v1.GetCoinAccountsRequest
	(*GetCoinAccountsResponse)(nil),                         // 8: cloud.hashing.billing.v1.GetCoinAccountsResponse
	(*DeleteCoinAccountRequest)(nil),                        // 9: cloud.hashing.billing.v1.DeleteCoinAccountRequest
	(*DeleteCoinAccountResponse)(nil),                       // 10: cloud.hashing.billing.v1.DeleteCoinAccountResponse
	(*CoinAccountTransaction)(nil),                          // 11: cloud.hashing.billing.v1.CoinAccountTransaction
	(*CreateCoinAccountTransactionRequest)(nil),             // 12: cloud.hashing.billing.v1.CreateCoinAccountTransactionRequest
	(*CreateCoinAccountTransactionResponse)(nil),            // 13: cloud.hashing.billing.v1.CreateCoinAccountTransactionResponse
	(*GetCoinAccountTransactionRequest)(nil),                // 14: cloud.hashing.billing.v1.GetCoinAccountTransactionRequest
	(*GetCoinAccountTransactionResponse)(nil),               // 15: cloud.hashing.billing.v1.GetCoinAccountTransactionResponse
	(*CoinAccountTransactionDetail)(nil),                    // 16: cloud.hashing.billing.v1.CoinAccountTransactionDetail
	(*GetCoinAccountTransactionDetailRequest)(nil),          // 17: cloud.hashing.billing.v1.GetCoinAccountTransactionDetailRequest
	(*GetCoinAccountTransactionDetailResponse)(nil),         // 18: cloud.hashing.billing.v1.GetCoinAccountTransactionDetailResponse
	(*GetCoinAccountTransactionsByCoinAccountRequest)(nil),  // 19: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinAccountRequest
	(*GetCoinAccountTransactionsByCoinAccountResponse)(nil), // 20: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinAccountResponse
	(*GetCoinAccountTransactionsByStateRequest)(nil),        // 21: cloud.hashing.billing.v1.GetCoinAccountTransactionsByStateRequest
	(*GetCoinAccountTransactionsByStateResponse)(nil),       // 22: cloud.hashing.billing.v1.GetCoinAccountTransactionsByStateResponse
	(*GetCoinAccountTransactionsByAppUserRequest)(nil),      // 23: cloud.hashing.billing.v1.GetCoinAccountTransactionsByAppUserRequest
	(*GetCoinAccountTransactionsByAppUserResponse)(nil),     // 24: cloud.hashing.billing.v1.GetCoinAccountTransactionsByAppUserResponse
	(*GetCoinAccountTransactionsByCoinRequest)(nil),         // 25: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinRequest
	(*GetCoinAccountTransactionsByCoinResponse)(nil),        // 26: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinResponse
	(*UpdateCoinAccountTransactionRequest)(nil),             // 27: cloud.hashing.billing.v1.UpdateCoinAccountTransactionRequest
	(*UpdateCoinAccountTransactionResponse)(nil),            // 28: cloud.hashing.billing.v1.UpdateCoinAccountTransactionResponse
	(*DeleteCoinAccountTransactionRequest)(nil),             // 29: cloud.hashing.billing.v1.DeleteCoinAccountTransactionRequest
	(*DeleteCoinAccountTransactionResponse)(nil),            // 30: cloud.hashing.billing.v1.DeleteCoinAccountTransactionResponse
	(*PlatformBenefit)(nil),                                 // 31: cloud.hashing.billing.v1.PlatformBenefit
	(*CreatePlatformBenefitRequest)(nil),                    // 32: cloud.hashing.billing.v1.CreatePlatformBenefitRequest
	(*CreatePlatformBenefitResponse)(nil),                   // 33: cloud.hashing.billing.v1.CreatePlatformBenefitResponse
	(*GetPlatformBenefitsByGoodRequest)(nil),                // 34: cloud.hashing.billing.v1.GetPlatformBenefitsByGoodRequest
	(*GetPlatformBenefitsByGoodResponse)(nil),               // 35: cloud.hashing.billing.v1.GetPlatformBenefitsByGoodResponse
	(*PlatformBenefitDetail)(nil),                           // 36: cloud.hashing.billing.v1.PlatformBenefitDetail
	(*GetPlatformBenefitDetailRequest)(nil),                 // 37: cloud.hashing.billing.v1.GetPlatformBenefitDetailRequest
	(*GetPlatformBenefitDetailResponse)(nil),                // 38: cloud.hashing.billing.v1.GetPlatformBenefitDetailResponse
	(*GetPlatformBenefitRequest)(nil),                       // 39: cloud.hashing.billing.v1.GetPlatformBenefitRequest
	(*GetPlatformBenefitResponse)(nil),                      // 40: cloud.hashing.billing.v1.GetPlatformBenefitResponse
	(*GetLatestPlatformBenefitByGoodRequest)(nil),           // 41: cloud.hashing.billing.v1.GetLatestPlatformBenefitByGoodRequest
	(*GetLatestPlatformBenefitByGoodResponse)(nil),          // 42: cloud.hashing.billing.v1.GetLatestPlatformBenefitByGoodResponse
	(*PlatformSetting)(nil),                                 // 43: cloud.hashing.billing.v1.PlatformSetting
	(*CreatePlatformSettingRequest)(nil),                    // 44: cloud.hashing.billing.v1.CreatePlatformSettingRequest
	(*CreatePlatformSettingResponse)(nil),                   // 45: cloud.hashing.billing.v1.CreatePlatformSettingResponse
	(*UpdatePlatformSettingRequest)(nil),                    // 46: cloud.hashing.billing.v1.UpdatePlatformSettingRequest
	(*UpdatePlatformSettingResponse)(nil),                   // 47: cloud.hashing.billing.v1.UpdatePlatformSettingResponse
	(*GetPlatformSettingByGoodRequest)(nil),                 // 48: cloud.hashing.billing.v1.GetPlatformSettingByGoodRequest
	(*GetPlatformSettingByGoodResponse)(nil),                // 49: cloud.hashing.billing.v1.GetPlatformSettingByGoodResponse
	(*GetPlatformSettingRequest)(nil),                       // 50: cloud.hashing.billing.v1.GetPlatformSettingRequest
	(*GetPlatformSettingResponse)(nil),                      // 51: cloud.hashing.billing.v1.GetPlatformSettingResponse
	(*UserBenefit)(nil),                                     // 52: cloud.hashing.billing.v1.UserBenefit
	(*CreateUserBenefitRequest)(nil),                        // 53: cloud.hashing.billing.v1.CreateUserBenefitRequest
	(*CreateUserBenefitResponse)(nil),                       // 54: cloud.hashing.billing.v1.CreateUserBenefitResponse
	(*GetUserBenefitsByAppUserRequest)(nil),                 // 55: cloud.hashing.billing.v1.GetUserBenefitsByAppUserRequest
	(*GetUserBenefitsByAppUserResponse)(nil),                // 56: cloud.hashing.billing.v1.GetUserBenefitsByAppUserResponse
	(*GetUserBenefitsByAppRequest)(nil),                     // 57: cloud.hashing.billing.v1.GetUserBenefitsByAppRequest
	(*GetUserBenefitsByAppResponse)(nil),                    // 58: cloud.hashing.billing.v1.GetUserBenefitsByAppResponse
	(*GetLatestUserBenefitByGoodAppUserRequest)(nil),        // 59: cloud.hashing.billing.v1.GetLatestUserBenefitByGoodAppUserRequest
	(*GetLatestUserBenefitByGoodAppUserResponse)(nil),       // 60: cloud.hashing.billing.v1.GetLatestUserBenefitByGoodAppUserResponse
	(*CoinSetting)(nil),                                     // 61: cloud.hashing.billing.v1.CoinSetting
	(*CreateCoinSettingRequest)(nil),                        // 62: cloud.hashing.billing.v1.CreateCoinSettingRequest
	(*CreateCoinSettingResponse)(nil),                       // 63: cloud.hashing.billing.v1.CreateCoinSettingResponse
	(*UpdateCoinSettingRequest)(nil),                        // 64: cloud.hashing.billing.v1.UpdateCoinSettingRequest
	(*UpdateCoinSettingResponse)(nil),                       // 65: cloud.hashing.billing.v1.UpdateCoinSettingResponse
	(*GetCoinSettingRequest)(nil),                           // 66: cloud.hashing.billing.v1.GetCoinSettingRequest
	(*GetCoinSettingResponse)(nil),                          // 67: cloud.hashing.billing.v1.GetCoinSettingResponse
	(*GetCoinSettingByCoinRequest)(nil),                     // 68: cloud.hashing.billing.v1.GetCoinSettingByCoinRequest
	(*GetCoinSettingByCoinResponse)(nil),                    // 69: cloud.hashing.billing.v1.GetCoinSettingByCoinResponse
	(*GoodBenefit)(nil),                                     // 70: cloud.hashing.billing.v1.GoodBenefit
	(*CreateGoodBenefitRequest)(nil),                        // 71: cloud.hashing.billing.v1.CreateGoodBenefitRequest
	(*CreateGoodBenefitResponse)(nil),                       // 72: cloud.hashing.billing.v1.CreateGoodBenefitResponse
	(*UpdateGoodBenefitRequest)(nil),                        // 73: cloud.hashing.billing.v1.UpdateGoodBenefitRequest
	(*UpdateGoodBenefitResponse)(nil),                       // 74: cloud.hashing.billing.v1.UpdateGoodBenefitResponse
	(*GetGoodBenefitRequest)(nil),                           // 75: cloud.hashing.billing.v1.GetGoodBenefitRequest
	(*GetGoodBenefitResponse)(nil),                          // 76: cloud.hashing.billing.v1.GetGoodBenefitResponse
	(*GetGoodBenefitByGoodRequest)(nil),                     // 77: cloud.hashing.billing.v1.GetGoodBenefitByGoodRequest
	(*GetGoodBenefitByGoodResponse)(nil),                    // 78: cloud.hashing.billing.v1.GetGoodBenefitByGoodResponse
	(*GoodPayment)(nil),                                     // 79: cloud.hashing.billing.v1.GoodPayment
	(*CreateGoodPaymentRequest)(nil),                        // 80: cloud.hashing.billing.v1.CreateGoodPaymentRequest
	(*CreateGoodPaymentResponse)(nil),                       // 81: cloud.hashing.billing.v1.CreateGoodPaymentResponse
	(*UpdateGoodPaymentRequest)(nil),                        // 82: cloud.hashing.billing.v1.UpdateGoodPaymentRequest
	(*UpdateGoodPaymentResponse)(nil),                       // 83: cloud.hashing.billing.v1.UpdateGoodPaymentResponse
	(*GetGoodPaymentRequest)(nil),                           // 84: cloud.hashing.billing.v1.GetGoodPaymentRequest
	(*GetGoodPaymentResponse)(nil),                          // 85: cloud.hashing.billing.v1.GetGoodPaymentResponse
	(*GetGoodPaymentsRequest)(nil),                          // 86: cloud.hashing.billing.v1.GetGoodPaymentsRequest
	(*GetGoodPaymentsResponse)(nil),                         // 87: cloud.hashing.billing.v1.GetGoodPaymentsResponse
	(*GetGoodPaymentsByGoodRequest)(nil),                    // 88: cloud.hashing.billing.v1.GetGoodPaymentsByGoodRequest
	(*GetGoodPaymentsByGoodResponse)(nil),                   // 89: cloud.hashing.billing.v1.GetGoodPaymentsByGoodResponse
	(*GetIdleGoodPaymentsByGoodRequest)(nil),                // 90: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodRequest
	(*GetIdleGoodPaymentsByGoodResponse)(nil),               // 91: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodResponse
	(*GetIdleGoodPaymentsByGoodPaymentCoinRequest)(nil),     // 92: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinRequest
	(*GetIdleGoodPaymentsByGoodPaymentCoinResponse)(nil),    // 93: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinResponse
	(*GetGoodPaymentByAccountRequest)(nil),                  // 94: cloud.hashing.billing.v1.GetGoodPaymentByAccountRequest
	(*GetGoodPaymentByAccountResponse)(nil),                 // 95: cloud.hashing.billing.v1.GetGoodPaymentByAccountResponse
	(*UserWithdraw)(nil),                                    // 96: cloud.hashing.billing.v1.UserWithdraw
	(*CreateUserWithdrawRequest)(nil),                       // 97: cloud.hashing.billing.v1.CreateUserWithdrawRequest
	(*CreateUserWithdrawResponse)(nil),                      // 98: cloud.hashing.billing.v1.CreateUserWithdrawResponse
	(*UpdateUserWithdrawRequest)(nil),                       // 99: cloud.hashing.billing.v1.UpdateUserWithdrawRequest
	(*UpdateUserWithdrawResponse)(nil),                      // 100: cloud.hashing.billing.v1.UpdateUserWithdrawResponse
	(*GetUserWithdrawRequest)(nil),                          // 101: cloud.hashing.billing.v1.GetUserWithdrawRequest
	(*GetUserWithdrawResponse)(nil),                         // 102: cloud.hashing.billing.v1.GetUserWithdrawResponse
	(*GetUserWithdrawsByAppUserRequest)(nil),                // 103: cloud.hashing.billing.v1.GetUserWithdrawsByAppUserRequest
	(*GetUserWithdrawsByAppUserResponse)(nil),               // 104: cloud.hashing.billing.v1.GetUserWithdrawsByAppUserResponse
	(*GetUserWithdrawsByOtherAppUserRequest)(nil),           // 105: cloud.hashing.billing.v1.GetUserWithdrawsByOtherAppUserRequest
	(*GetUserWithdrawsByOtherAppUserResponse)(nil),          // 106: cloud.hashing.billing.v1.GetUserWithdrawsByOtherAppUserResponse
	(*GetUserWithdrawByAccountRequest)(nil),                 // 107: cloud.hashing.billing.v1.GetUserWithdrawByAccountRequest
	(*GetUserWithdrawByAccountResponse)(nil),                // 108: cloud.hashing.billing.v1.GetUserWithdrawByAccountResponse
	(*UserDirectBenefit)(nil),                               // 109: cloud.hashing.billing.v1.UserDirectBenefit
	(*CreateUserDirectBenefitRequest)(nil),                  // 110: cloud.hashing.billing.v1.CreateUserDirectBenefitRequest
	(*CreateUserDirectBenefitResponse)(nil),                 // 111: cloud.hashing.billing.v1.CreateUserDirectBenefitResponse
	(*UpdateUserDirectBenefitRequest)(nil),                  // 112: cloud.hashing.billing.v1.UpdateUserDirectBenefitRequest
	(*UpdateUserDirectBenefitResponse)(nil),                 // 113: cloud.hashing.billing.v1.UpdateUserDirectBenefitResponse
	(*GetUserDirectBenefitRequest)(nil),                     // 114: cloud.hashing.billing.v1.GetUserDirectBenefitRequest
	(*GetUserDirectBenefitResponse)(nil),                    // 115: cloud.hashing.billing.v1.GetUserDirectBenefitResponse
	(*GetUserDirectBenefitsByAppUserRequest)(nil),           // 116: cloud.hashing.billing.v1.GetUserDirectBenefitsByAppUserRequest
	(*GetUserDirectBenefitsByAppUserResponse)(nil),          // 117: cloud.hashing.billing.v1.GetUserDirectBenefitsByAppUserResponse
	(*GetUserDirectBenefitsByOtherAppUserRequest)(nil),      // 118: cloud.hashing.billing.v1.GetUserDirectBenefitsByOtherAppUserRequest
	(*GetUserDirectBenefitsByOtherAppUserResponse)(nil),     // 119: cloud.hashing.billing.v1.GetUserDirectBenefitsByOtherAppUserResponse
	(*GetUserDirectBenefitByAccountRequest)(nil),            // 120: cloud.hashing.billing.v1.GetUserDirectBenefitByAccountRequest
	(*GetUserDirectBenefitByAccountResponse)(nil),           // 121: cloud.hashing.billing.v1.GetUserDirectBenefitByAccountResponse
	(*UserWithdrawItem)(nil),                                // 122: cloud.hashing.billing.v1.UserWithdrawItem
	(*CreateUserWithdrawItemRequest)(nil),                   // 123: cloud.hashing.billing.v1.CreateUserWithdrawItemRequest
	(*CreateUserWithdrawItemResponse)(nil),                  // 124: cloud.hashing.billing.v1.CreateUserWithdrawItemResponse
	(*UpdateUserWithdrawItemRequest)(nil),                   // 125: cloud.hashing.billing.v1.UpdateUserWithdrawItemRequest
	(*UpdateUserWithdrawItemResponse)(nil),                  // 126: cloud.hashing.billing.v1.UpdateUserWithdrawItemResponse
	(*GetUserWithdrawItemRequest)(nil),                      // 127: cloud.hashing.billing.v1.GetUserWithdrawItemRequest
	(*GetUserWithdrawItemResponse)(nil),                     // 128: cloud.hashing.billing.v1.GetUserWithdrawItemResponse
	(*GetUserWithdrawItemsByAccountRequest)(nil),            // 129: cloud.hashing.billing.v1.GetUserWithdrawItemsByAccountRequest
	(*GetUserWithdrawItemsByAccountResponse)(nil),           // 130: cloud.hashing.billing.v1.GetUserWithdrawItemsByAccountResponse
	(*GetUserWithdrawItemsByAppUserRequest)(nil),            // 131: cloud.hashing.billing.v1.GetUserWithdrawItemsByAppUserRequest
	(*GetUserWithdrawItemsByAppUserResponse)(nil),           // 132: cloud.hashing.billing.v1.GetUserWithdrawItemsByAppUserResponse
	(*GetUserWithdrawItemsByOtherAppUserRequest)(nil),       // 133: cloud.hashing.billing.v1.GetUserWithdrawItemsByOtherAppUserRequest
	(*GetUserWithdrawItemsByOtherAppUserResponse)(nil),      // 134: cloud.hashing.billing.v1.GetUserWithdrawItemsByOtherAppUserResponse
	(*AppWithdrawSetting)(nil),                              // 135: cloud.hashing.billing.v1.AppWithdrawSetting
	(*CreateAppWithdrawSettingRequest)(nil),                 // 136: cloud.hashing.billing.v1.CreateAppWithdrawSettingRequest
	(*CreateAppWithdrawSettingResponse)(nil),                // 137: cloud.hashing.billing.v1.CreateAppWithdrawSettingResponse
	(*UpdateAppWithdrawSettingRequest)(nil),                 // 138: cloud.hashing.billing.v1.UpdateAppWithdrawSettingRequest
	(*UpdateAppWithdrawSettingResponse)(nil),                // 139: cloud.hashing.billing.v1.UpdateAppWithdrawSettingResponse
	(*GetAppWithdrawSettingRequest)(nil),                    // 140: cloud.hashing.billing.v1.GetAppWithdrawSettingRequest
	(*GetAppWithdrawSettingResponse)(nil),                   // 141: cloud.hashing.billing.v1.GetAppWithdrawSettingResponse
	(*GetAppWithdrawSettingsByAppRequest)(nil),              // 142: cloud.hashing.billing.v1.GetAppWithdrawSettingsByAppRequest
	(*GetAppWithdrawSettingsByAppResponse)(nil),             // 143: cloud.hashing.billing.v1.GetAppWithdrawSettingsByAppResponse
	(*GetAppWithdrawSettingByAppCoinRequest)(nil),           // 144: cloud.hashing.billing.v1.GetAppWithdrawSettingByAppCoinRequest
	(*GetAppWithdrawSettingByAppCoinResponse)(nil),          // 145: cloud.hashing.billing.v1.GetAppWithdrawSettingByAppCoinResponse
	(*GetAppWithdrawSettingsByOtherAppRequest)(nil),         // 146: cloud.hashing.billing.v1.GetAppWithdrawSettingsByOtherAppRequest
	(*GetAppWithdrawSettingsByOtherAppResponse)(nil),        // 147: cloud.hashing.billing.v1.GetAppWithdrawSettingsByOtherAppResponse
	(*npool.PageInfo)(nil),                                  // 148: npool.v1.PageInfo
	(*emptypb.Empty)(nil),                                   // 149: google.protobuf.Empty
	(*npool.VersionResponse)(nil),                           // 150: npool.v1.VersionResponse
}
var file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_depIdxs = []int32{
	0,   // 0: cloud.hashing.billing.v1.CreateCoinAccountRequest.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 1: cloud.hashing.billing.v1.CreateCoinAccountResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 2: cloud.hashing.billing.v1.GetCoinAccountResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 3: cloud.hashing.billing.v1.GetCoinAccountByCoinAddressResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 4: cloud.hashing.billing.v1.GetCoinAccountsResponse.Infos:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 5: cloud.hashing.billing.v1.DeleteCoinAccountResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	11,  // 6: cloud.hashing.billing.v1.CreateCoinAccountTransactionRequest.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 7: cloud.hashing.billing.v1.CreateCoinAccountTransactionResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 8: cloud.hashing.billing.v1.GetCoinAccountTransactionResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	0,   // 9: cloud.hashing.billing.v1.CoinAccountTransactionDetail.FromAddress:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 10: cloud.hashing.billing.v1.CoinAccountTransactionDetail.ToAddress:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	16,  // 11: cloud.hashing.billing.v1.GetCoinAccountTransactionDetailResponse.Detail:type_name -> cloud.hashing.billing.v1.CoinAccountTransactionDetail
	11,  // 12: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinAccountResponse.Infos:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 13: cloud.hashing.billing.v1.GetCoinAccountTransactionsByStateResponse.Infos:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 14: cloud.hashing.billing.v1.GetCoinAccountTransactionsByAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 15: cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinResponse.Infos:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 16: cloud.hashing.billing.v1.UpdateCoinAccountTransactionRequest.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 17: cloud.hashing.billing.v1.UpdateCoinAccountTransactionResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	11,  // 18: cloud.hashing.billing.v1.DeleteCoinAccountTransactionResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountTransaction
	31,  // 19: cloud.hashing.billing.v1.CreatePlatformBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.PlatformBenefit
	31,  // 20: cloud.hashing.billing.v1.CreatePlatformBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformBenefit
	31,  // 21: cloud.hashing.billing.v1.GetPlatformBenefitsByGoodResponse.Infos:type_name -> cloud.hashing.billing.v1.PlatformBenefit
	0,   // 22: cloud.hashing.billing.v1.PlatformBenefitDetail.BenefitAddress:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	36,  // 23: cloud.hashing.billing.v1.GetPlatformBenefitDetailResponse.Detail:type_name -> cloud.hashing.billing.v1.PlatformBenefitDetail
	31,  // 24: cloud.hashing.billing.v1.GetPlatformBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformBenefit
	31,  // 25: cloud.hashing.billing.v1.GetLatestPlatformBenefitByGoodResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformBenefit
	43,  // 26: cloud.hashing.billing.v1.CreatePlatformSettingRequest.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	43,  // 27: cloud.hashing.billing.v1.CreatePlatformSettingResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	43,  // 28: cloud.hashing.billing.v1.UpdatePlatformSettingRequest.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	43,  // 29: cloud.hashing.billing.v1.UpdatePlatformSettingResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	43,  // 30: cloud.hashing.billing.v1.GetPlatformSettingByGoodResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	43,  // 31: cloud.hashing.billing.v1.GetPlatformSettingResponse.Info:type_name -> cloud.hashing.billing.v1.PlatformSetting
	52,  // 32: cloud.hashing.billing.v1.CreateUserBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.UserBenefit
	52,  // 33: cloud.hashing.billing.v1.CreateUserBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.UserBenefit
	52,  // 34: cloud.hashing.billing.v1.GetUserBenefitsByAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserBenefit
	148, // 35: cloud.hashing.billing.v1.GetUserBenefitsByAppRequest.PageInfo:type_name -> npool.v1.PageInfo
	52,  // 36: cloud.hashing.billing.v1.GetUserBenefitsByAppResponse.Infos:type_name -> cloud.hashing.billing.v1.UserBenefit
	52,  // 37: cloud.hashing.billing.v1.GetLatestUserBenefitByGoodAppUserResponse.Info:type_name -> cloud.hashing.billing.v1.UserBenefit
	61,  // 38: cloud.hashing.billing.v1.CreateCoinSettingRequest.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	61,  // 39: cloud.hashing.billing.v1.CreateCoinSettingResponse.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	61,  // 40: cloud.hashing.billing.v1.UpdateCoinSettingRequest.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	61,  // 41: cloud.hashing.billing.v1.UpdateCoinSettingResponse.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	61,  // 42: cloud.hashing.billing.v1.GetCoinSettingResponse.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	61,  // 43: cloud.hashing.billing.v1.GetCoinSettingByCoinResponse.Info:type_name -> cloud.hashing.billing.v1.CoinSetting
	70,  // 44: cloud.hashing.billing.v1.CreateGoodBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	70,  // 45: cloud.hashing.billing.v1.CreateGoodBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	70,  // 46: cloud.hashing.billing.v1.UpdateGoodBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	70,  // 47: cloud.hashing.billing.v1.UpdateGoodBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	70,  // 48: cloud.hashing.billing.v1.GetGoodBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	70,  // 49: cloud.hashing.billing.v1.GetGoodBenefitByGoodResponse.Info:type_name -> cloud.hashing.billing.v1.GoodBenefit
	79,  // 50: cloud.hashing.billing.v1.CreateGoodPaymentRequest.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 51: cloud.hashing.billing.v1.CreateGoodPaymentResponse.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 52: cloud.hashing.billing.v1.UpdateGoodPaymentRequest.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 53: cloud.hashing.billing.v1.UpdateGoodPaymentResponse.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 54: cloud.hashing.billing.v1.GetGoodPaymentResponse.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 55: cloud.hashing.billing.v1.GetGoodPaymentsResponse.Infos:type_name -> cloud.hashing.billing.v1.GoodPayment
	148, // 56: cloud.hashing.billing.v1.GetGoodPaymentsByGoodRequest.PageInfo:type_name -> npool.v1.PageInfo
	79,  // 57: cloud.hashing.billing.v1.GetGoodPaymentsByGoodResponse.Infos:type_name -> cloud.hashing.billing.v1.GoodPayment
	148, // 58: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodRequest.PageInfo:type_name -> npool.v1.PageInfo
	79,  // 59: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodResponse.Infos:type_name -> cloud.hashing.billing.v1.GoodPayment
	148, // 60: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinRequest.PageInfo:type_name -> npool.v1.PageInfo
	79,  // 61: cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinResponse.Infos:type_name -> cloud.hashing.billing.v1.GoodPayment
	79,  // 62: cloud.hashing.billing.v1.GetGoodPaymentByAccountResponse.Info:type_name -> cloud.hashing.billing.v1.GoodPayment
	96,  // 63: cloud.hashing.billing.v1.CreateUserWithdrawRequest.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 64: cloud.hashing.billing.v1.CreateUserWithdrawResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 65: cloud.hashing.billing.v1.UpdateUserWithdrawRequest.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 66: cloud.hashing.billing.v1.UpdateUserWithdrawResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 67: cloud.hashing.billing.v1.GetUserWithdrawResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 68: cloud.hashing.billing.v1.GetUserWithdrawsByAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 69: cloud.hashing.billing.v1.GetUserWithdrawsByOtherAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserWithdraw
	96,  // 70: cloud.hashing.billing.v1.GetUserWithdrawByAccountResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdraw
	109, // 71: cloud.hashing.billing.v1.CreateUserDirectBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 72: cloud.hashing.billing.v1.CreateUserDirectBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 73: cloud.hashing.billing.v1.UpdateUserDirectBenefitRequest.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 74: cloud.hashing.billing.v1.UpdateUserDirectBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 75: cloud.hashing.billing.v1.GetUserDirectBenefitResponse.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 76: cloud.hashing.billing.v1.GetUserDirectBenefitsByAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 77: cloud.hashing.billing.v1.GetUserDirectBenefitsByOtherAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	109, // 78: cloud.hashing.billing.v1.GetUserDirectBenefitByAccountResponse.Info:type_name -> cloud.hashing.billing.v1.UserDirectBenefit
	122, // 79: cloud.hashing.billing.v1.CreateUserWithdrawItemRequest.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 80: cloud.hashing.billing.v1.CreateUserWithdrawItemResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 81: cloud.hashing.billing.v1.UpdateUserWithdrawItemRequest.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 82: cloud.hashing.billing.v1.UpdateUserWithdrawItemResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 83: cloud.hashing.billing.v1.GetUserWithdrawItemResponse.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 84: cloud.hashing.billing.v1.GetUserWithdrawItemsByAccountResponse.Infos:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 85: cloud.hashing.billing.v1.GetUserWithdrawItemsByAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	122, // 86: cloud.hashing.billing.v1.GetUserWithdrawItemsByOtherAppUserResponse.Infos:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	135, // 87: cloud.hashing.billing.v1.CreateAppWithdrawSettingRequest.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 88: cloud.hashing.billing.v1.CreateAppWithdrawSettingResponse.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 89: cloud.hashing.billing.v1.UpdateAppWithdrawSettingRequest.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 90: cloud.hashing.billing.v1.UpdateAppWithdrawSettingResponse.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 91: cloud.hashing.billing.v1.GetAppWithdrawSettingResponse.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 92: cloud.hashing.billing.v1.GetAppWithdrawSettingsByAppResponse.Infos:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 93: cloud.hashing.billing.v1.GetAppWithdrawSettingByAppCoinResponse.Info:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	135, // 94: cloud.hashing.billing.v1.GetAppWithdrawSettingsByOtherAppResponse.Infos:type_name -> cloud.hashing.billing.v1.AppWithdrawSetting
	149, // 95: cloud.hashing.billing.v1.CloudHashingBilling.Version:input_type -> google.protobuf.Empty
	1,   // 96: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinAccount:input_type -> cloud.hashing.billing.v1.CreateCoinAccountRequest
	3,   // 97: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccount:input_type -> cloud.hashing.billing.v1.GetCoinAccountRequest
	5,   // 98: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountByCoinAddress:input_type -> cloud.hashing.billing.v1.GetCoinAccountByCoinAddressRequest
	7,   // 99: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccounts:input_type -> cloud.hashing.billing.v1.GetCoinAccountsRequest
	9,   // 100: cloud.hashing.billing.v1.CloudHashingBilling.DeleteCoinAccount:input_type -> cloud.hashing.billing.v1.DeleteCoinAccountRequest
	12,  // 101: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinAccountTransaction:input_type -> cloud.hashing.billing.v1.CreateCoinAccountTransactionRequest
	14,  // 102: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransaction:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionRequest
	19,  // 103: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByCoinAccount:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinAccountRequest
	21,  // 104: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByState:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByStateRequest
	23,  // 105: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByAppUser:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByAppUserRequest
	25,  // 106: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByCoin:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinRequest
	27,  // 107: cloud.hashing.billing.v1.CloudHashingBilling.UpdateCoinAccountTransaction:input_type -> cloud.hashing.billing.v1.UpdateCoinAccountTransactionRequest
	17,  // 108: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionDetail:input_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionDetailRequest
	29,  // 109: cloud.hashing.billing.v1.CloudHashingBilling.DeleteCoinAccountTransaction:input_type -> cloud.hashing.billing.v1.DeleteCoinAccountTransactionRequest
	32,  // 110: cloud.hashing.billing.v1.CloudHashingBilling.CreatePlatformBenefit:input_type -> cloud.hashing.billing.v1.CreatePlatformBenefitRequest
	41,  // 111: cloud.hashing.billing.v1.CloudHashingBilling.GetLatestPlatformBenefitByGood:input_type -> cloud.hashing.billing.v1.GetLatestPlatformBenefitByGoodRequest
	34,  // 112: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefitsByGood:input_type -> cloud.hashing.billing.v1.GetPlatformBenefitsByGoodRequest
	39,  // 113: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefit:input_type -> cloud.hashing.billing.v1.GetPlatformBenefitRequest
	37,  // 114: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefitDetail:input_type -> cloud.hashing.billing.v1.GetPlatformBenefitDetailRequest
	44,  // 115: cloud.hashing.billing.v1.CloudHashingBilling.CreatePlatformSetting:input_type -> cloud.hashing.billing.v1.CreatePlatformSettingRequest
	46,  // 116: cloud.hashing.billing.v1.CloudHashingBilling.UpdatePlatformSetting:input_type -> cloud.hashing.billing.v1.UpdatePlatformSettingRequest
	50,  // 117: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformSetting:input_type -> cloud.hashing.billing.v1.GetPlatformSettingRequest
	53,  // 118: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserBenefit:input_type -> cloud.hashing.billing.v1.CreateUserBenefitRequest
	55,  // 119: cloud.hashing.billing.v1.CloudHashingBilling.GetUserBenefitsByAppUser:input_type -> cloud.hashing.billing.v1.GetUserBenefitsByAppUserRequest
	57,  // 120: cloud.hashing.billing.v1.CloudHashingBilling.GetUserBenefitsByApp:input_type -> cloud.hashing.billing.v1.GetUserBenefitsByAppRequest
	59,  // 121: cloud.hashing.billing.v1.CloudHashingBilling.GetLatestUserBenefitByGoodAppUser:input_type -> cloud.hashing.billing.v1.GetLatestUserBenefitByGoodAppUserRequest
	62,  // 122: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinSetting:input_type -> cloud.hashing.billing.v1.CreateCoinSettingRequest
	64,  // 123: cloud.hashing.billing.v1.CloudHashingBilling.UpdateCoinSetting:input_type -> cloud.hashing.billing.v1.UpdateCoinSettingRequest
	66,  // 124: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinSetting:input_type -> cloud.hashing.billing.v1.GetCoinSettingRequest
	68,  // 125: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinSettingByCoin:input_type -> cloud.hashing.billing.v1.GetCoinSettingByCoinRequest
	71,  // 126: cloud.hashing.billing.v1.CloudHashingBilling.CreateGoodBenefit:input_type -> cloud.hashing.billing.v1.CreateGoodBenefitRequest
	73,  // 127: cloud.hashing.billing.v1.CloudHashingBilling.UpdateGoodBenefit:input_type -> cloud.hashing.billing.v1.UpdateGoodBenefitRequest
	75,  // 128: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodBenefit:input_type -> cloud.hashing.billing.v1.GetGoodBenefitRequest
	77,  // 129: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodBenefitByGood:input_type -> cloud.hashing.billing.v1.GetGoodBenefitByGoodRequest
	80,  // 130: cloud.hashing.billing.v1.CloudHashingBilling.CreateGoodPayment:input_type -> cloud.hashing.billing.v1.CreateGoodPaymentRequest
	82,  // 131: cloud.hashing.billing.v1.CloudHashingBilling.UpdateGoodPayment:input_type -> cloud.hashing.billing.v1.UpdateGoodPaymentRequest
	84,  // 132: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPayment:input_type -> cloud.hashing.billing.v1.GetGoodPaymentRequest
	86,  // 133: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPayments:input_type -> cloud.hashing.billing.v1.GetGoodPaymentsRequest
	88,  // 134: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPaymentsByGood:input_type -> cloud.hashing.billing.v1.GetGoodPaymentsByGoodRequest
	90,  // 135: cloud.hashing.billing.v1.CloudHashingBilling.GetIdleGoodPaymentsByGood:input_type -> cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodRequest
	92,  // 136: cloud.hashing.billing.v1.CloudHashingBilling.GetIdleGoodPaymentsByGoodPaymentCoin:input_type -> cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinRequest
	94,  // 137: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPaymentByAccount:input_type -> cloud.hashing.billing.v1.GetGoodPaymentByAccountRequest
	97,  // 138: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserWithdraw:input_type -> cloud.hashing.billing.v1.CreateUserWithdrawRequest
	99,  // 139: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserWithdraw:input_type -> cloud.hashing.billing.v1.UpdateUserWithdrawRequest
	101, // 140: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdraw:input_type -> cloud.hashing.billing.v1.GetUserWithdrawRequest
	103, // 141: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawsByAppUser:input_type -> cloud.hashing.billing.v1.GetUserWithdrawsByAppUserRequest
	105, // 142: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawsByOtherAppUser:input_type -> cloud.hashing.billing.v1.GetUserWithdrawsByOtherAppUserRequest
	107, // 143: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawByAccount:input_type -> cloud.hashing.billing.v1.GetUserWithdrawByAccountRequest
	110, // 144: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserDirectBenefit:input_type -> cloud.hashing.billing.v1.CreateUserDirectBenefitRequest
	112, // 145: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserDirectBenefit:input_type -> cloud.hashing.billing.v1.UpdateUserDirectBenefitRequest
	114, // 146: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefit:input_type -> cloud.hashing.billing.v1.GetUserDirectBenefitRequest
	116, // 147: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitsByAppUser:input_type -> cloud.hashing.billing.v1.GetUserDirectBenefitsByAppUserRequest
	118, // 148: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitsByOtherAppUser:input_type -> cloud.hashing.billing.v1.GetUserDirectBenefitsByOtherAppUserRequest
	120, // 149: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitByAccount:input_type -> cloud.hashing.billing.v1.GetUserDirectBenefitByAccountRequest
	123, // 150: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserWithdrawItem:input_type -> cloud.hashing.billing.v1.CreateUserWithdrawItemRequest
	125, // 151: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserWithdrawItem:input_type -> cloud.hashing.billing.v1.UpdateUserWithdrawItemRequest
	127, // 152: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItem:input_type -> cloud.hashing.billing.v1.GetUserWithdrawItemRequest
	129, // 153: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByAccount:input_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByAccountRequest
	131, // 154: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByAppUser:input_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByAppUserRequest
	133, // 155: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByOtherAppUser:input_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByOtherAppUserRequest
	136, // 156: cloud.hashing.billing.v1.CloudHashingBilling.CreateAppWithdrawSetting:input_type -> cloud.hashing.billing.v1.CreateAppWithdrawSettingRequest
	138, // 157: cloud.hashing.billing.v1.CloudHashingBilling.UpdateAppWithdrawSetting:input_type -> cloud.hashing.billing.v1.UpdateAppWithdrawSettingRequest
	140, // 158: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSetting:input_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingRequest
	142, // 159: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingsByApp:input_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingsByAppRequest
	144, // 160: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingByAppCoin:input_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingByAppCoinRequest
	146, // 161: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingsByOtherApp:input_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingsByOtherAppRequest
	150, // 162: cloud.hashing.billing.v1.CloudHashingBilling.Version:output_type -> npool.v1.VersionResponse
	2,   // 163: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinAccount:output_type -> cloud.hashing.billing.v1.CreateCoinAccountResponse
	4,   // 164: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccount:output_type -> cloud.hashing.billing.v1.GetCoinAccountResponse
	6,   // 165: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountByCoinAddress:output_type -> cloud.hashing.billing.v1.GetCoinAccountByCoinAddressResponse
	8,   // 166: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccounts:output_type -> cloud.hashing.billing.v1.GetCoinAccountsResponse
	10,  // 167: cloud.hashing.billing.v1.CloudHashingBilling.DeleteCoinAccount:output_type -> cloud.hashing.billing.v1.DeleteCoinAccountResponse
	13,  // 168: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinAccountTransaction:output_type -> cloud.hashing.billing.v1.CreateCoinAccountTransactionResponse
	15,  // 169: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransaction:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionResponse
	20,  // 170: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByCoinAccount:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinAccountResponse
	22,  // 171: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByState:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByStateResponse
	24,  // 172: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByAppUser:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByAppUserResponse
	26,  // 173: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionsByCoin:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionsByCoinResponse
	28,  // 174: cloud.hashing.billing.v1.CloudHashingBilling.UpdateCoinAccountTransaction:output_type -> cloud.hashing.billing.v1.UpdateCoinAccountTransactionResponse
	18,  // 175: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinAccountTransactionDetail:output_type -> cloud.hashing.billing.v1.GetCoinAccountTransactionDetailResponse
	30,  // 176: cloud.hashing.billing.v1.CloudHashingBilling.DeleteCoinAccountTransaction:output_type -> cloud.hashing.billing.v1.DeleteCoinAccountTransactionResponse
	33,  // 177: cloud.hashing.billing.v1.CloudHashingBilling.CreatePlatformBenefit:output_type -> cloud.hashing.billing.v1.CreatePlatformBenefitResponse
	42,  // 178: cloud.hashing.billing.v1.CloudHashingBilling.GetLatestPlatformBenefitByGood:output_type -> cloud.hashing.billing.v1.GetLatestPlatformBenefitByGoodResponse
	35,  // 179: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefitsByGood:output_type -> cloud.hashing.billing.v1.GetPlatformBenefitsByGoodResponse
	40,  // 180: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefit:output_type -> cloud.hashing.billing.v1.GetPlatformBenefitResponse
	38,  // 181: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformBenefitDetail:output_type -> cloud.hashing.billing.v1.GetPlatformBenefitDetailResponse
	45,  // 182: cloud.hashing.billing.v1.CloudHashingBilling.CreatePlatformSetting:output_type -> cloud.hashing.billing.v1.CreatePlatformSettingResponse
	47,  // 183: cloud.hashing.billing.v1.CloudHashingBilling.UpdatePlatformSetting:output_type -> cloud.hashing.billing.v1.UpdatePlatformSettingResponse
	51,  // 184: cloud.hashing.billing.v1.CloudHashingBilling.GetPlatformSetting:output_type -> cloud.hashing.billing.v1.GetPlatformSettingResponse
	54,  // 185: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserBenefit:output_type -> cloud.hashing.billing.v1.CreateUserBenefitResponse
	56,  // 186: cloud.hashing.billing.v1.CloudHashingBilling.GetUserBenefitsByAppUser:output_type -> cloud.hashing.billing.v1.GetUserBenefitsByAppUserResponse
	58,  // 187: cloud.hashing.billing.v1.CloudHashingBilling.GetUserBenefitsByApp:output_type -> cloud.hashing.billing.v1.GetUserBenefitsByAppResponse
	60,  // 188: cloud.hashing.billing.v1.CloudHashingBilling.GetLatestUserBenefitByGoodAppUser:output_type -> cloud.hashing.billing.v1.GetLatestUserBenefitByGoodAppUserResponse
	63,  // 189: cloud.hashing.billing.v1.CloudHashingBilling.CreateCoinSetting:output_type -> cloud.hashing.billing.v1.CreateCoinSettingResponse
	65,  // 190: cloud.hashing.billing.v1.CloudHashingBilling.UpdateCoinSetting:output_type -> cloud.hashing.billing.v1.UpdateCoinSettingResponse
	67,  // 191: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinSetting:output_type -> cloud.hashing.billing.v1.GetCoinSettingResponse
	69,  // 192: cloud.hashing.billing.v1.CloudHashingBilling.GetCoinSettingByCoin:output_type -> cloud.hashing.billing.v1.GetCoinSettingByCoinResponse
	72,  // 193: cloud.hashing.billing.v1.CloudHashingBilling.CreateGoodBenefit:output_type -> cloud.hashing.billing.v1.CreateGoodBenefitResponse
	74,  // 194: cloud.hashing.billing.v1.CloudHashingBilling.UpdateGoodBenefit:output_type -> cloud.hashing.billing.v1.UpdateGoodBenefitResponse
	76,  // 195: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodBenefit:output_type -> cloud.hashing.billing.v1.GetGoodBenefitResponse
	78,  // 196: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodBenefitByGood:output_type -> cloud.hashing.billing.v1.GetGoodBenefitByGoodResponse
	81,  // 197: cloud.hashing.billing.v1.CloudHashingBilling.CreateGoodPayment:output_type -> cloud.hashing.billing.v1.CreateGoodPaymentResponse
	83,  // 198: cloud.hashing.billing.v1.CloudHashingBilling.UpdateGoodPayment:output_type -> cloud.hashing.billing.v1.UpdateGoodPaymentResponse
	85,  // 199: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPayment:output_type -> cloud.hashing.billing.v1.GetGoodPaymentResponse
	87,  // 200: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPayments:output_type -> cloud.hashing.billing.v1.GetGoodPaymentsResponse
	89,  // 201: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPaymentsByGood:output_type -> cloud.hashing.billing.v1.GetGoodPaymentsByGoodResponse
	91,  // 202: cloud.hashing.billing.v1.CloudHashingBilling.GetIdleGoodPaymentsByGood:output_type -> cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodResponse
	93,  // 203: cloud.hashing.billing.v1.CloudHashingBilling.GetIdleGoodPaymentsByGoodPaymentCoin:output_type -> cloud.hashing.billing.v1.GetIdleGoodPaymentsByGoodPaymentCoinResponse
	95,  // 204: cloud.hashing.billing.v1.CloudHashingBilling.GetGoodPaymentByAccount:output_type -> cloud.hashing.billing.v1.GetGoodPaymentByAccountResponse
	98,  // 205: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserWithdraw:output_type -> cloud.hashing.billing.v1.CreateUserWithdrawResponse
	100, // 206: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserWithdraw:output_type -> cloud.hashing.billing.v1.UpdateUserWithdrawResponse
	102, // 207: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdraw:output_type -> cloud.hashing.billing.v1.GetUserWithdrawResponse
	104, // 208: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawsByAppUser:output_type -> cloud.hashing.billing.v1.GetUserWithdrawsByAppUserResponse
	106, // 209: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawsByOtherAppUser:output_type -> cloud.hashing.billing.v1.GetUserWithdrawsByOtherAppUserResponse
	108, // 210: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawByAccount:output_type -> cloud.hashing.billing.v1.GetUserWithdrawByAccountResponse
	111, // 211: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserDirectBenefit:output_type -> cloud.hashing.billing.v1.CreateUserDirectBenefitResponse
	113, // 212: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserDirectBenefit:output_type -> cloud.hashing.billing.v1.UpdateUserDirectBenefitResponse
	115, // 213: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefit:output_type -> cloud.hashing.billing.v1.GetUserDirectBenefitResponse
	117, // 214: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitsByAppUser:output_type -> cloud.hashing.billing.v1.GetUserDirectBenefitsByAppUserResponse
	119, // 215: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitsByOtherAppUser:output_type -> cloud.hashing.billing.v1.GetUserDirectBenefitsByOtherAppUserResponse
	121, // 216: cloud.hashing.billing.v1.CloudHashingBilling.GetUserDirectBenefitByAccount:output_type -> cloud.hashing.billing.v1.GetUserDirectBenefitByAccountResponse
	124, // 217: cloud.hashing.billing.v1.CloudHashingBilling.CreateUserWithdrawItem:output_type -> cloud.hashing.billing.v1.CreateUserWithdrawItemResponse
	126, // 218: cloud.hashing.billing.v1.CloudHashingBilling.UpdateUserWithdrawItem:output_type -> cloud.hashing.billing.v1.UpdateUserWithdrawItemResponse
	128, // 219: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItem:output_type -> cloud.hashing.billing.v1.GetUserWithdrawItemResponse
	130, // 220: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByAccount:output_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByAccountResponse
	132, // 221: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByAppUser:output_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByAppUserResponse
	134, // 222: cloud.hashing.billing.v1.CloudHashingBilling.GetUserWithdrawItemsByOtherAppUser:output_type -> cloud.hashing.billing.v1.GetUserWithdrawItemsByOtherAppUserResponse
	137, // 223: cloud.hashing.billing.v1.CloudHashingBilling.CreateAppWithdrawSetting:output_type -> cloud.hashing.billing.v1.CreateAppWithdrawSettingResponse
	139, // 224: cloud.hashing.billing.v1.CloudHashingBilling.UpdateAppWithdrawSetting:output_type -> cloud.hashing.billing.v1.UpdateAppWithdrawSettingResponse
	141, // 225: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSetting:output_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingResponse
	143, // 226: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingsByApp:output_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingsByAppResponse
	145, // 227: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingByAppCoin:output_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingByAppCoinResponse
	147, // 228: cloud.hashing.billing.v1.CloudHashingBilling.GetAppWithdrawSettingsByOtherApp:output_type -> cloud.hashing.billing.v1.GetAppWithdrawSettingsByOtherAppResponse
	162, // [162:229] is the sub-list for method output_type
	95,  // [95:162] is the sub-list for method input_type
	95,  // [95:95] is the sub-list for extension type_name
	95,  // [95:95] is the sub-list for extension extendee
	0,   // [0:95] is the sub-list for field type_name
}

func init() { file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_init() }
func file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_init() {
	if File_npool_cloud_hashing_billing_cloud_hashing_billing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountByCoinAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountByCoinAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinAccountTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinAccountTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinAccountTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinAccountTransactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinAccountTransactionsByCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinAccountTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinAccountTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinAccountTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinAccountTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformBenefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitsByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitsByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformBenefitDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestPlatformBenefitByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestPlatformBenefitByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlatformSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlatformSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformSettingByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformSettingByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBenefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBenefitsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBenefitsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBenefitsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBenefitsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestUserBenefitByGoodAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestUserBenefitByGoodAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinSettingByCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinSettingByCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodBenefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodBenefitByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodBenefitByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentsByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentsByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdleGoodPaymentsByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdleGoodPaymentsByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdleGoodPaymentsByGoodPaymentCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdleGoodPaymentsByGoodPaymentCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentByAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodPaymentByAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByOtherAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByOtherAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawByAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawByAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDirectBenefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDirectBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDirectBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDirectBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDirectBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitsByOtherAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitsByOtherAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitByAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDirectBenefitByAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdrawItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserWithdrawItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserWithdrawItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByOtherAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawItemsByOtherAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWithdrawSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppWithdrawSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppWithdrawSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppWithdrawSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppWithdrawSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingByAppCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingByAppCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingsByOtherAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawSettingsByOtherAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   148,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_goTypes,
		DependencyIndexes: file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_depIdxs,
		MessageInfos:      file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_msgTypes,
	}.Build()
	File_npool_cloud_hashing_billing_cloud_hashing_billing_proto = out.File
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_rawDesc = nil
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_goTypes = nil
	file_npool_cloud_hashing_billing_cloud_hashing_billing_proto_depIdxs = nil
}
