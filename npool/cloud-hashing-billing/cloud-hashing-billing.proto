syntax = "proto3";

package cloud.hashing.billing.v1;

option go_package = "github.com/NpoolPlatform/message/npool/cloud-hashing-billing";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "npool/npool.proto";

// Cloud Hashing Billing
service CloudHashingBilling {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc CreateCoinAccount (CreateCoinAccountRequest) returns (CreateCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/create/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccount (GetCoinAccountRequest) returns (GetCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccountByCoinAddress (GetCoinAccountByCoinAddressRequest) returns (GetCoinAccountByCoinAddressResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/by/coin/address"
            body: "*"
        };
    }
    rpc GetCoinAccounts (GetCoinAccountsRequest) returns (GetCoinAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/accounts"
            body: "*"
        };
    }
    rpc DeleteCoinAccount (DeleteCoinAccountRequest) returns (DeleteCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/delete/coin/account"
            body: "*"
        };
    }

    rpc CreateCoinAccountTransaction (CreateCoinAccountTransactionRequest) returns (CreateCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/create/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransaction (GetCoinAccountTransactionRequest) returns (GetCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByCoinAccount (GetCoinAccountTransactionsByCoinAccountRequest) returns (GetCoinAccountTransactionsByCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByState (GetCoinAccountTransactionsByStateRequest) returns (GetCoinAccountTransactionsByStateResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/state"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByCoin (GetCoinAccountTransactionsByCoinRequest) returns (GetCoinAccountTransactionsByCoinResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/coin"
            body: "*"
        };
    }
    rpc UpdateCoinAccountTransaction (UpdateCoinAccountTransactionRequest) returns (UpdateCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/update/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionDetail (GetCoinAccountTransactionDetailRequest) returns (GetCoinAccountTransactionDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transaction/detail"
            body: "*"
        };
    }
    rpc DeleteCoinAccountTransaction (DeleteCoinAccountTransactionRequest) returns (DeleteCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/delete/coin/account/transaction"
            body: "*"
        };
    }

    rpc CreatePlatformBenefit (CreatePlatformBenefitRequest) returns (CreatePlatformBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/platform/benefit",
            body: "*"
        };
    }
    rpc GetLatestPlatformBenefitByGood (GetLatestPlatformBenefitByGoodRequest) returns (GetLatestPlatformBenefitByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/latest/platform/benefit/by/good"
            body: "*"
        };
    }
    rpc GetPlatformBenefitsByGood (GetPlatformBenefitsByGoodRequest) returns (GetPlatformBenefitsByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefits/by/good"
            body: "*"
        };
    }
    rpc GetPlatformBenefit (GetPlatformBenefitRequest) returns (GetPlatformBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefit"
            body: "*"
        };
    }
    rpc GetPlatformBenefitDetail (GetPlatformBenefitDetailRequest) returns (GetPlatformBenefitDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefit/detail"
            body: "*"
        };
    }

    rpc CreatePlatformSetting (CreatePlatformSettingRequest) returns (CreatePlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/create/platform/setting"
            body: "*"
        };
    }
    rpc UpdatePlatformSetting (UpdatePlatformSettingRequest) returns (UpdatePlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/update/platform/setting"
            body: "*"
        };
    }
    rpc GetPlatformSetting (GetPlatformSettingRequest) returns (GetPlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/setting"
            body: "*"
        };
    }

    rpc CreateUserBenefit (CreateUserBenefitRequest) returns (CreateUserBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/benefit"
            body: "*"
        };
    }
    rpc GetUserBenefitsByAppUser (GetUserBenefitsByAppUserRequest) returns (GetUserBenefitsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/benefits/by/app/user"
            body: "*"
        };
    }
    rpc GetUserBenefitsByApp (GetUserBenefitsByAppRequest) returns (GetUserBenefitsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/benefits/by/app"
            body: "*"
        };
    }
    rpc GetLatestUserBenefitByGoodAppUser (GetLatestUserBenefitByGoodAppUserRequest) returns (GetLatestUserBenefitByGoodAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/latest/user/benefit/by/good/app/user"
            body: "*"
        };
    }

    rpc CreateCoinSetting (CreateCoinSettingRequest) returns (CreateCoinSettingResponse) {
        option (google.api.http) = {
            post: "/v1/create/coin/setting"
            body: "*"
        };
    }
    rpc UpdateCoinSetting (UpdateCoinSettingRequest) returns (UpdateCoinSettingResponse) {
        option (google.api.http) = {
            post: "/v1/update/coin/setting"
            body: "*"
        };
    }
    rpc GetCoinSetting (GetCoinSettingRequest) returns (GetCoinSettingResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/setting"
            body: "*"
        };
    }
    rpc GetCoinSettingByCoin (GetCoinSettingByCoinRequest) returns (GetCoinSettingByCoinResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/setting/by/coin"
            body: "*"
        };
    }

    rpc CreateGoodBenefit (CreateGoodBenefitRequest) returns (CreateGoodBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/benefit"
            body: "*"
        };
    }
    rpc UpdateGoodBenefit (UpdateGoodBenefitRequest) returns (UpdateGoodBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/benefit"
            body: "*"
        };
    }
    rpc GetGoodBenefit (GetGoodBenefitRequest) returns (GetGoodBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/benefit"
            body: "*"
        };
    }
    rpc GetGoodBenefitByGood (GetGoodBenefitByGoodRequest) returns (GetGoodBenefitByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/benefit/by/good"
            body: "*"
        };
    }

    rpc CreateGoodPayment (CreateGoodPaymentRequest) returns (CreateGoodPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/payment"
            body: "*"
        };
    }
    rpc UpdateGoodPayment (UpdateGoodPaymentRequest) returns (UpdateGoodPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/payment"
            body: "*"
        };
    }
    rpc GetGoodPayment (GetGoodPaymentRequest) returns (GetGoodPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/payment"
            body: "*"
        };
    }
    rpc GetGoodPayments (GetGoodPaymentsRequest) returns (GetGoodPaymentsResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/payments"
            body: "*"
        };
    }
    rpc GetGoodPaymentsByGood (GetGoodPaymentsByGoodRequest) returns (GetGoodPaymentsByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/payments/by/good"
            body: "*"
        };
    }
    rpc GetIdleGoodPaymentsByGood (GetIdleGoodPaymentsByGoodRequest) returns (GetIdleGoodPaymentsByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/idle/good/payments/by/good"
            body: "*"
        };
    }
    rpc GetIdleGoodPaymentsByGoodPaymentCoin (GetIdleGoodPaymentsByGoodPaymentCoinRequest) returns (GetIdleGoodPaymentsByGoodPaymentCoinResponse) {
        option (google.api.http) = {
            post: "/v1/get/idle/good/payments/by/good/payment/coin"
            body: "*"
        };
    }
    rpc GetGoodPaymentByAccount (GetGoodPaymentByAccountRequest) returns (GetGoodPaymentByAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/payment/by/account"
            body: "*"
        };
    }

    rpc CreateGoodSetting (CreateGoodSettingRequest) returns (CreateGoodSettingResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/setting"
            body: "*"
        };
    }
    rpc UpdateGoodSetting (UpdateGoodSettingRequest) returns (UpdateGoodSettingResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/setting"
            body: "*"
        };
    }
    rpc GetGoodSetting (GetGoodSettingRequest) returns (GetGoodSettingResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/setting"
            body: "*"
        };
    }
    rpc GetGoodSettingByGood (GetGoodSettingByGoodRequest) returns (GetGoodSettingByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/setting/by/good"
            body: "*"
        };
    }

    rpc CreateUserWithdraw (CreateUserWithdrawRequest) returns (CreateUserWithdrawResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/withdraw"
            body: "*"
        };
    }
    rpc UpdateUserWithdraw (UpdateUserWithdrawRequest) returns (UpdateUserWithdrawResponse) {
        option (google.api.http) = {
            post: "/v1/update/user/withdraw"
            body: "*"
        };
    }
    rpc GetUserWithdraw (GetUserWithdrawRequest) returns (GetUserWithdrawResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/withdraw"
            body: "*"
        };
    }
    rpc GetUserWithdrawsByAppUser (GetUserWithdrawsByAppUserRequest) returns (GetUserWithdrawsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/withdraws/by/app/user"
            body: "*"
        };
    }
    rpc GetUserWithdrawsByOtherAppUser (GetUserWithdrawsByOtherAppUserRequest) returns (GetUserWithdrawsByOtherAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/withdraws/by/other/app/user"
            body: "*"
        };
    }
    rpc GetUserWithdrawByAccount (GetUserWithdrawByAccountRequest) returns (GetUserWithdrawByAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/withdraw/by/account"
            body: "*"
        };
    }

    rpc CreateUserDirectBenefit (CreateUserDirectBenefitRequest) returns (CreateUserDirectBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/direct/benefit"
            body: "*"
        };
    }
    rpc UpdateUserDirectBenefit (UpdateUserDirectBenefitRequest) returns (UpdateUserDirectBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/update/user/direct/benefit"
            body: "*"
        };
    }
    rpc GetUserDirectBenefit (GetUserDirectBenefitRequest) returns (GetUserDirectBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/direct/benefit"
            body: "*"
        };
    }
    rpc GetUserDirectBenefitsByAppUser (GetUserDirectBenefitsByAppUserRequest) returns (GetUserDirectBenefitsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/direct/benefits/by/app/user"
            body: "*"
        };
    }
    rpc GetUserDirectBenefitsByOtherAppUser (GetUserDirectBenefitsByOtherAppUserRequest) returns (GetUserDirectBenefitsByOtherAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/direct/benefits/by/other/app/user"
            body: "*"
        };
    }
    rpc GetUserDirectBenefitByAccount (GetUserDirectBenefitByAccountRequest) returns (GetUserDirectBenefitByAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/direct/benefit/by/account"
            body: "*"
        };
    }

    rpc CreateGoodIncoming (CreateGoodIncomingRequest) returns (CreateGoodIncomingResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/incoming"
            body: "*"
        };
    }
    rpc UpdateGoodIncoming (UpdateGoodIncomingRequest) returns (UpdateGoodIncomingResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/incoming"
            body: "*"
        };
    }
    rpc GetGoodIncoming (GetGoodIncomingRequest) returns (GetGoodIncomingResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/incoming"
            body: "*"
        };
    }
    rpc GetGoodIncomingsByGood (GetGoodIncomingsByGoodRequest) returns (GetGoodIncomingsByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/incomings/by/good"
            body: "*"
        };
    }
    rpc GetGoodIncomingByGoodCoin (GetGoodIncomingByGoodCoinRequest) returns (GetGoodIncomingByGoodCoinResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/incoming/by/good/coin"
            body: "*"
        };
    }
}

message CoinAccountInfo {
    string ID = 10;
    string CoinTypeID = 20;
    string Address = 30;
    bool PlatformHoldPrivateKey = 40;
}

message CreateCoinAccountRequest {
    CoinAccountInfo Info = 10;
}

message CreateCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountRequest {
    string ID = 10;
}

message GetCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountByCoinAddressRequest {
    string CoinInfoID = 10;
    string Address = 20;
}

message GetCoinAccountByCoinAddressResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountsRequest {
}

message GetCoinAccountsResponse {
    repeated CoinAccountInfo Infos = 10;
}

message DeleteCoinAccountRequest {
    string ID = 10;
}

message DeleteCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message CoinAccountTransaction {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string FromAddressID = 40;
    string ToAddressID = 50;
    string CoinTypeID = 60;
    double Amount = 70;
    string Message = 80;
    uint32 CreateAt = 90;
    string State = 100;
    string ChainTransactionID = 110;
}

message CreateCoinAccountTransactionRequest {
    CoinAccountTransaction Info = 10;
}

message CreateCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message GetCoinAccountTransactionRequest {
    string ID = 10;
}

message GetCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message CoinAccountTransactionDetail {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    CoinAccountInfo FromAddress = 40;
    CoinAccountInfo ToAddress = 50;
    string CoinTypeID = 60;
    double Amount = 70;
    string Message = 80;
    uint32 CreateAt = 90;
    string State = 100;
    string ChainTransactionID = 110;
}

message GetCoinAccountTransactionDetailRequest {
    string ID = 10;
}

message GetCoinAccountTransactionDetailResponse {
    CoinAccountTransactionDetail Detail = 10;
}

message GetCoinAccountTransactionsByCoinAccountRequest {
    string CoinTypeID = 10;
    string AddressID = 20;
}

message GetCoinAccountTransactionsByCoinAccountResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message GetCoinAccountTransactionsByStateRequest {
    string State = 10;
}

message GetCoinAccountTransactionsByStateResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message GetCoinAccountTransactionsByCoinRequest {
    string CoinTypeID = 10;
}

message GetCoinAccountTransactionsByCoinResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message UpdateCoinAccountTransactionRequest {
    CoinAccountTransaction Info = 10;
}

message UpdateCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message DeleteCoinAccountTransactionRequest {
    string ID = 10;
}

message DeleteCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message PlatformBenefit {
    string ID = 10;
    string GoodID = 20;
    string BenefitAccountID = 30;
    double Amount = 40;
    uint32 CreateAt = 50;
    string ChainTransactionID = 60;
    uint32 LastBenefitTimestamp = 70;
}

message CreatePlatformBenefitRequest {
    PlatformBenefit Info = 10;
}

message CreatePlatformBenefitResponse {
    PlatformBenefit Info = 10;
}

message GetPlatformBenefitsByGoodRequest {
    string GoodID = 10;
}

message GetPlatformBenefitsByGoodResponse {
    repeated PlatformBenefit Infos = 10;
}

message PlatformBenefitDetail {
    string ID = 10;
    string GoodID = 20;
    CoinAccountInfo BenefitAddress = 30;
    double Amount = 40;
    uint32 CreateAt = 50;
    string ChainTransactionID = 60;
}

message GetPlatformBenefitDetailRequest {
    string ID = 10;
}

message GetPlatformBenefitDetailResponse {
    PlatformBenefitDetail Detail = 10;
}

message GetPlatformBenefitRequest {
    string ID = 10;
}

message GetPlatformBenefitResponse {
    PlatformBenefit Info = 10;
}

message GetLatestPlatformBenefitByGoodRequest {
    string GoodID = 10;
}

message GetLatestPlatformBenefitByGoodResponse {
    PlatformBenefit Info = 10;
}

message PlatformSetting {
    string ID = 10;
    double WarmAccountUSDAmount = 30;
}

message CreatePlatformSettingRequest {
    PlatformSetting Info = 10;
}

message CreatePlatformSettingResponse {
    PlatformSetting Info = 10;
}

message UpdatePlatformSettingRequest {
    PlatformSetting Info = 10;
}

message UpdatePlatformSettingResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingByGoodRequest {
    string GoodID = 10;
}

message GetPlatformSettingByGoodResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingRequest {
    string ID = 10;
}

message GetPlatformSettingResponse {
    PlatformSetting Info = 10;
}

message UserBenefit {
    string ID = 10;
    string UserID = 20;
    string AppID = 30;
    string GoodID = 40;
    double Amount = 50;
    uint32 CreateAt = 60;
    string OrderID = 70;
    uint32 LastBenefitTimestamp = 80;
}

message CreateUserBenefitRequest {
    UserBenefit Info = 10;
}

message CreateUserBenefitResponse {
    UserBenefit Info = 10;
}

message GetUserBenefitsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserBenefitsByAppUserResponse {
    repeated UserBenefit Infos = 10;
}

message GetUserBenefitsByAppRequest {
    string AppID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetUserBenefitsByAppResponse {
    repeated UserBenefit Infos = 10;
}

message GetLatestUserBenefitByGoodAppUserRequest {
    string AppID = 10;
    string UserID = 20;
    string GoodID = 30;
}

message GetLatestUserBenefitByGoodAppUserResponse {
    UserBenefit Info = 10;
}


message CoinSetting {
    string ID = 10;
    string CoinTypeID = 20;
    double WarmAccountCoinAmount = 30;
}

message CreateCoinSettingRequest {
    CoinSetting Info = 10;
}

message CreateCoinSettingResponse {
    CoinSetting Info = 10;
}

message UpdateCoinSettingRequest {
    CoinSetting Info = 10;
}

message UpdateCoinSettingResponse {
    CoinSetting Info = 10;
}

message GetCoinSettingRequest {
    string ID = 10;
}

message GetCoinSettingResponse {
    CoinSetting Info = 10;
}

message GetCoinSettingByCoinRequest {
    string CoinTypeID = 10;
}

message GetCoinSettingByCoinResponse {
    CoinSetting Info = 10;
}

message GoodBenefit {
    string ID = 10;
    string GoodID = 20;
    string BenefitAccountID = 30;
    string PlatformOfflineAccountID = 40;
    string UserOfflineAccountID = 50;
    string UserOnlineAccountID = 60;
    uint32 BenefitIntervalHours = 70;
}

message CreateGoodBenefitRequest {
    GoodBenefit Info = 10;
}

message CreateGoodBenefitResponse {
    GoodBenefit Info = 10;
}

message UpdateGoodBenefitRequest {
    GoodBenefit Info = 10;
}

message UpdateGoodBenefitResponse {
    GoodBenefit Info = 10;
}

message GetGoodBenefitRequest {
    string ID = 10;
}

message GetGoodBenefitResponse {
    GoodBenefit Info = 10;
}

message GetGoodBenefitByGoodRequest {
    string GoodID = 10;
}

message GetGoodBenefitByGoodResponse {
    GoodBenefit Info = 10;
}

message GoodPayment {
    string ID = 10;
    string GoodID = 20;
    string PaymentCoinTypeID = 30;
    string AccountID = 40;
    bool Idle = 50;
}

message CreateGoodPaymentRequest {
    GoodPayment Info = 10;
}

message CreateGoodPaymentResponse {
    GoodPayment Info = 10;
}

message UpdateGoodPaymentRequest {
    GoodPayment Info = 10;
}

message UpdateGoodPaymentResponse {
    GoodPayment Info = 10;
}

message GetGoodPaymentRequest {
    string ID = 10;
}

message GetGoodPaymentResponse {
    GoodPayment Info = 10;
}

message GetGoodPaymentsRequest {
}

message GetGoodPaymentsResponse {
    repeated GoodPayment Infos = 10;
}


message GetGoodPaymentsByGoodRequest {
    string GoodID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetGoodPaymentsByGoodResponse {
    repeated GoodPayment Infos = 10;
}

message GetIdleGoodPaymentsByGoodRequest {
    string GoodID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetIdleGoodPaymentsByGoodResponse {
    repeated GoodPayment Infos = 10;
}

message GetIdleGoodPaymentsByGoodPaymentCoinRequest {
    string GoodID = 10;
    string PaymentCoinTypeID = 20;
    npool.v1.PageInfo PageInfo = 30;
}

message GetIdleGoodPaymentsByGoodPaymentCoinResponse {
    repeated GoodPayment Infos = 10;
}

message GetGoodPaymentByAccountRequest {
    string AccountID = 10;
}

message GetGoodPaymentByAccountResponse {
    GoodPayment Info = 10;
}

message GoodSetting {
    string ID = 10;
    string GoodID = 20;
    double WarmAccountUSDAmount = 30;
    double WarmAccountCoinAmount = 40;
}

message CreateGoodSettingRequest {
    GoodSetting Info = 10;
}

message CreateGoodSettingResponse {
    GoodSetting Info = 10;
}

message UpdateGoodSettingRequest {
    GoodSetting Info = 10;
}

message UpdateGoodSettingResponse {
    GoodSetting Info = 10;
}

message GetGoodSettingRequest {
    string ID = 10;
}

message GetGoodSettingResponse {
    GoodSetting Info = 10;
}

message GetGoodSettingByGoodRequest {
    string GoodID = 10;
}

message GetGoodSettingByGoodResponse {
    GoodSetting Info = 10;
}

message UserWithdraw {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string CoinTypeID = 40;
    string AccountID = 50;
    string Name = 60;
    string Message = 70;
}

message CreateUserWithdrawRequest {
    UserWithdraw Info = 10;
}

message CreateUserWithdrawResponse {
    UserWithdraw Info = 10;
}

message UpdateUserWithdrawRequest {
    UserWithdraw Info = 10;
}

message UpdateUserWithdrawResponse {
    UserWithdraw Info = 10;
}

message GetUserWithdrawRequest {
    string ID = 10;
}

message GetUserWithdrawResponse {
    UserWithdraw Info = 10;
}

message GetUserWithdrawsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserWithdrawsByAppUserResponse {
    repeated UserWithdraw Infos = 10;
}

message GetUserWithdrawsByOtherAppUserRequest {
    string TargetAppID = 10;
    string TargetUserID = 20;
}

message GetUserWithdrawsByOtherAppUserResponse {
    repeated UserWithdraw Infos = 10;
}

message GetUserWithdrawByAccountRequest {
    string AccountID = 10;
}

message GetUserWithdrawByAccountResponse {
    UserWithdraw Info = 10;
}

message UserDirectBenefit {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string CoinTypeID = 40;
    string AccountID = 50;
}

message CreateUserDirectBenefitRequest {
    UserDirectBenefit Info = 10;
}

message CreateUserDirectBenefitResponse {
    UserDirectBenefit Info = 10;
}

message UpdateUserDirectBenefitRequest {
    UserDirectBenefit Info = 10;
}

message UpdateUserDirectBenefitResponse {
    UserDirectBenefit Info = 10;
}

message GetUserDirectBenefitRequest {
    string ID = 10;
}

message GetUserDirectBenefitResponse {
    UserDirectBenefit Info = 10;
}

message GetUserDirectBenefitsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserDirectBenefitsByAppUserResponse {
    repeated UserDirectBenefit Infos = 10;
}

message GetUserDirectBenefitsByOtherAppUserRequest {
    string TargetAppID = 10;
    string TargetUserID = 20;
}

message GetUserDirectBenefitsByOtherAppUserResponse {
    repeated UserDirectBenefit Infos = 10;
}

message GetUserDirectBenefitByAccountRequest {
    string AccountID = 10;
}

message GetUserDirectBenefitByAccountResponse {
    UserDirectBenefit Info = 10;
}

message GoodIncoming {
    string ID = 10;
    string GoodID = 20;
    string CoinTypeID = 30;
    string AccountID = 40;
}

message CreateGoodIncomingRequest {
    GoodIncoming Info = 10;
}

message CreateGoodIncomingResponse {
    GoodIncoming Info = 10;
}

message UpdateGoodIncomingRequest {
    GoodIncoming Info = 10;
}

message UpdateGoodIncomingResponse {
    GoodIncoming Info = 10;
}

message GetGoodIncomingRequest {
    string ID = 10;
}

message GetGoodIncomingResponse {
    GoodIncoming Info = 10;
}

message GetGoodIncomingsByGoodRequest {
    string GoodID = 10;
}

message GetGoodIncomingsByGoodResponse {
    repeated GoodIncoming Infos = 10;
}

message GetGoodIncomingByGoodCoinRequest {
    string GoodID = 10;
    string CoinTypeID = 20;
}

message GetGoodIncomingByGoodCoinResponse {
    GoodIncoming Info = 10;
}
