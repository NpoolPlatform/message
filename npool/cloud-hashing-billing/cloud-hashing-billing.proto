syntax = "proto3";

package cloud.hashing.billing.v1;

option go_package = "github.com/NpoolPlatform/message/npool/cloud-hashing-billing";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "npool/npool.proto";

// Cloud Hashing Billing
service CloudHashingBilling {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc CreateCoinAccount(CreateCoinAccountRequest) returns (CreateCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/create/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccount(GetCoinAccountRequest) returns (GetCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccountByCoinAddress(GetCoinAccountByCoinAddressRequest) returns (GetCoinAccountByCoinAddressResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/by/coin/address"
            body: "*"
        };
    }
    rpc GetCoinAccountsByAppUser(GetCoinAccountsByAppUserRequest) returns (GetCoinAccountsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/accounts/by/app/user"
            body: "*"
        };
    }
    rpc DeleteCoinAccount(DeleteCoinAccountRequest) returns (DeleteCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/delete/coin/account"
            body: "*"
        };
    }

    rpc CreateCoinAccountTransaction(CreateCoinAccountTransactionRequest) returns (CreateCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/create/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransaction(GetCoinAccountTransactionRequest) returns (GetCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByCoinAccount(GetCoinAccountTransactionsByCoinAccountRequest) returns (GetCoinAccountTransactionsByCoinAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/coin/account"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByState(GetCoinAccountTransactionsByStateRequest) returns (GetCoinAccountTransactionsByStateResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/state"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionsByCoin(GetCoinAccountTransactionsByCoinRequest) returns (GetCoinAccountTransactionsByCoinResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transactions/by/coin"
            body: "*"
        };
    }
    rpc UpdateCoinAccountTransaction(UpdateCoinAccountTransactionRequest) returns (UpdateCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/update/coin/account/transaction"
            body: "*"
        };
    }
    rpc GetCoinAccountTransactionDetail(GetCoinAccountTransactionDetailRequest) returns (GetCoinAccountTransactionDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/coin/account/transaction/detail"
            body: "*"
        };
    }
    rpc DeleteCoinAccountTransaction(DeleteCoinAccountTransactionRequest) returns (DeleteCoinAccountTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/delete/coin/account/transaction"
            body: "*"
        };
    }

    rpc CreatePlatformBenefit(CreatePlatformBenefitRequest) returns (CreatePlatformBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/platform/benefit",
            body: "*"
        };
    }
    rpc GetLatestPlatformBenefitByGood(GetLatestPlatformBenefitByGoodRequest) returns (GetLatestPlatformBenefitByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/latest/platform/benefit/by/good"
            body: "*"
        };
    }
    rpc GetPlatformBenefitsByGood(GetPlatformBenefitsByGoodRequest) returns (GetPlatformBenefitsByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefits/by/good"
            body: "*"
        };
    }
    rpc GetPlatformBenefit(GetPlatformBenefitRequest) returns (GetPlatformBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefit"
            body: "*"
        };
    }
    rpc GetPlatformBenefitDetail(GetPlatformBenefitDetailRequest) returns (GetPlatformBenefitDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/benefit/detail"
            body: "*"
        };
    }

    rpc CreatePlatformSetting(CreatePlatformSettingRequest) returns (CreatePlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/create/platform/setting"
            body: "*"
        };
    }
    rpc CreatePlatformSettingForOtherApp(CreatePlatformSettingForOtherAppRequest) returns (CreatePlatformSettingForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/platform/setting/for/other/app"
            body: "*"
        };
    }
    rpc UpdatePlatformSetting(UpdatePlatformSettingRequest) returns (UpdatePlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/update/platform/setting"
            body: "*"
        };
    }
    rpc GetPlatformSettingByApp(GetPlatformSettingByAppRequest) returns (GetPlatformSettingByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/setting/by/app"
            body: "*"
        };
    }
    rpc GetPlatformSettingByOtherApp(GetPlatformSettingByOtherAppRequest) returns (GetPlatformSettingByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/setting/by/other/app"
            body: "*"
        };
    }
    rpc GetPlatformSetting(GetPlatformSettingRequest) returns (GetPlatformSettingResponse) {
        option (google.api.http) = {
            post: "/v1/get/platform/setting"
            body: "*"
        };
    }

    rpc CreateUserBenefit(CreateUserBenefitRequest) returns (CreateUserBenefitResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/benefit"
            body: "*"
        };
    }
    rpc GetUserBenefitsByAppUser(GetUserBenefitsByAppUserRequest) returns (GetUserBenefitsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/benefits/by/app/user"
            body: "*"
        };
    }
    rpc GetUserBenefitsByApp(GetUserBenefitsByAppRequest) returns (GetUserBenefitsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/benefits/by/app"
            body: "*"
        };
    }
    rpc GetLatestUserBenefitByGoodAppUser(GetLatestUserBenefitByGoodAppUserRequest) returns (GetLatestUserBenefitByGoodAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/latest/user/benefit/by/good/app/user"
            body: "*"
        };
    }
}

message CoinAccountInfo {
    string ID = 10;
    string CoinTypeID = 20;
    string Address = 30;
    bool PlatformHoldPrivateKey = 40;
}

message CreateCoinAccountRequest {
    CoinAccountInfo Info = 10;
}

message CreateCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountRequest {
    string ID = 10;
}

message GetCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountByCoinAddressRequest {
    string CoinInfoID = 10;
    string Address = 20;
}

message GetCoinAccountByCoinAddressResponse {
    CoinAccountInfo Info = 10;
}

message GetCoinAccountsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetCoinAccountsByAppUserResponse {
    repeated CoinAccountInfo Infos = 10;
}

message DeleteCoinAccountRequest {
    string ID = 10;
}

message DeleteCoinAccountResponse {
    CoinAccountInfo Info = 10;
}

message CoinAccountTransaction {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string FromAddressID = 40;
    string ToAddressID = 50;
    string CoinTypeID = 60;
    double Amount = 70;
    string Message = 80;
    uint32 CreateAt = 90;
    string State = 100;
    string ChainTransactionID = 110;
}

message CreateCoinAccountTransactionRequest {
    CoinAccountTransaction Info = 10;
}

message CreateCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message GetCoinAccountTransactionRequest {
    string ID = 10;
}

message GetCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message CoinAccountTransactionDetail {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    CoinAccountInfo FromAddress = 40;
    CoinAccountInfo ToAddress = 50;
    string CoinTypeID = 60;
    double Amount = 70;
    string Message = 80;
    uint32 CreateAt = 90;
    string State = 100;
    string ChainTransactionID = 110;
}

message GetCoinAccountTransactionDetailRequest {
    string ID = 10;
}

message GetCoinAccountTransactionDetailResponse {
    CoinAccountTransactionDetail Detail = 10;
}

message GetCoinAccountTransactionsByCoinAccountRequest {
    string CoinTypeID = 10;
    string AddressID = 20;
}

message GetCoinAccountTransactionsByCoinAccountResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message GetCoinAccountTransactionsByStateRequest {
    string State = 10;
}

message GetCoinAccountTransactionsByStateResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message GetCoinAccountTransactionsByCoinRequest {
    string CoinTypeID = 10;
}

message GetCoinAccountTransactionsByCoinResponse {
    repeated CoinAccountTransaction Infos = 10;
}

message UpdateCoinAccountTransactionRequest {
    CoinAccountTransaction Info = 10;
}

message UpdateCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message DeleteCoinAccountTransactionRequest {
    string ID = 10;
}

message DeleteCoinAccountTransactionResponse {
    CoinAccountTransaction Info = 10;
}

message PlatformBenefit {
    string ID = 10;
    string GoodID = 20;
    string BenefitAccountID = 30;
    double Amount = 40;
    uint32 CreateAt = 50;
    string ChainTransactionID = 60;
    uint32 LastBenefitTimestamp = 70;
}

message CreatePlatformBenefitRequest {
    PlatformBenefit Info = 10;
}

message CreatePlatformBenefitResponse {
    PlatformBenefit Info = 10;
}

message GetPlatformBenefitsByGoodRequest {
    string GoodID = 10;
}

message GetPlatformBenefitsByGoodResponse {
    repeated PlatformBenefit Infos = 10;
}

message PlatformBenefitDetail {
    string ID = 10;
    string GoodID = 20;
    CoinAccountInfo BenefitAddress = 30;
    double Amount = 40;
    uint32 CreateAt = 50;
    string ChainTransactionID = 60;
}

message GetPlatformBenefitDetailRequest {
    string ID = 10;
}

message GetPlatformBenefitDetailResponse {
    PlatformBenefitDetail Detail = 10;
}

message GetPlatformBenefitRequest {
    string ID = 10;
}

message GetPlatformBenefitResponse {
    PlatformBenefit Info = 10;
}

message GetLatestPlatformBenefitByGoodRequest {
    string GoodID = 10;
}

message GetLatestPlatformBenefitByGoodResponse {
    PlatformBenefit Info = 10;
}

message PlatformSetting {
    string ID = 10;
    string AppID = 20;
    double WarmAccountUSDAmount = 30;
}

message CreatePlatformSettingRequest {
    PlatformSetting Info = 10;
}

message CreatePlatformSettingResponse {
    PlatformSetting Info = 10;
}

message CreatePlatformSettingForOtherAppRequest {
    string TargetAppID = 10;
    PlatformSetting Info = 20;
}

message CreatePlatformSettingForOtherAppResponse {
    PlatformSetting Info = 10;
}

message UpdatePlatformSettingRequest {
    PlatformSetting Info = 10;
}

message UpdatePlatformSettingResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingByGoodRequest {
    string GoodID = 10;
}

message GetPlatformSettingByGoodResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingRequest {
    string ID = 10;
}

message GetPlatformSettingResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingByAppRequest {
    string AppID = 10;
}

message GetPlatformSettingByAppResponse {
    PlatformSetting Info = 10;
}

message GetPlatformSettingByOtherAppRequest {
    string TargetAppID = 10;
}

message GetPlatformSettingByOtherAppResponse {
    PlatformSetting Info = 10;
}

message UserBenefit {
    string ID = 10;
    string UserID = 20;
    string AppID = 30;
    string GoodID = 40;
    double Amount = 50;
    uint32 CreateAt = 60;
    string OrderID = 70;
    uint32 LastBenefitTimestamp = 80;
}

message CreateUserBenefitRequest {
    UserBenefit Info = 10;
}

message CreateUserBenefitResponse {
    UserBenefit Info = 10;
}

message GetUserBenefitsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserBenefitsByAppUserResponse {
    repeated UserBenefit Infos = 10;
}

message GetUserBenefitsByAppRequest {
    string AppID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetUserBenefitsByAppResponse {
    repeated UserBenefit Infos = 10;
}

message GetLatestUserBenefitByGoodAppUserRequest {
    string AppID = 10;
    string UserID = 20;
    string GoodID = 30;
}

message GetLatestUserBenefitByGoodAppUserResponse {
    UserBenefit Info = 10;
}

