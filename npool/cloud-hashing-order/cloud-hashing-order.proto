syntax = "proto3";

package cloud.hashing.order.v1;

option go_package = "github.com/NpoolPlatform/message/npool/cloud-hashing-order";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "npool/npool.proto";

// Service Name
service CloudHashingOrder {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc CreateGoodPaying(CreateGoodPayingRequest) returns (CreateGoodPayingResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/paying"
            body: "*"
        };
    }
    rpc GetGoodPayingByOrder(GetGoodPayingByOrderRequest) returns (GetGoodPayingByOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/paying/by/order"
            body: "*"
        };
    }

    rpc CreateGasPaying(CreateGasPayingRequest) returns (CreateGasPayingResponse) {
        option (google.api.http) = {
            post: "/v1/create/gas/paying"
            body: "*"
        };
    }
    rpc GetGasPayingsByOrder(GetGasPayingsByOrderRequest) returns (GetGasPayingsByOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/gas/payings/by/order"
            body: "*"
        };
    }

    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
        option (google.api.http) = {
            post: "/v1/create/order"
            body: "*"
        };
    }
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/order"
            body: "*"
        };
    }
    rpc GetOrderDetail(GetOrderDetailRequest) returns (GetOrderDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/order/detail"
            body: "*"
        };
    }
    rpc GetOrdersByAppUser(GetOrdersByAppUserRequest) returns (GetOrdersByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/app/user"
            body: "*"
        };
    }
    rpc GetOrdersByApp(GetOrdersByAppRequest) returns (GetOrdersByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/app"
            body: "*"
        };
    }
    rpc GetOrdersByGood(GetOrdersByGoodRequest) returns (GetOrdersByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/good"
            body: "*"
        };
    }

    rpc CreateCompensate(CreateCompensateRequest) returns (CreateCompensateResponse) {
        option (google.api.http) = {
            post: "/v1/create/compensate"
            body: "*"
        };
    }
    rpc GetCompensatesByOrder(GetCompensatesByOrderRequest) returns (GetCompensatesByOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/compensates/by/order"
            body: "*"
        };
    }

    rpc CreateOutOfGas(CreateOutOfGasRequest) returns (CreateOutOfGasResponse) {
        option (google.api.http) = {
            post: "/v1/create/out-of-gas"
            body: "*"
        };
    }
    rpc GetOutOfGasesByOrder(GetOutOfGasesByOrderRequest) returns (GetOutOfGasesByOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/out-of-gases/by/order"
            body: "*"
        };
    }

    rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse) {
        option (google.api.http) = {
            post: "/v1/create/payment"
            body: "*"
        };
    }
    rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/get/payment"
            body: "*"
        };
    }
    rpc UpdatePayment(UpdatePaymentRequest) returns (UpdatePaymentResponse) {
        option (google.api.http) = {
            post: "/v1/update/payment"
            body: "*"
        };
    }
    rpc GetPaymentByOrder(GetPaymentByOrderRequest) returns (GetPaymentByOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/payment/by/order"
            body: "*"
        };
    }

    rpc GetOrdersDetailByAppUser(GetOrdersDetailByAppUserRequest) returns (GetOrdersDetailByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/app/user"
            body: "*"
        };
    }
    rpc GetOrdersShortDetailByAppUser(GetOrdersShortDetailByAppUserRequest) returns (GetOrdersShortDetailByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/short/detail/by/app/user"
            body: "*"
        };
    }
    rpc GetOrdersDetailByApp(GetOrdersDetailByAppRequest) returns (GetOrdersDetailByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/app"
            body: "*"
        };
    }
    rpc GetOrdersDetailByGood(GetOrdersDetailByGoodRequest) returns (GetOrdersDetailByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/good"
            body: "*"
        };
    }
}

// request body and response
message GoodPaying {
    string ID = 10;
    string OrderID = 20;
    string PaymentID = 30;
}

message CreateGoodPayingRequest {
    GoodPaying Info = 10;
}

message CreateGoodPayingResponse {
    GoodPaying Info = 10;
}

message GetGoodPayingByOrderRequest {
    string OrderID = 10;
}

message GetGoodPayingByOrderResponse {
    GoodPaying Info = 10;
}

message GasPaying {
    string ID = 10;
    string OrderID = 20;
    string PaymentID = 30;
    uint32 DurationMinutes = 40;
    string FeeTypeID = 50;
}

message CreateGasPayingRequest {
    GasPaying Info = 10;
}

message CreateGasPayingResponse {
    GasPaying Info = 10;
}

message GetGasPayingsByOrderRequest {
    string OrderID = 10;
}

message GetGasPayingsByOrderResponse {
    repeated GasPaying Infos = 10;
}

message Order {
    string ID = 10;
    string GoodID = 20;
    string AppID = 30;
    string UserID = 40;
    uint32 Units = 50;
    string DiscountCouponID = 60;
    string UserSpecialReductionID = 70;
    uint32 Start = 80;
    uint32 End = 90;
    string CouponID = 100;
}

message CreateOrderRequest {
    Order Info = 10;
}

message CreateOrderResponse {
    Order Info = 10;
}

message GetOrderRequest {
    string ID = 10;
}

message GetOrderResponse {
    Order Info = 10;
}

message GetOrdersByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetOrdersByAppUserResponse {
    repeated Order Infos = 10;
}

message GetOrdersByAppRequest {
    string AppID = 10;
}

message GetOrdersByAppResponse {
    repeated Order Infos = 10;
}

message GetOrdersByGoodRequest {
    string GoodID = 10;
}

message GetOrdersByGoodResponse {
    repeated Order Infos = 10;
}

message Compensate {
    string ID = 10;
    string OrderID = 20;
    uint32 Start = 30;
    uint32 End = 40;
    string Message = 50;
}

message CreateCompensateRequest {
    Compensate Info = 10;
}

message CreateCompensateResponse {
    Compensate Info = 10;
}

message GetCompensatesByOrderRequest {
    string OrderID = 10;
}

message GetCompensatesByOrderResponse {
    repeated Compensate Infos = 10;
}

message OutOfGas {
    string ID = 10;
    string OrderID = 20;
    uint32 Start = 30;
    uint32 End = 40;
}

message CreateOutOfGasRequest {
    OutOfGas Info = 10;
}

message CreateOutOfGasResponse {
    OutOfGas Info = 10;
}

message GetOutOfGasesByOrderRequest {
    string OrderID = 10;
}

message GetOutOfGasesByOrderResponse {
    repeated OutOfGas Infos = 10;
}

message Payment {
    string ID = 10;
    string OrderID = 20;
    string AccountID = 30;
    double StartAmount = 40;
    double Amount = 50;
    string CoinInfoID = 60;
    string State = 70;
    string ChainTransactionID = 80;
    string PlatformTransactionID = 90;
    uint32 CreateAt = 100;
    double CoinUSDCurrency = 110;
}

message CreatePaymentRequest {
    Payment Info = 10;
}

message CreatePaymentResponse {
    Payment Info = 10;
}

message GetPaymentRequest {
    string ID = 10;
}

message GetPaymentResponse {
    Payment Info = 10;
}

message UpdatePaymentRequest {
    Payment Info = 10;
}

message UpdatePaymentResponse {
    Payment Info = 10;
}

message GetPaymentByOrderRequest {
    string OrderID = 10;
}

message GetPaymentByOrderResponse {
    Payment Info = 10;
}

message OrderDetail {
    string ID = 10;
    string GoodID = 20;
    string AppID = 30;
    string UserID = 40;
    uint32 Units = 50;
    string DiscountCouponID = 60;
    string UserSpecialReductionID = 70;
    GoodPaying GoodPaying = 80;
    repeated GasPaying GasPayings = 90;
    repeated Compensate Compensates = 100;
    repeated OutOfGas OutOfGases = 110;
    Payment Payment = 120;
    uint32 Start = 130;
    uint32 End = 140;
    string CouponID = 150;
}

message GetOrderDetailRequest {
    string ID = 10;
}

message GetOrderDetailResponse {
    OrderDetail Detail = 10;
}

message GetOrdersDetailByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetOrdersDetailByAppUserResponse {
    repeated OrderDetail Details = 10;
}

message GetOrdersShortDetailByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetOrdersShortDetailByAppUserResponse {
    repeated OrderDetail Details = 10;
}

message GetOrdersDetailByAppRequest {
    string AppID = 10;
}

message GetOrdersDetailByAppResponse {
    repeated OrderDetail Details = 10;
}

message GetOrdersDetailByGoodRequest {
    string GoodID = 10;
}

message GetOrdersDetailByGoodResponse {
    repeated OrderDetail Details = 10;
}
