syntax = "proto3";

package smoketest.manager.planrelatedtestcase.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mgr/v1/planrelatedtestcase";

import "npool/npool.proto";

// Service Name
service Manager {}

message PlanRelatedTestCaseReq {
    optional string          ID                                      = 10;
    optional string          TestPlanID                              = 20;
    optional string          TestCaseID                              = 30;
    optional string          TestCaseOutput                          = 40;
    optional string          Description                             = 50;
    optional uint32          RunDuration                             = 60;
    optional string          TestUserID                              = 70;
    optional TestCaseResult  TestCaseResult                          = 80; 
    optional uint32          Index                                   = 100;
}

message PlanRelatedTestCase {
    string          ID                                      = 10;
    string          TestPlanID                              = 20;
    string          TestCaseID                              = 40;
    string          TestCaseOutput                          = 50;
    string          Description                             = 60;
    uint32          RunDuration                             = 70;
    string          TestUserID                              = 80;
    TestCaseResult  TestCaseResult                          = 90; 
    uint32          CreatedAt                               = 100;
    uint32          Index                                   = 110;
}

enum TestCaseResult {
    DefaultTestCaseResult     = 0;
    Skiped                    = 10;
    Passed                    = 20;
    Failed                    = 30;
}

message Conds {
    optional npool.v1.StringVal      ID             = 10;
    optional npool.v1.StringVal      TestPlanID     = 20;
    optional npool.v1.StringVal      TestUserID     = 40;
    optional npool.v1.StringVal      TestCaseResult = 50;
}


message CreatePlanRelatedTestCaseRequest {
    PlanRelatedTestCaseReq Info = 10;
}

message CreatePlanRelatedTestCaseResponse {
    PlanRelatedTestCase Info = 10;
}

message CreatePlanRelatedTestCasesRequest {
    repeated PlanRelatedTestCaseReq Infos = 10;
}

message CreatePlanRelatedTestCasesResponse {
    repeated PlanRelatedTestCase Infos = 10;
}

message UpdatePlanRelatedTestCaseRequest {
    PlanRelatedTestCaseReq Info = 10;
}

message UpdatePlanRelatedTestCaseResponse {
    PlanRelatedTestCase Info = 10;
}

message GetPlanRelatedTestCaseRequest {
    string ID = 10;
}

message GetPlanRelatedTestCaseResponse {
    PlanRelatedTestCase Info = 10;
}

message GetPlanRelatedTestCasesRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetPlanRelatedTestCasesResponse {
    repeated PlanRelatedTestCase Infos = 10;
    uint32           Total = 20;
}

message GetPlanRelatedTestCaseOnlyRequest {
    Conds Conds = 10;
}

message GetPlanRelatedTestCaseOnlyResponse {
    PlanRelatedTestCase Info = 10;
}

message ExistPlanRelatedTestCaseRequest {
    string ID = 10;
}

message ExistPlanRelatedTestCaseResponse {
    bool Info = 10;
}

message ExistPlanRelatedTestCaseCondsRequest {
    Conds Conds = 10;
}

message ExistPlanRelatedTestCaseCondsResponse {
    bool Info = 10;
}

message CountPlanRelatedTestCasesRequest {
    Conds Conds = 10;
}

message CountPlanRelatedTestCasesResponse {
    uint32 Info = 10;
}

message DeletePlanRelatedTestCaseRequest {
    string ID = 10;
}

message DeletePlanRelatedTestCaseResponse {
    PlanRelatedTestCase Info = 10;
}
