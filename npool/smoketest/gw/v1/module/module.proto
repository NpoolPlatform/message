syntax = "proto3";

package smoketest.gateway.module.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/gw/v1/module";

import "google/api/annotations.proto";
import "npool/smoketest/mgr/v1/module/module.proto";

// Service Name
service Gateway {
    rpc CreateModule (CreateModuleRequest) returns (CreateModuleResponse) {
        option (google.api.http) = {
            post: "/v1/create/module"
            body: "*"
        };
    }

    rpc DeleteModule (DeleteModuleRequest) returns (DeleteModuleResponse) {
        option (google.api.http) = {
            post: "/v1/delete/module"
            body: "*"
        };
    }

    rpc UpdateModule (UpdateModuleRequest) returns (UpdateModuleResponse) {
        option (google.api.http) = {
            post: "/v1/update/module"
            body: "*"
        };
    }

    rpc GetModules (GetModulesRequest) returns (GetModulesResponse) {
        option (google.api.http) = {
            post: "/v1/get/modules"
            body: "*"
        };
    }
}

message CreateModuleRequest {
    string                    Name                = 10;
    optional  string          Description         = 20;
}

message CreateModuleResponse {
    smoketest.manager.module.v1.Module Info = 10;
}

message DeleteModuleRequest {
    string ID        = 10;
}

message DeleteModuleResponse {
    smoketest.manager.module.v1.Module Info = 10;
}

message UpdateModuleRequest {
    string          ID                  = 10;
    optional string Name                = 20;
    optional string Description         = 30;
}

message UpdateModuleResponse {
    smoketest.manager.module.v1.Module Info = 10;
}

message GetModulesRequest {
    optional int32  Offset = 10;
    optional int32  Limit  = 20;
}

message GetModulesResponse {
    repeated smoketest.manager.module.v1.Module Infos  = 10;
    uint32          Total  = 20;
}



