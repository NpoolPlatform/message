syntax = "proto3";

package smoketest.middleware.TestCase.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mw/v1/testplan/testcase";

import "npool/smoketest/mgr/v1/testplan/testcase/testcase.proto";
import "npool/smoketest/mw/v1/testcase/testcase.proto";

// Service Name
service Middleware {
    rpc CreateTestCase     (CreateTestCaseRequest)     returns (CreateTestCaseResponse)     {}
    rpc UpdateTestCase     (UpdateTestCaseRequest)     returns (UpdateTestCaseResponse)     {}
    rpc GetTestCase        (GetTestCaseRequest)        returns (GetTestCaseResponse)        {}
    rpc GetTestCaseOnly    (GetTestCaseOnlyRequest)    returns (GetTestCaseOnlyResponse)    {}
    rpc GetTestCases       (GetTestCasesRequest)       returns (GetTestCasesResponse)       {}
    rpc ExistTestCase      (ExistTestCaseRequest)      returns (ExistTestCaseResponse)      {}
    rpc DeleteTestCase     (DeleteTestCaseRequest)     returns (DeleteTestCaseResponse)     {}
}


message CreateTestCaseRequest {
    smoketest.manager.testplan.testcase.v1.TestCaseReq Info = 10;
}

message CreateTestCaseResponse {
    smoketest.middleware.testcase.v1.TestCase Info = 10;
}

message UpdateTestCaseRequest {
    smoketest.manager.testplan.testcase.v1.TestCaseReq Info = 10;
}

message UpdateTestCaseResponse {
    smoketest.middleware.testcase.v1.TestCase Info = 10;
}

message GetTestCaseRequest {
    string ID = 10;
}

message GetTestCaseResponse {
    smoketest.middleware.testcase.v1.TestCase Info = 10;
}

message GetTestCasesRequest {
    smoketest.manager.testplan.testcase.v1.Conds Conds   = 10;
    optional                               int32 Offset  = 20;
    optional                               int32 Limit   = 30;
}

message GetTestCasesResponse {
    repeated smoketest.middleware.testcase.v1.TestCase Infos = 10;
    uint32                                             Total = 20;
}

message GetTestCaseOnlyRequest {
    smoketest.manager.testplan.testcase.v1.Conds Conds = 10;
}

message GetTestCaseOnlyResponse {
    smoketest.middleware.testcase.v1.TestCase Info = 10;
}

message ExistTestCaseRequest {
    string ID = 10;
}

message ExistTestCaseResponse {
    bool Info = 10;
}

message DeleteTestCaseRequest {
    smoketest.manager.testplan.testcase.v1.Conds Conds = 10;
}

message DeleteTestCaseResponse {
    smoketest.middleware.testcase.v1.TestCase Info = 10;
}
