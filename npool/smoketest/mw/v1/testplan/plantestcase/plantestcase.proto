syntax = "proto3";

package smoketest.middleware.PlanTestCase.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mw/v1/testplan/testcase";

import "npool/smoketest/mgr/v1/testplan/plantestcase/plantestcase.proto";

// Service Name
service Middleware {
    rpc CreatePlanTestCase     (CreatePlanTestCaseRequest)     returns (CreatePlanTestCaseResponse)     {}
    rpc UpdatePlanTestCase     (UpdatePlanTestCaseRequest)     returns (UpdatePlanTestCaseResponse)     {}
    rpc GetPlanTestCase        (GetPlanTestCaseRequest)        returns (GetPlanTestCaseResponse)        {}
    rpc GetPlanTestCaseOnly    (GetPlanTestCaseOnlyRequest)    returns (GetPlanTestCaseOnlyResponse)    {}
    rpc GetPlanTestCases       (GetPlanTestCasesRequest)       returns (GetPlanTestCasesResponse)       {}
    rpc ExistPlanTestCase      (ExistPlanTestCaseRequest)      returns (ExistPlanTestCaseResponse)      {}
    rpc DeletePlanTestCase     (DeletePlanTestCaseRequest)     returns (DeletePlanTestCaseResponse)     {}
}


message CreatePlanTestCaseRequest {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCaseReq Info = 10;
}

message CreatePlanTestCaseResponse {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCase Info = 10;
}

message UpdatePlanTestCaseRequest {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCaseReq Info = 10;
}

message UpdatePlanTestCaseResponse {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCase Info = 10;
}

message GetPlanTestCaseRequest {
    string ID = 10;
}

message GetPlanTestCaseResponse {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCase Info = 10;
}

message GetPlanTestCasesRequest {
    smoketest.manager.testplan.plantestcase.v1.Conds Conds   = 10;
    int32 Offset                                             = 20;
    int32 Limit                                              = 30;
}

message GetPlanTestCasesResponse {
    repeated smoketest.manager.testplan.plantestcase.v1.PlanTestCase Infos = 10;
    uint32                                             Total = 20;
}

message GetPlanTestCaseOnlyRequest {
    smoketest.manager.testplan.plantestcase.v1.Conds Conds = 10;
}

message GetPlanTestCaseOnlyResponse {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCase Info = 10;
}

message ExistPlanTestCaseRequest {
    string ID = 10;
}

message ExistPlanTestCaseResponse {
    bool Info = 10;
}

message DeletePlanTestCaseRequest {
    smoketest.manager.testplan.plantestcase.v1.Conds Conds = 10;
}

message DeletePlanTestCaseResponse {
    smoketest.manager.testplan.plantestcase.v1.PlanTestCase Info = 10;
}
