syntax = "proto3";

package smoketest.middleware.testplan.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mw/v1/testplan";

import "npool/smoketest/mgr/v1/testplan/testplan.proto";

// Service Name
service Middleware {
    rpc CreateTestPlan     (CreateTestPlanRequest)     returns (CreateTestPlanResponse)     {}
    rpc UpdateTestPlan     (UpdateTestPlanRequest)     returns (UpdateTestPlanResponse)     {}
    rpc GetTestPlan        (GetTestPlanRequest)        returns (GetTestPlanResponse)        {}
    rpc GetTestPlanOnly    (GetTestPlanOnlyRequest)    returns (GetTestPlanOnlyResponse)    {}
    rpc GetTestPlans       (GetTestPlansRequest)       returns (GetTestPlansResponse)       {}
    rpc ExistTestPlan      (ExistTestPlanRequest)      returns (ExistTestPlanResponse)      {}
    rpc DeleteTestPlan     (DeleteTestPlanRequest)     returns (DeleteTestPlanResponse)     {}
}

message CreateTestPlanRequest {
    smoketest.manager.testplan.v1.TestPlanReq Info = 10;
}

message CreateTestPlanResponse {
    smoketest.manager.testplan.v1.TestPlan Info = 10;
}

message UpdateTestPlanRequest {
    smoketest.manager.testplan.v1.TestPlanReq Info = 10;
}

message UpdateTestPlanResponse {
    smoketest.manager.testplan.v1.TestPlan Info = 10;
}

message GetTestPlanRequest {
    string ID = 10;
}

message GetTestPlanResponse {
    smoketest.manager.testplan.v1.TestPlan Info = 10;
}

message GetTestPlansRequest {
    smoketest.manager.testplan.v1.Conds Conds   = 10;
    int32 Offset                                = 20;
    int32 Limit                                 = 30;
}

message GetTestPlansResponse {
    repeated smoketest.manager.testplan.v1.TestPlan Infos = 10;
    uint32                                          Total = 20;
}

message GetTestPlanOnlyRequest {
    smoketest.manager.testplan.v1.Conds Conds = 10;
}

message GetTestPlanOnlyResponse {
    smoketest.manager.testplan.v1.TestPlan Info = 10;
}

message ExistTestPlanRequest {
    string ID = 10;
}

message ExistTestPlanResponse {
    bool Info = 10;
}

message DeleteTestPlanRequest {
    string ID = 10;
}

message DeleteTestPlanResponse {
    smoketest.manager.testplan.v1.TestPlan Info = 10;
}
