syntax = "proto3";

package smoketest.middleware.testcase.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mw/v1/testcase";

import "npool/smoketest/mgr/v1/testcase/testcase.proto";

// Service Name
service Middleware {
    rpc CreateTestCase        (CreateTestCaseRequest)       returns (CreateTestCaseResponse)       {}
    rpc UpdateTestCase        (UpdateTestCaseRequest)       returns (UpdateTestCaseResponse)       {}
    rpc GetTestCases          (GetTestCasesRequest)         returns (GetTestCasesResponse)         {}
    rpc GetTestCase           (GetTestCaseRequest)          returns (GetTestCaseResponse)          {}
    rpc DeleteTestCase        (DeleteTestCaseRequest)       returns (DeleteTestCaseResponse)       {}
}

message TestCase {
    // @inject_tag: sql:"id"
    string          ID                                                = 10;
    // @inject_tag: sql:"name"
    string          Name                                              = 20;
    // @inject_tag: sql:"description"
    string          Description                                       = 30;
    // @inject_tag: sql:"module_id"
    string          ModuleID                                          = 40;
    // @inject_tag: sql:"module_name"
    string          ModuleName                                        = 50;
    // @inject_tag: sql:"api_id"
    string          ApiID                                             = 60;
    // @inject_tag: sql:"expectation"
    string          Expectation                                       = 70;
    // @inject_tag: sql:"input"
    string          Input                                             = 80;
    // @inject_tag: sql:"input_desc"
    string          InputDesc                                         = 90;
    // @inject_tag: sql:"test_case_type"
    smoketest.manager.testcase.v1.TestCaseType    TestCaseType        = 100;
    // @inject_tag: sql:"deprecated"
    bool            Deprecated                                        = 110;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt                                         = 120;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt                                         = 130;
}

message CreateTestCaseRequest {
    smoketest.manager.testcase.v1.TestCaseReq Info = 10;
}

message CreateTestCaseResponse {
    TestCase Info = 10;
}


message DeleteTestCaseRequest {
    string ID     = 10;
}

message DeleteTestCaseResponse {
    TestCase Info = 10;
}

message GetTestCasesRequest {
    smoketest.manager.testcase.v1.Conds Conds = 10;
    int32  Offset                             = 20;
    int32  Limit                              = 30;
}

message GetTestCasesResponse {
    repeated TestCase Infos  = 10;
    uint32            Total   = 20;
}

message GetTestCaseRequest {
    string ID   = 10;
}

message GetTestCaseResponse {
    TestCase Info = 10;
}

message UpdateTestCaseRequest {
    smoketest.manager.testcase.v1.TestCaseReq info = 10;
}

message UpdateTestCaseResponse {
    TestCase Info = 10;
}