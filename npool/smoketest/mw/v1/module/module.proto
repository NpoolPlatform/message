syntax = "proto3";

package smoketest.middleware.module.v1;

option go_package = "github.com/NpoolPlatform/message/npool/smoketest/mw/v1/module";

import "npool/smoketest/mgr/v1/module/module.proto";

// Service Name
service Middleware {
    rpc CreateModule        (CreateModuleRequest)       returns (CreateModuleResponse)       {}
    rpc UpdateModule        (UpdateModuleRequest)       returns (UpdateModuleResponse)       {}
    rpc GetModules          (GetModulesRequest)         returns (GetModulesResponse)         {}
    rpc GetModule           (GetModuleRequest)          returns (GetModuleResponse)          {}
    rpc DeleteModule        (DeleteModuleRequest)       returns (DeleteModuleResponse)       {}
    rpc ExistModule         (ExistModuleRequest)        returns (ExistModuleResponse)        {}
    rpc ExistModuleConds    (ExistModuleCondsRequest)   returns (ExistModuleCondsResponse)   {}
}

message CreateModuleRequest {
    smoketest.manager.module.v1.ModuleReq Info = 10;
}

message CreateModuleResponse {
    smoketest.manager.module.v1.Module  Info   = 10;
}

message ExistModuleRequest {
    string     Name                   = 10;
}

message ExistModuleResponse {
    bool  Info  = 10;
}

message ExistModuleCondsRequest {
    smoketest.manager.module.v1.Conds Conds = 10;
}

message ExistModuleCondsResponse {
    bool Info = 10;
}

message DeleteModuleRequest {
    smoketest.manager.module.v1.ModuleReq Info = 10;
}

message DeleteModuleResponse {
    smoketest.manager.module.v1.Module Info = 10;
}

message GetModulesRequest {
    smoketest.manager.module.v1.Conds Conds          = 10;
    int32  Offset                                    = 20;
    int32  Limit                                     = 30;
}

message GetModulesResponse {
    repeated smoketest.manager.module.v1.Module Infos = 10;
    uint32                                      Total = 20;
}

message GetModuleRequest {
    string ID = 10;
}

message GetModuleResponse {
    smoketest.manager.module.v1.Module           Info = 10;
}

message UpdateModuleRequest {
    smoketest.manager.module.v1.ModuleReq        Info = 10;
}

message UpdateModuleResponse {
    smoketest.manager.module.v1.Module           Info = 10;
}