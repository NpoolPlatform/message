// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/internationalization/internationalization.proto

package npool

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Lang string `protobuf:"bytes,20,opt,name=Lang,proto3" json:"Lang,omitempty"`
	Logo string `protobuf:"bytes,30,opt,name=Logo,proto3" json:"Logo,omitempty"`
	Name string `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Lang) Reset() {
	*x = Lang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lang) ProtoMessage() {}

func (x *Lang) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lang.ProtoReflect.Descriptor instead.
func (*Lang) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{0}
}

func (x *Lang) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Lang) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Lang) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Lang) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AddLangRequest) Reset() {
	*x = AddLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLangRequest) ProtoMessage() {}

func (x *AddLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLangRequest.ProtoReflect.Descriptor instead.
func (*AddLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{1}
}

func (x *AddLangRequest) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AddLangResponse) Reset() {
	*x = AddLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLangResponse) ProtoMessage() {}

func (x *AddLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLangResponse.ProtoReflect.Descriptor instead.
func (*AddLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{2}
}

func (x *AddLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLangRequest) Reset() {
	*x = UpdateLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLangRequest) ProtoMessage() {}

func (x *UpdateLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLangRequest.ProtoReflect.Descriptor instead.
func (*UpdateLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLangRequest) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLangResponse) Reset() {
	*x = UpdateLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLangResponse) ProtoMessage() {}

func (x *UpdateLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLangResponse.ProtoReflect.Descriptor instead.
func (*UpdateLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLangsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetLangsByAppRequest) Reset() {
	*x = GetLangsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsByAppRequest) ProtoMessage() {}

func (x *GetLangsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetLangsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{5}
}

func (x *GetLangsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetLangsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Lang `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetLangsByAppResponse) Reset() {
	*x = GetLangsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsByAppResponse) ProtoMessage() {}

func (x *GetLangsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetLangsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{6}
}

func (x *GetLangsByAppResponse) GetInfos() []*Lang {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetLangsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLangsRequest) Reset() {
	*x = GetLangsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsRequest) ProtoMessage() {}

func (x *GetLangsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsRequest.ProtoReflect.Descriptor instead.
func (*GetLangsRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{7}
}

type GetLangsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Lang `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetLangsResponse) Reset() {
	*x = GetLangsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsResponse) ProtoMessage() {}

func (x *GetLangsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsResponse.ProtoReflect.Descriptor instead.
func (*GetLangsResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{8}
}

func (x *GetLangsResponse) GetInfos() []*Lang {
	if x != nil {
		return x.Infos
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID     string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	MessageID string `protobuf:"bytes,30,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	LangID    string `protobuf:"bytes,40,opt,name=LangID,proto3" json:"LangID,omitempty"`
	Message   string `protobuf:"bytes,50,opt,name=Message,proto3" json:"Message,omitempty"`
	BatchGet  bool   `protobuf:"varint,60,opt,name=BatchGet,proto3" json:"BatchGet,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{9}
}

func (x *Message) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Message) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Message) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *Message) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Message) GetBatchGet() bool {
	if x != nil {
		return x.BatchGet
	}
	return false
}

type CreateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Message `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMessageRequest) Reset() {
	*x = CreateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest) ProtoMessage() {}

func (x *CreateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{10}
}

func (x *CreateMessageRequest) GetInfo() *Message {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Message `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMessageResponse) Reset() {
	*x = CreateMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageResponse) ProtoMessage() {}

func (x *CreateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{11}
}

func (x *CreateMessageResponse) GetInfo() *Message {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Message `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateMessagesRequest) Reset() {
	*x = CreateMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessagesRequest) ProtoMessage() {}

func (x *CreateMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessagesRequest.ProtoReflect.Descriptor instead.
func (*CreateMessagesRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{12}
}

func (x *CreateMessagesRequest) GetInfos() []*Message {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Message `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateMessagesResponse) Reset() {
	*x = CreateMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessagesResponse) ProtoMessage() {}

func (x *CreateMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessagesResponse.ProtoReflect.Descriptor instead.
func (*CreateMessagesResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMessagesResponse) GetInfos() []*Message {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Message `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateMessageRequest) Reset() {
	*x = UpdateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageRequest) ProtoMessage() {}

func (x *UpdateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageRequest.ProtoReflect.Descriptor instead.
func (*UpdateMessageRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMessageRequest) GetInfo() *Message {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Message `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateMessageResponse) Reset() {
	*x = UpdateMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageResponse) ProtoMessage() {}

func (x *UpdateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageResponse.ProtoReflect.Descriptor instead.
func (*UpdateMessageResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateMessageResponse) GetInfo() *Message {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Message `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *UpdateMessagesRequest) Reset() {
	*x = UpdateMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessagesRequest) ProtoMessage() {}

func (x *UpdateMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessagesRequest.ProtoReflect.Descriptor instead.
func (*UpdateMessagesRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateMessagesRequest) GetInfos() []*Message {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Message `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *UpdateMessagesResponse) Reset() {
	*x = UpdateMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessagesResponse) ProtoMessage() {}

func (x *UpdateMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessagesResponse.ProtoReflect.Descriptor instead.
func (*UpdateMessagesResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateMessagesResponse) GetInfos() []*Message {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetMessagesByLangIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LangID string `protobuf:"bytes,10,opt,name=LangID,proto3" json:"LangID,omitempty"`
}

func (x *GetMessagesByLangIDRequest) Reset() {
	*x = GetMessagesByLangIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesByLangIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesByLangIDRequest) ProtoMessage() {}

func (x *GetMessagesByLangIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesByLangIDRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesByLangIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{18}
}

func (x *GetMessagesByLangIDRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

type GetMessagesByLangIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Message `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetMessagesByLangIDResponse) Reset() {
	*x = GetMessagesByLangIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesByLangIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesByLangIDResponse) ProtoMessage() {}

func (x *GetMessagesByLangIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesByLangIDResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesByLangIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{19}
}

func (x *GetMessagesByLangIDResponse) GetInfos() []*Message {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetMessageByLangIDMessageIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LangID    string `protobuf:"bytes,10,opt,name=LangID,proto3" json:"LangID,omitempty"`
	MessageID string `protobuf:"bytes,20,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
}

func (x *GetMessageByLangIDMessageIDRequest) Reset() {
	*x = GetMessageByLangIDMessageIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageByLangIDMessageIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageByLangIDMessageIDRequest) ProtoMessage() {}

func (x *GetMessageByLangIDMessageIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageByLangIDMessageIDRequest.ProtoReflect.Descriptor instead.
func (*GetMessageByLangIDMessageIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{20}
}

func (x *GetMessageByLangIDMessageIDRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *GetMessageByLangIDMessageIDRequest) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type GetMessageByLangIDMessageIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Message `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetMessageByLangIDMessageIDResponse) Reset() {
	*x = GetMessageByLangIDMessageIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageByLangIDMessageIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageByLangIDMessageIDResponse) ProtoMessage() {}

func (x *GetMessageByLangIDMessageIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageByLangIDMessageIDResponse.ProtoReflect.Descriptor instead.
func (*GetMessageByLangIDMessageIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{21}
}

func (x *GetMessageByLangIDMessageIDResponse) GetInfo() *Message {
	if x != nil {
		return x.Info
	}
	return nil
}

type AppLang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID  string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	LangID string `protobuf:"bytes,30,opt,name=LangID,proto3" json:"LangID,omitempty"`
}

func (x *AppLang) Reset() {
	*x = AppLang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLang) ProtoMessage() {}

func (x *AppLang) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLang.ProtoReflect.Descriptor instead.
func (*AppLang) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{22}
}

func (x *AppLang) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppLang) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppLang) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

type CreateAppLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppLang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppLangRequest) Reset() {
	*x = CreateAppLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppLangRequest) ProtoMessage() {}

func (x *CreateAppLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppLangRequest.ProtoReflect.Descriptor instead.
func (*CreateAppLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAppLangRequest) GetInfo() *AppLang {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppLang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppLangResponse) Reset() {
	*x = CreateAppLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppLangResponse) ProtoMessage() {}

func (x *CreateAppLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppLangResponse.ProtoReflect.Descriptor instead.
func (*CreateAppLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAppLangResponse) GetInfo() *AppLang {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppLangRequest) Reset() {
	*x = GetAppLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLangRequest) ProtoMessage() {}

func (x *GetAppLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLangRequest.ProtoReflect.Descriptor instead.
func (*GetAppLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{25}
}

func (x *GetAppLangRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppLang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppLangResponse) Reset() {
	*x = GetAppLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLangResponse) ProtoMessage() {}

func (x *GetAppLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLangResponse.ProtoReflect.Descriptor instead.
func (*GetAppLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{26}
}

func (x *GetAppLangResponse) GetInfo() *AppLang {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppLangsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetAppLangsByAppRequest) Reset() {
	*x = GetAppLangsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLangsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLangsByAppRequest) ProtoMessage() {}

func (x *GetAppLangsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLangsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppLangsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{27}
}

func (x *GetAppLangsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetAppLangsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppLang `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetAppLangsByAppResponse) Reset() {
	*x = GetAppLangsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_internationalization_internationalization_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLangsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLangsByAppResponse) ProtoMessage() {}

func (x *GetAppLangsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_internationalization_internationalization_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLangsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppLangsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_internationalization_internationalization_proto_rawDescGZIP(), []int{28}
}

func (x *GetAppLangsByAppResponse) GetInfos() []*AppLang {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_internationalization_internationalization_proto protoreflect.FileDescriptor

var file_npool_internationalization_internationalization_proto_rawDesc = []byte{
	0x0a, 0x35, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52,
	0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f,
	0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4c, 0x61,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x5a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x5b, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x07, 0x41, 0x70,
	0x70, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x61,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x22, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xe6, 0x0f, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0x75, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x27, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x64, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x8f, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12,
	0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x6c, 0x61, 0x6e, 0x67, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12,
	0x79, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x3a, 0x01, 0x2a,
	0x12, 0x9c, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x6c, 0x61, 0x6e, 0x67, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12,
	0x8d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12,
	0x91, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12,
	0x33, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x69, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0xca, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x3b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x79, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x69,
	0x64, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x69, 0x64, 0x3a, 0x01, 0x2a, 0x42,
	0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_internationalization_internationalization_proto_rawDescOnce sync.Once
	file_npool_internationalization_internationalization_proto_rawDescData = file_npool_internationalization_internationalization_proto_rawDesc
)

func file_npool_internationalization_internationalization_proto_rawDescGZIP() []byte {
	file_npool_internationalization_internationalization_proto_rawDescOnce.Do(func() {
		file_npool_internationalization_internationalization_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_internationalization_internationalization_proto_rawDescData)
	})
	return file_npool_internationalization_internationalization_proto_rawDescData
}

var file_npool_internationalization_internationalization_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_npool_internationalization_internationalization_proto_goTypes = []interface{}{
	(*Lang)(nil),                                // 0: internationalization.v1.Lang
	(*AddLangRequest)(nil),                      // 1: internationalization.v1.AddLangRequest
	(*AddLangResponse)(nil),                     // 2: internationalization.v1.AddLangResponse
	(*UpdateLangRequest)(nil),                   // 3: internationalization.v1.UpdateLangRequest
	(*UpdateLangResponse)(nil),                  // 4: internationalization.v1.UpdateLangResponse
	(*GetLangsByAppRequest)(nil),                // 5: internationalization.v1.GetLangsByAppRequest
	(*GetLangsByAppResponse)(nil),               // 6: internationalization.v1.GetLangsByAppResponse
	(*GetLangsRequest)(nil),                     // 7: internationalization.v1.GetLangsRequest
	(*GetLangsResponse)(nil),                    // 8: internationalization.v1.GetLangsResponse
	(*Message)(nil),                             // 9: internationalization.v1.Message
	(*CreateMessageRequest)(nil),                // 10: internationalization.v1.CreateMessageRequest
	(*CreateMessageResponse)(nil),               // 11: internationalization.v1.CreateMessageResponse
	(*CreateMessagesRequest)(nil),               // 12: internationalization.v1.CreateMessagesRequest
	(*CreateMessagesResponse)(nil),              // 13: internationalization.v1.CreateMessagesResponse
	(*UpdateMessageRequest)(nil),                // 14: internationalization.v1.UpdateMessageRequest
	(*UpdateMessageResponse)(nil),               // 15: internationalization.v1.UpdateMessageResponse
	(*UpdateMessagesRequest)(nil),               // 16: internationalization.v1.UpdateMessagesRequest
	(*UpdateMessagesResponse)(nil),              // 17: internationalization.v1.UpdateMessagesResponse
	(*GetMessagesByLangIDRequest)(nil),          // 18: internationalization.v1.GetMessagesByLangIDRequest
	(*GetMessagesByLangIDResponse)(nil),         // 19: internationalization.v1.GetMessagesByLangIDResponse
	(*GetMessageByLangIDMessageIDRequest)(nil),  // 20: internationalization.v1.GetMessageByLangIDMessageIDRequest
	(*GetMessageByLangIDMessageIDResponse)(nil), // 21: internationalization.v1.GetMessageByLangIDMessageIDResponse
	(*AppLang)(nil),                             // 22: internationalization.v1.AppLang
	(*CreateAppLangRequest)(nil),                // 23: internationalization.v1.CreateAppLangRequest
	(*CreateAppLangResponse)(nil),               // 24: internationalization.v1.CreateAppLangResponse
	(*GetAppLangRequest)(nil),                   // 25: internationalization.v1.GetAppLangRequest
	(*GetAppLangResponse)(nil),                  // 26: internationalization.v1.GetAppLangResponse
	(*GetAppLangsByAppRequest)(nil),             // 27: internationalization.v1.GetAppLangsByAppRequest
	(*GetAppLangsByAppResponse)(nil),            // 28: internationalization.v1.GetAppLangsByAppResponse
	(*emptypb.Empty)(nil),                       // 29: google.protobuf.Empty
	(*npool.VersionResponse)(nil),               // 30: npool.v1.VersionResponse
}
var file_npool_internationalization_internationalization_proto_depIdxs = []int32{
	0,  // 0: internationalization.v1.AddLangRequest.Info:type_name -> internationalization.v1.Lang
	0,  // 1: internationalization.v1.AddLangResponse.Info:type_name -> internationalization.v1.Lang
	0,  // 2: internationalization.v1.UpdateLangRequest.Info:type_name -> internationalization.v1.Lang
	0,  // 3: internationalization.v1.UpdateLangResponse.Info:type_name -> internationalization.v1.Lang
	0,  // 4: internationalization.v1.GetLangsByAppResponse.Infos:type_name -> internationalization.v1.Lang
	0,  // 5: internationalization.v1.GetLangsResponse.Infos:type_name -> internationalization.v1.Lang
	9,  // 6: internationalization.v1.CreateMessageRequest.Info:type_name -> internationalization.v1.Message
	9,  // 7: internationalization.v1.CreateMessageResponse.Info:type_name -> internationalization.v1.Message
	9,  // 8: internationalization.v1.CreateMessagesRequest.Infos:type_name -> internationalization.v1.Message
	9,  // 9: internationalization.v1.CreateMessagesResponse.Infos:type_name -> internationalization.v1.Message
	9,  // 10: internationalization.v1.UpdateMessageRequest.Info:type_name -> internationalization.v1.Message
	9,  // 11: internationalization.v1.UpdateMessageResponse.Info:type_name -> internationalization.v1.Message
	9,  // 12: internationalization.v1.UpdateMessagesRequest.Infos:type_name -> internationalization.v1.Message
	9,  // 13: internationalization.v1.UpdateMessagesResponse.Infos:type_name -> internationalization.v1.Message
	9,  // 14: internationalization.v1.GetMessagesByLangIDResponse.Infos:type_name -> internationalization.v1.Message
	9,  // 15: internationalization.v1.GetMessageByLangIDMessageIDResponse.Info:type_name -> internationalization.v1.Message
	22, // 16: internationalization.v1.CreateAppLangRequest.Info:type_name -> internationalization.v1.AppLang
	22, // 17: internationalization.v1.CreateAppLangResponse.Info:type_name -> internationalization.v1.AppLang
	22, // 18: internationalization.v1.GetAppLangResponse.Info:type_name -> internationalization.v1.AppLang
	22, // 19: internationalization.v1.GetAppLangsByAppResponse.Infos:type_name -> internationalization.v1.AppLang
	29, // 20: internationalization.v1.Internationalization.Version:input_type -> google.protobuf.Empty
	1,  // 21: internationalization.v1.Internationalization.AddLang:input_type -> internationalization.v1.AddLangRequest
	3,  // 22: internationalization.v1.Internationalization.UpdateLang:input_type -> internationalization.v1.UpdateLangRequest
	5,  // 23: internationalization.v1.Internationalization.GetLangsByApp:input_type -> internationalization.v1.GetLangsByAppRequest
	7,  // 24: internationalization.v1.Internationalization.GetLangs:input_type -> internationalization.v1.GetLangsRequest
	23, // 25: internationalization.v1.Internationalization.CreateAppLang:input_type -> internationalization.v1.CreateAppLangRequest
	25, // 26: internationalization.v1.Internationalization.GetAppLang:input_type -> internationalization.v1.GetAppLangRequest
	27, // 27: internationalization.v1.Internationalization.GetAppLangsByApp:input_type -> internationalization.v1.GetAppLangsByAppRequest
	10, // 28: internationalization.v1.Internationalization.CreateMessage:input_type -> internationalization.v1.CreateMessageRequest
	12, // 29: internationalization.v1.Internationalization.CreateMessages:input_type -> internationalization.v1.CreateMessagesRequest
	14, // 30: internationalization.v1.Internationalization.UpdateMessage:input_type -> internationalization.v1.UpdateMessageRequest
	16, // 31: internationalization.v1.Internationalization.UpdateMessages:input_type -> internationalization.v1.UpdateMessagesRequest
	18, // 32: internationalization.v1.Internationalization.GetMessagesByLangID:input_type -> internationalization.v1.GetMessagesByLangIDRequest
	20, // 33: internationalization.v1.Internationalization.GetMessageByLangIDMessageID:input_type -> internationalization.v1.GetMessageByLangIDMessageIDRequest
	30, // 34: internationalization.v1.Internationalization.Version:output_type -> npool.v1.VersionResponse
	2,  // 35: internationalization.v1.Internationalization.AddLang:output_type -> internationalization.v1.AddLangResponse
	4,  // 36: internationalization.v1.Internationalization.UpdateLang:output_type -> internationalization.v1.UpdateLangResponse
	6,  // 37: internationalization.v1.Internationalization.GetLangsByApp:output_type -> internationalization.v1.GetLangsByAppResponse
	8,  // 38: internationalization.v1.Internationalization.GetLangs:output_type -> internationalization.v1.GetLangsResponse
	24, // 39: internationalization.v1.Internationalization.CreateAppLang:output_type -> internationalization.v1.CreateAppLangResponse
	26, // 40: internationalization.v1.Internationalization.GetAppLang:output_type -> internationalization.v1.GetAppLangResponse
	28, // 41: internationalization.v1.Internationalization.GetAppLangsByApp:output_type -> internationalization.v1.GetAppLangsByAppResponse
	11, // 42: internationalization.v1.Internationalization.CreateMessage:output_type -> internationalization.v1.CreateMessageResponse
	13, // 43: internationalization.v1.Internationalization.CreateMessages:output_type -> internationalization.v1.CreateMessagesResponse
	15, // 44: internationalization.v1.Internationalization.UpdateMessage:output_type -> internationalization.v1.UpdateMessageResponse
	17, // 45: internationalization.v1.Internationalization.UpdateMessages:output_type -> internationalization.v1.UpdateMessagesResponse
	19, // 46: internationalization.v1.Internationalization.GetMessagesByLangID:output_type -> internationalization.v1.GetMessagesByLangIDResponse
	21, // 47: internationalization.v1.Internationalization.GetMessageByLangIDMessageID:output_type -> internationalization.v1.GetMessageByLangIDMessageIDResponse
	34, // [34:48] is the sub-list for method output_type
	20, // [20:34] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_npool_internationalization_internationalization_proto_init() }
func file_npool_internationalization_internationalization_proto_init() {
	if File_npool_internationalization_internationalization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_internationalization_internationalization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesByLangIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesByLangIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageByLangIDMessageIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageByLangIDMessageIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLangsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_internationalization_internationalization_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLangsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_internationalization_internationalization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_internationalization_internationalization_proto_goTypes,
		DependencyIndexes: file_npool_internationalization_internationalization_proto_depIdxs,
		MessageInfos:      file_npool_internationalization_internationalization_proto_msgTypes,
	}.Build()
	File_npool_internationalization_internationalization_proto = out.File
	file_npool_internationalization_internationalization_proto_rawDesc = nil
	file_npool_internationalization_internationalization_proto_goTypes = nil
	file_npool_internationalization_internationalization_proto_depIdxs = nil
}
