// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/third/mgr/v1/template/notif/notif.proto

package notif

import (
	npool "github.com/NpoolPlatform/message/npool"
	notif "github.com/NpoolPlatform/message/npool/notif/mgr/v1/notif"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotifTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *string          `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID   *string          `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID  *string          `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	UsedFor *notif.EventType `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType,oneof" json:"UsedFor,omitempty"`
	Title   *string          `protobuf:"bytes,50,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Content *string          `protobuf:"bytes,60,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
	Sender  *string          `protobuf:"bytes,70,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
}

func (x *NotifTemplateReq) Reset() {
	*x = NotifTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifTemplateReq) ProtoMessage() {}

func (x *NotifTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifTemplateReq.ProtoReflect.Descriptor instead.
func (*NotifTemplateReq) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{0}
}

func (x *NotifTemplateReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *NotifTemplateReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *NotifTemplateReq) GetLangID() string {
	if x != nil && x.LangID != nil {
		return *x.LangID
	}
	return ""
}

func (x *NotifTemplateReq) GetUsedFor() notif.EventType {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return notif.EventType(0)
}

func (x *NotifTemplateReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *NotifTemplateReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *NotifTemplateReq) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

type NotifTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string          `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID     string          `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	LangID    string          `protobuf:"bytes,30,opt,name=LangID,proto3" json:"LangID,omitempty"`
	UsedFor   notif.EventType `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType" json:"UsedFor,omitempty"`
	Title     string          `protobuf:"bytes,50,opt,name=Title,proto3" json:"Title,omitempty"`
	Content   string          `protobuf:"bytes,60,opt,name=Content,proto3" json:"Content,omitempty"`
	Sender    string          `protobuf:"bytes,70,opt,name=Sender,proto3" json:"Sender,omitempty"`
	CreatedAt uint32          `protobuf:"varint,80,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt uint32          `protobuf:"varint,90,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *NotifTemplate) Reset() {
	*x = NotifTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifTemplate) ProtoMessage() {}

func (x *NotifTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifTemplate.ProtoReflect.Descriptor instead.
func (*NotifTemplate) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{1}
}

func (x *NotifTemplate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *NotifTemplate) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *NotifTemplate) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *NotifTemplate) GetUsedFor() notif.EventType {
	if x != nil {
		return x.UsedFor
	}
	return notif.EventType(0)
}

func (x *NotifTemplate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotifTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifTemplate) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *NotifTemplate) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NotifTemplate) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *npool.StringVal      `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID    *npool.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID   *npool.StringVal      `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	UsedFor  *npool.Uint32Val      `protobuf:"bytes,40,opt,name=UsedFor,proto3,oneof" json:"UsedFor,omitempty"`
	AppIDs   *npool.StringSliceVal `protobuf:"bytes,50,opt,name=AppIDs,proto3,oneof" json:"AppIDs,omitempty"`
	LangIDs  *npool.StringSliceVal `protobuf:"bytes,60,opt,name=LangIDs,proto3,oneof" json:"LangIDs,omitempty"`
	UsedFors *npool.StringSliceVal `protobuf:"bytes,70,opt,name=UsedFors,proto3,oneof" json:"UsedFors,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetLangID() *npool.StringVal {
	if x != nil {
		return x.LangID
	}
	return nil
}

func (x *Conds) GetUsedFor() *npool.Uint32Val {
	if x != nil {
		return x.UsedFor
	}
	return nil
}

func (x *Conds) GetAppIDs() *npool.StringSliceVal {
	if x != nil {
		return x.AppIDs
	}
	return nil
}

func (x *Conds) GetLangIDs() *npool.StringSliceVal {
	if x != nil {
		return x.LangIDs
	}
	return nil
}

func (x *Conds) GetUsedFors() *npool.StringSliceVal {
	if x != nil {
		return x.UsedFors
	}
	return nil
}

type CreateNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateNotifTemplateRequest) Reset() {
	*x = CreateNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplateRequest) ProtoMessage() {}

func (x *CreateNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNotifTemplateRequest) GetInfo() *NotifTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateNotifTemplateResponse) Reset() {
	*x = CreateNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplateResponse) ProtoMessage() {}

func (x *CreateNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNotifTemplateResponse) GetInfo() *NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateNotifTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*NotifTemplateReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateNotifTemplatesRequest) Reset() {
	*x = CreateNotifTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplatesRequest) ProtoMessage() {}

func (x *CreateNotifTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplatesRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{5}
}

func (x *CreateNotifTemplatesRequest) GetInfos() []*NotifTemplateReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateNotifTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*NotifTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateNotifTemplatesResponse) Reset() {
	*x = CreateNotifTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplatesResponse) ProtoMessage() {}

func (x *CreateNotifTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplatesResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNotifTemplatesResponse) GetInfos() []*NotifTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateNotifTemplateRequest) Reset() {
	*x = UpdateNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifTemplateRequest) ProtoMessage() {}

func (x *UpdateNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNotifTemplateRequest) GetInfo() *NotifTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateNotifTemplateResponse) Reset() {
	*x = UpdateNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifTemplateResponse) ProtoMessage() {}

func (x *UpdateNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNotifTemplateResponse) GetInfo() *NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetNotifTemplateRequest) Reset() {
	*x = GetNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateRequest) ProtoMessage() {}

func (x *GetNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{9}
}

func (x *GetNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetNotifTemplateResponse) Reset() {
	*x = GetNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateResponse) ProtoMessage() {}

func (x *GetNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{10}
}

func (x *GetNotifTemplateResponse) GetInfo() *NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNotifTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNotifTemplatesRequest) Reset() {
	*x = GetNotifTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplatesRequest) ProtoMessage() {}

func (x *GetNotifTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{11}
}

func (x *GetNotifTemplatesRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetNotifTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNotifTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNotifTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*NotifTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32           `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNotifTemplatesResponse) Reset() {
	*x = GetNotifTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplatesResponse) ProtoMessage() {}

func (x *GetNotifTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{12}
}

func (x *GetNotifTemplatesResponse) GetInfos() []*NotifTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNotifTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNotifTemplateOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetNotifTemplateOnlyRequest) Reset() {
	*x = GetNotifTemplateOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateOnlyRequest) ProtoMessage() {}

func (x *GetNotifTemplateOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{13}
}

func (x *GetNotifTemplateOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetNotifTemplateOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetNotifTemplateOnlyResponse) Reset() {
	*x = GetNotifTemplateOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateOnlyResponse) ProtoMessage() {}

func (x *GetNotifTemplateOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{14}
}

func (x *GetNotifTemplateOnlyResponse) GetInfo() *NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistNotifTemplateRequest) Reset() {
	*x = ExistNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistNotifTemplateRequest) ProtoMessage() {}

func (x *ExistNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExistNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{15}
}

func (x *ExistNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistNotifTemplateResponse) Reset() {
	*x = ExistNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistNotifTemplateResponse) ProtoMessage() {}

func (x *ExistNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*ExistNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{16}
}

func (x *ExistNotifTemplateResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistNotifTemplateCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistNotifTemplateCondsRequest) Reset() {
	*x = ExistNotifTemplateCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistNotifTemplateCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistNotifTemplateCondsRequest) ProtoMessage() {}

func (x *ExistNotifTemplateCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistNotifTemplateCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistNotifTemplateCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{17}
}

func (x *ExistNotifTemplateCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistNotifTemplateCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistNotifTemplateCondsResponse) Reset() {
	*x = ExistNotifTemplateCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistNotifTemplateCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistNotifTemplateCondsResponse) ProtoMessage() {}

func (x *ExistNotifTemplateCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistNotifTemplateCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistNotifTemplateCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{18}
}

func (x *ExistNotifTemplateCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountNotifTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountNotifTemplatesRequest) Reset() {
	*x = CountNotifTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountNotifTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountNotifTemplatesRequest) ProtoMessage() {}

func (x *CountNotifTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountNotifTemplatesRequest.ProtoReflect.Descriptor instead.
func (*CountNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{19}
}

func (x *CountNotifTemplatesRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountNotifTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountNotifTemplatesResponse) Reset() {
	*x = CountNotifTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountNotifTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountNotifTemplatesResponse) ProtoMessage() {}

func (x *CountNotifTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountNotifTemplatesResponse.ProtoReflect.Descriptor instead.
func (*CountNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{20}
}

func (x *CountNotifTemplatesResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteNotifTemplateRequest) Reset() {
	*x = DeleteNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotifTemplateRequest) ProtoMessage() {}

func (x *DeleteNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteNotifTemplateResponse) Reset() {
	*x = DeleteNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotifTemplateResponse) ProtoMessage() {}

func (x *DeleteNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteNotifTemplateResponse) GetInfo() *NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_third_mgr_v1_template_notif_notif_proto protoreflect.FileDescriptor

var file_npool_third_mgr_v1_template_notif_notif_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x02, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0x8f, 0x02, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12,
	0x3c, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xbe, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x06, 0x41, 0x70, 0x70, 0x49, 0x44, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x37, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52,
	0x07, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x06, 0x52, 0x08, 0x55, 0x73, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x44, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x73, 0x22, 0x64, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x65, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x64, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x62, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x5f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x1f, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x5b, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x31, 0x0a,
	0x1b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x62,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xef, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x94,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3d,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x94, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x3d, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x91, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x40, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3c,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_npool_third_mgr_v1_template_notif_notif_proto_rawDescOnce sync.Once
	file_npool_third_mgr_v1_template_notif_notif_proto_rawDescData = file_npool_third_mgr_v1_template_notif_notif_proto_rawDesc
)

func file_npool_third_mgr_v1_template_notif_notif_proto_rawDescGZIP() []byte {
	file_npool_third_mgr_v1_template_notif_notif_proto_rawDescOnce.Do(func() {
		file_npool_third_mgr_v1_template_notif_notif_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_third_mgr_v1_template_notif_notif_proto_rawDescData)
	})
	return file_npool_third_mgr_v1_template_notif_notif_proto_rawDescData
}

var file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_third_mgr_v1_template_notif_notif_proto_goTypes = []interface{}{
	(*NotifTemplateReq)(nil),                // 0: third.manager.template.notif1.v1.NotifTemplateReq
	(*NotifTemplate)(nil),                   // 1: third.manager.template.notif1.v1.NotifTemplate
	(*Conds)(nil),                           // 2: third.manager.template.notif1.v1.Conds
	(*CreateNotifTemplateRequest)(nil),      // 3: third.manager.template.notif1.v1.CreateNotifTemplateRequest
	(*CreateNotifTemplateResponse)(nil),     // 4: third.manager.template.notif1.v1.CreateNotifTemplateResponse
	(*CreateNotifTemplatesRequest)(nil),     // 5: third.manager.template.notif1.v1.CreateNotifTemplatesRequest
	(*CreateNotifTemplatesResponse)(nil),    // 6: third.manager.template.notif1.v1.CreateNotifTemplatesResponse
	(*UpdateNotifTemplateRequest)(nil),      // 7: third.manager.template.notif1.v1.UpdateNotifTemplateRequest
	(*UpdateNotifTemplateResponse)(nil),     // 8: third.manager.template.notif1.v1.UpdateNotifTemplateResponse
	(*GetNotifTemplateRequest)(nil),         // 9: third.manager.template.notif1.v1.GetNotifTemplateRequest
	(*GetNotifTemplateResponse)(nil),        // 10: third.manager.template.notif1.v1.GetNotifTemplateResponse
	(*GetNotifTemplatesRequest)(nil),        // 11: third.manager.template.notif1.v1.GetNotifTemplatesRequest
	(*GetNotifTemplatesResponse)(nil),       // 12: third.manager.template.notif1.v1.GetNotifTemplatesResponse
	(*GetNotifTemplateOnlyRequest)(nil),     // 13: third.manager.template.notif1.v1.GetNotifTemplateOnlyRequest
	(*GetNotifTemplateOnlyResponse)(nil),    // 14: third.manager.template.notif1.v1.GetNotifTemplateOnlyResponse
	(*ExistNotifTemplateRequest)(nil),       // 15: third.manager.template.notif1.v1.ExistNotifTemplateRequest
	(*ExistNotifTemplateResponse)(nil),      // 16: third.manager.template.notif1.v1.ExistNotifTemplateResponse
	(*ExistNotifTemplateCondsRequest)(nil),  // 17: third.manager.template.notif1.v1.ExistNotifTemplateCondsRequest
	(*ExistNotifTemplateCondsResponse)(nil), // 18: third.manager.template.notif1.v1.ExistNotifTemplateCondsResponse
	(*CountNotifTemplatesRequest)(nil),      // 19: third.manager.template.notif1.v1.CountNotifTemplatesRequest
	(*CountNotifTemplatesResponse)(nil),     // 20: third.manager.template.notif1.v1.CountNotifTemplatesResponse
	(*DeleteNotifTemplateRequest)(nil),      // 21: third.manager.template.notif1.v1.DeleteNotifTemplateRequest
	(*DeleteNotifTemplateResponse)(nil),     // 22: third.manager.template.notif1.v1.DeleteNotifTemplateResponse
	(notif.EventType)(0),                    // 23: notif.manager.notif1.v1.EventType
	(*npool.StringVal)(nil),                 // 24: npool.v1.StringVal
	(*npool.Uint32Val)(nil),                 // 25: npool.v1.Uint32Val
	(*npool.StringSliceVal)(nil),            // 26: npool.v1.StringSliceVal
}
var file_npool_third_mgr_v1_template_notif_notif_proto_depIdxs = []int32{
	23, // 0: third.manager.template.notif1.v1.NotifTemplateReq.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	23, // 1: third.manager.template.notif1.v1.NotifTemplate.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	24, // 2: third.manager.template.notif1.v1.Conds.ID:type_name -> npool.v1.StringVal
	24, // 3: third.manager.template.notif1.v1.Conds.AppID:type_name -> npool.v1.StringVal
	24, // 4: third.manager.template.notif1.v1.Conds.LangID:type_name -> npool.v1.StringVal
	25, // 5: third.manager.template.notif1.v1.Conds.UsedFor:type_name -> npool.v1.Uint32Val
	26, // 6: third.manager.template.notif1.v1.Conds.AppIDs:type_name -> npool.v1.StringSliceVal
	26, // 7: third.manager.template.notif1.v1.Conds.LangIDs:type_name -> npool.v1.StringSliceVal
	26, // 8: third.manager.template.notif1.v1.Conds.UsedFors:type_name -> npool.v1.StringSliceVal
	0,  // 9: third.manager.template.notif1.v1.CreateNotifTemplateRequest.Info:type_name -> third.manager.template.notif1.v1.NotifTemplateReq
	1,  // 10: third.manager.template.notif1.v1.CreateNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	0,  // 11: third.manager.template.notif1.v1.CreateNotifTemplatesRequest.Infos:type_name -> third.manager.template.notif1.v1.NotifTemplateReq
	1,  // 12: third.manager.template.notif1.v1.CreateNotifTemplatesResponse.Infos:type_name -> third.manager.template.notif1.v1.NotifTemplate
	0,  // 13: third.manager.template.notif1.v1.UpdateNotifTemplateRequest.Info:type_name -> third.manager.template.notif1.v1.NotifTemplateReq
	1,  // 14: third.manager.template.notif1.v1.UpdateNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	1,  // 15: third.manager.template.notif1.v1.GetNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	2,  // 16: third.manager.template.notif1.v1.GetNotifTemplatesRequest.Conds:type_name -> third.manager.template.notif1.v1.Conds
	1,  // 17: third.manager.template.notif1.v1.GetNotifTemplatesResponse.Infos:type_name -> third.manager.template.notif1.v1.NotifTemplate
	2,  // 18: third.manager.template.notif1.v1.GetNotifTemplateOnlyRequest.Conds:type_name -> third.manager.template.notif1.v1.Conds
	1,  // 19: third.manager.template.notif1.v1.GetNotifTemplateOnlyResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	2,  // 20: third.manager.template.notif1.v1.ExistNotifTemplateCondsRequest.Conds:type_name -> third.manager.template.notif1.v1.Conds
	2,  // 21: third.manager.template.notif1.v1.CountNotifTemplatesRequest.Conds:type_name -> third.manager.template.notif1.v1.Conds
	1,  // 22: third.manager.template.notif1.v1.DeleteNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	3,  // 23: third.manager.template.notif1.v1.Manager.CreateNotifTemplate:input_type -> third.manager.template.notif1.v1.CreateNotifTemplateRequest
	5,  // 24: third.manager.template.notif1.v1.Manager.CreateNotifTemplates:input_type -> third.manager.template.notif1.v1.CreateNotifTemplatesRequest
	7,  // 25: third.manager.template.notif1.v1.Manager.UpdateNotifTemplate:input_type -> third.manager.template.notif1.v1.UpdateNotifTemplateRequest
	9,  // 26: third.manager.template.notif1.v1.Manager.GetNotifTemplate:input_type -> third.manager.template.notif1.v1.GetNotifTemplateRequest
	13, // 27: third.manager.template.notif1.v1.Manager.GetNotifTemplateOnly:input_type -> third.manager.template.notif1.v1.GetNotifTemplateOnlyRequest
	11, // 28: third.manager.template.notif1.v1.Manager.GetNotifTemplates:input_type -> third.manager.template.notif1.v1.GetNotifTemplatesRequest
	15, // 29: third.manager.template.notif1.v1.Manager.ExistNotifTemplate:input_type -> third.manager.template.notif1.v1.ExistNotifTemplateRequest
	17, // 30: third.manager.template.notif1.v1.Manager.ExistNotifTemplateConds:input_type -> third.manager.template.notif1.v1.ExistNotifTemplateCondsRequest
	19, // 31: third.manager.template.notif1.v1.Manager.CountNotifTemplates:input_type -> third.manager.template.notif1.v1.CountNotifTemplatesRequest
	21, // 32: third.manager.template.notif1.v1.Manager.DeleteNotifTemplate:input_type -> third.manager.template.notif1.v1.DeleteNotifTemplateRequest
	4,  // 33: third.manager.template.notif1.v1.Manager.CreateNotifTemplate:output_type -> third.manager.template.notif1.v1.CreateNotifTemplateResponse
	6,  // 34: third.manager.template.notif1.v1.Manager.CreateNotifTemplates:output_type -> third.manager.template.notif1.v1.CreateNotifTemplatesResponse
	8,  // 35: third.manager.template.notif1.v1.Manager.UpdateNotifTemplate:output_type -> third.manager.template.notif1.v1.UpdateNotifTemplateResponse
	10, // 36: third.manager.template.notif1.v1.Manager.GetNotifTemplate:output_type -> third.manager.template.notif1.v1.GetNotifTemplateResponse
	14, // 37: third.manager.template.notif1.v1.Manager.GetNotifTemplateOnly:output_type -> third.manager.template.notif1.v1.GetNotifTemplateOnlyResponse
	12, // 38: third.manager.template.notif1.v1.Manager.GetNotifTemplates:output_type -> third.manager.template.notif1.v1.GetNotifTemplatesResponse
	16, // 39: third.manager.template.notif1.v1.Manager.ExistNotifTemplate:output_type -> third.manager.template.notif1.v1.ExistNotifTemplateResponse
	18, // 40: third.manager.template.notif1.v1.Manager.ExistNotifTemplateConds:output_type -> third.manager.template.notif1.v1.ExistNotifTemplateCondsResponse
	20, // 41: third.manager.template.notif1.v1.Manager.CountNotifTemplates:output_type -> third.manager.template.notif1.v1.CountNotifTemplatesResponse
	22, // 42: third.manager.template.notif1.v1.Manager.DeleteNotifTemplate:output_type -> third.manager.template.notif1.v1.DeleteNotifTemplateResponse
	33, // [33:43] is the sub-list for method output_type
	23, // [23:33] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_npool_third_mgr_v1_template_notif_notif_proto_init() }
func file_npool_third_mgr_v1_template_notif_notif_proto_init() {
	if File_npool_third_mgr_v1_template_notif_notif_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistNotifTemplateCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistNotifTemplateCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountNotifTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountNotifTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_third_mgr_v1_template_notif_notif_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_third_mgr_v1_template_notif_notif_proto_goTypes,
		DependencyIndexes: file_npool_third_mgr_v1_template_notif_notif_proto_depIdxs,
		MessageInfos:      file_npool_third_mgr_v1_template_notif_notif_proto_msgTypes,
	}.Build()
	File_npool_third_mgr_v1_template_notif_notif_proto = out.File
	file_npool_third_mgr_v1_template_notif_notif_proto_rawDesc = nil
	file_npool_third_mgr_v1_template_notif_notif_proto_goTypes = nil
	file_npool_third_mgr_v1_template_notif_notif_proto_depIdxs = nil
}
