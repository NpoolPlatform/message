// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/third/gw/v1/template/notif/notif.proto

package notif

import (
	notif "github.com/NpoolPlatform/message/npool/notif/mgr/v1/notif"
	notif1 "github.com/NpoolPlatform/message/npool/third/mgr/v1/template/notif"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string          `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetLangID string          `protobuf:"bytes,20,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	UsedFor      notif.EventType `protobuf:"varint,30,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType" json:"UsedFor,omitempty"`
	Title        string          `protobuf:"bytes,40,opt,name=Title,proto3" json:"Title,omitempty"`
	Content      string          `protobuf:"bytes,50,opt,name=Content,proto3" json:"Content,omitempty"`
	Sender       string          `protobuf:"bytes,60,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *CreateNotifTemplateRequest) Reset() {
	*x = CreateNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplateRequest) ProtoMessage() {}

func (x *CreateNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotifTemplateRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateNotifTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *CreateNotifTemplateRequest) GetUsedFor() notif.EventType {
	if x != nil {
		return x.UsedFor
	}
	return notif.EventType(0)
}

func (x *CreateNotifTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNotifTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNotifTemplateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type CreateNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif1.NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateNotifTemplateResponse) Reset() {
	*x = CreateNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifTemplateResponse) ProtoMessage() {}

func (x *CreateNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotifTemplateResponse) GetInfo() *notif1.NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string          `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetLangID string          `protobuf:"bytes,20,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	UsedFor      notif.EventType `protobuf:"varint,30,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType" json:"UsedFor,omitempty"`
	Title        string          `protobuf:"bytes,40,opt,name=Title,proto3" json:"Title,omitempty"`
	Content      string          `protobuf:"bytes,50,opt,name=Content,proto3" json:"Content,omitempty"`
	Sender       string          `protobuf:"bytes,60,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *CreateAppNotifTemplateRequest) Reset() {
	*x = CreateAppNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppNotifTemplateRequest) ProtoMessage() {}

func (x *CreateAppNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateAppNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAppNotifTemplateRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppNotifTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *CreateAppNotifTemplateRequest) GetUsedFor() notif.EventType {
	if x != nil {
		return x.UsedFor
	}
	return notif.EventType(0)
}

func (x *CreateAppNotifTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAppNotifTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateAppNotifTemplateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type CreateAppNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif1.NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppNotifTemplateResponse) Reset() {
	*x = CreateAppNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppNotifTemplateResponse) ProtoMessage() {}

func (x *CreateAppNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateAppNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppNotifTemplateResponse) GetInfo() *notif1.NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetNotifTemplateRequest) Reset() {
	*x = GetNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateRequest) ProtoMessage() {}

func (x *GetNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif1.NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetNotifTemplateResponse) Reset() {
	*x = GetNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplateResponse) ProtoMessage() {}

func (x *GetNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{5}
}

func (x *GetNotifTemplateResponse) GetInfo() *notif1.NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNotifTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNotifTemplatesRequest) Reset() {
	*x = GetNotifTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplatesRequest) ProtoMessage() {}

func (x *GetNotifTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{6}
}

func (x *GetNotifTemplatesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetNotifTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNotifTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNotifTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*notif1.NotifTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNotifTemplatesResponse) Reset() {
	*x = GetNotifTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifTemplatesResponse) ProtoMessage() {}

func (x *GetNotifTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{7}
}

func (x *GetNotifTemplatesResponse) GetInfos() []*notif1.NotifTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNotifTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppNotifTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppNotifTemplatesRequest) Reset() {
	*x = GetAppNotifTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppNotifTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppNotifTemplatesRequest) ProtoMessage() {}

func (x *GetAppNotifTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppNotifTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetAppNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{8}
}

func (x *GetAppNotifTemplatesRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppNotifTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppNotifTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppNotifTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*notif1.NotifTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppNotifTemplatesResponse) Reset() {
	*x = GetAppNotifTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppNotifTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppNotifTemplatesResponse) ProtoMessage() {}

func (x *GetAppNotifTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppNotifTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetAppNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppNotifTemplatesResponse) GetInfos() []*notif1.NotifTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppNotifTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string           `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Title        *string          `protobuf:"bytes,30,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Content      *string          `protobuf:"bytes,40,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
	TargetLangID *string          `protobuf:"bytes,50,opt,name=TargetLangID,proto3,oneof" json:"TargetLangID,omitempty"`
	UsedFor      *notif.EventType `protobuf:"varint,60,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType,oneof" json:"UsedFor,omitempty"`
	Sender       *string          `protobuf:"bytes,70,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
}

func (x *UpdateNotifTemplateRequest) Reset() {
	*x = UpdateNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifTemplateRequest) ProtoMessage() {}

func (x *UpdateNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateNotifTemplateRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateNotifTemplateRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateNotifTemplateRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateNotifTemplateRequest) GetTargetLangID() string {
	if x != nil && x.TargetLangID != nil {
		return *x.TargetLangID
	}
	return ""
}

func (x *UpdateNotifTemplateRequest) GetUsedFor() notif.EventType {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return notif.EventType(0)
}

func (x *UpdateNotifTemplateRequest) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

type UpdateNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif1.NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateNotifTemplateResponse) Reset() {
	*x = UpdateNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifTemplateResponse) ProtoMessage() {}

func (x *UpdateNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNotifTemplateResponse) GetInfo() *notif1.NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppNotifTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	TargetAppID  string           `protobuf:"bytes,20,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetLangID *string          `protobuf:"bytes,30,opt,name=TargetLangID,proto3,oneof" json:"TargetLangID,omitempty"`
	Title        *string          `protobuf:"bytes,40,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Content      *string          `protobuf:"bytes,50,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
	UsedFor      *notif.EventType `protobuf:"varint,60,opt,name=UsedFor,proto3,enum=notif.manager.notif1.v1.EventType,oneof" json:"UsedFor,omitempty"`
	Sender       *string          `protobuf:"bytes,70,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
}

func (x *UpdateAppNotifTemplateRequest) Reset() {
	*x = UpdateAppNotifTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppNotifTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppNotifTemplateRequest) ProtoMessage() {}

func (x *UpdateAppNotifTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppNotifTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppNotifTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAppNotifTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateAppNotifTemplateRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppNotifTemplateRequest) GetTargetLangID() string {
	if x != nil && x.TargetLangID != nil {
		return *x.TargetLangID
	}
	return ""
}

func (x *UpdateAppNotifTemplateRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateAppNotifTemplateRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateAppNotifTemplateRequest) GetUsedFor() notif.EventType {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return notif.EventType(0)
}

func (x *UpdateAppNotifTemplateRequest) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

type UpdateAppNotifTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif1.NotifTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppNotifTemplateResponse) Reset() {
	*x = UpdateAppNotifTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppNotifTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppNotifTemplateResponse) ProtoMessage() {}

func (x *UpdateAppNotifTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppNotifTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppNotifTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppNotifTemplateResponse) GetInfo() *notif1.NotifTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_third_gw_v1_template_notif_notif_proto protoreflect.FileDescriptor

var file_npool_third_gw_v1_template_notif_notif_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x67, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x22, 0x62, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xeb, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x3c,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x6d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x7b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc3, 0x02,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x07, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x41,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x32, 0xaa, 0x0a, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0xb7, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xc4, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0xab, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xaf,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0xbc, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0xb7, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xc4, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_third_gw_v1_template_notif_notif_proto_rawDescOnce sync.Once
	file_npool_third_gw_v1_template_notif_notif_proto_rawDescData = file_npool_third_gw_v1_template_notif_notif_proto_rawDesc
)

func file_npool_third_gw_v1_template_notif_notif_proto_rawDescGZIP() []byte {
	file_npool_third_gw_v1_template_notif_notif_proto_rawDescOnce.Do(func() {
		file_npool_third_gw_v1_template_notif_notif_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_third_gw_v1_template_notif_notif_proto_rawDescData)
	})
	return file_npool_third_gw_v1_template_notif_notif_proto_rawDescData
}

var file_npool_third_gw_v1_template_notif_notif_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_npool_third_gw_v1_template_notif_notif_proto_goTypes = []interface{}{
	(*CreateNotifTemplateRequest)(nil),     // 0: third.gateway.template.notif3.v1.CreateNotifTemplateRequest
	(*CreateNotifTemplateResponse)(nil),    // 1: third.gateway.template.notif3.v1.CreateNotifTemplateResponse
	(*CreateAppNotifTemplateRequest)(nil),  // 2: third.gateway.template.notif3.v1.CreateAppNotifTemplateRequest
	(*CreateAppNotifTemplateResponse)(nil), // 3: third.gateway.template.notif3.v1.CreateAppNotifTemplateResponse
	(*GetNotifTemplateRequest)(nil),        // 4: third.gateway.template.notif3.v1.GetNotifTemplateRequest
	(*GetNotifTemplateResponse)(nil),       // 5: third.gateway.template.notif3.v1.GetNotifTemplateResponse
	(*GetNotifTemplatesRequest)(nil),       // 6: third.gateway.template.notif3.v1.GetNotifTemplatesRequest
	(*GetNotifTemplatesResponse)(nil),      // 7: third.gateway.template.notif3.v1.GetNotifTemplatesResponse
	(*GetAppNotifTemplatesRequest)(nil),    // 8: third.gateway.template.notif3.v1.GetAppNotifTemplatesRequest
	(*GetAppNotifTemplatesResponse)(nil),   // 9: third.gateway.template.notif3.v1.GetAppNotifTemplatesResponse
	(*UpdateNotifTemplateRequest)(nil),     // 10: third.gateway.template.notif3.v1.UpdateNotifTemplateRequest
	(*UpdateNotifTemplateResponse)(nil),    // 11: third.gateway.template.notif3.v1.UpdateNotifTemplateResponse
	(*UpdateAppNotifTemplateRequest)(nil),  // 12: third.gateway.template.notif3.v1.UpdateAppNotifTemplateRequest
	(*UpdateAppNotifTemplateResponse)(nil), // 13: third.gateway.template.notif3.v1.UpdateAppNotifTemplateResponse
	(notif.EventType)(0),                   // 14: notif.manager.notif1.v1.EventType
	(*notif1.NotifTemplate)(nil),           // 15: third.manager.template.notif1.v1.NotifTemplate
}
var file_npool_third_gw_v1_template_notif_notif_proto_depIdxs = []int32{
	14, // 0: third.gateway.template.notif3.v1.CreateNotifTemplateRequest.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	15, // 1: third.gateway.template.notif3.v1.CreateNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	14, // 2: third.gateway.template.notif3.v1.CreateAppNotifTemplateRequest.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	15, // 3: third.gateway.template.notif3.v1.CreateAppNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	15, // 4: third.gateway.template.notif3.v1.GetNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	15, // 5: third.gateway.template.notif3.v1.GetNotifTemplatesResponse.Infos:type_name -> third.manager.template.notif1.v1.NotifTemplate
	15, // 6: third.gateway.template.notif3.v1.GetAppNotifTemplatesResponse.Infos:type_name -> third.manager.template.notif1.v1.NotifTemplate
	14, // 7: third.gateway.template.notif3.v1.UpdateNotifTemplateRequest.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	15, // 8: third.gateway.template.notif3.v1.UpdateNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	14, // 9: third.gateway.template.notif3.v1.UpdateAppNotifTemplateRequest.UsedFor:type_name -> notif.manager.notif1.v1.EventType
	15, // 10: third.gateway.template.notif3.v1.UpdateAppNotifTemplateResponse.Info:type_name -> third.manager.template.notif1.v1.NotifTemplate
	0,  // 11: third.gateway.template.notif3.v1.Gateway.CreateNotifTemplate:input_type -> third.gateway.template.notif3.v1.CreateNotifTemplateRequest
	2,  // 12: third.gateway.template.notif3.v1.Gateway.CreateAppNotifTemplate:input_type -> third.gateway.template.notif3.v1.CreateAppNotifTemplateRequest
	4,  // 13: third.gateway.template.notif3.v1.Gateway.GetNotifTemplate:input_type -> third.gateway.template.notif3.v1.GetNotifTemplateRequest
	6,  // 14: third.gateway.template.notif3.v1.Gateway.GetNotifTemplates:input_type -> third.gateway.template.notif3.v1.GetNotifTemplatesRequest
	8,  // 15: third.gateway.template.notif3.v1.Gateway.GetAppNotifTemplates:input_type -> third.gateway.template.notif3.v1.GetAppNotifTemplatesRequest
	10, // 16: third.gateway.template.notif3.v1.Gateway.UpdateNotifTemplate:input_type -> third.gateway.template.notif3.v1.UpdateNotifTemplateRequest
	12, // 17: third.gateway.template.notif3.v1.Gateway.UpdateAppNotifTemplate:input_type -> third.gateway.template.notif3.v1.UpdateAppNotifTemplateRequest
	1,  // 18: third.gateway.template.notif3.v1.Gateway.CreateNotifTemplate:output_type -> third.gateway.template.notif3.v1.CreateNotifTemplateResponse
	3,  // 19: third.gateway.template.notif3.v1.Gateway.CreateAppNotifTemplate:output_type -> third.gateway.template.notif3.v1.CreateAppNotifTemplateResponse
	5,  // 20: third.gateway.template.notif3.v1.Gateway.GetNotifTemplate:output_type -> third.gateway.template.notif3.v1.GetNotifTemplateResponse
	7,  // 21: third.gateway.template.notif3.v1.Gateway.GetNotifTemplates:output_type -> third.gateway.template.notif3.v1.GetNotifTemplatesResponse
	9,  // 22: third.gateway.template.notif3.v1.Gateway.GetAppNotifTemplates:output_type -> third.gateway.template.notif3.v1.GetAppNotifTemplatesResponse
	11, // 23: third.gateway.template.notif3.v1.Gateway.UpdateNotifTemplate:output_type -> third.gateway.template.notif3.v1.UpdateNotifTemplateResponse
	13, // 24: third.gateway.template.notif3.v1.Gateway.UpdateAppNotifTemplate:output_type -> third.gateway.template.notif3.v1.UpdateAppNotifTemplateResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_npool_third_gw_v1_template_notif_notif_proto_init() }
func file_npool_third_gw_v1_template_notif_notif_proto_init() {
	if File_npool_third_gw_v1_template_notif_notif_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppNotifTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppNotifTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppNotifTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppNotifTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_npool_third_gw_v1_template_notif_notif_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_third_gw_v1_template_notif_notif_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_third_gw_v1_template_notif_notif_proto_goTypes,
		DependencyIndexes: file_npool_third_gw_v1_template_notif_notif_proto_depIdxs,
		MessageInfos:      file_npool_third_gw_v1_template_notif_notif_proto_msgTypes,
	}.Build()
	File_npool_third_gw_v1_template_notif_notif_proto = out.File
	file_npool_third_gw_v1_template_notif_notif_proto_rawDesc = nil
	file_npool_third_gw_v1_template_notif_notif_proto_goTypes = nil
	file_npool_third_gw_v1_template_notif_notif_proto_depIdxs = nil
}
