// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/thirdlogingateway/thirdlogingateway.proto

package thirdlogingateway

import (
	context "context"
	npool "github.com/NpoolPlatform/message/npool"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ThirdLoginGatewayClient is the client API for ThirdLoginGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ThirdLoginGatewayClient interface {
	// Method Version
	Version(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*npool.VersionResponse, error)
	GetAuths(ctx context.Context, in *GetAuthsRequest, opts ...grpc.CallOption) (*GetAuthsResponse, error)
	GetAppAuths(ctx context.Context, in *GetAppAuthsRequest, opts ...grpc.CallOption) (*GetAppAuthsResponse, error)
	CreateAuth(ctx context.Context, in *CreateAuthRequest, opts ...grpc.CallOption) (*CreateAuthResponse, error)
	CreateAuths(ctx context.Context, in *CreateAuthsRequest, opts ...grpc.CallOption) (*CreateAuthsResponse, error)
	CreateAppAuth(ctx context.Context, in *CreateAppAuthRequest, opts ...grpc.CallOption) (*CreateAppAuthResponse, error)
	CreateAppAuths(ctx context.Context, in *CreateAppAuthsRequest, opts ...grpc.CallOption) (*CreateAppAuthsResponse, error)
	CreateThirdParty(ctx context.Context, in *CreateThirdPartyRequest, opts ...grpc.CallOption) (*CreateThirdPartyResponse, error)
	UpdateThirdParty(ctx context.Context, in *UpdateThirdPartyRequest, opts ...grpc.CallOption) (*UpdateThirdPartyResponse, error)
	GetThirdParties(ctx context.Context, in *GetThirdPartiesRequest, opts ...grpc.CallOption) (*GetThirdPartiesResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
}

type thirdLoginGatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewThirdLoginGatewayClient(cc grpc.ClientConnInterface) ThirdLoginGatewayClient {
	return &thirdLoginGatewayClient{cc}
}

func (c *thirdLoginGatewayClient) Version(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*npool.VersionResponse, error) {
	out := new(npool.VersionResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) GetAuths(ctx context.Context, in *GetAuthsRequest, opts ...grpc.CallOption) (*GetAuthsResponse, error) {
	out := new(GetAuthsResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/GetAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) GetAppAuths(ctx context.Context, in *GetAppAuthsRequest, opts ...grpc.CallOption) (*GetAppAuthsResponse, error) {
	out := new(GetAppAuthsResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/GetAppAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) CreateAuth(ctx context.Context, in *CreateAuthRequest, opts ...grpc.CallOption) (*CreateAuthResponse, error) {
	out := new(CreateAuthResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/CreateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) CreateAuths(ctx context.Context, in *CreateAuthsRequest, opts ...grpc.CallOption) (*CreateAuthsResponse, error) {
	out := new(CreateAuthsResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/CreateAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) CreateAppAuth(ctx context.Context, in *CreateAppAuthRequest, opts ...grpc.CallOption) (*CreateAppAuthResponse, error) {
	out := new(CreateAppAuthResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/CreateAppAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) CreateAppAuths(ctx context.Context, in *CreateAppAuthsRequest, opts ...grpc.CallOption) (*CreateAppAuthsResponse, error) {
	out := new(CreateAppAuthsResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/CreateAppAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) CreateThirdParty(ctx context.Context, in *CreateThirdPartyRequest, opts ...grpc.CallOption) (*CreateThirdPartyResponse, error) {
	out := new(CreateThirdPartyResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/CreateThirdParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) UpdateThirdParty(ctx context.Context, in *UpdateThirdPartyRequest, opts ...grpc.CallOption) (*UpdateThirdPartyResponse, error) {
	out := new(UpdateThirdPartyResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/UpdateThirdParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) GetThirdParties(ctx context.Context, in *GetThirdPartiesRequest, opts ...grpc.CallOption) (*GetThirdPartiesResponse, error) {
	out := new(GetThirdPartiesResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/GetThirdParties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdLoginGatewayClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/third.logon.gateway.v1.ThirdLoginGateway/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThirdLoginGatewayServer is the server API for ThirdLoginGateway service.
// All implementations must embed UnimplementedThirdLoginGatewayServer
// for forward compatibility
type ThirdLoginGatewayServer interface {
	// Method Version
	Version(context.Context, *emptypb.Empty) (*npool.VersionResponse, error)
	GetAuths(context.Context, *GetAuthsRequest) (*GetAuthsResponse, error)
	GetAppAuths(context.Context, *GetAppAuthsRequest) (*GetAppAuthsResponse, error)
	CreateAuth(context.Context, *CreateAuthRequest) (*CreateAuthResponse, error)
	CreateAuths(context.Context, *CreateAuthsRequest) (*CreateAuthsResponse, error)
	CreateAppAuth(context.Context, *CreateAppAuthRequest) (*CreateAppAuthResponse, error)
	CreateAppAuths(context.Context, *CreateAppAuthsRequest) (*CreateAppAuthsResponse, error)
	CreateThirdParty(context.Context, *CreateThirdPartyRequest) (*CreateThirdPartyResponse, error)
	UpdateThirdParty(context.Context, *UpdateThirdPartyRequest) (*UpdateThirdPartyResponse, error)
	GetThirdParties(context.Context, *GetThirdPartiesRequest) (*GetThirdPartiesResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	mustEmbedUnimplementedThirdLoginGatewayServer()
}

// UnimplementedThirdLoginGatewayServer must be embedded to have forward compatible implementations.
type UnimplementedThirdLoginGatewayServer struct {
}

func (UnimplementedThirdLoginGatewayServer) Version(context.Context, *emptypb.Empty) (*npool.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (UnimplementedThirdLoginGatewayServer) GetAuths(context.Context, *GetAuthsRequest) (*GetAuthsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuths not implemented")
}
func (UnimplementedThirdLoginGatewayServer) GetAppAuths(context.Context, *GetAppAuthsRequest) (*GetAppAuthsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppAuths not implemented")
}
func (UnimplementedThirdLoginGatewayServer) CreateAuth(context.Context, *CreateAuthRequest) (*CreateAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuth not implemented")
}
func (UnimplementedThirdLoginGatewayServer) CreateAuths(context.Context, *CreateAuthsRequest) (*CreateAuthsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuths not implemented")
}
func (UnimplementedThirdLoginGatewayServer) CreateAppAuth(context.Context, *CreateAppAuthRequest) (*CreateAppAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppAuth not implemented")
}
func (UnimplementedThirdLoginGatewayServer) CreateAppAuths(context.Context, *CreateAppAuthsRequest) (*CreateAppAuthsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppAuths not implemented")
}
func (UnimplementedThirdLoginGatewayServer) CreateThirdParty(context.Context, *CreateThirdPartyRequest) (*CreateThirdPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateThirdParty not implemented")
}
func (UnimplementedThirdLoginGatewayServer) UpdateThirdParty(context.Context, *UpdateThirdPartyRequest) (*UpdateThirdPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateThirdParty not implemented")
}
func (UnimplementedThirdLoginGatewayServer) GetThirdParties(context.Context, *GetThirdPartiesRequest) (*GetThirdPartiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetThirdParties not implemented")
}
func (UnimplementedThirdLoginGatewayServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedThirdLoginGatewayServer) mustEmbedUnimplementedThirdLoginGatewayServer() {}

// UnsafeThirdLoginGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ThirdLoginGatewayServer will
// result in compilation errors.
type UnsafeThirdLoginGatewayServer interface {
	mustEmbedUnimplementedThirdLoginGatewayServer()
}

func RegisterThirdLoginGatewayServer(s grpc.ServiceRegistrar, srv ThirdLoginGatewayServer) {
	s.RegisterService(&ThirdLoginGateway_ServiceDesc, srv)
}

func _ThirdLoginGateway_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).Version(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_GetAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).GetAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/GetAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).GetAuths(ctx, req.(*GetAuthsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_GetAppAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppAuthsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).GetAppAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/GetAppAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).GetAppAuths(ctx, req.(*GetAppAuthsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_CreateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).CreateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/CreateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).CreateAuth(ctx, req.(*CreateAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_CreateAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).CreateAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/CreateAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).CreateAuths(ctx, req.(*CreateAuthsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_CreateAppAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).CreateAppAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/CreateAppAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).CreateAppAuth(ctx, req.(*CreateAppAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_CreateAppAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppAuthsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).CreateAppAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/CreateAppAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).CreateAppAuths(ctx, req.(*CreateAppAuthsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_CreateThirdParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateThirdPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).CreateThirdParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/CreateThirdParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).CreateThirdParty(ctx, req.(*CreateThirdPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_UpdateThirdParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateThirdPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).UpdateThirdParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/UpdateThirdParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).UpdateThirdParty(ctx, req.(*UpdateThirdPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_GetThirdParties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetThirdPartiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).GetThirdParties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/GetThirdParties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).GetThirdParties(ctx, req.(*GetThirdPartiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdLoginGateway_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdLoginGatewayServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/third.logon.gateway.v1.ThirdLoginGateway/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdLoginGatewayServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ThirdLoginGateway_ServiceDesc is the grpc.ServiceDesc for ThirdLoginGateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ThirdLoginGateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "third.logon.gateway.v1.ThirdLoginGateway",
	HandlerType: (*ThirdLoginGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _ThirdLoginGateway_Version_Handler,
		},
		{
			MethodName: "GetAuths",
			Handler:    _ThirdLoginGateway_GetAuths_Handler,
		},
		{
			MethodName: "GetAppAuths",
			Handler:    _ThirdLoginGateway_GetAppAuths_Handler,
		},
		{
			MethodName: "CreateAuth",
			Handler:    _ThirdLoginGateway_CreateAuth_Handler,
		},
		{
			MethodName: "CreateAuths",
			Handler:    _ThirdLoginGateway_CreateAuths_Handler,
		},
		{
			MethodName: "CreateAppAuth",
			Handler:    _ThirdLoginGateway_CreateAppAuth_Handler,
		},
		{
			MethodName: "CreateAppAuths",
			Handler:    _ThirdLoginGateway_CreateAppAuths_Handler,
		},
		{
			MethodName: "CreateThirdParty",
			Handler:    _ThirdLoginGateway_CreateThirdParty_Handler,
		},
		{
			MethodName: "UpdateThirdParty",
			Handler:    _ThirdLoginGateway_UpdateThirdParty_Handler,
		},
		{
			MethodName: "GetThirdParties",
			Handler:    _ThirdLoginGateway_GetThirdParties_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _ThirdLoginGateway_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/thirdlogingateway/thirdlogingateway.proto",
}
