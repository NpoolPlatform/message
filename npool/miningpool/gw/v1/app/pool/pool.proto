syntax = "proto3";

package miningpool.gateway.app.pool.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/gw/v1/app/pool";

import "google/api/annotations.proto";;
import "npool/basetypes/miningpool/v1/enums.proto";

// Service Name
service Gateway {
    rpc CreatePool(CreatePoolRequest)returns (CreatePoolResponse)      {
        option (google.api.http) = {
            post: "/v1/create/pool"
            body: "*"
        };
    }
    rpc GetPool(GetPoolRequest)returns (GetPoolResponse)      {
        option (google.api.http) = {
            post: "/v1/get/pool"
            body: "*"
        };
    }
    rpc GetPools(GetPoolsRequest)returns (GetPoolsResponse)      {
        option (google.api.http) = {
            post: "/v1/get/pools"
            body: "*"
        };
    }
    rpc GetNPools(GetNPoolsRequest)returns (GetNPoolsResponse)      {
        option (google.api.http) = {
            post: "/v1/get/n/pools"
            body: "*"
        };
    }
}
message Pool {
    string                ID                = 10;
    string                EntID             = 20;
    string                AppID             = 30;
    string                PoolID            = 40;
    basetypes.miningpool.v1.MiningpoolType MiningpoolType = 50;
    string                Name              = 60;
    string                Site              = 70;
    string                Description       = 80;
    repeated Coin         Coins             = 90;
    repeated FractionRule FractionRules     = 100;
}

message Coin {
    basetypes.miningpool.v1.CoinType                CoinType     = 10;
    repeated basetypes.miningpool.v1.RevenueType    RevenueTypes = 20;
    float                FeeRate           = 30;
    bool                 FixedRevenueAble  = 40;
    float                Threshold         = 50;
    string               Remark            = 60;
}

message FractionRule {
    basetypes.miningpool.v1.CoinType CoinType = 10;
    uint32               WithdrawInterval     = 20;
    float                MinAmount            = 30;
    float                WithdrawRate         = 40;
}

message CreatePoolRequest {
    string PoolID = 10;
    string TargetAppID = 20;
}

message CreatePoolResponse {
    Pool Info = 10;
}

message GetPoolRequest {
    string EntID = 10;
    string AppID = 20;
}

message GetPoolResponse {
    Pool Info = 10;
}

message GetPoolsRequest {
    string AppID = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetPoolsResponse {
    repeated Pool Infos = 10;
    uint32        Total = 20;
}

message GetNPoolsRequest {
    string TargetAppID = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetNPoolsResponse {
    repeated Pool Infos = 10;
    uint32        Total = 20;
}
