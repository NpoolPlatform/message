// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/miningpool/gw/v1/rootuser/rootuser.proto

package rootuser

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/miningpool/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RootUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint32            `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID          string            `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	PoolID         string            `protobuf:"bytes,30,opt,name=PoolID,proto3" json:"PoolID,omitempty"`
	Name           string            `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty"`
	Email          string            `protobuf:"bytes,50,opt,name=Email,proto3" json:"Email,omitempty"`
	AuthToken      string            `protobuf:"bytes,60,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Authed         bool              `protobuf:"varint,70,opt,name=Authed,proto3" json:"Authed,omitempty"`
	Remark         string            `protobuf:"bytes,80,opt,name=Remark,proto3" json:"Remark,omitempty"`
	MiningpoolType v1.MiningpoolType `protobuf:"varint,90,opt,name=MiningpoolType,proto3,enum=basetypes.miningpool.v1.MiningpoolType" json:"MiningpoolType,omitempty"`
	CreatedAt      uint32            `protobuf:"varint,100,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt      uint32            `protobuf:"varint,110,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *RootUser) Reset() {
	*x = RootUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootUser) ProtoMessage() {}

func (x *RootUser) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootUser.ProtoReflect.Descriptor instead.
func (*RootUser) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{0}
}

func (x *RootUser) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RootUser) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *RootUser) GetPoolID() string {
	if x != nil {
		return x.PoolID
	}
	return ""
}

func (x *RootUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RootUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RootUser) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RootUser) GetAuthed() bool {
	if x != nil {
		return x.Authed
	}
	return false
}

func (x *RootUser) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RootUser) GetMiningpoolType() v1.MiningpoolType {
	if x != nil {
		return x.MiningpoolType
	}
	return v1.MiningpoolType(0)
}

func (x *RootUser) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RootUser) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AdminCreateRootUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolID    string  `protobuf:"bytes,10,opt,name=PoolID,proto3" json:"PoolID,omitempty"`
	Name      string  `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`
	Email     string  `protobuf:"bytes,30,opt,name=Email,proto3" json:"Email,omitempty"`
	AuthToken string  `protobuf:"bytes,40,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Remark    *string `protobuf:"bytes,50,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *AdminCreateRootUserRequest) Reset() {
	*x = AdminCreateRootUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateRootUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateRootUserRequest) ProtoMessage() {}

func (x *AdminCreateRootUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateRootUserRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateRootUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{1}
}

func (x *AdminCreateRootUserRequest) GetPoolID() string {
	if x != nil {
		return x.PoolID
	}
	return ""
}

func (x *AdminCreateRootUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminCreateRootUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminCreateRootUserRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *AdminCreateRootUserRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type AdminCreateRootUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RootUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateRootUserResponse) Reset() {
	*x = AdminCreateRootUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateRootUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateRootUserResponse) ProtoMessage() {}

func (x *AdminCreateRootUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateRootUserResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateRootUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{2}
}

func (x *AdminCreateRootUserResponse) GetInfo() *RootUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetRootUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *AdminGetRootUserRequest) Reset() {
	*x = AdminGetRootUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetRootUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetRootUserRequest) ProtoMessage() {}

func (x *AdminGetRootUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetRootUserRequest.ProtoReflect.Descriptor instead.
func (*AdminGetRootUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{3}
}

func (x *AdminGetRootUserRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type AdminGetRootUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RootUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminGetRootUserResponse) Reset() {
	*x = AdminGetRootUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetRootUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetRootUserResponse) ProtoMessage() {}

func (x *AdminGetRootUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetRootUserResponse.ProtoReflect.Descriptor instead.
func (*AdminGetRootUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{4}
}

func (x *AdminGetRootUserResponse) GetInfo() *RootUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetRootUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetRootUsersRequest) Reset() {
	*x = AdminGetRootUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetRootUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetRootUsersRequest) ProtoMessage() {}

func (x *AdminGetRootUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetRootUsersRequest.ProtoReflect.Descriptor instead.
func (*AdminGetRootUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{5}
}

func (x *AdminGetRootUsersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetRootUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetRootUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*RootUser `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetRootUsersResponse) Reset() {
	*x = AdminGetRootUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetRootUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetRootUsersResponse) ProtoMessage() {}

func (x *AdminGetRootUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetRootUsersResponse.ProtoReflect.Descriptor instead.
func (*AdminGetRootUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{6}
}

func (x *AdminGetRootUsersResponse) GetInfos() []*RootUser {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetRootUsersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminUpdateRootUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID     string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	Name      *string `protobuf:"bytes,30,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Email     *string `protobuf:"bytes,40,opt,name=Email,proto3,oneof" json:"Email,omitempty"`
	AuthToken *string `protobuf:"bytes,50,opt,name=AuthToken,proto3,oneof" json:"AuthToken,omitempty"`
	Remark    *string `protobuf:"bytes,60,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *AdminUpdateRootUserRequest) Reset() {
	*x = AdminUpdateRootUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateRootUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateRootUserRequest) ProtoMessage() {}

func (x *AdminUpdateRootUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateRootUserRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateRootUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{7}
}

func (x *AdminUpdateRootUserRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateRootUserRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateRootUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AdminUpdateRootUserRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *AdminUpdateRootUserRequest) GetAuthToken() string {
	if x != nil && x.AuthToken != nil {
		return *x.AuthToken
	}
	return ""
}

func (x *AdminUpdateRootUserRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type AdminUpdateRootUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RootUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateRootUserResponse) Reset() {
	*x = AdminUpdateRootUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateRootUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateRootUserResponse) ProtoMessage() {}

func (x *AdminUpdateRootUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateRootUserResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateRootUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{8}
}

func (x *AdminUpdateRootUserResponse) GetInfo() *RootUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminDeleteRootUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *AdminDeleteRootUserRequest) Reset() {
	*x = AdminDeleteRootUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteRootUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteRootUserRequest) ProtoMessage() {}

func (x *AdminDeleteRootUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteRootUserRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteRootUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{9}
}

func (x *AdminDeleteRootUserRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteRootUserRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type AdminDeleteRootUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RootUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteRootUserResponse) Reset() {
	*x = AdminDeleteRootUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteRootUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteRootUserResponse) ProtoMessage() {}

func (x *AdminDeleteRootUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteRootUserResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteRootUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP(), []int{10}
}

func (x *AdminDeleteRootUserResponse) GetInfo() *RootUser {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_miningpool_gw_v1_rootuser_rootuser_proto protoreflect.FileDescriptor

var file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x02, 0x0a, 0x08, 0x52, 0x6f,
	0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x4f, 0x0a, 0x0e,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x5b, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a,
	0x17, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x58,
	0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f,
	0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x71, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe2, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x5b, 0x0a, 0x1b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f,
	0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x1b, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f,
	0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x88, 0x07, 0x0a, 0x07, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x12, 0xb4, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f,
	0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a,
	0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0xa8, 0x01, 0x0a, 0x10,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x37, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72,
	0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x6f,
	0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0xac, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x38, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x6f, 0x6f, 0x74,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72,
	0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01,
	0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0xb4, 0x01, 0x0a,
	0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x6f, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescOnce sync.Once
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescData = file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDesc
)

func file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescGZIP() []byte {
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescOnce.Do(func() {
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescData)
	})
	return file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDescData
}

var file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_npool_miningpool_gw_v1_rootuser_rootuser_proto_goTypes = []interface{}{
	(*RootUser)(nil),                    // 0: miningpool.gateway.rootuser.v1.RootUser
	(*AdminCreateRootUserRequest)(nil),  // 1: miningpool.gateway.rootuser.v1.AdminCreateRootUserRequest
	(*AdminCreateRootUserResponse)(nil), // 2: miningpool.gateway.rootuser.v1.AdminCreateRootUserResponse
	(*AdminGetRootUserRequest)(nil),     // 3: miningpool.gateway.rootuser.v1.AdminGetRootUserRequest
	(*AdminGetRootUserResponse)(nil),    // 4: miningpool.gateway.rootuser.v1.AdminGetRootUserResponse
	(*AdminGetRootUsersRequest)(nil),    // 5: miningpool.gateway.rootuser.v1.AdminGetRootUsersRequest
	(*AdminGetRootUsersResponse)(nil),   // 6: miningpool.gateway.rootuser.v1.AdminGetRootUsersResponse
	(*AdminUpdateRootUserRequest)(nil),  // 7: miningpool.gateway.rootuser.v1.AdminUpdateRootUserRequest
	(*AdminUpdateRootUserResponse)(nil), // 8: miningpool.gateway.rootuser.v1.AdminUpdateRootUserResponse
	(*AdminDeleteRootUserRequest)(nil),  // 9: miningpool.gateway.rootuser.v1.AdminDeleteRootUserRequest
	(*AdminDeleteRootUserResponse)(nil), // 10: miningpool.gateway.rootuser.v1.AdminDeleteRootUserResponse
	(v1.MiningpoolType)(0),              // 11: basetypes.miningpool.v1.MiningpoolType
}
var file_npool_miningpool_gw_v1_rootuser_rootuser_proto_depIdxs = []int32{
	11, // 0: miningpool.gateway.rootuser.v1.RootUser.MiningpoolType:type_name -> basetypes.miningpool.v1.MiningpoolType
	0,  // 1: miningpool.gateway.rootuser.v1.AdminCreateRootUserResponse.Info:type_name -> miningpool.gateway.rootuser.v1.RootUser
	0,  // 2: miningpool.gateway.rootuser.v1.AdminGetRootUserResponse.Info:type_name -> miningpool.gateway.rootuser.v1.RootUser
	0,  // 3: miningpool.gateway.rootuser.v1.AdminGetRootUsersResponse.Infos:type_name -> miningpool.gateway.rootuser.v1.RootUser
	0,  // 4: miningpool.gateway.rootuser.v1.AdminUpdateRootUserResponse.Info:type_name -> miningpool.gateway.rootuser.v1.RootUser
	0,  // 5: miningpool.gateway.rootuser.v1.AdminDeleteRootUserResponse.Info:type_name -> miningpool.gateway.rootuser.v1.RootUser
	1,  // 6: miningpool.gateway.rootuser.v1.Gateway.AdminCreateRootUser:input_type -> miningpool.gateway.rootuser.v1.AdminCreateRootUserRequest
	3,  // 7: miningpool.gateway.rootuser.v1.Gateway.AdminGetRootUser:input_type -> miningpool.gateway.rootuser.v1.AdminGetRootUserRequest
	5,  // 8: miningpool.gateway.rootuser.v1.Gateway.AdminGetRootUsers:input_type -> miningpool.gateway.rootuser.v1.AdminGetRootUsersRequest
	7,  // 9: miningpool.gateway.rootuser.v1.Gateway.AdminUpdateRootUser:input_type -> miningpool.gateway.rootuser.v1.AdminUpdateRootUserRequest
	9,  // 10: miningpool.gateway.rootuser.v1.Gateway.AdminDeleteRootUser:input_type -> miningpool.gateway.rootuser.v1.AdminDeleteRootUserRequest
	2,  // 11: miningpool.gateway.rootuser.v1.Gateway.AdminCreateRootUser:output_type -> miningpool.gateway.rootuser.v1.AdminCreateRootUserResponse
	4,  // 12: miningpool.gateway.rootuser.v1.Gateway.AdminGetRootUser:output_type -> miningpool.gateway.rootuser.v1.AdminGetRootUserResponse
	6,  // 13: miningpool.gateway.rootuser.v1.Gateway.AdminGetRootUsers:output_type -> miningpool.gateway.rootuser.v1.AdminGetRootUsersResponse
	8,  // 14: miningpool.gateway.rootuser.v1.Gateway.AdminUpdateRootUser:output_type -> miningpool.gateway.rootuser.v1.AdminUpdateRootUserResponse
	10, // 15: miningpool.gateway.rootuser.v1.Gateway.AdminDeleteRootUser:output_type -> miningpool.gateway.rootuser.v1.AdminDeleteRootUserResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_npool_miningpool_gw_v1_rootuser_rootuser_proto_init() }
func file_npool_miningpool_gw_v1_rootuser_rootuser_proto_init() {
	if File_npool_miningpool_gw_v1_rootuser_rootuser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateRootUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateRootUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetRootUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetRootUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetRootUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetRootUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateRootUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateRootUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteRootUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteRootUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_miningpool_gw_v1_rootuser_rootuser_proto_goTypes,
		DependencyIndexes: file_npool_miningpool_gw_v1_rootuser_rootuser_proto_depIdxs,
		MessageInfos:      file_npool_miningpool_gw_v1_rootuser_rootuser_proto_msgTypes,
	}.Build()
	File_npool_miningpool_gw_v1_rootuser_rootuser_proto = out.File
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_rawDesc = nil
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_goTypes = nil
	file_npool_miningpool_gw_v1_rootuser_rootuser_proto_depIdxs = nil
}
