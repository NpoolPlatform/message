syntax = "proto3";

package miningpool.middleware.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/mw/v1/coin";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/miningpool/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateCoin     (CreateCoinRequest)   returns (CreateCoinResponse)    {}
    rpc GetCoin        (GetCoinRequest)      returns (GetCoinResponse)       {}
    rpc ExistCoin      (ExistCoinRequest)    returns (ExistCoinResponse)     {}
    rpc GetCoins       (GetCoinsRequest)     returns (GetCoinsResponse)      {}
    rpc ExistCoinConds (ExistCoinCondsRequest) returns (ExistCoinCondsResponse) {}
    rpc UpdateCoin     (UpdateCoinRequest)   returns (UpdateCoinResponse)    {}
}


message CoinReq {
    optional uint32                                       ID                = 9;
    optional string                                       EntID             = 10;
    optional basetypes.miningpool.v1.MiningpoolType       MiningpoolType    = 20;
    optional basetypes.miningpool.v1.CoinType             CoinType          = 30;
    repeated basetypes.miningpool.v1.RevenueType          RevenueType       = 40;
    optional string                                       Site              = 50;
    optional float                                        FeeRate           = 60;
    optional bool                                         FixedRevenueAble  = 70;
    optional float                                        Threshold         = 80;
    optional string                                       Remark            = 90;
}

message Coin {
    // @inject_tag: sql:"id"
    uint32               ID                = 10;
    // @inject_tag: sql:"ent_id"
    string               EntID             = 20;
    // @inject_tag: sql:"miningpool_type"
    string               MiningpoolTypeStr = 30;
    basetypes.miningpool.v1.MiningpoolType MiningpoolType = 31;
    // @inject_tag: sql:"coin_type"
    string               CoinTypeStr       = 40;
    basetypes.miningpool.v1.CoinType       CoinType = 41;
    // @inject_tag: sql:"eevenue_type"
    string               RevenueTypeStr    = 50;
    basetypes.miningpool.v1.RevenueType    RevenueType = 51;
    // @inject_tag: sql:"site"
    string               Site              = 60;
    // @inject_tag: sql:"fee_rate"
    float                FeeRate           = 70;
    // @inject_tag: sql:"fixed_revenue_able" 
    bool                 FixedRevenueAble  = 80;
    // @inject_tag: sql:"threshold"
    float                Threshold         = 90;
    // @inject_tag: sql:"remark"
    float                Remark            = 100;
    // @inject_tag: sql:"created_at"
    uint32               CreatedAt         = 110;
    // @inject_tag: sql:"updated_at"
    uint32               UpdatedAt         = 120;
}

message Conds {
    optional basetypes.v1.StringVal      EntID             = 10;
    optional basetypes.v1.Uint32Val      MiningpoolType    = 20;
    optional basetypes.v1.Uint32Val      CoinType          = 30;
    optional basetypes.v1.Uint32Val      RevenueType       = 40;
    optional basetypes.v1.StringVal      Site              = 50;
    optional basetypes.v1.BoolVal        FixedRevenueAble  = 60;
    optional basetypes.v1.StringSliceVal EntIDs            = 70;
}

message CreateCoinRequest {
    CoinReq Info = 10;
}

message CreateCoinResponse {
    Coin Info = 10;
}

message GetCoinRequest {
    string EntID = 10;
}

message GetCoinResponse {
    Coin Info = 10;
}

message ExistCoinRequest {
    string EntID = 10;
}

message ExistCoinResponse {
    bool Info = 10;
}

message GetCoinsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCoinsResponse {
    repeated Coin Infos = 10;
    uint32        Total = 20;
}

message ExistCoinCondsRequest {
    Conds Conds  = 10;
}

message ExistCoinCondsResponse {
    bool Info = 10;
}

message UpdateCoinRequest {
    CoinReq Info = 10;
}

message UpdateCoinResponse {
    Coin Info = 10;
}
