syntax = "proto3";

package miningpool.middleware.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/mw/v1/coin";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/miningpool/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateCoin     (CreateCoinRequest)   returns (CreateCoinResponse)    {}
    rpc CreateCoins    (CreateCoinsRequest)  returns (CreateCoinsResponse)   {}
    rpc GetCoin        (GetCoinRequest)      returns (GetCoinResponse)       {}
    rpc GetCoins       (GetCoinsRequest)     returns (GetCoinsResponse)      {}
    rpc ExistCoinConds (ExistCoinCondsRequest) returns (ExistCoinCondsResponse) {}
    rpc UpdateCoin     (UpdateCoinRequest)   returns (UpdateCoinResponse)    {}
}

message CoinReq {
    optional uint32                                    ID                 = 10;
    optional string                                    EntID              = 20;
    optional basetypes.miningpool.v1.MiningpoolType    MiningpoolType     = 30;
    optional string                                    Site               = 40;
    optional basetypes.miningpool.v1.CoinType          CoinType           = 50;
    optional basetypes.miningpool.v1.RevenueType       RevenueType        = 60;
    optional float                                     FeeRate            = 70;
    optional bool                                      FixedRevenueAble   = 80;
    optional uint32                                    Remark             = 90;
}

message Coin {
    // @inject_tag: sql:"id"
    uint32                                  ID                 = 10;
    // @inject_tag: sql:"ent_id"
    string                                  EntID              = 20;
    // @inject_tag: sql:"miningpool_type"
    string                                  MiningpoolTypeStr  = 30;
    basetypes.miningpool.v1.MiningpoolType  MiningpoolType     = 31;
    // @inject_tag: sql:"site"
    string                                  Site               = 40;
    // @inject_tag: sql:"coin_type"
    uint32                                  CoinTypeStr        = 50;
    basetypes.miningpool.v1.CoinType        CoinType           = 51;
    // @inject_tag: sql:"revenue_type"
    string                                  RevenueTypeStr     = 60;
    basetypes.miningpool.v1.RevenueType     RevenueType        = 61;
    // @inject_tag: sql:"fee_rate"
    uint32                                  FeeRate            = 70;
    // @inject_tag: sql:"fixed_revenue_able"
    bool                                    FixedRevenueAble   = 80;
    // @inject_tag: sql:"remark"
    uint32                                  Remark             = 90;
    // @inject_tag: sql:"created_at"
    uint32                                  CreatedAt          = 100;
    // @inject_tag: sql:"updated_at"
    uint32                                  UpdatedAt          = 110;
}

message Conds {
    optional basetypes.v1.StringVal      EntID              = 10;
    optional basetypes.v1.Uint32Val      MiningpoolType     = 20;
    optional basetypes.v1.Uint32Val      CoinType           = 30;
    optional basetypes.v1.Uint32Val      RevenueType        = 40;
    optional basetypes.v1.BoolVal        FixedRevenueAble   = 50;
    optional basetypes.v1.StringSliceVal EntIDs             = 60;
}

message CreateCoinRequest {
    CoinReq Info = 10;
}

message CreateCoinResponse {
    Coin Info = 10;
}

message CreateCoinsRequest {
   repeated CoinReq Infos = 10;
}

message CreateCoinsResponse {
    repeated Coin Infos = 10;
}

message GetCoinRequest {
    string EntID = 10;
}

message GetCoinResponse {
    Coin Info = 10;
}

message GetCoinsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCoinsResponse {
    repeated Coin Infos = 10;
    uint32      Total = 20;
}

message ExistCoinCondsRequest {
    Conds Conds  = 10;
}

message ExistCoinCondsResponse {
    bool Info = 10;
}


message UpdateCoinRequest {
    CoinReq Info = 10;
}

message UpdateCoinResponse {
    Coin Info = 10;
}
