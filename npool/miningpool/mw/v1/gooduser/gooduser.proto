syntax = "proto3";

package miningpool.middleware.gooduser.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/mw/v1/gooduser";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/miningpool/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateGoodUser     (CreateGoodUserRequest)   returns (CreateGoodUserResponse)    {}
    rpc CreateGoodUsers    (CreateGoodUsersRequest)  returns (CreateGoodUsersResponse)   {}
    rpc GetGoodUser        (GetGoodUserRequest)      returns (GetGoodUserResponse)       {}
    rpc GetGoodUsers       (GetGoodUsersRequest)     returns (GetGoodUsersResponse)      {}
    rpc ExistGoodUserConds (ExistGoodUserCondsRequest) returns (ExistGoodUserCondsResponse) {}
    rpc UpdateGoodUser     (UpdateGoodUserRequest)   returns (UpdateGoodUserResponse)    {}
    rpc DeleteGoodUser     (DeleteGoodUserRequest)   returns (DeleteGoodUserResponse)    {}
}

message GoodUserReq {
    optional uint32                                 ID             = 10;
    optional string                                 EntID          = 20;
    optional string                                 Name           = 30;
    optional string                                 RootUserID     = 40;
    optional string                                 GoodID         = 50;
    optional basetypes.miningpool.v1.MiningpoolType MiningpoolType = 60;
    optional basetypes.miningpool.v1.CoinType       CoinType       = 70;
    optional float                                  HashRate       = 80;
    optional string                                 ReadPageLink   = 90;
    optional basetypes.miningpool.v1.RevenueType    RevenueType    = 100;
}

message GoodUser {
    // @inject_tag: sql:"id"
    uint32               ID                = 10;
    // @inject_tag: sql:"ent_id"
    string               EntID             = 20;
    // @inject_tag: sql:"name"
    string               Name              = 30;
    // @inject_tag: sql:"root_user_id"
    string               RootUserID        = 40;
    // @inject_tag: sql:"good_id"
    string               GoodID            = 50;
    // @inject_tag: sql:"miningpool_type"
    string               MiningpoolTypeStr = 60;
    basetypes.miningpool.v1.MiningpoolType MiningpoolType = 61;
    // @inject_tag: sql:"coin_type" 
    string               CoinTypeStr       = 70;
    basetypes.miningpool.v1.CoinType CoinType = 71;
    // @inject_tag: sql:"hash_rate"
    float                HashRate          = 80;
    // @inject_tag: sql:"read_page_link"
    string               ReadPageLink    = 90;
    // @inject_tag: sql:"revenue_type"
    string               RevenueTypeStr       = 100;
    basetypes.miningpool.v1.RevenueType RevenueType = 101;
    // @inject_tag: sql:"created_at"
    uint32               CreatedAt         = 110;
    // @inject_tag: sql:"updated_at"
    uint32               UpdatedAt         = 120;
}

message Conds {
    optional basetypes.v1.StringVal      EntID          = 10;
    optional basetypes.v1.StringVal      Name           = 20;
    optional basetypes.v1.StringVal      RootUserID     = 30;
    optional basetypes.v1.StringVal      GoodID         = 40;
    optional basetypes.v1.Uint32Val      MiningpoolType = 50;
    optional basetypes.v1.Uint32Val      CoinType       = 60;
    optional basetypes.v1.Uint32Val      RevenueType    = 70;
    optional basetypes.v1.StringSliceVal EntIDs         = 80;
}

message CreateGoodUserRequest {
    GoodUserReq Info = 10;
}

message CreateGoodUserResponse {
    GoodUser Info = 10;
}

message CreateGoodUsersRequest {
   repeated GoodUserReq Infos = 10;
}

message CreateGoodUsersResponse {
    repeated GoodUser Infos = 10;
}

message GetGoodUserRequest {
    string EntID = 10;
}

message GetGoodUserResponse {
    GoodUser Info = 10;
}

message GetGoodUsersRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetGoodUsersResponse {
    repeated GoodUser Infos = 10;
    uint32      Total = 20;
}

message ExistGoodUserCondsRequest {
    Conds Conds  = 10;
}

message ExistGoodUserCondsResponse {
    bool Info = 10;
}


message UpdateGoodUserRequest {
    GoodUserReq Info = 10;
}

message UpdateGoodUserResponse {
    GoodUser Info = 10;
}

message DeleteGoodUserRequest {
    GoodUserReq Info = 10;
}

message DeleteGoodUserResponse {
    GoodUser Info = 10;
}
