syntax = "proto3";

package miningpool.middleware.gooduser.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/mw/v1/gooduser";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateGoodUser     (CreateGoodUserRequest)   returns (CreateGoodUserResponse)    {}
    rpc CreateGoodUsers    (CreateGoodUsersRequest)  returns (CreateGoodUsersResponse)   {}
    rpc GetGoodUser        (GetGoodUserRequest)      returns (GetGoodUserResponse)       {}
    rpc GetGoodUsers       (GetGoodUsersRequest)     returns (GetGoodUsersResponse)      {}
    rpc ExistGoodUserConds (ExistGoodUserCondsRequest) returns (ExistGoodUserCondsResponse) {}
    rpc UpdateGoodUser     (UpdateGoodUserRequest)   returns (UpdateGoodUserResponse)    {}
}

message GoodUserReq {
    optional uint32    ID             = 10;
    optional string    EntID          = 20;
    optional string    GoodID         = 30;
    optional string    CoinID         = 40;
    optional string    Name           = 50;
    optional string    AuthToken      = 60;
    optional string    AuthState      = 70;
    optional uint32    Start          = 80;
    optional uint32    End            = 90;
    optional double    HashRate       = 100;
    optional string    ReadPageLink   = 110;
}

message GoodUser {
    // @inject_tag: sql:"id"
    uint32               ID              = 10;
    // @inject_tag: sql:"ent_id"
    string               EntID           = 11;
    // @inject_tag: sql:"good_id"
    string               GoodID          = 20;
    // @inject_tag: sql:"name"
    string               Name            = 30;
    // @inject_tag: sql:"auth_token"
    string               AuthToken       = 40;
    // @inject_tag: sql:"auth_state"
    string               AuthState       = 50;
    // @inject_tag: sql:"start" 
    string               Start           = 60;
    // @inject_tag: sql:"end"
    string               End             = 70;
    // @inject_tag: sql:"hash_rate"
    string               HashRate        = 80;
    // @inject_tag: sql:"read_page_link"
    string               ReadPageLink    = 90;
    // @inject_tag: sql:"created_at"
    uint32               CreatedAt       = 170;
    // @inject_tag: sql:"updated_at"
    uint32               UpdatedAt       = 180;
}

message Conds {
    optional basetypes.v1.StringVal      EntID       = 10;
    optional basetypes.v1.StringVal      GoodID      = 20;
    optional basetypes.v1.StringVal      Name        = 30;
    optional basetypes.v1.Uint32Val      AuthState   = 40;
    optional basetypes.v1.StringSliceVal EntIDs      = 50;
}

message CreateGoodUserRequest {
    GoodUserReq Info = 10;
}

message CreateGoodUserResponse {
    GoodUser Info = 10;
}

message CreateGoodUsersRequest {
   repeated GoodUserReq Infos = 10;
}

message CreateGoodUsersResponse {
    repeated GoodUser Infos = 10;
}

message GetGoodUserRequest {
    string EntID = 10;
}

message GetGoodUserResponse {
    GoodUser Info = 10;
}

message GetGoodUsersRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetGoodUsersResponse {
    repeated GoodUser Infos = 10;
    uint32      Total = 20;
}

message ExistGoodUserCondsRequest {
    Conds Conds  = 10;
}

message ExistGoodUserCondsResponse {
    bool Info = 10;
}


message UpdateGoodUserRequest {
    GoodUserReq Info = 10;
}

message UpdateGoodUserResponse {
    GoodUser Info = 10;
}
