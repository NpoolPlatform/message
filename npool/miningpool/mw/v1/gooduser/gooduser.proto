syntax = "proto3";

package miningpool.middleware.gooduser.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningpool/mw/v1/gooduser";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/miningpool/v1/enums.proto";

// Service Name
service Middleware {
  rpc CreateGoodUser(CreateGoodUserRequest) returns (CreateGoodUserResponse) {}
  rpc GetGoodUser(GetGoodUserRequest) returns (GetGoodUserResponse) {}
  rpc GetGoodUsers(GetGoodUsersRequest) returns (GetGoodUsersResponse) {}
  rpc ExistGoodUser(ExistGoodUserRequest) returns (ExistGoodUserResponse) {}
  rpc ExistGoodUserConds(ExistGoodUserCondsRequest)
      returns (ExistGoodUserCondsResponse) {}
  rpc UpdateGoodUser(UpdateGoodUserRequest) returns (UpdateGoodUserResponse) {}
  rpc DeleteGoodUser(DeleteGoodUserRequest) returns (DeleteGoodUserResponse) {}
}

message GoodUserReq {
  optional uint32 ID = 10;
  optional string EntID = 20;
  optional string CoinID = 30;
  optional string RevenueID = 50;
  optional string RootUserID = 60;
  optional string Name = 70;
  optional string ReadPageLink = 80;
  optional float HashRate = 90;
}

message GoodUser {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 20;
  // @inject_tag: sql:"coin_id"
  string CoinID = 30;
  // @inject_tag: sql:"revenue_id"
  string RevenueID = 40;
  // @inject_tag: sql:"root_user_id"
  string RootUserID = 50;
  // @inject_tag: sql:"name"
  string Name = 60;
  // @inject_tag: sql:"read_page_link"
  string ReadPageLink = 70;
  // @inject_tag: sql:"hash_rate"
  float HashRate = 80;
  basetypes.miningpool.v1.MiningpoolType MiningpoolType = 90;
  basetypes.miningpool.v1.CoinType CoinType = 100;
  basetypes.miningpool.v1.RevenueType RevenueType = 110;
  string FeeRate = 120;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 130;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 140;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 9;
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal Name = 20;
  optional basetypes.v1.StringVal CoinID = 30;
  optional basetypes.v1.StringVal RevenueID = 40;
  optional basetypes.v1.StringVal RootUserID = 50;
  optional basetypes.v1.StringSliceVal EntIDs = 70;
}

message CreateGoodUserRequest { GoodUserReq Info = 10; }

message CreateGoodUserResponse {}

message GetGoodUserRequest { string EntID = 10; }

message GetGoodUserResponse { GoodUser Info = 10; }

message GetGoodUsersRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetGoodUsersResponse {
  repeated GoodUser Infos = 10;
  uint32 Total = 20;
}

message ExistGoodUserRequest { string EntID = 10; }

message ExistGoodUserResponse { bool Info = 10; }

message ExistGoodUserCondsRequest { Conds Conds = 10; }

message ExistGoodUserCondsResponse { bool Info = 10; }

message UpdateGoodUserRequest { GoodUserReq Info = 10; }

message UpdateGoodUserResponse {}

message DeleteGoodUserRequest { GoodUserReq Info = 10; }

message DeleteGoodUserResponse {}
