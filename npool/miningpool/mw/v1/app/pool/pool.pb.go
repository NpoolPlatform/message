// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/miningpool/mw/v1/app/pool/pool.proto

package pool

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *uint32 `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID  *string `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID  *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	PoolID *string `protobuf:"bytes,30,opt,name=PoolID,proto3,oneof" json:"PoolID,omitempty"`
}

func (x *PoolReq) Reset() {
	*x = PoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolReq) ProtoMessage() {}

func (x *PoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolReq.ProtoReflect.Descriptor instead.
func (*PoolReq) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{0}
}

func (x *PoolReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *PoolReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *PoolReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *PoolReq) GetPoolID() string {
	if x != nil && x.PoolID != nil {
		return *x.PoolID
	}
	return ""
}

type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"pool_id"
	PoolID string `protobuf:"bytes,40,opt,name=PoolID,proto3" json:"PoolID,omitempty" sql:"pool_id"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,120,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{1}
}

func (x *Pool) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Pool) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Pool) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Pool) GetPoolID() string {
	if x != nil {
		return x.PoolID
	}
	return ""
}

func (x *Pool) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Pool) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *v1.Uint32Val      `protobuf:"bytes,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID  *v1.StringVal      `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID  *v1.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	PoolID *v1.StringVal      `protobuf:"bytes,30,opt,name=PoolID,proto3,oneof" json:"PoolID,omitempty"`
	EntIDs *v1.StringSliceVal `protobuf:"bytes,40,opt,name=EntIDs,proto3,oneof" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetPoolID() *v1.StringVal {
	if x != nil {
		return x.PoolID
	}
	return nil
}

func (x *Conds) GetEntIDs() *v1.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

type CreatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PoolReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePoolRequest) Reset() {
	*x = CreatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolRequest) ProtoMessage() {}

func (x *CreatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolRequest.ProtoReflect.Descriptor instead.
func (*CreatePoolRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePoolRequest) GetInfo() *PoolReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Pool `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePoolResponse) Reset() {
	*x = CreatePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolResponse) ProtoMessage() {}

func (x *CreatePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolResponse.ProtoReflect.Descriptor instead.
func (*CreatePoolResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePoolResponse) GetInfo() *Pool {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetPoolRequest) Reset() {
	*x = GetPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolRequest) ProtoMessage() {}

func (x *GetPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolRequest.ProtoReflect.Descriptor instead.
func (*GetPoolRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{5}
}

func (x *GetPoolRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Pool `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPoolResponse) Reset() {
	*x = GetPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolResponse) ProtoMessage() {}

func (x *GetPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolResponse.ProtoReflect.Descriptor instead.
func (*GetPoolResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{6}
}

func (x *GetPoolResponse) GetInfo() *Pool {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *ExistPoolRequest) Reset() {
	*x = ExistPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPoolRequest) ProtoMessage() {}

func (x *ExistPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPoolRequest.ProtoReflect.Descriptor instead.
func (*ExistPoolRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{7}
}

func (x *ExistPoolRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type ExistPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPoolResponse) Reset() {
	*x = ExistPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPoolResponse) ProtoMessage() {}

func (x *ExistPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPoolResponse.ProtoReflect.Descriptor instead.
func (*ExistPoolResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{8}
}

func (x *ExistPoolResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type GetPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetPoolsRequest) Reset() {
	*x = GetPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolsRequest) ProtoMessage() {}

func (x *GetPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolsRequest.ProtoReflect.Descriptor instead.
func (*GetPoolsRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{9}
}

func (x *GetPoolsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetPoolsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPoolsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Pool `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetPoolsResponse) Reset() {
	*x = GetPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolsResponse) ProtoMessage() {}

func (x *GetPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolsResponse.ProtoReflect.Descriptor instead.
func (*GetPoolsResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{10}
}

func (x *GetPoolsResponse) GetInfos() []*Pool {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetPoolsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistPoolCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistPoolCondsRequest) Reset() {
	*x = ExistPoolCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPoolCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPoolCondsRequest) ProtoMessage() {}

func (x *ExistPoolCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPoolCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistPoolCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{11}
}

func (x *ExistPoolCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistPoolCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPoolCondsResponse) Reset() {
	*x = ExistPoolCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPoolCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPoolCondsResponse) ProtoMessage() {}

func (x *ExistPoolCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPoolCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistPoolCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{12}
}

func (x *ExistPoolCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type UpdatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PoolReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePoolRequest) Reset() {
	*x = UpdatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolRequest) ProtoMessage() {}

func (x *UpdatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolRequest.ProtoReflect.Descriptor instead.
func (*UpdatePoolRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePoolRequest) GetInfo() *PoolReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Pool `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePoolResponse) Reset() {
	*x = UpdatePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolResponse) ProtoMessage() {}

func (x *UpdatePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolResponse.ProtoReflect.Descriptor instead.
func (*UpdatePoolResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePoolResponse) GetInfo() *Pool {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeletePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PoolReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeletePoolRequest) Reset() {
	*x = DeletePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePoolRequest) ProtoMessage() {}

func (x *DeletePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePoolRequest.ProtoReflect.Descriptor instead.
func (*DeletePoolRequest) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{15}
}

func (x *DeletePoolRequest) GetInfo() *PoolReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeletePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Pool `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeletePoolResponse) Reset() {
	*x = DeletePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePoolResponse) ProtoMessage() {}

func (x *DeletePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePoolResponse.ProtoReflect.Descriptor instead.
func (*DeletePoolResponse) Descriptor() ([]byte, []int) {
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePoolResponse) GetInfo() *Pool {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_miningpool_mw_v1_app_pool_pool_proto protoreflect.FileDescriptor

var file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01,
	0x0a, 0x07, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x22, 0x96, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xbf, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48,
	0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x28, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x11,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x57, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x97, 0x07, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x7b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x34, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x72, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x31, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x33, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x32, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x38, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7b, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x34, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f,
	0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x34, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescOnce sync.Once
	file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescData = file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDesc
)

func file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescGZIP() []byte {
	file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescOnce.Do(func() {
		file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescData)
	})
	return file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDescData
}

var file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_miningpool_mw_v1_app_pool_pool_proto_goTypes = []interface{}{
	(*PoolReq)(nil),                // 0: miningpool.middleware.app.pool.v1.PoolReq
	(*Pool)(nil),                   // 1: miningpool.middleware.app.pool.v1.Pool
	(*Conds)(nil),                  // 2: miningpool.middleware.app.pool.v1.Conds
	(*CreatePoolRequest)(nil),      // 3: miningpool.middleware.app.pool.v1.CreatePoolRequest
	(*CreatePoolResponse)(nil),     // 4: miningpool.middleware.app.pool.v1.CreatePoolResponse
	(*GetPoolRequest)(nil),         // 5: miningpool.middleware.app.pool.v1.GetPoolRequest
	(*GetPoolResponse)(nil),        // 6: miningpool.middleware.app.pool.v1.GetPoolResponse
	(*ExistPoolRequest)(nil),       // 7: miningpool.middleware.app.pool.v1.ExistPoolRequest
	(*ExistPoolResponse)(nil),      // 8: miningpool.middleware.app.pool.v1.ExistPoolResponse
	(*GetPoolsRequest)(nil),        // 9: miningpool.middleware.app.pool.v1.GetPoolsRequest
	(*GetPoolsResponse)(nil),       // 10: miningpool.middleware.app.pool.v1.GetPoolsResponse
	(*ExistPoolCondsRequest)(nil),  // 11: miningpool.middleware.app.pool.v1.ExistPoolCondsRequest
	(*ExistPoolCondsResponse)(nil), // 12: miningpool.middleware.app.pool.v1.ExistPoolCondsResponse
	(*UpdatePoolRequest)(nil),      // 13: miningpool.middleware.app.pool.v1.UpdatePoolRequest
	(*UpdatePoolResponse)(nil),     // 14: miningpool.middleware.app.pool.v1.UpdatePoolResponse
	(*DeletePoolRequest)(nil),      // 15: miningpool.middleware.app.pool.v1.DeletePoolRequest
	(*DeletePoolResponse)(nil),     // 16: miningpool.middleware.app.pool.v1.DeletePoolResponse
	(*v1.Uint32Val)(nil),           // 17: basetypes.v1.Uint32Val
	(*v1.StringVal)(nil),           // 18: basetypes.v1.StringVal
	(*v1.StringSliceVal)(nil),      // 19: basetypes.v1.StringSliceVal
}
var file_npool_miningpool_mw_v1_app_pool_pool_proto_depIdxs = []int32{
	17, // 0: miningpool.middleware.app.pool.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	18, // 1: miningpool.middleware.app.pool.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	18, // 2: miningpool.middleware.app.pool.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	18, // 3: miningpool.middleware.app.pool.v1.Conds.PoolID:type_name -> basetypes.v1.StringVal
	19, // 4: miningpool.middleware.app.pool.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	0,  // 5: miningpool.middleware.app.pool.v1.CreatePoolRequest.Info:type_name -> miningpool.middleware.app.pool.v1.PoolReq
	1,  // 6: miningpool.middleware.app.pool.v1.CreatePoolResponse.Info:type_name -> miningpool.middleware.app.pool.v1.Pool
	1,  // 7: miningpool.middleware.app.pool.v1.GetPoolResponse.Info:type_name -> miningpool.middleware.app.pool.v1.Pool
	2,  // 8: miningpool.middleware.app.pool.v1.GetPoolsRequest.Conds:type_name -> miningpool.middleware.app.pool.v1.Conds
	1,  // 9: miningpool.middleware.app.pool.v1.GetPoolsResponse.Infos:type_name -> miningpool.middleware.app.pool.v1.Pool
	2,  // 10: miningpool.middleware.app.pool.v1.ExistPoolCondsRequest.Conds:type_name -> miningpool.middleware.app.pool.v1.Conds
	0,  // 11: miningpool.middleware.app.pool.v1.UpdatePoolRequest.Info:type_name -> miningpool.middleware.app.pool.v1.PoolReq
	1,  // 12: miningpool.middleware.app.pool.v1.UpdatePoolResponse.Info:type_name -> miningpool.middleware.app.pool.v1.Pool
	0,  // 13: miningpool.middleware.app.pool.v1.DeletePoolRequest.Info:type_name -> miningpool.middleware.app.pool.v1.PoolReq
	1,  // 14: miningpool.middleware.app.pool.v1.DeletePoolResponse.Info:type_name -> miningpool.middleware.app.pool.v1.Pool
	3,  // 15: miningpool.middleware.app.pool.v1.Middleware.CreatePool:input_type -> miningpool.middleware.app.pool.v1.CreatePoolRequest
	5,  // 16: miningpool.middleware.app.pool.v1.Middleware.GetPool:input_type -> miningpool.middleware.app.pool.v1.GetPoolRequest
	7,  // 17: miningpool.middleware.app.pool.v1.Middleware.ExistPool:input_type -> miningpool.middleware.app.pool.v1.ExistPoolRequest
	9,  // 18: miningpool.middleware.app.pool.v1.Middleware.GetPools:input_type -> miningpool.middleware.app.pool.v1.GetPoolsRequest
	11, // 19: miningpool.middleware.app.pool.v1.Middleware.ExistPoolConds:input_type -> miningpool.middleware.app.pool.v1.ExistPoolCondsRequest
	13, // 20: miningpool.middleware.app.pool.v1.Middleware.UpdatePool:input_type -> miningpool.middleware.app.pool.v1.UpdatePoolRequest
	15, // 21: miningpool.middleware.app.pool.v1.Middleware.DeletePool:input_type -> miningpool.middleware.app.pool.v1.DeletePoolRequest
	4,  // 22: miningpool.middleware.app.pool.v1.Middleware.CreatePool:output_type -> miningpool.middleware.app.pool.v1.CreatePoolResponse
	6,  // 23: miningpool.middleware.app.pool.v1.Middleware.GetPool:output_type -> miningpool.middleware.app.pool.v1.GetPoolResponse
	8,  // 24: miningpool.middleware.app.pool.v1.Middleware.ExistPool:output_type -> miningpool.middleware.app.pool.v1.ExistPoolResponse
	10, // 25: miningpool.middleware.app.pool.v1.Middleware.GetPools:output_type -> miningpool.middleware.app.pool.v1.GetPoolsResponse
	12, // 26: miningpool.middleware.app.pool.v1.Middleware.ExistPoolConds:output_type -> miningpool.middleware.app.pool.v1.ExistPoolCondsResponse
	14, // 27: miningpool.middleware.app.pool.v1.Middleware.UpdatePool:output_type -> miningpool.middleware.app.pool.v1.UpdatePoolResponse
	16, // 28: miningpool.middleware.app.pool.v1.Middleware.DeletePool:output_type -> miningpool.middleware.app.pool.v1.DeletePoolResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_npool_miningpool_mw_v1_app_pool_pool_proto_init() }
func file_npool_miningpool_mw_v1_app_pool_pool_proto_init() {
	if File_npool_miningpool_mw_v1_app_pool_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPoolCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPoolCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_miningpool_mw_v1_app_pool_pool_proto_goTypes,
		DependencyIndexes: file_npool_miningpool_mw_v1_app_pool_pool_proto_depIdxs,
		MessageInfos:      file_npool_miningpool_mw_v1_app_pool_pool_proto_msgTypes,
	}.Build()
	File_npool_miningpool_mw_v1_app_pool_pool_proto = out.File
	file_npool_miningpool_mw_v1_app_pool_pool_proto_rawDesc = nil
	file_npool_miningpool_mw_v1_app_pool_pool_proto_goTypes = nil
	file_npool_miningpool_mw_v1_app_pool_pool_proto_depIdxs = nil
}
