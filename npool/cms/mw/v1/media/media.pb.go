// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/cms/mw/v1/media/media.proto

package media

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *uint32 `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID     *string `protobuf:"bytes,20,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID     *string `protobuf:"bytes,30,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	Name      *string `protobuf:"bytes,40,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Ext       *string `protobuf:"bytes,50,opt,name=Ext,proto3,oneof" json:"Ext,omitempty"`
	MediaURL  *string `protobuf:"bytes,60,opt,name=MediaURL,proto3,oneof" json:"MediaURL,omitempty"`
	CreatedBy *string `protobuf:"bytes,70,opt,name=CreatedBy,proto3,oneof" json:"CreatedBy,omitempty"`
}

func (x *MediaReq) Reset() {
	*x = MediaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaReq) ProtoMessage() {}

func (x *MediaReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaReq.ProtoReflect.Descriptor instead.
func (*MediaReq) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{0}
}

func (x *MediaReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *MediaReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *MediaReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *MediaReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MediaReq) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

func (x *MediaReq) GetMediaURL() string {
	if x != nil && x.MediaURL != nil {
		return *x.MediaURL
	}
	return ""
}

func (x *MediaReq) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"name"
	Name string `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty" sql:"name"`
	// @inject_tag: sql:"ext"
	Ext string `protobuf:"bytes,50,opt,name=Ext,proto3" json:"Ext,omitempty" sql:"ext"`
	// MediaURL: {AppID}/{EntID}{Ext}
	// @inject_tag: sql:"media_url"
	MediaURL string `protobuf:"bytes,60,opt,name=MediaURL,proto3" json:"MediaURL,omitempty" sql:"media_url"`
	// @inject_tag: sql:"created_by"
	CreatedBy string `protobuf:"bytes,70,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" sql:"created_by"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Media) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Media) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Media) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Media) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *Media) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

func (x *Media) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Media) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Media) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *v1.Uint32Val      `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID    *v1.StringVal      `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID    *v1.StringVal      `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Name     *v1.StringVal      `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty"`
	MediaURL *v1.StringVal      `protobuf:"bytes,50,opt,name=MediaURL,proto3" json:"MediaURL,omitempty"`
	IDs      *v1.Uint32SliceVal `protobuf:"bytes,60,opt,name=IDs,proto3" json:"IDs,omitempty"`
	EntIDs   *v1.StringSliceVal `protobuf:"bytes,70,opt,name=EntIDs,proto3" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetName() *v1.StringVal {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Conds) GetMediaURL() *v1.StringVal {
	if x != nil {
		return x.MediaURL
	}
	return nil
}

func (x *Conds) GetIDs() *v1.Uint32SliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *Conds) GetEntIDs() *v1.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

type CreateMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MediaReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMediaRequest) Reset() {
	*x = CreateMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMediaRequest) ProtoMessage() {}

func (x *CreateMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMediaRequest.ProtoReflect.Descriptor instead.
func (*CreateMediaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMediaRequest) GetInfo() *MediaReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Media `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMediaResponse) Reset() {
	*x = CreateMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMediaResponse) ProtoMessage() {}

func (x *CreateMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMediaResponse.ProtoReflect.Descriptor instead.
func (*CreateMediaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMediaResponse) GetInfo() *Media {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{5}
}

func (x *GetMediaRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Media `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetMediaResponse) Reset() {
	*x = GetMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaResponse) ProtoMessage() {}

func (x *GetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaResponse.ProtoReflect.Descriptor instead.
func (*GetMediaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{6}
}

func (x *GetMediaResponse) GetInfo() *Media {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMediasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMediasRequest) Reset() {
	*x = GetMediasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediasRequest) ProtoMessage() {}

func (x *GetMediasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediasRequest.ProtoReflect.Descriptor instead.
func (*GetMediasRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{7}
}

func (x *GetMediasRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetMediasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMediasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMediasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Media `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetMediasResponse) Reset() {
	*x = GetMediasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediasResponse) ProtoMessage() {}

func (x *GetMediasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediasResponse.ProtoReflect.Descriptor instead.
func (*GetMediasResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{8}
}

func (x *GetMediasResponse) GetInfos() []*Media {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetMediasResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *ExistMediaRequest) Reset() {
	*x = ExistMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMediaRequest) ProtoMessage() {}

func (x *ExistMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMediaRequest.ProtoReflect.Descriptor instead.
func (*ExistMediaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{9}
}

func (x *ExistMediaRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type ExistMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistMediaResponse) Reset() {
	*x = ExistMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMediaResponse) ProtoMessage() {}

func (x *ExistMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMediaResponse.ProtoReflect.Descriptor instead.
func (*ExistMediaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{10}
}

func (x *ExistMediaResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistMediaCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistMediaCondsRequest) Reset() {
	*x = ExistMediaCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMediaCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMediaCondsRequest) ProtoMessage() {}

func (x *ExistMediaCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMediaCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistMediaCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{11}
}

func (x *ExistMediaCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistMediaCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistMediaCondsResponse) Reset() {
	*x = ExistMediaCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMediaCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMediaCondsResponse) ProtoMessage() {}

func (x *ExistMediaCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMediaCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistMediaCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{12}
}

func (x *ExistMediaCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MediaReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteMediaRequest) Reset() {
	*x = DeleteMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaRequest) ProtoMessage() {}

func (x *DeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*DeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMediaRequest) GetInfo() *MediaReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Media `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteMediaResponse) Reset() {
	*x = DeleteMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaResponse) ProtoMessage() {}

func (x *DeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cms_mw_v1_media_media_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*DeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cms_mw_v1_media_media_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMediaResponse) GetInfo() *Media {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_cms_mw_v1_media_media_proto protoreflect.FileDescriptor

var file_npool_cms_mw_v1_media_media_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x6d, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x02, 0x0a,
	0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x45, 0x78, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03, 0x45, 0x78,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55,
	0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x45, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52,
	0x4c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0xe1, 0x01, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x78, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xd6, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x08, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x12, 0x2e, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x4b, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x46, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5f, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29,
	0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x12, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x49, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x8e, 0x05, 0x0a, 0x0a, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x2b, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x28, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x0a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x2a, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6d, 0x73,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x2b,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_cms_mw_v1_media_media_proto_rawDescOnce sync.Once
	file_npool_cms_mw_v1_media_media_proto_rawDescData = file_npool_cms_mw_v1_media_media_proto_rawDesc
)

func file_npool_cms_mw_v1_media_media_proto_rawDescGZIP() []byte {
	file_npool_cms_mw_v1_media_media_proto_rawDescOnce.Do(func() {
		file_npool_cms_mw_v1_media_media_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_cms_mw_v1_media_media_proto_rawDescData)
	})
	return file_npool_cms_mw_v1_media_media_proto_rawDescData
}

var file_npool_cms_mw_v1_media_media_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_cms_mw_v1_media_media_proto_goTypes = []interface{}{
	(*MediaReq)(nil),                // 0: cms.middleware.media.v1.MediaReq
	(*Media)(nil),                   // 1: cms.middleware.media.v1.Media
	(*Conds)(nil),                   // 2: cms.middleware.media.v1.Conds
	(*CreateMediaRequest)(nil),      // 3: cms.middleware.media.v1.CreateMediaRequest
	(*CreateMediaResponse)(nil),     // 4: cms.middleware.media.v1.CreateMediaResponse
	(*GetMediaRequest)(nil),         // 5: cms.middleware.media.v1.GetMediaRequest
	(*GetMediaResponse)(nil),        // 6: cms.middleware.media.v1.GetMediaResponse
	(*GetMediasRequest)(nil),        // 7: cms.middleware.media.v1.GetMediasRequest
	(*GetMediasResponse)(nil),       // 8: cms.middleware.media.v1.GetMediasResponse
	(*ExistMediaRequest)(nil),       // 9: cms.middleware.media.v1.ExistMediaRequest
	(*ExistMediaResponse)(nil),      // 10: cms.middleware.media.v1.ExistMediaResponse
	(*ExistMediaCondsRequest)(nil),  // 11: cms.middleware.media.v1.ExistMediaCondsRequest
	(*ExistMediaCondsResponse)(nil), // 12: cms.middleware.media.v1.ExistMediaCondsResponse
	(*DeleteMediaRequest)(nil),      // 13: cms.middleware.media.v1.DeleteMediaRequest
	(*DeleteMediaResponse)(nil),     // 14: cms.middleware.media.v1.DeleteMediaResponse
	(*v1.Uint32Val)(nil),            // 15: basetypes.v1.Uint32Val
	(*v1.StringVal)(nil),            // 16: basetypes.v1.StringVal
	(*v1.Uint32SliceVal)(nil),       // 17: basetypes.v1.Uint32SliceVal
	(*v1.StringSliceVal)(nil),       // 18: basetypes.v1.StringSliceVal
}
var file_npool_cms_mw_v1_media_media_proto_depIdxs = []int32{
	15, // 0: cms.middleware.media.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	16, // 1: cms.middleware.media.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	16, // 2: cms.middleware.media.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	16, // 3: cms.middleware.media.v1.Conds.Name:type_name -> basetypes.v1.StringVal
	16, // 4: cms.middleware.media.v1.Conds.MediaURL:type_name -> basetypes.v1.StringVal
	17, // 5: cms.middleware.media.v1.Conds.IDs:type_name -> basetypes.v1.Uint32SliceVal
	18, // 6: cms.middleware.media.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	0,  // 7: cms.middleware.media.v1.CreateMediaRequest.Info:type_name -> cms.middleware.media.v1.MediaReq
	1,  // 8: cms.middleware.media.v1.CreateMediaResponse.Info:type_name -> cms.middleware.media.v1.Media
	1,  // 9: cms.middleware.media.v1.GetMediaResponse.Info:type_name -> cms.middleware.media.v1.Media
	2,  // 10: cms.middleware.media.v1.GetMediasRequest.Conds:type_name -> cms.middleware.media.v1.Conds
	1,  // 11: cms.middleware.media.v1.GetMediasResponse.Infos:type_name -> cms.middleware.media.v1.Media
	2,  // 12: cms.middleware.media.v1.ExistMediaCondsRequest.Conds:type_name -> cms.middleware.media.v1.Conds
	0,  // 13: cms.middleware.media.v1.DeleteMediaRequest.Info:type_name -> cms.middleware.media.v1.MediaReq
	1,  // 14: cms.middleware.media.v1.DeleteMediaResponse.Info:type_name -> cms.middleware.media.v1.Media
	3,  // 15: cms.middleware.media.v1.Middleware.CreateMedia:input_type -> cms.middleware.media.v1.CreateMediaRequest
	5,  // 16: cms.middleware.media.v1.Middleware.GetMedia:input_type -> cms.middleware.media.v1.GetMediaRequest
	7,  // 17: cms.middleware.media.v1.Middleware.GetMedias:input_type -> cms.middleware.media.v1.GetMediasRequest
	9,  // 18: cms.middleware.media.v1.Middleware.ExistMedia:input_type -> cms.middleware.media.v1.ExistMediaRequest
	11, // 19: cms.middleware.media.v1.Middleware.ExistMediaConds:input_type -> cms.middleware.media.v1.ExistMediaCondsRequest
	13, // 20: cms.middleware.media.v1.Middleware.DeleteMedia:input_type -> cms.middleware.media.v1.DeleteMediaRequest
	4,  // 21: cms.middleware.media.v1.Middleware.CreateMedia:output_type -> cms.middleware.media.v1.CreateMediaResponse
	6,  // 22: cms.middleware.media.v1.Middleware.GetMedia:output_type -> cms.middleware.media.v1.GetMediaResponse
	8,  // 23: cms.middleware.media.v1.Middleware.GetMedias:output_type -> cms.middleware.media.v1.GetMediasResponse
	10, // 24: cms.middleware.media.v1.Middleware.ExistMedia:output_type -> cms.middleware.media.v1.ExistMediaResponse
	12, // 25: cms.middleware.media.v1.Middleware.ExistMediaConds:output_type -> cms.middleware.media.v1.ExistMediaCondsResponse
	14, // 26: cms.middleware.media.v1.Middleware.DeleteMedia:output_type -> cms.middleware.media.v1.DeleteMediaResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_npool_cms_mw_v1_media_media_proto_init() }
func file_npool_cms_mw_v1_media_media_proto_init() {
	if File_npool_cms_mw_v1_media_media_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_cms_mw_v1_media_media_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMediaCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMediaCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cms_mw_v1_media_media_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_cms_mw_v1_media_media_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_cms_mw_v1_media_media_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_cms_mw_v1_media_media_proto_goTypes,
		DependencyIndexes: file_npool_cms_mw_v1_media_media_proto_depIdxs,
		MessageInfos:      file_npool_cms_mw_v1_media_media_proto_msgTypes,
	}.Build()
	File_npool_cms_mw_v1_media_media_proto = out.File
	file_npool_cms_mw_v1_media_media_proto_rawDesc = nil
	file_npool_cms_mw_v1_media_media_proto_goTypes = nil
	file_npool_cms_mw_v1_media_media_proto_depIdxs = nil
}
