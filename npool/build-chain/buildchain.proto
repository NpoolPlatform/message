syntax = "proto3";

package build.chain.v1;

option go_package = "github.com/NpoolPlatform/pkg/proto";

import "google/api/annotations.proto";

service BuildChain {
  rpc Version(Empty) returns (VersionResponse) {
    option (google.api.http) = {
      post : "/version"
      body : "*"
    };
  }
  rpc GetDeployedCoins(Empty) returns (GetDeployedCoinsResponse) {
    option (google.api.http) = {
      post : "/v1/get/deployed/coins"
      body : "*"
    };
  }
  rpc CreateCoinInfo(CreateCoinInfoRequest) returns (CreateCoinInfoResponse) {
    option (google.api.http) = {
      post : "/v1/create/coin/info"
      body : "*"
    };
  }
  rpc Faucet(FaucetRequst) returns (FaucetResponse) {
    option (google.api.http) = {
      post : "/v1/faucet"
      body : "*"
    };
  }
}

message Empty {}
message VersionResponse { string Info = 100; }

message DeployedCoin {
  string ID = 10;
  string CoinID = 20;
  string Contract = 30;
}

message CoinInfo {
  string ID = 10;
  string Name = 20;
  string ChainType = 30;
  string TokenType = 40;
  string Contract = 50;
  int32 Similarity = 60;
  string Remark = 70;
  bytes Data = 80;
}

message DeployedCoinInfo {
  // @inject_tag: sql:"id"
  string ID = 10;
  // @inject_tag: sql:"coin_id"
  string CoinID = 20;
  // @inject_tag: sql:"contract"
  string Contract = 30;
  // @inject_tag: sql:"name"
  string Name = 40;
  // @inject_tag: sql:"chain_type"
  string ChainType = 50;
  // @inject_tag: sql:"token_type"
  string TokenType = 60;
}

message GetDeployedCoinsResponse {
  repeated DeployedCoinInfo Infos = 10;
  uint32 Total = 20;
}

message CreateCoinInfoRequest { CoinInfo Info = 10; }

message CreateCoinInfoResponse {
  bool Success = 10;
  string Msg = 20;
}

message FaucetRequst {
  string To = 10;
  string Amount = 20;
  string Contract = 30;
}

message FaucetResponse {
  bool Success = 10;
  string Msg = 20;
}