syntax = "proto3";

package build.chain.v1;

option go_package = "github.com/NpoolPlatform/pkg/proto";
import "npool/npool.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service BuildChain {
  rpc Version(google.protobuf.Empty) returns (npool.v1.VersionResponse) {
    option (google.api.http) = {
      post : "/v1/version"
      body : "*"
    };
  }

  rpc GetTokenInfos(GetTokenInfosRequest) returns (GetTokenInfosResponse) {
    option (google.api.http) = {
      post : "/v1/get/token/infos"
      body : "*"
    };
  }
  rpc CreateTokenInfo(CreateTokenInfoRequest)
      returns (CreateTokenInfoResponse) {
    option (google.api.http) = {
      post : "/v1/create/token/info"
      body : "*"
    };
  }
  rpc Faucet(FaucetRequst) returns (FaucetResponse) {
    option (google.api.http) = {
      post : "/v1/faucet"
      body : "*"
    };
  }
}

message TokenInfo {
  string ID = 10;
  string Name = 20;
  string Unit = 30;
  string Decimal = 40;
  string ChainType = 50;
  string TokenType = 60;
  string OfficialContract = 70;
  string PrivateContract = 80;
  string Remark = 90;
  bytes Data = 100;
}

message CreateTokenInfoRequest {
  TokenInfo Info = 10;
  bool Force = 20;
}

message CreateTokenInfoResponse {
  bool Success = 10;
  string Msg = 20;
}

message TokenInfoReq {
  string ID = 10;
  string Name = 20;
  string ChainType = 30;
  string TokenType = 40;
  string PrivateContract = 50;
  string Remark = 60;
}

message GetTokenInfosRequest { map<string, npool.v1.FilterCond> Conds = 20; }

message GetTokenInfosResponse {
  repeated TokenInfoReq Infos = 10;
  uint32 Total = 20;
}

message FaucetRequst {
  string To = 10;
  string Amount = 20;
  string Contract = 30;
}

message FaucetResponse {
  bool Success = 10;
  string Msg = 20;
}