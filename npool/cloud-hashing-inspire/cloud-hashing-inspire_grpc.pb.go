// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/cloud-hashing-inspire/cloud-hashing-inspire.proto

package cloud_hashing_inspire

import (
	context "context"
	npool "github.com/NpoolPlatform/message/npool"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CloudHashingInspireClient is the client API for CloudHashingInspire service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CloudHashingInspireClient interface {
	// Method Version
	Version(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*npool.VersionResponse, error)
	CreateCommissionCoinSetting(ctx context.Context, in *CreateCommissionCoinSettingRequest, opts ...grpc.CallOption) (*CreateCommissionCoinSettingResponse, error)
	UpdateCommissionCoinSetting(ctx context.Context, in *UpdateCommissionCoinSettingRequest, opts ...grpc.CallOption) (*UpdateCommissionCoinSettingResponse, error)
	GetCommissionCoinSettings(ctx context.Context, in *GetCommissionCoinSettingsRequest, opts ...grpc.CallOption) (*GetCommissionCoinSettingsResponse, error)
	CreateAppCommissionSetting(ctx context.Context, in *CreateAppCommissionSettingRequest, opts ...grpc.CallOption) (*CreateAppCommissionSettingResponse, error)
	CreateAppCommissionSettingForOtherApp(ctx context.Context, in *CreateAppCommissionSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppCommissionSettingForOtherAppResponse, error)
	UpdateAppCommissionSetting(ctx context.Context, in *UpdateAppCommissionSettingRequest, opts ...grpc.CallOption) (*UpdateAppCommissionSettingResponse, error)
	GetAppCommissionSetting(ctx context.Context, in *GetAppCommissionSettingRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingResponse, error)
	GetAppCommissionSettingByApp(ctx context.Context, in *GetAppCommissionSettingByAppRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingByAppResponse, error)
	GetAppCommissionSettingByOtherApp(ctx context.Context, in *GetAppCommissionSettingByOtherAppRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingByOtherAppResponse, error)
	CreateAppInvitationSetting(ctx context.Context, in *CreateAppInvitationSettingRequest, opts ...grpc.CallOption) (*CreateAppInvitationSettingResponse, error)
	CreateAppInvitationSettingForOtherApp(ctx context.Context, in *CreateAppInvitationSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppInvitationSettingForOtherAppResponse, error)
	GetAppInvitationSetting(ctx context.Context, in *GetAppInvitationSettingRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingResponse, error)
	GetAppInvitationSettingsByApp(ctx context.Context, in *GetAppInvitationSettingsByAppRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingsByAppResponse, error)
	GetAppInvitationSettingsByOtherApp(ctx context.Context, in *GetAppInvitationSettingsByOtherAppRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingsByOtherAppResponse, error)
	UpdateAppInvitationSetting(ctx context.Context, in *UpdateAppInvitationSettingRequest, opts ...grpc.CallOption) (*UpdateAppInvitationSettingResponse, error)
	CreateAppPurchaseAmountSetting(ctx context.Context, in *CreateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingResponse, error)
	CreateAppPurchaseAmountSettingForOtherApp(ctx context.Context, in *CreateAppPurchaseAmountSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForOtherAppResponse, error)
	CreateAppPurchaseAmountSettingForOtherAppUser(ctx context.Context, in *CreateAppPurchaseAmountSettingForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForOtherAppUserResponse, error)
	CreateAppPurchaseAmountSettingForAppOtherUser(ctx context.Context, in *CreateAppPurchaseAmountSettingForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForAppOtherUserResponse, error)
	UpdateAppPurchaseAmountSetting(ctx context.Context, in *UpdateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdateAppPurchaseAmountSettingResponse, error)
	GetAppPurchaseAmountSetting(ctx context.Context, in *GetAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingResponse, error)
	GetAppPurchaseAmountSettingsByApp(ctx context.Context, in *GetAppPurchaseAmountSettingsByAppRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByAppResponse, error)
	GetAppPurchaseAmountSettingsByAppUser(ctx context.Context, in *GetAppPurchaseAmountSettingsByAppUserRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByAppUserResponse, error)
	GetAppPurchaseAmountSettingsByOtherApp(ctx context.Context, in *GetAppPurchaseAmountSettingsByOtherAppRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByOtherAppResponse, error)
	GetAppPurchaseAmountSettingsByOtherAppUser(ctx context.Context, in *GetAppPurchaseAmountSettingsByOtherAppUserRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByOtherAppUserResponse, error)
	CreateRegistrationInvitation(ctx context.Context, in *CreateRegistrationInvitationRequest, opts ...grpc.CallOption) (*CreateRegistrationInvitationResponse, error)
	CreateRegistrationInvitationRevert(ctx context.Context, in *CreateRegistrationInvitationRequest, opts ...grpc.CallOption) (*CreateRegistrationInvitationResponse, error)
	UpdateRegistrationInvitation(ctx context.Context, in *UpdateRegistrationInvitationRequest, opts ...grpc.CallOption) (*UpdateRegistrationInvitationResponse, error)
	GetRegistrationInvitation(ctx context.Context, in *GetRegistrationInvitationRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationResponse, error)
	GetRegistrationInvitationsByApp(ctx context.Context, in *GetRegistrationInvitationsByAppRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByAppResponse, error)
	GetRegistrationInvitationsByOtherApp(ctx context.Context, in *GetRegistrationInvitationsByOtherAppRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByOtherAppResponse, error)
	GetRegistrationInvitationsByAppInviter(ctx context.Context, in *GetRegistrationInvitationsByAppInviterRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByAppInviterResponse, error)
	GetRegistrationInvitationByAppInvitee(ctx context.Context, in *GetRegistrationInvitationByAppInviteeRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationByAppInviteeResponse, error)
	CreateUserInvitationCode(ctx context.Context, in *CreateUserInvitationCodeRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeResponse, error)
	CreateUserInvitationCodeForOtherAppUser(ctx context.Context, in *CreateUserInvitationCodeForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeForOtherAppUserResponse, error)
	CreateUserInvitationCodeForAppOtherUser(ctx context.Context, in *CreateUserInvitationCodeForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeForAppOtherUserResponse, error)
	GetUserInvitationCode(ctx context.Context, in *GetUserInvitationCodeRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeResponse, error)
	GetUserInvitationCodeByAppUser(ctx context.Context, in *GetUserInvitationCodeByAppUserRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeByAppUserResponse, error)
	GetUserInvitationCodes(ctx context.Context, in *GetUserInvitationCodesRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesResponse, error)
	GetUserInvitationCodesByApp(ctx context.Context, in *GetUserInvitationCodesByAppRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesByAppResponse, error)
	GetUserInvitationCodesByOtherApp(ctx context.Context, in *GetUserInvitationCodesByOtherAppRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesByOtherAppResponse, error)
	GetUserInvitationCodeByCode(ctx context.Context, in *GetUserInvitationCodeByCodeRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeByCodeResponse, error)
	CreateCouponAllocated(ctx context.Context, in *CreateCouponAllocatedRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedResponse, error)
	CreateCouponAllocatedForAppOtherUser(ctx context.Context, in *CreateCouponAllocatedForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedForAppOtherUserResponse, error)
	CreateCouponAllocatedForOtherAppUser(ctx context.Context, in *CreateCouponAllocatedForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedForOtherAppUserResponse, error)
	GetCouponAllocated(ctx context.Context, in *GetCouponAllocatedRequest, opts ...grpc.CallOption) (*GetCouponAllocatedResponse, error)
	GetCouponsAllocatedByApp(ctx context.Context, in *GetCouponsAllocatedByAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByAppResponse, error)
	GetCouponsAllocatedByOtherApp(ctx context.Context, in *GetCouponsAllocatedByOtherAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByOtherAppResponse, error)
	GetCouponsAllocatedByAppUser(ctx context.Context, in *GetCouponsAllocatedByAppUserRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByAppUserResponse, error)
	UpdateCouponAllocated(ctx context.Context, in *UpdateCouponAllocatedRequest, opts ...grpc.CallOption) (*UpdateCouponAllocatedResponse, error)
	GetCouponAllocatedDetail(ctx context.Context, in *GetCouponAllocatedDetailRequest, opts ...grpc.CallOption) (*GetCouponAllocatedDetailResponse, error)
	GetCouponsAllocatedDetailByApp(ctx context.Context, in *GetCouponsAllocatedDetailByAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedDetailByAppResponse, error)
	GetCouponsAllocatedDetailByAppUser(ctx context.Context, in *GetCouponsAllocatedDetailByAppUserRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedDetailByAppUserResponse, error)
	CreateCouponPool(ctx context.Context, in *CreateCouponPoolRequest, opts ...grpc.CallOption) (*CreateCouponPoolResponse, error)
	CreateCouponPoolForOtherApp(ctx context.Context, in *CreateCouponPoolForOtherAppRequest, opts ...grpc.CallOption) (*CreateCouponPoolForOtherAppResponse, error)
	UpdateCouponPool(ctx context.Context, in *UpdateCouponPoolRequest, opts ...grpc.CallOption) (*UpdateCouponPoolResponse, error)
	GetCouponPool(ctx context.Context, in *GetCouponPoolRequest, opts ...grpc.CallOption) (*GetCouponPoolResponse, error)
	GetCouponPoolsByApp(ctx context.Context, in *GetCouponPoolsByAppRequest, opts ...grpc.CallOption) (*GetCouponPoolsByAppResponse, error)
	GetCouponPoolsByOtherApp(ctx context.Context, in *GetCouponPoolsByOtherAppRequest, opts ...grpc.CallOption) (*GetCouponPoolsByOtherAppResponse, error)
	GetCouponPoolsByAppReleaser(ctx context.Context, in *GetCouponPoolsByAppReleaserRequest, opts ...grpc.CallOption) (*GetCouponPoolsByAppReleaserResponse, error)
	GetCouponPoolsByOtherAppReleaser(ctx context.Context, in *GetCouponPoolsByOtherAppReleaserRequest, opts ...grpc.CallOption) (*GetCouponPoolsByOtherAppReleaserResponse, error)
	CreateDiscountPool(ctx context.Context, in *CreateDiscountPoolRequest, opts ...grpc.CallOption) (*CreateDiscountPoolResponse, error)
	CreateDiscountPoolForOtherApp(ctx context.Context, in *CreateDiscountPoolForOtherAppRequest, opts ...grpc.CallOption) (*CreateDiscountPoolForOtherAppResponse, error)
	UpdateDiscountPool(ctx context.Context, in *UpdateDiscountPoolRequest, opts ...grpc.CallOption) (*UpdateDiscountPoolResponse, error)
	GetDiscountPool(ctx context.Context, in *GetDiscountPoolRequest, opts ...grpc.CallOption) (*GetDiscountPoolResponse, error)
	GetDiscountPoolsByApp(ctx context.Context, in *GetDiscountPoolsByAppRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByAppResponse, error)
	GetDiscountPoolsByOtherApp(ctx context.Context, in *GetDiscountPoolsByOtherAppRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByOtherAppResponse, error)
	GetDiscountPoolsByAppReleaser(ctx context.Context, in *GetDiscountPoolsByAppReleaserRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByAppReleaserResponse, error)
	GetDiscountPoolsByOtherAppReleaser(ctx context.Context, in *GetDiscountPoolsByOtherAppReleaserRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByOtherAppReleaserResponse, error)
	CreateAppCouponSetting(ctx context.Context, in *CreateAppCouponSettingRequest, opts ...grpc.CallOption) (*CreateAppCouponSettingResponse, error)
	GetAppCouponSetting(ctx context.Context, in *GetAppCouponSettingRequest, opts ...grpc.CallOption) (*GetAppCouponSettingResponse, error)
	GetAppCouponSettingByApp(ctx context.Context, in *GetAppCouponSettingByAppRequest, opts ...grpc.CallOption) (*GetAppCouponSettingByAppResponse, error)
	UpdateAppCouponSetting(ctx context.Context, in *UpdateAppCouponSettingRequest, opts ...grpc.CallOption) (*UpdateAppCouponSettingResponse, error)
	CreateDefaultKpiSetting(ctx context.Context, in *CreateDefaultKpiSettingRequest, opts ...grpc.CallOption) (*CreateDefaultKpiSettingResponse, error)
	GetDefaultKpiSetting(ctx context.Context, in *GetDefaultKpiSettingRequest, opts ...grpc.CallOption) (*GetDefaultKpiSettingResponse, error)
	GetDefaultKpiSettingByAppGood(ctx context.Context, in *GetDefaultKpiSettingByAppGoodRequest, opts ...grpc.CallOption) (*GetDefaultKpiSettingByAppGoodResponse, error)
	UpdateDefaultKpiSetting(ctx context.Context, in *UpdateDefaultKpiSettingRequest, opts ...grpc.CallOption) (*UpdateDefaultKpiSettingResponse, error)
	CreateUserKpiSetting(ctx context.Context, in *CreateUserKpiSettingRequest, opts ...grpc.CallOption) (*CreateUserKpiSettingResponse, error)
	GetUserKpiSetting(ctx context.Context, in *GetUserKpiSettingRequest, opts ...grpc.CallOption) (*GetUserKpiSettingResponse, error)
	GetUserKpiSettingByAppGood(ctx context.Context, in *GetUserKpiSettingByAppGoodRequest, opts ...grpc.CallOption) (*GetUserKpiSettingByAppGoodResponse, error)
	UpdateUserKpiSetting(ctx context.Context, in *UpdateUserKpiSettingRequest, opts ...grpc.CallOption) (*UpdateUserKpiSettingResponse, error)
	CreateUserSpecialReduction(ctx context.Context, in *CreateUserSpecialReductionRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionResponse, error)
	CreateUserSpecialReductionForAppOtherUser(ctx context.Context, in *CreateUserSpecialReductionForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionForAppOtherUserResponse, error)
	CreateUserSpecialReductionForOtherAppUser(ctx context.Context, in *CreateUserSpecialReductionForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionForOtherAppUserResponse, error)
	GetUserSpecialReduction(ctx context.Context, in *GetUserSpecialReductionRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionResponse, error)
	GetUserSpecialReductionsByApp(ctx context.Context, in *GetUserSpecialReductionsByAppRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppResponse, error)
	GetUserSpecialReductionsByOtherApp(ctx context.Context, in *GetUserSpecialReductionsByOtherAppRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByOtherAppResponse, error)
	GetUserSpecialReductionsByAppReleaser(ctx context.Context, in *GetUserSpecialReductionsByAppReleaserRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppReleaserResponse, error)
	GetUserSpecialReductionsByAppUser(ctx context.Context, in *GetUserSpecialReductionsByAppUserRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppUserResponse, error)
	UpdateUserSpecialReduction(ctx context.Context, in *UpdateUserSpecialReductionRequest, opts ...grpc.CallOption) (*UpdateUserSpecialReductionResponse, error)
	CreateActivity(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityResponse, error)
	CreateActivityForOtherApp(ctx context.Context, in *CreateActivityForOtherAppRequest, opts ...grpc.CallOption) (*CreateActivityForOtherAppResponse, error)
	UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityResponse, error)
	GetActivity(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error)
	GetActivityByAppName(ctx context.Context, in *GetActivityByAppNameRequest, opts ...grpc.CallOption) (*GetActivityByAppNameResponse, error)
	GetActivitiesByApp(ctx context.Context, in *GetActivitiesByAppRequest, opts ...grpc.CallOption) (*GetActivitiesByAppResponse, error)
	GetActivitiesByOtherApp(ctx context.Context, in *GetActivitiesByOtherAppRequest, opts ...grpc.CallOption) (*GetActivitiesByOtherAppResponse, error)
	CreateEventCoupon(ctx context.Context, in *CreateEventCouponRequest, opts ...grpc.CallOption) (*CreateEventCouponResponse, error)
	CreateEventCouponForOtherApp(ctx context.Context, in *CreateEventCouponForOtherAppRequest, opts ...grpc.CallOption) (*CreateEventCouponForOtherAppResponse, error)
	UpdateEventCoupon(ctx context.Context, in *UpdateEventCouponRequest, opts ...grpc.CallOption) (*UpdateEventCouponResponse, error)
	GetEventCoupon(ctx context.Context, in *GetEventCouponRequest, opts ...grpc.CallOption) (*GetEventCouponResponse, error)
	GetEventCouponsByAppActivityEvent(ctx context.Context, in *GetEventCouponsByAppActivityEventRequest, opts ...grpc.CallOption) (*GetEventCouponsByAppActivityEventResponse, error)
	GetEventCouponsByApp(ctx context.Context, in *GetEventCouponsByAppRequest, opts ...grpc.CallOption) (*GetEventCouponsByAppResponse, error)
	GetEventCouponsByOtherApp(ctx context.Context, in *GetEventCouponsByOtherAppRequest, opts ...grpc.CallOption) (*GetEventCouponsByOtherAppResponse, error)
}

type cloudHashingInspireClient struct {
	cc grpc.ClientConnInterface
}

func NewCloudHashingInspireClient(cc grpc.ClientConnInterface) CloudHashingInspireClient {
	return &cloudHashingInspireClient{cc}
}

func (c *cloudHashingInspireClient) Version(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*npool.VersionResponse, error) {
	out := new(npool.VersionResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCommissionCoinSetting(ctx context.Context, in *CreateCommissionCoinSettingRequest, opts ...grpc.CallOption) (*CreateCommissionCoinSettingResponse, error) {
	out := new(CreateCommissionCoinSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCommissionCoinSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateCommissionCoinSetting(ctx context.Context, in *UpdateCommissionCoinSettingRequest, opts ...grpc.CallOption) (*UpdateCommissionCoinSettingResponse, error) {
	out := new(UpdateCommissionCoinSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCommissionCoinSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCommissionCoinSettings(ctx context.Context, in *GetCommissionCoinSettingsRequest, opts ...grpc.CallOption) (*GetCommissionCoinSettingsResponse, error) {
	out := new(GetCommissionCoinSettingsResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCommissionCoinSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppCommissionSetting(ctx context.Context, in *CreateAppCommissionSettingRequest, opts ...grpc.CallOption) (*CreateAppCommissionSettingResponse, error) {
	out := new(CreateAppCommissionSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCommissionSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppCommissionSettingForOtherApp(ctx context.Context, in *CreateAppCommissionSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppCommissionSettingForOtherAppResponse, error) {
	out := new(CreateAppCommissionSettingForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCommissionSettingForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateAppCommissionSetting(ctx context.Context, in *UpdateAppCommissionSettingRequest, opts ...grpc.CallOption) (*UpdateAppCommissionSettingResponse, error) {
	out := new(UpdateAppCommissionSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppCommissionSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppCommissionSetting(ctx context.Context, in *GetAppCommissionSettingRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingResponse, error) {
	out := new(GetAppCommissionSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppCommissionSettingByApp(ctx context.Context, in *GetAppCommissionSettingByAppRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingByAppResponse, error) {
	out := new(GetAppCommissionSettingByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSettingByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppCommissionSettingByOtherApp(ctx context.Context, in *GetAppCommissionSettingByOtherAppRequest, opts ...grpc.CallOption) (*GetAppCommissionSettingByOtherAppResponse, error) {
	out := new(GetAppCommissionSettingByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSettingByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppInvitationSetting(ctx context.Context, in *CreateAppInvitationSettingRequest, opts ...grpc.CallOption) (*CreateAppInvitationSettingResponse, error) {
	out := new(CreateAppInvitationSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppInvitationSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppInvitationSettingForOtherApp(ctx context.Context, in *CreateAppInvitationSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppInvitationSettingForOtherAppResponse, error) {
	out := new(CreateAppInvitationSettingForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppInvitationSettingForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppInvitationSetting(ctx context.Context, in *GetAppInvitationSettingRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingResponse, error) {
	out := new(GetAppInvitationSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppInvitationSettingsByApp(ctx context.Context, in *GetAppInvitationSettingsByAppRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingsByAppResponse, error) {
	out := new(GetAppInvitationSettingsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSettingsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppInvitationSettingsByOtherApp(ctx context.Context, in *GetAppInvitationSettingsByOtherAppRequest, opts ...grpc.CallOption) (*GetAppInvitationSettingsByOtherAppResponse, error) {
	out := new(GetAppInvitationSettingsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSettingsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateAppInvitationSetting(ctx context.Context, in *UpdateAppInvitationSettingRequest, opts ...grpc.CallOption) (*UpdateAppInvitationSettingResponse, error) {
	out := new(UpdateAppInvitationSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppInvitationSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppPurchaseAmountSetting(ctx context.Context, in *CreateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingResponse, error) {
	out := new(CreateAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppPurchaseAmountSettingForOtherApp(ctx context.Context, in *CreateAppPurchaseAmountSettingForOtherAppRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForOtherAppResponse, error) {
	out := new(CreateAppPurchaseAmountSettingForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppPurchaseAmountSettingForOtherAppUser(ctx context.Context, in *CreateAppPurchaseAmountSettingForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForOtherAppUserResponse, error) {
	out := new(CreateAppPurchaseAmountSettingForOtherAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForOtherAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppPurchaseAmountSettingForAppOtherUser(ctx context.Context, in *CreateAppPurchaseAmountSettingForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingForAppOtherUserResponse, error) {
	out := new(CreateAppPurchaseAmountSettingForAppOtherUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForAppOtherUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateAppPurchaseAmountSetting(ctx context.Context, in *UpdateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdateAppPurchaseAmountSettingResponse, error) {
	out := new(UpdateAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppPurchaseAmountSetting(ctx context.Context, in *GetAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingResponse, error) {
	out := new(GetAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppPurchaseAmountSettingsByApp(ctx context.Context, in *GetAppPurchaseAmountSettingsByAppRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByAppResponse, error) {
	out := new(GetAppPurchaseAmountSettingsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppPurchaseAmountSettingsByAppUser(ctx context.Context, in *GetAppPurchaseAmountSettingsByAppUserRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByAppUserResponse, error) {
	out := new(GetAppPurchaseAmountSettingsByAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppPurchaseAmountSettingsByOtherApp(ctx context.Context, in *GetAppPurchaseAmountSettingsByOtherAppRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByOtherAppResponse, error) {
	out := new(GetAppPurchaseAmountSettingsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppPurchaseAmountSettingsByOtherAppUser(ctx context.Context, in *GetAppPurchaseAmountSettingsByOtherAppUserRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsByOtherAppUserResponse, error) {
	out := new(GetAppPurchaseAmountSettingsByOtherAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByOtherAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateRegistrationInvitation(ctx context.Context, in *CreateRegistrationInvitationRequest, opts ...grpc.CallOption) (*CreateRegistrationInvitationResponse, error) {
	out := new(CreateRegistrationInvitationResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateRegistrationInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateRegistrationInvitationRevert(ctx context.Context, in *CreateRegistrationInvitationRequest, opts ...grpc.CallOption) (*CreateRegistrationInvitationResponse, error) {
	out := new(CreateRegistrationInvitationResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateRegistrationInvitationRevert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateRegistrationInvitation(ctx context.Context, in *UpdateRegistrationInvitationRequest, opts ...grpc.CallOption) (*UpdateRegistrationInvitationResponse, error) {
	out := new(UpdateRegistrationInvitationResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateRegistrationInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetRegistrationInvitation(ctx context.Context, in *GetRegistrationInvitationRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationResponse, error) {
	out := new(GetRegistrationInvitationResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetRegistrationInvitationsByApp(ctx context.Context, in *GetRegistrationInvitationsByAppRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByAppResponse, error) {
	out := new(GetRegistrationInvitationsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetRegistrationInvitationsByOtherApp(ctx context.Context, in *GetRegistrationInvitationsByOtherAppRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByOtherAppResponse, error) {
	out := new(GetRegistrationInvitationsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetRegistrationInvitationsByAppInviter(ctx context.Context, in *GetRegistrationInvitationsByAppInviterRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationsByAppInviterResponse, error) {
	out := new(GetRegistrationInvitationsByAppInviterResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByAppInviter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetRegistrationInvitationByAppInvitee(ctx context.Context, in *GetRegistrationInvitationByAppInviteeRequest, opts ...grpc.CallOption) (*GetRegistrationInvitationByAppInviteeResponse, error) {
	out := new(GetRegistrationInvitationByAppInviteeResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationByAppInvitee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserInvitationCode(ctx context.Context, in *CreateUserInvitationCodeRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeResponse, error) {
	out := new(CreateUserInvitationCodeResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserInvitationCodeForOtherAppUser(ctx context.Context, in *CreateUserInvitationCodeForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeForOtherAppUserResponse, error) {
	out := new(CreateUserInvitationCodeForOtherAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCodeForOtherAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserInvitationCodeForAppOtherUser(ctx context.Context, in *CreateUserInvitationCodeForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateUserInvitationCodeForAppOtherUserResponse, error) {
	out := new(CreateUserInvitationCodeForAppOtherUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCodeForAppOtherUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCode(ctx context.Context, in *GetUserInvitationCodeRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeResponse, error) {
	out := new(GetUserInvitationCodeResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCodeByAppUser(ctx context.Context, in *GetUserInvitationCodeByAppUserRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeByAppUserResponse, error) {
	out := new(GetUserInvitationCodeByAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodeByAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCodes(ctx context.Context, in *GetUserInvitationCodesRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesResponse, error) {
	out := new(GetUserInvitationCodesResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCodesByApp(ctx context.Context, in *GetUserInvitationCodesByAppRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesByAppResponse, error) {
	out := new(GetUserInvitationCodesByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodesByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCodesByOtherApp(ctx context.Context, in *GetUserInvitationCodesByOtherAppRequest, opts ...grpc.CallOption) (*GetUserInvitationCodesByOtherAppResponse, error) {
	out := new(GetUserInvitationCodesByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodesByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserInvitationCodeByCode(ctx context.Context, in *GetUserInvitationCodeByCodeRequest, opts ...grpc.CallOption) (*GetUserInvitationCodeByCodeResponse, error) {
	out := new(GetUserInvitationCodeByCodeResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodeByCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCouponAllocated(ctx context.Context, in *CreateCouponAllocatedRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedResponse, error) {
	out := new(CreateCouponAllocatedResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCouponAllocatedForAppOtherUser(ctx context.Context, in *CreateCouponAllocatedForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedForAppOtherUserResponse, error) {
	out := new(CreateCouponAllocatedForAppOtherUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocatedForAppOtherUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCouponAllocatedForOtherAppUser(ctx context.Context, in *CreateCouponAllocatedForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateCouponAllocatedForOtherAppUserResponse, error) {
	out := new(CreateCouponAllocatedForOtherAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocatedForOtherAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponAllocated(ctx context.Context, in *GetCouponAllocatedRequest, opts ...grpc.CallOption) (*GetCouponAllocatedResponse, error) {
	out := new(GetCouponAllocatedResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponAllocated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponsAllocatedByApp(ctx context.Context, in *GetCouponsAllocatedByAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByAppResponse, error) {
	out := new(GetCouponsAllocatedByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponsAllocatedByOtherApp(ctx context.Context, in *GetCouponsAllocatedByOtherAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByOtherAppResponse, error) {
	out := new(GetCouponsAllocatedByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponsAllocatedByAppUser(ctx context.Context, in *GetCouponsAllocatedByAppUserRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedByAppUserResponse, error) {
	out := new(GetCouponsAllocatedByAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateCouponAllocated(ctx context.Context, in *UpdateCouponAllocatedRequest, opts ...grpc.CallOption) (*UpdateCouponAllocatedResponse, error) {
	out := new(UpdateCouponAllocatedResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCouponAllocated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponAllocatedDetail(ctx context.Context, in *GetCouponAllocatedDetailRequest, opts ...grpc.CallOption) (*GetCouponAllocatedDetailResponse, error) {
	out := new(GetCouponAllocatedDetailResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponAllocatedDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponsAllocatedDetailByApp(ctx context.Context, in *GetCouponsAllocatedDetailByAppRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedDetailByAppResponse, error) {
	out := new(GetCouponsAllocatedDetailByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedDetailByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponsAllocatedDetailByAppUser(ctx context.Context, in *GetCouponsAllocatedDetailByAppUserRequest, opts ...grpc.CallOption) (*GetCouponsAllocatedDetailByAppUserResponse, error) {
	out := new(GetCouponsAllocatedDetailByAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedDetailByAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCouponPool(ctx context.Context, in *CreateCouponPoolRequest, opts ...grpc.CallOption) (*CreateCouponPoolResponse, error) {
	out := new(CreateCouponPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateCouponPoolForOtherApp(ctx context.Context, in *CreateCouponPoolForOtherAppRequest, opts ...grpc.CallOption) (*CreateCouponPoolForOtherAppResponse, error) {
	out := new(CreateCouponPoolForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponPoolForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateCouponPool(ctx context.Context, in *UpdateCouponPoolRequest, opts ...grpc.CallOption) (*UpdateCouponPoolResponse, error) {
	out := new(UpdateCouponPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCouponPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponPool(ctx context.Context, in *GetCouponPoolRequest, opts ...grpc.CallOption) (*GetCouponPoolResponse, error) {
	out := new(GetCouponPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponPoolsByApp(ctx context.Context, in *GetCouponPoolsByAppRequest, opts ...grpc.CallOption) (*GetCouponPoolsByAppResponse, error) {
	out := new(GetCouponPoolsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponPoolsByOtherApp(ctx context.Context, in *GetCouponPoolsByOtherAppRequest, opts ...grpc.CallOption) (*GetCouponPoolsByOtherAppResponse, error) {
	out := new(GetCouponPoolsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponPoolsByAppReleaser(ctx context.Context, in *GetCouponPoolsByAppReleaserRequest, opts ...grpc.CallOption) (*GetCouponPoolsByAppReleaserResponse, error) {
	out := new(GetCouponPoolsByAppReleaserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByAppReleaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetCouponPoolsByOtherAppReleaser(ctx context.Context, in *GetCouponPoolsByOtherAppReleaserRequest, opts ...grpc.CallOption) (*GetCouponPoolsByOtherAppReleaserResponse, error) {
	out := new(GetCouponPoolsByOtherAppReleaserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByOtherAppReleaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateDiscountPool(ctx context.Context, in *CreateDiscountPoolRequest, opts ...grpc.CallOption) (*CreateDiscountPoolResponse, error) {
	out := new(CreateDiscountPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDiscountPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateDiscountPoolForOtherApp(ctx context.Context, in *CreateDiscountPoolForOtherAppRequest, opts ...grpc.CallOption) (*CreateDiscountPoolForOtherAppResponse, error) {
	out := new(CreateDiscountPoolForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDiscountPoolForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateDiscountPool(ctx context.Context, in *UpdateDiscountPoolRequest, opts ...grpc.CallOption) (*UpdateDiscountPoolResponse, error) {
	out := new(UpdateDiscountPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateDiscountPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDiscountPool(ctx context.Context, in *GetDiscountPoolRequest, opts ...grpc.CallOption) (*GetDiscountPoolResponse, error) {
	out := new(GetDiscountPoolResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDiscountPoolsByApp(ctx context.Context, in *GetDiscountPoolsByAppRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByAppResponse, error) {
	out := new(GetDiscountPoolsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDiscountPoolsByOtherApp(ctx context.Context, in *GetDiscountPoolsByOtherAppRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByOtherAppResponse, error) {
	out := new(GetDiscountPoolsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDiscountPoolsByAppReleaser(ctx context.Context, in *GetDiscountPoolsByAppReleaserRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByAppReleaserResponse, error) {
	out := new(GetDiscountPoolsByAppReleaserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByAppReleaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDiscountPoolsByOtherAppReleaser(ctx context.Context, in *GetDiscountPoolsByOtherAppReleaserRequest, opts ...grpc.CallOption) (*GetDiscountPoolsByOtherAppReleaserResponse, error) {
	out := new(GetDiscountPoolsByOtherAppReleaserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByOtherAppReleaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateAppCouponSetting(ctx context.Context, in *CreateAppCouponSettingRequest, opts ...grpc.CallOption) (*CreateAppCouponSettingResponse, error) {
	out := new(CreateAppCouponSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCouponSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppCouponSetting(ctx context.Context, in *GetAppCouponSettingRequest, opts ...grpc.CallOption) (*GetAppCouponSettingResponse, error) {
	out := new(GetAppCouponSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCouponSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetAppCouponSettingByApp(ctx context.Context, in *GetAppCouponSettingByAppRequest, opts ...grpc.CallOption) (*GetAppCouponSettingByAppResponse, error) {
	out := new(GetAppCouponSettingByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCouponSettingByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateAppCouponSetting(ctx context.Context, in *UpdateAppCouponSettingRequest, opts ...grpc.CallOption) (*UpdateAppCouponSettingResponse, error) {
	out := new(UpdateAppCouponSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppCouponSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateDefaultKpiSetting(ctx context.Context, in *CreateDefaultKpiSettingRequest, opts ...grpc.CallOption) (*CreateDefaultKpiSettingResponse, error) {
	out := new(CreateDefaultKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDefaultKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDefaultKpiSetting(ctx context.Context, in *GetDefaultKpiSettingRequest, opts ...grpc.CallOption) (*GetDefaultKpiSettingResponse, error) {
	out := new(GetDefaultKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDefaultKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetDefaultKpiSettingByAppGood(ctx context.Context, in *GetDefaultKpiSettingByAppGoodRequest, opts ...grpc.CallOption) (*GetDefaultKpiSettingByAppGoodResponse, error) {
	out := new(GetDefaultKpiSettingByAppGoodResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDefaultKpiSettingByAppGood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateDefaultKpiSetting(ctx context.Context, in *UpdateDefaultKpiSettingRequest, opts ...grpc.CallOption) (*UpdateDefaultKpiSettingResponse, error) {
	out := new(UpdateDefaultKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateDefaultKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserKpiSetting(ctx context.Context, in *CreateUserKpiSettingRequest, opts ...grpc.CallOption) (*CreateUserKpiSettingResponse, error) {
	out := new(CreateUserKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserKpiSetting(ctx context.Context, in *GetUserKpiSettingRequest, opts ...grpc.CallOption) (*GetUserKpiSettingResponse, error) {
	out := new(GetUserKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserKpiSettingByAppGood(ctx context.Context, in *GetUserKpiSettingByAppGoodRequest, opts ...grpc.CallOption) (*GetUserKpiSettingByAppGoodResponse, error) {
	out := new(GetUserKpiSettingByAppGoodResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserKpiSettingByAppGood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateUserKpiSetting(ctx context.Context, in *UpdateUserKpiSettingRequest, opts ...grpc.CallOption) (*UpdateUserKpiSettingResponse, error) {
	out := new(UpdateUserKpiSettingResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateUserKpiSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserSpecialReduction(ctx context.Context, in *CreateUserSpecialReductionRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionResponse, error) {
	out := new(CreateUserSpecialReductionResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserSpecialReductionForAppOtherUser(ctx context.Context, in *CreateUserSpecialReductionForAppOtherUserRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionForAppOtherUserResponse, error) {
	out := new(CreateUserSpecialReductionForAppOtherUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReductionForAppOtherUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateUserSpecialReductionForOtherAppUser(ctx context.Context, in *CreateUserSpecialReductionForOtherAppUserRequest, opts ...grpc.CallOption) (*CreateUserSpecialReductionForOtherAppUserResponse, error) {
	out := new(CreateUserSpecialReductionForOtherAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReductionForOtherAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserSpecialReduction(ctx context.Context, in *GetUserSpecialReductionRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionResponse, error) {
	out := new(GetUserSpecialReductionResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserSpecialReductionsByApp(ctx context.Context, in *GetUserSpecialReductionsByAppRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppResponse, error) {
	out := new(GetUserSpecialReductionsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserSpecialReductionsByOtherApp(ctx context.Context, in *GetUserSpecialReductionsByOtherAppRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByOtherAppResponse, error) {
	out := new(GetUserSpecialReductionsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserSpecialReductionsByAppReleaser(ctx context.Context, in *GetUserSpecialReductionsByAppReleaserRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppReleaserResponse, error) {
	out := new(GetUserSpecialReductionsByAppReleaserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByAppReleaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetUserSpecialReductionsByAppUser(ctx context.Context, in *GetUserSpecialReductionsByAppUserRequest, opts ...grpc.CallOption) (*GetUserSpecialReductionsByAppUserResponse, error) {
	out := new(GetUserSpecialReductionsByAppUserResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateUserSpecialReduction(ctx context.Context, in *UpdateUserSpecialReductionRequest, opts ...grpc.CallOption) (*UpdateUserSpecialReductionResponse, error) {
	out := new(UpdateUserSpecialReductionResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateUserSpecialReduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateActivity(ctx context.Context, in *CreateActivityRequest, opts ...grpc.CallOption) (*CreateActivityResponse, error) {
	out := new(CreateActivityResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateActivityForOtherApp(ctx context.Context, in *CreateActivityForOtherAppRequest, opts ...grpc.CallOption) (*CreateActivityForOtherAppResponse, error) {
	out := new(CreateActivityForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateActivityForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateActivity(ctx context.Context, in *UpdateActivityRequest, opts ...grpc.CallOption) (*UpdateActivityResponse, error) {
	out := new(UpdateActivityResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetActivity(ctx context.Context, in *GetActivityRequest, opts ...grpc.CallOption) (*GetActivityResponse, error) {
	out := new(GetActivityResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetActivityByAppName(ctx context.Context, in *GetActivityByAppNameRequest, opts ...grpc.CallOption) (*GetActivityByAppNameResponse, error) {
	out := new(GetActivityByAppNameResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivityByAppName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetActivitiesByApp(ctx context.Context, in *GetActivitiesByAppRequest, opts ...grpc.CallOption) (*GetActivitiesByAppResponse, error) {
	out := new(GetActivitiesByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivitiesByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetActivitiesByOtherApp(ctx context.Context, in *GetActivitiesByOtherAppRequest, opts ...grpc.CallOption) (*GetActivitiesByOtherAppResponse, error) {
	out := new(GetActivitiesByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivitiesByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateEventCoupon(ctx context.Context, in *CreateEventCouponRequest, opts ...grpc.CallOption) (*CreateEventCouponResponse, error) {
	out := new(CreateEventCouponResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateEventCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) CreateEventCouponForOtherApp(ctx context.Context, in *CreateEventCouponForOtherAppRequest, opts ...grpc.CallOption) (*CreateEventCouponForOtherAppResponse, error) {
	out := new(CreateEventCouponForOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateEventCouponForOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) UpdateEventCoupon(ctx context.Context, in *UpdateEventCouponRequest, opts ...grpc.CallOption) (*UpdateEventCouponResponse, error) {
	out := new(UpdateEventCouponResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateEventCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetEventCoupon(ctx context.Context, in *GetEventCouponRequest, opts ...grpc.CallOption) (*GetEventCouponResponse, error) {
	out := new(GetEventCouponResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetEventCouponsByAppActivityEvent(ctx context.Context, in *GetEventCouponsByAppActivityEventRequest, opts ...grpc.CallOption) (*GetEventCouponsByAppActivityEventResponse, error) {
	out := new(GetEventCouponsByAppActivityEventResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByAppActivityEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetEventCouponsByApp(ctx context.Context, in *GetEventCouponsByAppRequest, opts ...grpc.CallOption) (*GetEventCouponsByAppResponse, error) {
	out := new(GetEventCouponsByAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudHashingInspireClient) GetEventCouponsByOtherApp(ctx context.Context, in *GetEventCouponsByOtherAppRequest, opts ...grpc.CallOption) (*GetEventCouponsByOtherAppResponse, error) {
	out := new(GetEventCouponsByOtherAppResponse)
	err := c.cc.Invoke(ctx, "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByOtherApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudHashingInspireServer is the server API for CloudHashingInspire service.
// All implementations must embed UnimplementedCloudHashingInspireServer
// for forward compatibility
type CloudHashingInspireServer interface {
	// Method Version
	Version(context.Context, *emptypb.Empty) (*npool.VersionResponse, error)
	CreateCommissionCoinSetting(context.Context, *CreateCommissionCoinSettingRequest) (*CreateCommissionCoinSettingResponse, error)
	UpdateCommissionCoinSetting(context.Context, *UpdateCommissionCoinSettingRequest) (*UpdateCommissionCoinSettingResponse, error)
	GetCommissionCoinSettings(context.Context, *GetCommissionCoinSettingsRequest) (*GetCommissionCoinSettingsResponse, error)
	CreateAppCommissionSetting(context.Context, *CreateAppCommissionSettingRequest) (*CreateAppCommissionSettingResponse, error)
	CreateAppCommissionSettingForOtherApp(context.Context, *CreateAppCommissionSettingForOtherAppRequest) (*CreateAppCommissionSettingForOtherAppResponse, error)
	UpdateAppCommissionSetting(context.Context, *UpdateAppCommissionSettingRequest) (*UpdateAppCommissionSettingResponse, error)
	GetAppCommissionSetting(context.Context, *GetAppCommissionSettingRequest) (*GetAppCommissionSettingResponse, error)
	GetAppCommissionSettingByApp(context.Context, *GetAppCommissionSettingByAppRequest) (*GetAppCommissionSettingByAppResponse, error)
	GetAppCommissionSettingByOtherApp(context.Context, *GetAppCommissionSettingByOtherAppRequest) (*GetAppCommissionSettingByOtherAppResponse, error)
	CreateAppInvitationSetting(context.Context, *CreateAppInvitationSettingRequest) (*CreateAppInvitationSettingResponse, error)
	CreateAppInvitationSettingForOtherApp(context.Context, *CreateAppInvitationSettingForOtherAppRequest) (*CreateAppInvitationSettingForOtherAppResponse, error)
	GetAppInvitationSetting(context.Context, *GetAppInvitationSettingRequest) (*GetAppInvitationSettingResponse, error)
	GetAppInvitationSettingsByApp(context.Context, *GetAppInvitationSettingsByAppRequest) (*GetAppInvitationSettingsByAppResponse, error)
	GetAppInvitationSettingsByOtherApp(context.Context, *GetAppInvitationSettingsByOtherAppRequest) (*GetAppInvitationSettingsByOtherAppResponse, error)
	UpdateAppInvitationSetting(context.Context, *UpdateAppInvitationSettingRequest) (*UpdateAppInvitationSettingResponse, error)
	CreateAppPurchaseAmountSetting(context.Context, *CreateAppPurchaseAmountSettingRequest) (*CreateAppPurchaseAmountSettingResponse, error)
	CreateAppPurchaseAmountSettingForOtherApp(context.Context, *CreateAppPurchaseAmountSettingForOtherAppRequest) (*CreateAppPurchaseAmountSettingForOtherAppResponse, error)
	CreateAppPurchaseAmountSettingForOtherAppUser(context.Context, *CreateAppPurchaseAmountSettingForOtherAppUserRequest) (*CreateAppPurchaseAmountSettingForOtherAppUserResponse, error)
	CreateAppPurchaseAmountSettingForAppOtherUser(context.Context, *CreateAppPurchaseAmountSettingForAppOtherUserRequest) (*CreateAppPurchaseAmountSettingForAppOtherUserResponse, error)
	UpdateAppPurchaseAmountSetting(context.Context, *UpdateAppPurchaseAmountSettingRequest) (*UpdateAppPurchaseAmountSettingResponse, error)
	GetAppPurchaseAmountSetting(context.Context, *GetAppPurchaseAmountSettingRequest) (*GetAppPurchaseAmountSettingResponse, error)
	GetAppPurchaseAmountSettingsByApp(context.Context, *GetAppPurchaseAmountSettingsByAppRequest) (*GetAppPurchaseAmountSettingsByAppResponse, error)
	GetAppPurchaseAmountSettingsByAppUser(context.Context, *GetAppPurchaseAmountSettingsByAppUserRequest) (*GetAppPurchaseAmountSettingsByAppUserResponse, error)
	GetAppPurchaseAmountSettingsByOtherApp(context.Context, *GetAppPurchaseAmountSettingsByOtherAppRequest) (*GetAppPurchaseAmountSettingsByOtherAppResponse, error)
	GetAppPurchaseAmountSettingsByOtherAppUser(context.Context, *GetAppPurchaseAmountSettingsByOtherAppUserRequest) (*GetAppPurchaseAmountSettingsByOtherAppUserResponse, error)
	CreateRegistrationInvitation(context.Context, *CreateRegistrationInvitationRequest) (*CreateRegistrationInvitationResponse, error)
	CreateRegistrationInvitationRevert(context.Context, *CreateRegistrationInvitationRequest) (*CreateRegistrationInvitationResponse, error)
	UpdateRegistrationInvitation(context.Context, *UpdateRegistrationInvitationRequest) (*UpdateRegistrationInvitationResponse, error)
	GetRegistrationInvitation(context.Context, *GetRegistrationInvitationRequest) (*GetRegistrationInvitationResponse, error)
	GetRegistrationInvitationsByApp(context.Context, *GetRegistrationInvitationsByAppRequest) (*GetRegistrationInvitationsByAppResponse, error)
	GetRegistrationInvitationsByOtherApp(context.Context, *GetRegistrationInvitationsByOtherAppRequest) (*GetRegistrationInvitationsByOtherAppResponse, error)
	GetRegistrationInvitationsByAppInviter(context.Context, *GetRegistrationInvitationsByAppInviterRequest) (*GetRegistrationInvitationsByAppInviterResponse, error)
	GetRegistrationInvitationByAppInvitee(context.Context, *GetRegistrationInvitationByAppInviteeRequest) (*GetRegistrationInvitationByAppInviteeResponse, error)
	CreateUserInvitationCode(context.Context, *CreateUserInvitationCodeRequest) (*CreateUserInvitationCodeResponse, error)
	CreateUserInvitationCodeForOtherAppUser(context.Context, *CreateUserInvitationCodeForOtherAppUserRequest) (*CreateUserInvitationCodeForOtherAppUserResponse, error)
	CreateUserInvitationCodeForAppOtherUser(context.Context, *CreateUserInvitationCodeForAppOtherUserRequest) (*CreateUserInvitationCodeForAppOtherUserResponse, error)
	GetUserInvitationCode(context.Context, *GetUserInvitationCodeRequest) (*GetUserInvitationCodeResponse, error)
	GetUserInvitationCodeByAppUser(context.Context, *GetUserInvitationCodeByAppUserRequest) (*GetUserInvitationCodeByAppUserResponse, error)
	GetUserInvitationCodes(context.Context, *GetUserInvitationCodesRequest) (*GetUserInvitationCodesResponse, error)
	GetUserInvitationCodesByApp(context.Context, *GetUserInvitationCodesByAppRequest) (*GetUserInvitationCodesByAppResponse, error)
	GetUserInvitationCodesByOtherApp(context.Context, *GetUserInvitationCodesByOtherAppRequest) (*GetUserInvitationCodesByOtherAppResponse, error)
	GetUserInvitationCodeByCode(context.Context, *GetUserInvitationCodeByCodeRequest) (*GetUserInvitationCodeByCodeResponse, error)
	CreateCouponAllocated(context.Context, *CreateCouponAllocatedRequest) (*CreateCouponAllocatedResponse, error)
	CreateCouponAllocatedForAppOtherUser(context.Context, *CreateCouponAllocatedForAppOtherUserRequest) (*CreateCouponAllocatedForAppOtherUserResponse, error)
	CreateCouponAllocatedForOtherAppUser(context.Context, *CreateCouponAllocatedForOtherAppUserRequest) (*CreateCouponAllocatedForOtherAppUserResponse, error)
	GetCouponAllocated(context.Context, *GetCouponAllocatedRequest) (*GetCouponAllocatedResponse, error)
	GetCouponsAllocatedByApp(context.Context, *GetCouponsAllocatedByAppRequest) (*GetCouponsAllocatedByAppResponse, error)
	GetCouponsAllocatedByOtherApp(context.Context, *GetCouponsAllocatedByOtherAppRequest) (*GetCouponsAllocatedByOtherAppResponse, error)
	GetCouponsAllocatedByAppUser(context.Context, *GetCouponsAllocatedByAppUserRequest) (*GetCouponsAllocatedByAppUserResponse, error)
	UpdateCouponAllocated(context.Context, *UpdateCouponAllocatedRequest) (*UpdateCouponAllocatedResponse, error)
	GetCouponAllocatedDetail(context.Context, *GetCouponAllocatedDetailRequest) (*GetCouponAllocatedDetailResponse, error)
	GetCouponsAllocatedDetailByApp(context.Context, *GetCouponsAllocatedDetailByAppRequest) (*GetCouponsAllocatedDetailByAppResponse, error)
	GetCouponsAllocatedDetailByAppUser(context.Context, *GetCouponsAllocatedDetailByAppUserRequest) (*GetCouponsAllocatedDetailByAppUserResponse, error)
	CreateCouponPool(context.Context, *CreateCouponPoolRequest) (*CreateCouponPoolResponse, error)
	CreateCouponPoolForOtherApp(context.Context, *CreateCouponPoolForOtherAppRequest) (*CreateCouponPoolForOtherAppResponse, error)
	UpdateCouponPool(context.Context, *UpdateCouponPoolRequest) (*UpdateCouponPoolResponse, error)
	GetCouponPool(context.Context, *GetCouponPoolRequest) (*GetCouponPoolResponse, error)
	GetCouponPoolsByApp(context.Context, *GetCouponPoolsByAppRequest) (*GetCouponPoolsByAppResponse, error)
	GetCouponPoolsByOtherApp(context.Context, *GetCouponPoolsByOtherAppRequest) (*GetCouponPoolsByOtherAppResponse, error)
	GetCouponPoolsByAppReleaser(context.Context, *GetCouponPoolsByAppReleaserRequest) (*GetCouponPoolsByAppReleaserResponse, error)
	GetCouponPoolsByOtherAppReleaser(context.Context, *GetCouponPoolsByOtherAppReleaserRequest) (*GetCouponPoolsByOtherAppReleaserResponse, error)
	CreateDiscountPool(context.Context, *CreateDiscountPoolRequest) (*CreateDiscountPoolResponse, error)
	CreateDiscountPoolForOtherApp(context.Context, *CreateDiscountPoolForOtherAppRequest) (*CreateDiscountPoolForOtherAppResponse, error)
	UpdateDiscountPool(context.Context, *UpdateDiscountPoolRequest) (*UpdateDiscountPoolResponse, error)
	GetDiscountPool(context.Context, *GetDiscountPoolRequest) (*GetDiscountPoolResponse, error)
	GetDiscountPoolsByApp(context.Context, *GetDiscountPoolsByAppRequest) (*GetDiscountPoolsByAppResponse, error)
	GetDiscountPoolsByOtherApp(context.Context, *GetDiscountPoolsByOtherAppRequest) (*GetDiscountPoolsByOtherAppResponse, error)
	GetDiscountPoolsByAppReleaser(context.Context, *GetDiscountPoolsByAppReleaserRequest) (*GetDiscountPoolsByAppReleaserResponse, error)
	GetDiscountPoolsByOtherAppReleaser(context.Context, *GetDiscountPoolsByOtherAppReleaserRequest) (*GetDiscountPoolsByOtherAppReleaserResponse, error)
	CreateAppCouponSetting(context.Context, *CreateAppCouponSettingRequest) (*CreateAppCouponSettingResponse, error)
	GetAppCouponSetting(context.Context, *GetAppCouponSettingRequest) (*GetAppCouponSettingResponse, error)
	GetAppCouponSettingByApp(context.Context, *GetAppCouponSettingByAppRequest) (*GetAppCouponSettingByAppResponse, error)
	UpdateAppCouponSetting(context.Context, *UpdateAppCouponSettingRequest) (*UpdateAppCouponSettingResponse, error)
	CreateDefaultKpiSetting(context.Context, *CreateDefaultKpiSettingRequest) (*CreateDefaultKpiSettingResponse, error)
	GetDefaultKpiSetting(context.Context, *GetDefaultKpiSettingRequest) (*GetDefaultKpiSettingResponse, error)
	GetDefaultKpiSettingByAppGood(context.Context, *GetDefaultKpiSettingByAppGoodRequest) (*GetDefaultKpiSettingByAppGoodResponse, error)
	UpdateDefaultKpiSetting(context.Context, *UpdateDefaultKpiSettingRequest) (*UpdateDefaultKpiSettingResponse, error)
	CreateUserKpiSetting(context.Context, *CreateUserKpiSettingRequest) (*CreateUserKpiSettingResponse, error)
	GetUserKpiSetting(context.Context, *GetUserKpiSettingRequest) (*GetUserKpiSettingResponse, error)
	GetUserKpiSettingByAppGood(context.Context, *GetUserKpiSettingByAppGoodRequest) (*GetUserKpiSettingByAppGoodResponse, error)
	UpdateUserKpiSetting(context.Context, *UpdateUserKpiSettingRequest) (*UpdateUserKpiSettingResponse, error)
	CreateUserSpecialReduction(context.Context, *CreateUserSpecialReductionRequest) (*CreateUserSpecialReductionResponse, error)
	CreateUserSpecialReductionForAppOtherUser(context.Context, *CreateUserSpecialReductionForAppOtherUserRequest) (*CreateUserSpecialReductionForAppOtherUserResponse, error)
	CreateUserSpecialReductionForOtherAppUser(context.Context, *CreateUserSpecialReductionForOtherAppUserRequest) (*CreateUserSpecialReductionForOtherAppUserResponse, error)
	GetUserSpecialReduction(context.Context, *GetUserSpecialReductionRequest) (*GetUserSpecialReductionResponse, error)
	GetUserSpecialReductionsByApp(context.Context, *GetUserSpecialReductionsByAppRequest) (*GetUserSpecialReductionsByAppResponse, error)
	GetUserSpecialReductionsByOtherApp(context.Context, *GetUserSpecialReductionsByOtherAppRequest) (*GetUserSpecialReductionsByOtherAppResponse, error)
	GetUserSpecialReductionsByAppReleaser(context.Context, *GetUserSpecialReductionsByAppReleaserRequest) (*GetUserSpecialReductionsByAppReleaserResponse, error)
	GetUserSpecialReductionsByAppUser(context.Context, *GetUserSpecialReductionsByAppUserRequest) (*GetUserSpecialReductionsByAppUserResponse, error)
	UpdateUserSpecialReduction(context.Context, *UpdateUserSpecialReductionRequest) (*UpdateUserSpecialReductionResponse, error)
	CreateActivity(context.Context, *CreateActivityRequest) (*CreateActivityResponse, error)
	CreateActivityForOtherApp(context.Context, *CreateActivityForOtherAppRequest) (*CreateActivityForOtherAppResponse, error)
	UpdateActivity(context.Context, *UpdateActivityRequest) (*UpdateActivityResponse, error)
	GetActivity(context.Context, *GetActivityRequest) (*GetActivityResponse, error)
	GetActivityByAppName(context.Context, *GetActivityByAppNameRequest) (*GetActivityByAppNameResponse, error)
	GetActivitiesByApp(context.Context, *GetActivitiesByAppRequest) (*GetActivitiesByAppResponse, error)
	GetActivitiesByOtherApp(context.Context, *GetActivitiesByOtherAppRequest) (*GetActivitiesByOtherAppResponse, error)
	CreateEventCoupon(context.Context, *CreateEventCouponRequest) (*CreateEventCouponResponse, error)
	CreateEventCouponForOtherApp(context.Context, *CreateEventCouponForOtherAppRequest) (*CreateEventCouponForOtherAppResponse, error)
	UpdateEventCoupon(context.Context, *UpdateEventCouponRequest) (*UpdateEventCouponResponse, error)
	GetEventCoupon(context.Context, *GetEventCouponRequest) (*GetEventCouponResponse, error)
	GetEventCouponsByAppActivityEvent(context.Context, *GetEventCouponsByAppActivityEventRequest) (*GetEventCouponsByAppActivityEventResponse, error)
	GetEventCouponsByApp(context.Context, *GetEventCouponsByAppRequest) (*GetEventCouponsByAppResponse, error)
	GetEventCouponsByOtherApp(context.Context, *GetEventCouponsByOtherAppRequest) (*GetEventCouponsByOtherAppResponse, error)
	mustEmbedUnimplementedCloudHashingInspireServer()
}

// UnimplementedCloudHashingInspireServer must be embedded to have forward compatible implementations.
type UnimplementedCloudHashingInspireServer struct {
}

func (UnimplementedCloudHashingInspireServer) Version(context.Context, *emptypb.Empty) (*npool.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCommissionCoinSetting(context.Context, *CreateCommissionCoinSettingRequest) (*CreateCommissionCoinSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommissionCoinSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateCommissionCoinSetting(context.Context, *UpdateCommissionCoinSettingRequest) (*UpdateCommissionCoinSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommissionCoinSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCommissionCoinSettings(context.Context, *GetCommissionCoinSettingsRequest) (*GetCommissionCoinSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommissionCoinSettings not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppCommissionSetting(context.Context, *CreateAppCommissionSettingRequest) (*CreateAppCommissionSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppCommissionSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppCommissionSettingForOtherApp(context.Context, *CreateAppCommissionSettingForOtherAppRequest) (*CreateAppCommissionSettingForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppCommissionSettingForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateAppCommissionSetting(context.Context, *UpdateAppCommissionSettingRequest) (*UpdateAppCommissionSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppCommissionSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppCommissionSetting(context.Context, *GetAppCommissionSettingRequest) (*GetAppCommissionSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppCommissionSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppCommissionSettingByApp(context.Context, *GetAppCommissionSettingByAppRequest) (*GetAppCommissionSettingByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppCommissionSettingByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppCommissionSettingByOtherApp(context.Context, *GetAppCommissionSettingByOtherAppRequest) (*GetAppCommissionSettingByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppCommissionSettingByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppInvitationSetting(context.Context, *CreateAppInvitationSettingRequest) (*CreateAppInvitationSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppInvitationSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppInvitationSettingForOtherApp(context.Context, *CreateAppInvitationSettingForOtherAppRequest) (*CreateAppInvitationSettingForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppInvitationSettingForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppInvitationSetting(context.Context, *GetAppInvitationSettingRequest) (*GetAppInvitationSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInvitationSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppInvitationSettingsByApp(context.Context, *GetAppInvitationSettingsByAppRequest) (*GetAppInvitationSettingsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInvitationSettingsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppInvitationSettingsByOtherApp(context.Context, *GetAppInvitationSettingsByOtherAppRequest) (*GetAppInvitationSettingsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInvitationSettingsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateAppInvitationSetting(context.Context, *UpdateAppInvitationSettingRequest) (*UpdateAppInvitationSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppInvitationSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppPurchaseAmountSetting(context.Context, *CreateAppPurchaseAmountSettingRequest) (*CreateAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppPurchaseAmountSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppPurchaseAmountSettingForOtherApp(context.Context, *CreateAppPurchaseAmountSettingForOtherAppRequest) (*CreateAppPurchaseAmountSettingForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppPurchaseAmountSettingForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppPurchaseAmountSettingForOtherAppUser(context.Context, *CreateAppPurchaseAmountSettingForOtherAppUserRequest) (*CreateAppPurchaseAmountSettingForOtherAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppPurchaseAmountSettingForOtherAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppPurchaseAmountSettingForAppOtherUser(context.Context, *CreateAppPurchaseAmountSettingForAppOtherUserRequest) (*CreateAppPurchaseAmountSettingForAppOtherUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppPurchaseAmountSettingForAppOtherUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateAppPurchaseAmountSetting(context.Context, *UpdateAppPurchaseAmountSettingRequest) (*UpdateAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppPurchaseAmountSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppPurchaseAmountSetting(context.Context, *GetAppPurchaseAmountSettingRequest) (*GetAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppPurchaseAmountSettingsByApp(context.Context, *GetAppPurchaseAmountSettingsByAppRequest) (*GetAppPurchaseAmountSettingsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSettingsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppPurchaseAmountSettingsByAppUser(context.Context, *GetAppPurchaseAmountSettingsByAppUserRequest) (*GetAppPurchaseAmountSettingsByAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSettingsByAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppPurchaseAmountSettingsByOtherApp(context.Context, *GetAppPurchaseAmountSettingsByOtherAppRequest) (*GetAppPurchaseAmountSettingsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSettingsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppPurchaseAmountSettingsByOtherAppUser(context.Context, *GetAppPurchaseAmountSettingsByOtherAppUserRequest) (*GetAppPurchaseAmountSettingsByOtherAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSettingsByOtherAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateRegistrationInvitation(context.Context, *CreateRegistrationInvitationRequest) (*CreateRegistrationInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRegistrationInvitation not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateRegistrationInvitationRevert(context.Context, *CreateRegistrationInvitationRequest) (*CreateRegistrationInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRegistrationInvitationRevert not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateRegistrationInvitation(context.Context, *UpdateRegistrationInvitationRequest) (*UpdateRegistrationInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRegistrationInvitation not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetRegistrationInvitation(context.Context, *GetRegistrationInvitationRequest) (*GetRegistrationInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationInvitation not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetRegistrationInvitationsByApp(context.Context, *GetRegistrationInvitationsByAppRequest) (*GetRegistrationInvitationsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationInvitationsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetRegistrationInvitationsByOtherApp(context.Context, *GetRegistrationInvitationsByOtherAppRequest) (*GetRegistrationInvitationsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationInvitationsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetRegistrationInvitationsByAppInviter(context.Context, *GetRegistrationInvitationsByAppInviterRequest) (*GetRegistrationInvitationsByAppInviterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationInvitationsByAppInviter not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetRegistrationInvitationByAppInvitee(context.Context, *GetRegistrationInvitationByAppInviteeRequest) (*GetRegistrationInvitationByAppInviteeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationInvitationByAppInvitee not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserInvitationCode(context.Context, *CreateUserInvitationCodeRequest) (*CreateUserInvitationCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserInvitationCode not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserInvitationCodeForOtherAppUser(context.Context, *CreateUserInvitationCodeForOtherAppUserRequest) (*CreateUserInvitationCodeForOtherAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserInvitationCodeForOtherAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserInvitationCodeForAppOtherUser(context.Context, *CreateUserInvitationCodeForAppOtherUserRequest) (*CreateUserInvitationCodeForAppOtherUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserInvitationCodeForAppOtherUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCode(context.Context, *GetUserInvitationCodeRequest) (*GetUserInvitationCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCode not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCodeByAppUser(context.Context, *GetUserInvitationCodeByAppUserRequest) (*GetUserInvitationCodeByAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCodeByAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCodes(context.Context, *GetUserInvitationCodesRequest) (*GetUserInvitationCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCodes not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCodesByApp(context.Context, *GetUserInvitationCodesByAppRequest) (*GetUserInvitationCodesByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCodesByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCodesByOtherApp(context.Context, *GetUserInvitationCodesByOtherAppRequest) (*GetUserInvitationCodesByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCodesByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserInvitationCodeByCode(context.Context, *GetUserInvitationCodeByCodeRequest) (*GetUserInvitationCodeByCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInvitationCodeByCode not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCouponAllocated(context.Context, *CreateCouponAllocatedRequest) (*CreateCouponAllocatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponAllocated not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCouponAllocatedForAppOtherUser(context.Context, *CreateCouponAllocatedForAppOtherUserRequest) (*CreateCouponAllocatedForAppOtherUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponAllocatedForAppOtherUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCouponAllocatedForOtherAppUser(context.Context, *CreateCouponAllocatedForOtherAppUserRequest) (*CreateCouponAllocatedForOtherAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponAllocatedForOtherAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponAllocated(context.Context, *GetCouponAllocatedRequest) (*GetCouponAllocatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponAllocated not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponsAllocatedByApp(context.Context, *GetCouponsAllocatedByAppRequest) (*GetCouponsAllocatedByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponsAllocatedByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponsAllocatedByOtherApp(context.Context, *GetCouponsAllocatedByOtherAppRequest) (*GetCouponsAllocatedByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponsAllocatedByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponsAllocatedByAppUser(context.Context, *GetCouponsAllocatedByAppUserRequest) (*GetCouponsAllocatedByAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponsAllocatedByAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateCouponAllocated(context.Context, *UpdateCouponAllocatedRequest) (*UpdateCouponAllocatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponAllocated not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponAllocatedDetail(context.Context, *GetCouponAllocatedDetailRequest) (*GetCouponAllocatedDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponAllocatedDetail not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponsAllocatedDetailByApp(context.Context, *GetCouponsAllocatedDetailByAppRequest) (*GetCouponsAllocatedDetailByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponsAllocatedDetailByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponsAllocatedDetailByAppUser(context.Context, *GetCouponsAllocatedDetailByAppUserRequest) (*GetCouponsAllocatedDetailByAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponsAllocatedDetailByAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCouponPool(context.Context, *CreateCouponPoolRequest) (*CreateCouponPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateCouponPoolForOtherApp(context.Context, *CreateCouponPoolForOtherAppRequest) (*CreateCouponPoolForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponPoolForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateCouponPool(context.Context, *UpdateCouponPoolRequest) (*UpdateCouponPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponPool(context.Context, *GetCouponPoolRequest) (*GetCouponPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponPoolsByApp(context.Context, *GetCouponPoolsByAppRequest) (*GetCouponPoolsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponPoolsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponPoolsByOtherApp(context.Context, *GetCouponPoolsByOtherAppRequest) (*GetCouponPoolsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponPoolsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponPoolsByAppReleaser(context.Context, *GetCouponPoolsByAppReleaserRequest) (*GetCouponPoolsByAppReleaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponPoolsByAppReleaser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetCouponPoolsByOtherAppReleaser(context.Context, *GetCouponPoolsByOtherAppReleaserRequest) (*GetCouponPoolsByOtherAppReleaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponPoolsByOtherAppReleaser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateDiscountPool(context.Context, *CreateDiscountPoolRequest) (*CreateDiscountPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscountPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateDiscountPoolForOtherApp(context.Context, *CreateDiscountPoolForOtherAppRequest) (*CreateDiscountPoolForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscountPoolForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateDiscountPool(context.Context, *UpdateDiscountPoolRequest) (*UpdateDiscountPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDiscountPool(context.Context, *GetDiscountPoolRequest) (*GetDiscountPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountPool not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDiscountPoolsByApp(context.Context, *GetDiscountPoolsByAppRequest) (*GetDiscountPoolsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountPoolsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDiscountPoolsByOtherApp(context.Context, *GetDiscountPoolsByOtherAppRequest) (*GetDiscountPoolsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountPoolsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDiscountPoolsByAppReleaser(context.Context, *GetDiscountPoolsByAppReleaserRequest) (*GetDiscountPoolsByAppReleaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountPoolsByAppReleaser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDiscountPoolsByOtherAppReleaser(context.Context, *GetDiscountPoolsByOtherAppReleaserRequest) (*GetDiscountPoolsByOtherAppReleaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountPoolsByOtherAppReleaser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateAppCouponSetting(context.Context, *CreateAppCouponSettingRequest) (*CreateAppCouponSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppCouponSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppCouponSetting(context.Context, *GetAppCouponSettingRequest) (*GetAppCouponSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppCouponSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetAppCouponSettingByApp(context.Context, *GetAppCouponSettingByAppRequest) (*GetAppCouponSettingByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppCouponSettingByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateAppCouponSetting(context.Context, *UpdateAppCouponSettingRequest) (*UpdateAppCouponSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppCouponSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateDefaultKpiSetting(context.Context, *CreateDefaultKpiSettingRequest) (*CreateDefaultKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefaultKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDefaultKpiSetting(context.Context, *GetDefaultKpiSettingRequest) (*GetDefaultKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetDefaultKpiSettingByAppGood(context.Context, *GetDefaultKpiSettingByAppGoodRequest) (*GetDefaultKpiSettingByAppGoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultKpiSettingByAppGood not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateDefaultKpiSetting(context.Context, *UpdateDefaultKpiSettingRequest) (*UpdateDefaultKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDefaultKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserKpiSetting(context.Context, *CreateUserKpiSettingRequest) (*CreateUserKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserKpiSetting(context.Context, *GetUserKpiSettingRequest) (*GetUserKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserKpiSettingByAppGood(context.Context, *GetUserKpiSettingByAppGoodRequest) (*GetUserKpiSettingByAppGoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserKpiSettingByAppGood not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateUserKpiSetting(context.Context, *UpdateUserKpiSettingRequest) (*UpdateUserKpiSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserKpiSetting not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserSpecialReduction(context.Context, *CreateUserSpecialReductionRequest) (*CreateUserSpecialReductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserSpecialReduction not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserSpecialReductionForAppOtherUser(context.Context, *CreateUserSpecialReductionForAppOtherUserRequest) (*CreateUserSpecialReductionForAppOtherUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserSpecialReductionForAppOtherUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateUserSpecialReductionForOtherAppUser(context.Context, *CreateUserSpecialReductionForOtherAppUserRequest) (*CreateUserSpecialReductionForOtherAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserSpecialReductionForOtherAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserSpecialReduction(context.Context, *GetUserSpecialReductionRequest) (*GetUserSpecialReductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSpecialReduction not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserSpecialReductionsByApp(context.Context, *GetUserSpecialReductionsByAppRequest) (*GetUserSpecialReductionsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSpecialReductionsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserSpecialReductionsByOtherApp(context.Context, *GetUserSpecialReductionsByOtherAppRequest) (*GetUserSpecialReductionsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSpecialReductionsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserSpecialReductionsByAppReleaser(context.Context, *GetUserSpecialReductionsByAppReleaserRequest) (*GetUserSpecialReductionsByAppReleaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSpecialReductionsByAppReleaser not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetUserSpecialReductionsByAppUser(context.Context, *GetUserSpecialReductionsByAppUserRequest) (*GetUserSpecialReductionsByAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSpecialReductionsByAppUser not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateUserSpecialReduction(context.Context, *UpdateUserSpecialReductionRequest) (*UpdateUserSpecialReductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserSpecialReduction not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateActivity(context.Context, *CreateActivityRequest) (*CreateActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActivity not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateActivityForOtherApp(context.Context, *CreateActivityForOtherAppRequest) (*CreateActivityForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActivityForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateActivity(context.Context, *UpdateActivityRequest) (*UpdateActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActivity not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetActivity(context.Context, *GetActivityRequest) (*GetActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivity not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetActivityByAppName(context.Context, *GetActivityByAppNameRequest) (*GetActivityByAppNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivityByAppName not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetActivitiesByApp(context.Context, *GetActivitiesByAppRequest) (*GetActivitiesByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivitiesByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetActivitiesByOtherApp(context.Context, *GetActivitiesByOtherAppRequest) (*GetActivitiesByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivitiesByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateEventCoupon(context.Context, *CreateEventCouponRequest) (*CreateEventCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEventCoupon not implemented")
}
func (UnimplementedCloudHashingInspireServer) CreateEventCouponForOtherApp(context.Context, *CreateEventCouponForOtherAppRequest) (*CreateEventCouponForOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEventCouponForOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) UpdateEventCoupon(context.Context, *UpdateEventCouponRequest) (*UpdateEventCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEventCoupon not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetEventCoupon(context.Context, *GetEventCouponRequest) (*GetEventCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventCoupon not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetEventCouponsByAppActivityEvent(context.Context, *GetEventCouponsByAppActivityEventRequest) (*GetEventCouponsByAppActivityEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventCouponsByAppActivityEvent not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetEventCouponsByApp(context.Context, *GetEventCouponsByAppRequest) (*GetEventCouponsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventCouponsByApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) GetEventCouponsByOtherApp(context.Context, *GetEventCouponsByOtherAppRequest) (*GetEventCouponsByOtherAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventCouponsByOtherApp not implemented")
}
func (UnimplementedCloudHashingInspireServer) mustEmbedUnimplementedCloudHashingInspireServer() {}

// UnsafeCloudHashingInspireServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CloudHashingInspireServer will
// result in compilation errors.
type UnsafeCloudHashingInspireServer interface {
	mustEmbedUnimplementedCloudHashingInspireServer()
}

func RegisterCloudHashingInspireServer(s grpc.ServiceRegistrar, srv CloudHashingInspireServer) {
	s.RegisterService(&CloudHashingInspire_ServiceDesc, srv)
}

func _CloudHashingInspire_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).Version(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCommissionCoinSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommissionCoinSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCommissionCoinSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCommissionCoinSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCommissionCoinSetting(ctx, req.(*CreateCommissionCoinSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateCommissionCoinSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommissionCoinSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateCommissionCoinSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCommissionCoinSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateCommissionCoinSetting(ctx, req.(*UpdateCommissionCoinSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCommissionCoinSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommissionCoinSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCommissionCoinSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCommissionCoinSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCommissionCoinSettings(ctx, req.(*GetCommissionCoinSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppCommissionSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppCommissionSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppCommissionSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCommissionSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppCommissionSetting(ctx, req.(*CreateAppCommissionSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppCommissionSettingForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppCommissionSettingForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppCommissionSettingForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCommissionSettingForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppCommissionSettingForOtherApp(ctx, req.(*CreateAppCommissionSettingForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateAppCommissionSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppCommissionSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateAppCommissionSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppCommissionSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateAppCommissionSetting(ctx, req.(*UpdateAppCommissionSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppCommissionSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppCommissionSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppCommissionSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppCommissionSetting(ctx, req.(*GetAppCommissionSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppCommissionSettingByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppCommissionSettingByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppCommissionSettingByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSettingByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppCommissionSettingByApp(ctx, req.(*GetAppCommissionSettingByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppCommissionSettingByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppCommissionSettingByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppCommissionSettingByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCommissionSettingByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppCommissionSettingByOtherApp(ctx, req.(*GetAppCommissionSettingByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppInvitationSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppInvitationSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppInvitationSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppInvitationSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppInvitationSetting(ctx, req.(*CreateAppInvitationSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppInvitationSettingForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppInvitationSettingForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppInvitationSettingForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppInvitationSettingForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppInvitationSettingForOtherApp(ctx, req.(*CreateAppInvitationSettingForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppInvitationSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInvitationSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppInvitationSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppInvitationSetting(ctx, req.(*GetAppInvitationSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppInvitationSettingsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInvitationSettingsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppInvitationSettingsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSettingsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppInvitationSettingsByApp(ctx, req.(*GetAppInvitationSettingsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppInvitationSettingsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInvitationSettingsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppInvitationSettingsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppInvitationSettingsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppInvitationSettingsByOtherApp(ctx, req.(*GetAppInvitationSettingsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateAppInvitationSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppInvitationSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateAppInvitationSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppInvitationSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateAppInvitationSetting(ctx, req.(*UpdateAppInvitationSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSetting(ctx, req.(*CreateAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppPurchaseAmountSettingForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppPurchaseAmountSettingForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForOtherApp(ctx, req.(*CreateAppPurchaseAmountSettingForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppPurchaseAmountSettingForOtherAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppPurchaseAmountSettingForOtherAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForOtherAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForOtherAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForOtherAppUser(ctx, req.(*CreateAppPurchaseAmountSettingForOtherAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppPurchaseAmountSettingForAppOtherUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppPurchaseAmountSettingForAppOtherUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForAppOtherUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppPurchaseAmountSettingForAppOtherUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppPurchaseAmountSettingForAppOtherUser(ctx, req.(*CreateAppPurchaseAmountSettingForAppOtherUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateAppPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateAppPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateAppPurchaseAmountSetting(ctx, req.(*UpdateAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSetting(ctx, req.(*GetAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppPurchaseAmountSettingsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByApp(ctx, req.(*GetAppPurchaseAmountSettingsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppPurchaseAmountSettingsByAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingsByAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByAppUser(ctx, req.(*GetAppPurchaseAmountSettingsByAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppPurchaseAmountSettingsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByOtherApp(ctx, req.(*GetAppPurchaseAmountSettingsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppPurchaseAmountSettingsByOtherAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingsByOtherAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByOtherAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppPurchaseAmountSettingsByOtherAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppPurchaseAmountSettingsByOtherAppUser(ctx, req.(*GetAppPurchaseAmountSettingsByOtherAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateRegistrationInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegistrationInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateRegistrationInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateRegistrationInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateRegistrationInvitation(ctx, req.(*CreateRegistrationInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateRegistrationInvitationRevert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegistrationInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateRegistrationInvitationRevert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateRegistrationInvitationRevert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateRegistrationInvitationRevert(ctx, req.(*CreateRegistrationInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateRegistrationInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegistrationInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateRegistrationInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateRegistrationInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateRegistrationInvitation(ctx, req.(*UpdateRegistrationInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetRegistrationInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitation(ctx, req.(*GetRegistrationInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetRegistrationInvitationsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationInvitationsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByApp(ctx, req.(*GetRegistrationInvitationsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetRegistrationInvitationsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationInvitationsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByOtherApp(ctx, req.(*GetRegistrationInvitationsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetRegistrationInvitationsByAppInviter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationInvitationsByAppInviterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByAppInviter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationsByAppInviter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationsByAppInviter(ctx, req.(*GetRegistrationInvitationsByAppInviterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetRegistrationInvitationByAppInvitee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationInvitationByAppInviteeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationByAppInvitee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetRegistrationInvitationByAppInvitee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetRegistrationInvitationByAppInvitee(ctx, req.(*GetRegistrationInvitationByAppInviteeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserInvitationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserInvitationCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCode(ctx, req.(*CreateUserInvitationCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserInvitationCodeForOtherAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserInvitationCodeForOtherAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCodeForOtherAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCodeForOtherAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCodeForOtherAppUser(ctx, req.(*CreateUserInvitationCodeForOtherAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserInvitationCodeForAppOtherUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserInvitationCodeForAppOtherUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCodeForAppOtherUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserInvitationCodeForAppOtherUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserInvitationCodeForAppOtherUser(ctx, req.(*CreateUserInvitationCodeForAppOtherUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCode(ctx, req.(*GetUserInvitationCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCodeByAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodeByAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodeByAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodeByAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodeByAppUser(ctx, req.(*GetUserInvitationCodeByAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodes(ctx, req.(*GetUserInvitationCodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCodesByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodesByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodesByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodesByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodesByApp(ctx, req.(*GetUserInvitationCodesByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCodesByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodesByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodesByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodesByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodesByOtherApp(ctx, req.(*GetUserInvitationCodesByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserInvitationCodeByCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInvitationCodeByCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodeByCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserInvitationCodeByCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserInvitationCodeByCode(ctx, req.(*GetUserInvitationCodeByCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCouponAllocated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponAllocatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCouponAllocated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCouponAllocated(ctx, req.(*CreateCouponAllocatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCouponAllocatedForAppOtherUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponAllocatedForAppOtherUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCouponAllocatedForAppOtherUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocatedForAppOtherUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCouponAllocatedForAppOtherUser(ctx, req.(*CreateCouponAllocatedForAppOtherUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCouponAllocatedForOtherAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponAllocatedForOtherAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCouponAllocatedForOtherAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponAllocatedForOtherAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCouponAllocatedForOtherAppUser(ctx, req.(*CreateCouponAllocatedForOtherAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponAllocated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponAllocatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponAllocated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponAllocated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponAllocated(ctx, req.(*GetCouponAllocatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponsAllocatedByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponsAllocatedByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByApp(ctx, req.(*GetCouponsAllocatedByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponsAllocatedByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponsAllocatedByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByOtherApp(ctx, req.(*GetCouponsAllocatedByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponsAllocatedByAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponsAllocatedByAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedByAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedByAppUser(ctx, req.(*GetCouponsAllocatedByAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateCouponAllocated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCouponAllocatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateCouponAllocated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCouponAllocated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateCouponAllocated(ctx, req.(*UpdateCouponAllocatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponAllocatedDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponAllocatedDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponAllocatedDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponAllocatedDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponAllocatedDetail(ctx, req.(*GetCouponAllocatedDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponsAllocatedDetailByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponsAllocatedDetailByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedDetailByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedDetailByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedDetailByApp(ctx, req.(*GetCouponsAllocatedDetailByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponsAllocatedDetailByAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponsAllocatedDetailByAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedDetailByAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponsAllocatedDetailByAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponsAllocatedDetailByAppUser(ctx, req.(*GetCouponsAllocatedDetailByAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCouponPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCouponPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCouponPool(ctx, req.(*CreateCouponPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateCouponPoolForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponPoolForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateCouponPoolForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateCouponPoolForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateCouponPoolForOtherApp(ctx, req.(*CreateCouponPoolForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateCouponPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCouponPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateCouponPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateCouponPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateCouponPool(ctx, req.(*UpdateCouponPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponPool(ctx, req.(*GetCouponPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponPoolsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponPoolsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByApp(ctx, req.(*GetCouponPoolsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponPoolsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponPoolsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByOtherApp(ctx, req.(*GetCouponPoolsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponPoolsByAppReleaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponPoolsByAppReleaserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByAppReleaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByAppReleaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByAppReleaser(ctx, req.(*GetCouponPoolsByAppReleaserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetCouponPoolsByOtherAppReleaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouponPoolsByOtherAppReleaserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByOtherAppReleaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetCouponPoolsByOtherAppReleaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetCouponPoolsByOtherAppReleaser(ctx, req.(*GetCouponPoolsByOtherAppReleaserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateDiscountPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDiscountPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateDiscountPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDiscountPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateDiscountPool(ctx, req.(*CreateDiscountPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateDiscountPoolForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDiscountPoolForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateDiscountPoolForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDiscountPoolForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateDiscountPoolForOtherApp(ctx, req.(*CreateDiscountPoolForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateDiscountPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDiscountPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateDiscountPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateDiscountPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateDiscountPool(ctx, req.(*UpdateDiscountPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDiscountPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDiscountPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDiscountPool(ctx, req.(*GetDiscountPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDiscountPoolsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountPoolsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByApp(ctx, req.(*GetDiscountPoolsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDiscountPoolsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountPoolsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByOtherApp(ctx, req.(*GetDiscountPoolsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDiscountPoolsByAppReleaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountPoolsByAppReleaserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByAppReleaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByAppReleaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByAppReleaser(ctx, req.(*GetDiscountPoolsByAppReleaserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDiscountPoolsByOtherAppReleaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountPoolsByOtherAppReleaserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByOtherAppReleaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDiscountPoolsByOtherAppReleaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDiscountPoolsByOtherAppReleaser(ctx, req.(*GetDiscountPoolsByOtherAppReleaserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateAppCouponSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppCouponSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateAppCouponSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateAppCouponSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateAppCouponSetting(ctx, req.(*CreateAppCouponSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppCouponSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppCouponSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppCouponSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCouponSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppCouponSetting(ctx, req.(*GetAppCouponSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetAppCouponSettingByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppCouponSettingByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetAppCouponSettingByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetAppCouponSettingByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetAppCouponSettingByApp(ctx, req.(*GetAppCouponSettingByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateAppCouponSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppCouponSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateAppCouponSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateAppCouponSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateAppCouponSetting(ctx, req.(*UpdateAppCouponSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateDefaultKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDefaultKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateDefaultKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateDefaultKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateDefaultKpiSetting(ctx, req.(*CreateDefaultKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDefaultKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDefaultKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDefaultKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDefaultKpiSetting(ctx, req.(*GetDefaultKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetDefaultKpiSettingByAppGood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultKpiSettingByAppGoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetDefaultKpiSettingByAppGood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetDefaultKpiSettingByAppGood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetDefaultKpiSettingByAppGood(ctx, req.(*GetDefaultKpiSettingByAppGoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateDefaultKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDefaultKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateDefaultKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateDefaultKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateDefaultKpiSetting(ctx, req.(*UpdateDefaultKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserKpiSetting(ctx, req.(*CreateUserKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserKpiSetting(ctx, req.(*GetUserKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserKpiSettingByAppGood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserKpiSettingByAppGoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserKpiSettingByAppGood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserKpiSettingByAppGood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserKpiSettingByAppGood(ctx, req.(*GetUserKpiSettingByAppGoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateUserKpiSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserKpiSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateUserKpiSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateUserKpiSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateUserKpiSetting(ctx, req.(*UpdateUserKpiSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserSpecialReduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserSpecialReductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReduction(ctx, req.(*CreateUserSpecialReductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserSpecialReductionForAppOtherUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserSpecialReductionForAppOtherUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReductionForAppOtherUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReductionForAppOtherUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReductionForAppOtherUser(ctx, req.(*CreateUserSpecialReductionForAppOtherUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateUserSpecialReductionForOtherAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserSpecialReductionForOtherAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReductionForOtherAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateUserSpecialReductionForOtherAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateUserSpecialReductionForOtherAppUser(ctx, req.(*CreateUserSpecialReductionForOtherAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserSpecialReduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSpecialReductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserSpecialReduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserSpecialReduction(ctx, req.(*GetUserSpecialReductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserSpecialReductionsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSpecialReductionsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByApp(ctx, req.(*GetUserSpecialReductionsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserSpecialReductionsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSpecialReductionsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByOtherApp(ctx, req.(*GetUserSpecialReductionsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserSpecialReductionsByAppReleaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSpecialReductionsByAppReleaserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByAppReleaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByAppReleaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByAppReleaser(ctx, req.(*GetUserSpecialReductionsByAppReleaserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetUserSpecialReductionsByAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSpecialReductionsByAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetUserSpecialReductionsByAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetUserSpecialReductionsByAppUser(ctx, req.(*GetUserSpecialReductionsByAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateUserSpecialReduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserSpecialReductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateUserSpecialReduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateUserSpecialReduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateUserSpecialReduction(ctx, req.(*UpdateUserSpecialReductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateActivity(ctx, req.(*CreateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateActivityForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActivityForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateActivityForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateActivityForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateActivityForOtherApp(ctx, req.(*CreateActivityForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateActivity(ctx, req.(*UpdateActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetActivity(ctx, req.(*GetActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetActivityByAppName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivityByAppNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetActivityByAppName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivityByAppName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetActivityByAppName(ctx, req.(*GetActivityByAppNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetActivitiesByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivitiesByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetActivitiesByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivitiesByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetActivitiesByApp(ctx, req.(*GetActivitiesByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetActivitiesByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActivitiesByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetActivitiesByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetActivitiesByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetActivitiesByOtherApp(ctx, req.(*GetActivitiesByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateEventCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateEventCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateEventCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateEventCoupon(ctx, req.(*CreateEventCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_CreateEventCouponForOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventCouponForOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).CreateEventCouponForOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/CreateEventCouponForOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).CreateEventCouponForOtherApp(ctx, req.(*CreateEventCouponForOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_UpdateEventCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).UpdateEventCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/UpdateEventCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).UpdateEventCoupon(ctx, req.(*UpdateEventCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetEventCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetEventCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetEventCoupon(ctx, req.(*GetEventCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetEventCouponsByAppActivityEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventCouponsByAppActivityEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetEventCouponsByAppActivityEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByAppActivityEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetEventCouponsByAppActivityEvent(ctx, req.(*GetEventCouponsByAppActivityEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetEventCouponsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventCouponsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetEventCouponsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetEventCouponsByApp(ctx, req.(*GetEventCouponsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudHashingInspire_GetEventCouponsByOtherApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventCouponsByOtherAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudHashingInspireServer).GetEventCouponsByOtherApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.hashing.inspire.v1.CloudHashingInspire/GetEventCouponsByOtherApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudHashingInspireServer).GetEventCouponsByOtherApp(ctx, req.(*GetEventCouponsByOtherAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CloudHashingInspire_ServiceDesc is the grpc.ServiceDesc for CloudHashingInspire service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CloudHashingInspire_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.hashing.inspire.v1.CloudHashingInspire",
	HandlerType: (*CloudHashingInspireServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _CloudHashingInspire_Version_Handler,
		},
		{
			MethodName: "CreateCommissionCoinSetting",
			Handler:    _CloudHashingInspire_CreateCommissionCoinSetting_Handler,
		},
		{
			MethodName: "UpdateCommissionCoinSetting",
			Handler:    _CloudHashingInspire_UpdateCommissionCoinSetting_Handler,
		},
		{
			MethodName: "GetCommissionCoinSettings",
			Handler:    _CloudHashingInspire_GetCommissionCoinSettings_Handler,
		},
		{
			MethodName: "CreateAppCommissionSetting",
			Handler:    _CloudHashingInspire_CreateAppCommissionSetting_Handler,
		},
		{
			MethodName: "CreateAppCommissionSettingForOtherApp",
			Handler:    _CloudHashingInspire_CreateAppCommissionSettingForOtherApp_Handler,
		},
		{
			MethodName: "UpdateAppCommissionSetting",
			Handler:    _CloudHashingInspire_UpdateAppCommissionSetting_Handler,
		},
		{
			MethodName: "GetAppCommissionSetting",
			Handler:    _CloudHashingInspire_GetAppCommissionSetting_Handler,
		},
		{
			MethodName: "GetAppCommissionSettingByApp",
			Handler:    _CloudHashingInspire_GetAppCommissionSettingByApp_Handler,
		},
		{
			MethodName: "GetAppCommissionSettingByOtherApp",
			Handler:    _CloudHashingInspire_GetAppCommissionSettingByOtherApp_Handler,
		},
		{
			MethodName: "CreateAppInvitationSetting",
			Handler:    _CloudHashingInspire_CreateAppInvitationSetting_Handler,
		},
		{
			MethodName: "CreateAppInvitationSettingForOtherApp",
			Handler:    _CloudHashingInspire_CreateAppInvitationSettingForOtherApp_Handler,
		},
		{
			MethodName: "GetAppInvitationSetting",
			Handler:    _CloudHashingInspire_GetAppInvitationSetting_Handler,
		},
		{
			MethodName: "GetAppInvitationSettingsByApp",
			Handler:    _CloudHashingInspire_GetAppInvitationSettingsByApp_Handler,
		},
		{
			MethodName: "GetAppInvitationSettingsByOtherApp",
			Handler:    _CloudHashingInspire_GetAppInvitationSettingsByOtherApp_Handler,
		},
		{
			MethodName: "UpdateAppInvitationSetting",
			Handler:    _CloudHashingInspire_UpdateAppInvitationSetting_Handler,
		},
		{
			MethodName: "CreateAppPurchaseAmountSetting",
			Handler:    _CloudHashingInspire_CreateAppPurchaseAmountSetting_Handler,
		},
		{
			MethodName: "CreateAppPurchaseAmountSettingForOtherApp",
			Handler:    _CloudHashingInspire_CreateAppPurchaseAmountSettingForOtherApp_Handler,
		},
		{
			MethodName: "CreateAppPurchaseAmountSettingForOtherAppUser",
			Handler:    _CloudHashingInspire_CreateAppPurchaseAmountSettingForOtherAppUser_Handler,
		},
		{
			MethodName: "CreateAppPurchaseAmountSettingForAppOtherUser",
			Handler:    _CloudHashingInspire_CreateAppPurchaseAmountSettingForAppOtherUser_Handler,
		},
		{
			MethodName: "UpdateAppPurchaseAmountSetting",
			Handler:    _CloudHashingInspire_UpdateAppPurchaseAmountSetting_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSetting",
			Handler:    _CloudHashingInspire_GetAppPurchaseAmountSetting_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSettingsByApp",
			Handler:    _CloudHashingInspire_GetAppPurchaseAmountSettingsByApp_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSettingsByAppUser",
			Handler:    _CloudHashingInspire_GetAppPurchaseAmountSettingsByAppUser_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSettingsByOtherApp",
			Handler:    _CloudHashingInspire_GetAppPurchaseAmountSettingsByOtherApp_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSettingsByOtherAppUser",
			Handler:    _CloudHashingInspire_GetAppPurchaseAmountSettingsByOtherAppUser_Handler,
		},
		{
			MethodName: "CreateRegistrationInvitation",
			Handler:    _CloudHashingInspire_CreateRegistrationInvitation_Handler,
		},
		{
			MethodName: "CreateRegistrationInvitationRevert",
			Handler:    _CloudHashingInspire_CreateRegistrationInvitationRevert_Handler,
		},
		{
			MethodName: "UpdateRegistrationInvitation",
			Handler:    _CloudHashingInspire_UpdateRegistrationInvitation_Handler,
		},
		{
			MethodName: "GetRegistrationInvitation",
			Handler:    _CloudHashingInspire_GetRegistrationInvitation_Handler,
		},
		{
			MethodName: "GetRegistrationInvitationsByApp",
			Handler:    _CloudHashingInspire_GetRegistrationInvitationsByApp_Handler,
		},
		{
			MethodName: "GetRegistrationInvitationsByOtherApp",
			Handler:    _CloudHashingInspire_GetRegistrationInvitationsByOtherApp_Handler,
		},
		{
			MethodName: "GetRegistrationInvitationsByAppInviter",
			Handler:    _CloudHashingInspire_GetRegistrationInvitationsByAppInviter_Handler,
		},
		{
			MethodName: "GetRegistrationInvitationByAppInvitee",
			Handler:    _CloudHashingInspire_GetRegistrationInvitationByAppInvitee_Handler,
		},
		{
			MethodName: "CreateUserInvitationCode",
			Handler:    _CloudHashingInspire_CreateUserInvitationCode_Handler,
		},
		{
			MethodName: "CreateUserInvitationCodeForOtherAppUser",
			Handler:    _CloudHashingInspire_CreateUserInvitationCodeForOtherAppUser_Handler,
		},
		{
			MethodName: "CreateUserInvitationCodeForAppOtherUser",
			Handler:    _CloudHashingInspire_CreateUserInvitationCodeForAppOtherUser_Handler,
		},
		{
			MethodName: "GetUserInvitationCode",
			Handler:    _CloudHashingInspire_GetUserInvitationCode_Handler,
		},
		{
			MethodName: "GetUserInvitationCodeByAppUser",
			Handler:    _CloudHashingInspire_GetUserInvitationCodeByAppUser_Handler,
		},
		{
			MethodName: "GetUserInvitationCodes",
			Handler:    _CloudHashingInspire_GetUserInvitationCodes_Handler,
		},
		{
			MethodName: "GetUserInvitationCodesByApp",
			Handler:    _CloudHashingInspire_GetUserInvitationCodesByApp_Handler,
		},
		{
			MethodName: "GetUserInvitationCodesByOtherApp",
			Handler:    _CloudHashingInspire_GetUserInvitationCodesByOtherApp_Handler,
		},
		{
			MethodName: "GetUserInvitationCodeByCode",
			Handler:    _CloudHashingInspire_GetUserInvitationCodeByCode_Handler,
		},
		{
			MethodName: "CreateCouponAllocated",
			Handler:    _CloudHashingInspire_CreateCouponAllocated_Handler,
		},
		{
			MethodName: "CreateCouponAllocatedForAppOtherUser",
			Handler:    _CloudHashingInspire_CreateCouponAllocatedForAppOtherUser_Handler,
		},
		{
			MethodName: "CreateCouponAllocatedForOtherAppUser",
			Handler:    _CloudHashingInspire_CreateCouponAllocatedForOtherAppUser_Handler,
		},
		{
			MethodName: "GetCouponAllocated",
			Handler:    _CloudHashingInspire_GetCouponAllocated_Handler,
		},
		{
			MethodName: "GetCouponsAllocatedByApp",
			Handler:    _CloudHashingInspire_GetCouponsAllocatedByApp_Handler,
		},
		{
			MethodName: "GetCouponsAllocatedByOtherApp",
			Handler:    _CloudHashingInspire_GetCouponsAllocatedByOtherApp_Handler,
		},
		{
			MethodName: "GetCouponsAllocatedByAppUser",
			Handler:    _CloudHashingInspire_GetCouponsAllocatedByAppUser_Handler,
		},
		{
			MethodName: "UpdateCouponAllocated",
			Handler:    _CloudHashingInspire_UpdateCouponAllocated_Handler,
		},
		{
			MethodName: "GetCouponAllocatedDetail",
			Handler:    _CloudHashingInspire_GetCouponAllocatedDetail_Handler,
		},
		{
			MethodName: "GetCouponsAllocatedDetailByApp",
			Handler:    _CloudHashingInspire_GetCouponsAllocatedDetailByApp_Handler,
		},
		{
			MethodName: "GetCouponsAllocatedDetailByAppUser",
			Handler:    _CloudHashingInspire_GetCouponsAllocatedDetailByAppUser_Handler,
		},
		{
			MethodName: "CreateCouponPool",
			Handler:    _CloudHashingInspire_CreateCouponPool_Handler,
		},
		{
			MethodName: "CreateCouponPoolForOtherApp",
			Handler:    _CloudHashingInspire_CreateCouponPoolForOtherApp_Handler,
		},
		{
			MethodName: "UpdateCouponPool",
			Handler:    _CloudHashingInspire_UpdateCouponPool_Handler,
		},
		{
			MethodName: "GetCouponPool",
			Handler:    _CloudHashingInspire_GetCouponPool_Handler,
		},
		{
			MethodName: "GetCouponPoolsByApp",
			Handler:    _CloudHashingInspire_GetCouponPoolsByApp_Handler,
		},
		{
			MethodName: "GetCouponPoolsByOtherApp",
			Handler:    _CloudHashingInspire_GetCouponPoolsByOtherApp_Handler,
		},
		{
			MethodName: "GetCouponPoolsByAppReleaser",
			Handler:    _CloudHashingInspire_GetCouponPoolsByAppReleaser_Handler,
		},
		{
			MethodName: "GetCouponPoolsByOtherAppReleaser",
			Handler:    _CloudHashingInspire_GetCouponPoolsByOtherAppReleaser_Handler,
		},
		{
			MethodName: "CreateDiscountPool",
			Handler:    _CloudHashingInspire_CreateDiscountPool_Handler,
		},
		{
			MethodName: "CreateDiscountPoolForOtherApp",
			Handler:    _CloudHashingInspire_CreateDiscountPoolForOtherApp_Handler,
		},
		{
			MethodName: "UpdateDiscountPool",
			Handler:    _CloudHashingInspire_UpdateDiscountPool_Handler,
		},
		{
			MethodName: "GetDiscountPool",
			Handler:    _CloudHashingInspire_GetDiscountPool_Handler,
		},
		{
			MethodName: "GetDiscountPoolsByApp",
			Handler:    _CloudHashingInspire_GetDiscountPoolsByApp_Handler,
		},
		{
			MethodName: "GetDiscountPoolsByOtherApp",
			Handler:    _CloudHashingInspire_GetDiscountPoolsByOtherApp_Handler,
		},
		{
			MethodName: "GetDiscountPoolsByAppReleaser",
			Handler:    _CloudHashingInspire_GetDiscountPoolsByAppReleaser_Handler,
		},
		{
			MethodName: "GetDiscountPoolsByOtherAppReleaser",
			Handler:    _CloudHashingInspire_GetDiscountPoolsByOtherAppReleaser_Handler,
		},
		{
			MethodName: "CreateAppCouponSetting",
			Handler:    _CloudHashingInspire_CreateAppCouponSetting_Handler,
		},
		{
			MethodName: "GetAppCouponSetting",
			Handler:    _CloudHashingInspire_GetAppCouponSetting_Handler,
		},
		{
			MethodName: "GetAppCouponSettingByApp",
			Handler:    _CloudHashingInspire_GetAppCouponSettingByApp_Handler,
		},
		{
			MethodName: "UpdateAppCouponSetting",
			Handler:    _CloudHashingInspire_UpdateAppCouponSetting_Handler,
		},
		{
			MethodName: "CreateDefaultKpiSetting",
			Handler:    _CloudHashingInspire_CreateDefaultKpiSetting_Handler,
		},
		{
			MethodName: "GetDefaultKpiSetting",
			Handler:    _CloudHashingInspire_GetDefaultKpiSetting_Handler,
		},
		{
			MethodName: "GetDefaultKpiSettingByAppGood",
			Handler:    _CloudHashingInspire_GetDefaultKpiSettingByAppGood_Handler,
		},
		{
			MethodName: "UpdateDefaultKpiSetting",
			Handler:    _CloudHashingInspire_UpdateDefaultKpiSetting_Handler,
		},
		{
			MethodName: "CreateUserKpiSetting",
			Handler:    _CloudHashingInspire_CreateUserKpiSetting_Handler,
		},
		{
			MethodName: "GetUserKpiSetting",
			Handler:    _CloudHashingInspire_GetUserKpiSetting_Handler,
		},
		{
			MethodName: "GetUserKpiSettingByAppGood",
			Handler:    _CloudHashingInspire_GetUserKpiSettingByAppGood_Handler,
		},
		{
			MethodName: "UpdateUserKpiSetting",
			Handler:    _CloudHashingInspire_UpdateUserKpiSetting_Handler,
		},
		{
			MethodName: "CreateUserSpecialReduction",
			Handler:    _CloudHashingInspire_CreateUserSpecialReduction_Handler,
		},
		{
			MethodName: "CreateUserSpecialReductionForAppOtherUser",
			Handler:    _CloudHashingInspire_CreateUserSpecialReductionForAppOtherUser_Handler,
		},
		{
			MethodName: "CreateUserSpecialReductionForOtherAppUser",
			Handler:    _CloudHashingInspire_CreateUserSpecialReductionForOtherAppUser_Handler,
		},
		{
			MethodName: "GetUserSpecialReduction",
			Handler:    _CloudHashingInspire_GetUserSpecialReduction_Handler,
		},
		{
			MethodName: "GetUserSpecialReductionsByApp",
			Handler:    _CloudHashingInspire_GetUserSpecialReductionsByApp_Handler,
		},
		{
			MethodName: "GetUserSpecialReductionsByOtherApp",
			Handler:    _CloudHashingInspire_GetUserSpecialReductionsByOtherApp_Handler,
		},
		{
			MethodName: "GetUserSpecialReductionsByAppReleaser",
			Handler:    _CloudHashingInspire_GetUserSpecialReductionsByAppReleaser_Handler,
		},
		{
			MethodName: "GetUserSpecialReductionsByAppUser",
			Handler:    _CloudHashingInspire_GetUserSpecialReductionsByAppUser_Handler,
		},
		{
			MethodName: "UpdateUserSpecialReduction",
			Handler:    _CloudHashingInspire_UpdateUserSpecialReduction_Handler,
		},
		{
			MethodName: "CreateActivity",
			Handler:    _CloudHashingInspire_CreateActivity_Handler,
		},
		{
			MethodName: "CreateActivityForOtherApp",
			Handler:    _CloudHashingInspire_CreateActivityForOtherApp_Handler,
		},
		{
			MethodName: "UpdateActivity",
			Handler:    _CloudHashingInspire_UpdateActivity_Handler,
		},
		{
			MethodName: "GetActivity",
			Handler:    _CloudHashingInspire_GetActivity_Handler,
		},
		{
			MethodName: "GetActivityByAppName",
			Handler:    _CloudHashingInspire_GetActivityByAppName_Handler,
		},
		{
			MethodName: "GetActivitiesByApp",
			Handler:    _CloudHashingInspire_GetActivitiesByApp_Handler,
		},
		{
			MethodName: "GetActivitiesByOtherApp",
			Handler:    _CloudHashingInspire_GetActivitiesByOtherApp_Handler,
		},
		{
			MethodName: "CreateEventCoupon",
			Handler:    _CloudHashingInspire_CreateEventCoupon_Handler,
		},
		{
			MethodName: "CreateEventCouponForOtherApp",
			Handler:    _CloudHashingInspire_CreateEventCouponForOtherApp_Handler,
		},
		{
			MethodName: "UpdateEventCoupon",
			Handler:    _CloudHashingInspire_UpdateEventCoupon_Handler,
		},
		{
			MethodName: "GetEventCoupon",
			Handler:    _CloudHashingInspire_GetEventCoupon_Handler,
		},
		{
			MethodName: "GetEventCouponsByAppActivityEvent",
			Handler:    _CloudHashingInspire_GetEventCouponsByAppActivityEvent_Handler,
		},
		{
			MethodName: "GetEventCouponsByApp",
			Handler:    _CloudHashingInspire_GetEventCouponsByApp_Handler,
		},
		{
			MethodName: "GetEventCouponsByOtherApp",
			Handler:    _CloudHashingInspire_GetEventCouponsByOtherApp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/cloud-hashing-inspire/cloud-hashing-inspire.proto",
}
