// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appusermw/admin/admin.proto

package admin

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserMiddlewareAdminClient is the client API for AppUserMiddlewareAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserMiddlewareAdminClient interface {
	CreateGenesisRoleUser(ctx context.Context, in *CreateGenesisRoleUserRequest, opts ...grpc.CallOption) (*CreateGenesisRoleUserResponse, error)
}

type appUserMiddlewareAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserMiddlewareAdminClient(cc grpc.ClientConnInterface) AppUserMiddlewareAdminClient {
	return &appUserMiddlewareAdminClient{cc}
}

func (c *appUserMiddlewareAdminClient) CreateGenesisRoleUser(ctx context.Context, in *CreateGenesisRoleUserRequest, opts ...grpc.CallOption) (*CreateGenesisRoleUserResponse, error) {
	out := new(CreateGenesisRoleUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.middleware.admin.v1.AppUserMiddlewareAdmin/CreateGenesisRoleUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserMiddlewareAdminServer is the server API for AppUserMiddlewareAdmin service.
// All implementations must embed UnimplementedAppUserMiddlewareAdminServer
// for forward compatibility
type AppUserMiddlewareAdminServer interface {
	CreateGenesisRoleUser(context.Context, *CreateGenesisRoleUserRequest) (*CreateGenesisRoleUserResponse, error)
	mustEmbedUnimplementedAppUserMiddlewareAdminServer()
}

// UnimplementedAppUserMiddlewareAdminServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserMiddlewareAdminServer struct {
}

func (UnimplementedAppUserMiddlewareAdminServer) CreateGenesisRoleUser(context.Context, *CreateGenesisRoleUserRequest) (*CreateGenesisRoleUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGenesisRoleUser not implemented")
}
func (UnimplementedAppUserMiddlewareAdminServer) mustEmbedUnimplementedAppUserMiddlewareAdminServer() {
}

// UnsafeAppUserMiddlewareAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserMiddlewareAdminServer will
// result in compilation errors.
type UnsafeAppUserMiddlewareAdminServer interface {
	mustEmbedUnimplementedAppUserMiddlewareAdminServer()
}

func RegisterAppUserMiddlewareAdminServer(s grpc.ServiceRegistrar, srv AppUserMiddlewareAdminServer) {
	s.RegisterService(&AppUserMiddlewareAdmin_ServiceDesc, srv)
}

func _AppUserMiddlewareAdmin_CreateGenesisRoleUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGenesisRoleUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserMiddlewareAdminServer).CreateGenesisRoleUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.middleware.admin.v1.AppUserMiddlewareAdmin/CreateGenesisRoleUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserMiddlewareAdminServer).CreateGenesisRoleUser(ctx, req.(*CreateGenesisRoleUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserMiddlewareAdmin_ServiceDesc is the grpc.ServiceDesc for AppUserMiddlewareAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserMiddlewareAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.middleware.admin.v1.AppUserMiddlewareAdmin",
	HandlerType: (*AppUserMiddlewareAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGenesisRoleUser",
			Handler:    _AppUserMiddlewareAdmin_CreateGenesisRoleUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appusermw/admin/admin.proto",
}
