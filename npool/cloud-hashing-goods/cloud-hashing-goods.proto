syntax = "proto3";

package cloud.hashing.goods.v1;

option go_package = "github.com/NpoolPlatform/message/npool/cloud-hashing-goods";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "npool/npool.proto";

// Cloud Hashing Goods
service CloudHashingGoods {
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            get: "/version"
        };
    }

    rpc CreateVendorLocation (CreateVendorLocationRequest) returns (CreateVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/create/vendor-location"
            body: "*"
        };
    }
    rpc UpdateVendorLocation (UpdateVendorLocationRequest) returns (UpdateVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/update/vendor-location"
            body: "*"
        };
    }
    rpc GetVendorLocation (GetVendorLocationRequest) returns (GetVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/get/vendor-location"
            body: "*"
        };
    }
    rpc DeleteVendorLocation (DeleteVendorLocationRequest) returns (DeleteVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/delete/vendor-location"
            body: "*"
        };
    }
    rpc GetVendorLocations (GetVendorLocationsRequest) returns (GetVendorLocationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/vendor-locations"
            body: "*"
        };
    }

    rpc CreatePriceCurrency (CreatePriceCurrencyRequest) returns (CreatePriceCurrencyResponse) {
        option (google.api.http) = {
            post: "/v1/create/price-currency"
            body: "*"
        };
    }
    rpc UpdatePriceCurrency (UpdatePriceCurrencyRequest) returns (UpdatePriceCurrencyResponse) {
        option (google.api.http) = {
            post: "/v1/update/price-currency"
            body: "*"
        };
    }
    rpc GetPriceCurrency (GetPriceCurrencyRequest) returns (GetPriceCurrencyResponse) {
        option (google.api.http) = {
            post: "/v1/get/price-currency"
            body: "*"
        };
    }
    rpc GetPriceCurrencys (GetPriceCurrencysRequest) returns (GetPriceCurrencysResponse) {
        option (google.api.http) = {
            post: "/v1/get/price-currencys"
        };
    }

    rpc CreateTargetArea (CreateTargetAreaRequest) returns (CreateTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/create/target-area"
            body: "*"
        };
    }
    rpc UpdateTargetArea (UpdateTargetAreaRequest) returns (UpdateTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/update/target-area"
            body: "*"
        };
    }
    rpc GetTargetArea (GetTargetAreaRequest) returns (GetTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/get/target-area"
            body: "*"
        };
    }
    rpc DeleteTargetArea (DeleteTargetAreaRequest) returns (DeleteTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/delete/target-area"
            body: "*"
        };
    }
    rpc DeleteTargetAreaByContinentCountry (DeleteTargetAreaByContinentCountryRequest) returns (DeleteTargetAreaByContinentCountryResponse) {
        option (google.api.http) = {
            post: "/v1/delete/target-area/continent/country"
            body: "*"
        };
    }
    rpc GetTargetAreas (GetTargetAreasRequest) returns (GetTargetAreasResponse) {
        option (google.api.http) = {
            post: "/v1/get/target-areas"
        };
    }

    rpc CreateDeviceInfo (CreateDeviceInfoRequest) returns (CreateDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/create/device"
            body: "*"
        };
    }
    rpc UpdateDeviceInfo (UpdateDeviceInfoRequest) returns (UpdateDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/update/device"
            body: "*"
        };
    }
    rpc GetDeviceInfo (GetDeviceInfoRequest) returns (GetDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/get/device"
            body: "*"
        };
    }
    rpc DeleteDeviceInfo (DeleteDeviceInfoRequest) returns (DeleteDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/delete/device"
            body: "*"
        };
    }
    rpc GetDeviceInfos (GetDeviceInfosRequest) returns (GetDeviceInfosResponse) {
        option (google.api.http) = {
            post: "/v1/get/devices"
            body: "*"
        };
    }

    // Good information for CRUD
    rpc CreateGood (CreateGoodRequest) returns (CreateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/good"
            body: "*"
        };
    }
    rpc UpdateGood (UpdateGoodRequest) returns (UpdateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/good"
            body: "*"
        };
    }
    rpc GetGood (GetGoodRequest) returns (GetGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good"
            body: "*"
        };
    }
    rpc DeleteGood (DeleteGoodRequest) returns (DeleteGoodResponse) {
        option (google.api.http) = {
            post: "/v1/delete/good"
            body: "*"
        };
    }
    rpc GetGoods (GetGoodsRequest) returns (GetGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods"
            body: "*"
        };
    }
    rpc GetGoodsByApp (GetGoodsByAppRequest) returns (GetGoodsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods/by/app"
            body: "*"
        };
    }

    // Good information for API
    rpc GetGoodDetail (GetGoodDetailRequest) returns (GetGoodDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/detail"
            body: "*"
        };
    }
    rpc GetGoodsDetail (GetGoodsDetailRequest) returns (GetGoodsDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods/detail"
            body: "*"
        };
    }
    rpc GetGoodsDetailByApp (GetGoodsDetailByAppRequest) returns (GetGoodsDetailByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods/detail/by/app"
            body: "*"
        };
    }

    rpc CreateRecommend (CreateRecommendRequest) returns (CreateRecommendResponse) {
        option (google.api.http) = {
            post: "/v1/create/recommend"
            body: "*"
        };
    }
    rpc CreateRecommendForOtherApp (CreateRecommendForOtherAppRequest) returns (CreateRecommendForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/recommend/for/other/app"
            body: "*"
        };
    }
    rpc UpdateRecommend (UpdateRecommendRequest) returns (UpdateRecommendResponse) {
        option (google.api.http) = {
            post: "/v1/update/recommend"
            body: "*"
        };
    }
    rpc GetRecommendsByApp (GetRecommendsByAppRequest) returns (GetRecommendsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommends/by/app"
            body: "*"
        };
    }
    rpc GetRecommendsByOtherApp (GetRecommendsByOtherAppRequest) returns (GetRecommendsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommends/by/other/app"
            body: "*"
        };
    }
    rpc GetRecommendsByRecommender (GetRecommendsByRecommenderRequest) returns (GetRecommendsByRecommenderResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommends/by/recommender"
            body: "*"
        };
    }
    rpc DeleteRecommend (DeleteRecommendRequest) returns (DeleteRecommendResponse) {
        option (google.api.http) = {
            post: "/v1/delete/recommend"
            body: "*"
        };
    }
    rpc GetRecommendGoodsByApp (GetRecommendGoodsByAppRequest) returns (GetRecommendGoodsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommend/goods/by/app"
            body: "*"
        };
    }
    rpc GetRecommendGoodsByOtherApp (GetRecommendGoodsByOtherAppRequest) returns (GetRecommendGoodsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommend/goods/by/other/app"
            body: "*"
        };
    }
    rpc GetRecommendGoodsByRecommender (GetRecommendGoodsByRecommenderRequest) returns (GetRecommendGoodsByRecommenderResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommend/goods/by/recommender"
            body: "*"
        };
    }

    rpc AuthorizeAppGood (AuthorizeAppGoodRequest) returns (AuthorizeAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/authorize/app/good"
            body: "*"
        };
    }
    rpc AuthorizeAppGoodForOtherApp (AuthorizeAppGoodForOtherAppRequest) returns (AuthorizeAppGoodForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/authorize/app/good/for/other/app"
            body: "*"
        };
    }
    rpc SetAppGoodPrice (SetAppGoodPriceRequest) returns (SetAppGoodPriceResponse) {
        option (google.api.http) = {
            post: "/v1/set/app/good/price"
            body: "*"
        };
    }
    rpc SetAppGoodPriceForOtherApp (SetAppGoodPriceForOtherAppRequest) returns (SetAppGoodPriceForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/set/app/good/price/for/other/app"
            body: "*"
        };
    }
    rpc CheckAppGood (CheckAppGoodRequest) returns (CheckAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/check/app/good"
            body: "*"
        };
    }
    rpc OnsaleAppGood (OnsaleAppGoodRequest) returns (OnsaleAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/onsale/app/good"
            body: "*"
        };
    }
    rpc OnsaleAppGoodForOtherApp (OnsaleAppGoodForOtherAppRequest) returns (OnsaleAppGoodForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/onsale/app/good/for/other/app"
            body: "*"
        };
    }
    rpc OffsaleAppGood (OffsaleAppGoodRequest) returns (OffsaleAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/offsale/app/good"
            body: "*"
        };
    }
    rpc OffsaleAppGoodForOtherApp (OffsaleAppGoodForOtherAppRequest) returns (OffsaleAppGoodForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/offsale/app/good/for/other/app"
            body: "*"
        };
    }
    rpc UnauthorizeAppGood (UnauthorizeAppGoodRequest) returns (UnauthorizeAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/good"
            body: "*"
        };
    }
    rpc GetAppGoods (GetAppGoodsRequest) returns (GetAppGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/goods"
            body: "*"
        };
    }
    rpc GetAppGoodsByOtherApp (GetAppGoodsByOtherAppRequest) returns (GetAppGoodsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/goods/by/other/app"
            body: "*"
        };
    }
    rpc GetAppGoodByAppGood (GetAppGoodByAppGoodRequest) returns (GetAppGoodByAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/goods/by/app/good"
            body: "*"
        };
    }

    rpc AuthorizeAppTargetArea (AuthorizeAppTargetAreaRequest) returns (AuthorizeAppTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/authorize/app/target-area"
            body: "*"
        };
    }
    rpc CheckAppTargetArea (CheckAppTargetAreaRequest) returns (CheckAppTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/check/app/target-area"
            body: "*"
        };
    }
    rpc UnauthorizeAppTargetArea (UnauthorizeAppTargetAreaRequest) returns (UnauthorizeAppTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/target-area"
            body: "*"
        };
    }

    rpc AuthorizeAppGoodTargetArea (AuthorizeAppGoodTargetAreaRequest) returns (AuthorizeAppGoodTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/authorize/app/good/target-area"
            body: "*"
        };
    }
    rpc CheckAppGoodTargetArea (CheckAppGoodTargetAreaRequest) returns (CheckAppGoodTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/check/app/good/target-area"
            body: "*"
        };
    }
    rpc UnauthorizeAppGoodTargetArea (UnauthorizeAppGoodTargetAreaRequest) returns (UnauthorizeAppGoodTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/good/target-area"
            body: "*"
        };
    }

    rpc CreateGoodComment (CreateGoodCommentRequest) returns (CreateGoodCommentResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/comment"
            body: "*"
        };
    }
    rpc UpdateGoodComment (UpdateGoodCommentRequest) returns (UpdateGoodCommentResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/comment"
            body: "*"
        };
    }
    rpc GetGoodComments (GetGoodCommentsRequest) returns (GetGoodCommentsResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/comments"
            body: "*"
        };
    }

    rpc CreateGoodExtraInfo (CreateGoodExtraInfoRequest) returns (CreateGoodExtraInfoRequest) {
        option (google.api.http) = {
            post: "/v1/create/good/extra"
            body: "*"
        };
    }
    rpc GetGoodExtraInfo (GetGoodExtraInfoRequest) returns (GetGoodExtraInfoRequest) {
        option (google.api.http) = {
            post: "/v1/get/good/extra"
            body: "*"
        };
    }
    rpc UpdateGoodExtraInfo (UpdateGoodExtraInfoRequest) returns (UpdateGoodExtraInfoRequest) {
        option (google.api.http) = {
            post: "/v1/update/good/extra"
            body: "*"
        };
    }

    rpc CreateGoodReview (CreateGoodReviewRequest) returns (CreateGoodReviewResponse) {
        option (google.api.http) = {
            post: "/v1/create/good/review"
            body: "*"
        };
    }
    rpc UpdateGoodReview (UpdateGoodReviewRequest) returns (UpdateGoodReviewResponse) {
        option (google.api.http) = {
            post: "/v1/update/good/review"
            body: "*"
        };
    }
    rpc GetGoodReview (GetGoodReviewRequest) returns (GetGoodReviewResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/review"
            body: "*"
        };
    }

    rpc CreateFee (CreateFeeRequest) returns (CreateFeeResponse) {
        option (google.api.http) = {
            post: "/v1/create/fee"
            body: "*"
        };
    }
    rpc GetFee (GetFeeRequest) returns (GetFeeResponse) {
        option (google.api.http) = {
            post: "/v1/get/fee"
            body: "*"
        };
    }
    rpc GetFees (GetFeesRequest) returns (GetFeesResponse) {
        option (google.api.http) = {
            post: "/v1/get/fees"
            body: "*"
        };
    }

    rpc CreateFeeType (CreateFeeTypeRequest) returns (CreateFeeTypeResponse) {
        option (google.api.http) = {
            post: "/v1/create/fee/type"
            body: "*"
        };
    }
    rpc UpdateFeeType (UpdateFeeTypeRequest) returns (UpdateFeeTypeResponse) {
        option (google.api.http) = {
            post: "/v1/update/fee/type"
            body: "*"
        };
    }
    rpc GetFeeType (GetFeeTypeRequest) returns (GetFeeTypeResponse) {
        option (google.api.http) = {
            post: "/v1/get/fee/type"
            body: "*"
        };
    }
    rpc GetFeeTypes (GetFeeTypesRequest) returns (GetFeeTypesResponse) {
        option (google.api.http) = {
            post: "/v1/get/fee/types"
            body: "*"
        };
    }

    rpc CreateAppGoodPromotion (CreateAppGoodPromotionRequest) returns (CreateAppGoodPromotionResponse) {
        option (google.api.http) = {
            post: "/v1/create/app/good/promotion"
            body: "*"
        };
    }
    rpc CreateAppGoodPromotionForOtherApp (CreateAppGoodPromotionForOtherAppRequest) returns (CreateAppGoodPromotionForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/app/good/promotion/for/other/app"
            body: "*"
        };
    }
    rpc UpdateAppGoodPromotion (UpdateAppGoodPromotionRequest) returns (UpdateAppGoodPromotionResponse) {
        option (google.api.http) = {
            post: "/v1/update/app/good/promotion"
            body: "*"
        };
    }
    rpc DeleteAppGoodPromotion (DeleteAppGoodPromotionRequest) returns (DeleteAppGoodPromotionResponse) {
        option (google.api.http) = {
            post: "/v1/delete/app/good/promotion"
            body: "*"
        };
    }
    rpc GetAppGoodPromotion (GetAppGoodPromotionRequest) returns (GetAppGoodPromotionResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotion"
            body: "*"
        };
    }
    rpc GetAppGoodPromotions (GetAppGoodPromotionsRequest) returns (GetAppGoodPromotionsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotions"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionByAppGoodStartEnd (GetAppGoodPromotionByAppGoodStartEndRequest) returns (GetAppGoodPromotionByAppGoodStartEndResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotion/by/app/good/start/end"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionByAppGoodTimestamp (GetAppGoodPromotionByAppGoodTimestampRequest) returns (GetAppGoodPromotionByAppGoodTimestampResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotion/by/app/good/timestamp"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionsByAppGood (GetAppGoodPromotionsByAppGoodRequest) returns (GetAppGoodPromotionsByAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotions/by/app/good"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionsByOtherAppGood (GetAppGoodPromotionsByOtherAppGoodRequest) returns (GetAppGoodPromotionsByOtherAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotions/by/other/app/good"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionsByApp (GetAppGoodPromotionsByAppRequest) returns (GetAppGoodPromotionsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotions/by/app"
            body: "*"
        };
    }
    rpc GetAppGoodPromotionsByOtherApp (GetAppGoodPromotionsByOtherAppRequest) returns (GetAppGoodPromotionsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/good/promotions/by/other/app"
            body: "*"
        };
    }
}

// Request body and response
message VendorLocationInfo {
    string ID = 10;
    string Country = 20;
    string Province = 30;
    string City = 40;
    string Address = 50;
}

message CreateVendorLocationRequest {
    VendorLocationInfo Info = 10;
}

message CreateVendorLocationResponse {
    VendorLocationInfo Info = 10;
}

message GetVendorLocationRequest {
    string ID = 10;
}

message GetVendorLocationResponse {
    VendorLocationInfo Info = 10;
}

message UpdateVendorLocationRequest {
    VendorLocationInfo Info = 10;
}

message UpdateVendorLocationResponse {
    VendorLocationInfo Info = 10;
}

message DeleteVendorLocationRequest {
    string ID = 10;
}

message DeleteVendorLocationResponse {
    VendorLocationInfo Info = 10;
}

message GetVendorLocationsRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetVendorLocationsResponse {
    repeated VendorLocationInfo Infos = 10;
    int32 Total = 20;
}

message TargetAreaInfo {
    string ID = 10;
    string Continent = 20;
    string Country = 30;
}

message CreateTargetAreaRequest {
    TargetAreaInfo Info = 10;
}

message CreateTargetAreaResponse {
    TargetAreaInfo Info = 10;
}

message GetTargetAreaRequest {
    string ID = 10;
}

message GetTargetAreaResponse {
    TargetAreaInfo Info = 10;
}

message UpdateTargetAreaRequest {
    TargetAreaInfo Info = 10;
}

message UpdateTargetAreaResponse {
    TargetAreaInfo Info = 10;
}

message DeleteTargetAreaRequest {
    string ID = 10;
}

message DeleteTargetAreaResponse {
    TargetAreaInfo Info = 10;
}

message DeleteTargetAreaByContinentCountryRequest {
    string Continent = 10;
    string Country = 20;
}

message DeleteTargetAreaByContinentCountryResponse {
    TargetAreaInfo Info = 10;
}

message GetTargetAreasRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetTargetAreasResponse {
    repeated TargetAreaInfo Infos = 10;
    int32 Total = 20;
}

message DeviceInfo {
    string ID = 10;
    string Type = 20;
    string Manufacturer = 30;
    int32 PowerComsuption = 40;
    int32 ShipmentAt = 50;
}

message CreateDeviceInfoRequest {
    DeviceInfo Info = 10;
}

message CreateDeviceInfoResponse {
    DeviceInfo Info = 10;
}

message UpdateDeviceInfoRequest {
    DeviceInfo Info = 10;
}

message UpdateDeviceInfoResponse {
    DeviceInfo Info = 10;
}

message GetDeviceInfoRequest {
    string ID = 10;
}

message GetDeviceInfoResponse {
    DeviceInfo Info = 10;
}

message DeleteDeviceInfoRequest {
    string ID = 10;
}

message DeleteDeviceInfoResponse {
    DeviceInfo Info = 10;
}

message GetDeviceInfosRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetDeviceInfosResponse {
    repeated DeviceInfo Infos = 10;
    int32 Total = 20;
}

message GoodInfo {
    string ID = 10;
    string DeviceInfoID = 20;
    bool SeparateFee = 30;
    int32 UnitPower = 40;
    int32 DurationDays = 50;
    string CoinInfoID = 60;
    bool Actuals = 70;
    uint32 DeliveryAt = 80;
    string InheritFromGoodID = 90;
    string VendorLocationID = 100;
    double Price = 110;
    string BenefitType = 120;
    bool Classic = 130;
    repeated string SupportCoinTypeIDs = 140;
    int32 Total = 150;
    string PriceCurrency = 160;
    string Title = 170;
    string Unit = 180;
    repeated string FeeIDs = 190;
    uint32 StartAt = 200;
}

message CreateGoodRequest {
    GoodInfo Info = 10;
}

message CreateGoodResponse {
    GoodInfo Info = 10;
}

message UpdateGoodRequest {
    GoodInfo Info = 10;
}

message UpdateGoodResponse {
    GoodInfo Info = 10;
}

message GetGoodRequest {
    string ID = 10;
}

message GetGoodResponse {
    GoodInfo Info = 10;
}

message PriceCurrency {
    string ID = 10;
    string Name = 20;
    string Unit = 30;
    string Symbol = 40;
}

message CreatePriceCurrencyRequest {
    PriceCurrency Info = 10;
}

message CreatePriceCurrencyResponse {
    PriceCurrency Info = 10;
}

message UpdatePriceCurrencyRequest {
    PriceCurrency Info = 10;
}

message UpdatePriceCurrencyResponse {
    PriceCurrency Info = 10;
}

message GetPriceCurrencyRequest {
    string ID = 10;
}

message GetPriceCurrencyResponse {
    PriceCurrency Info = 10;
}

message GetPriceCurrencysRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetPriceCurrencysResponse {
    repeated PriceCurrency Infos = 10;
}

message FeeDetail {
    Fee Fee = 10;
    FeeType FeeType = 20;
}

message GoodDetail {
    GoodInfo Good = 10;
    DeviceInfo DeviceInfo = 20;
    GoodInfo InheritFromGood = 30;
    VendorLocationInfo VendorLocation = 40;
    GoodExtraInfo Extra = 50;
    PriceCurrency PriceCurrency = 60;
    repeated FeeDetail Fees = 70;
}

message GetGoodDetailRequest {
    string ID = 10;
}

message GetGoodDetailResponse {
    GoodDetail Info = 10;
}

message GetGoodsDetailRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetGoodsDetailResponse {
    repeated GoodDetail Infos = 10;
    int32 Total = 20;
}

message GetGoodsDetailByAppRequest {
    string AppID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetGoodsDetailByAppResponse {
    repeated GoodDetail Infos = 10;
    int32 Total = 20;
}


message DeleteGoodRequest {
    string ID = 10;
}

message DeleteGoodResponse {
    GoodInfo Info = 10;
}

message GetGoodsRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetGoodsResponse {
    repeated GoodInfo Infos = 10;
    int32 Total = 20;
}

message GetGoodsByAppRequest {
    string AppID = 10;
    npool.v1.PageInfo PageInfo = 20;
}

message GetGoodsByAppResponse {
    repeated GoodInfo Infos = 10;
    int32 Total = 20;
}

message Recommend {
    string ID = 10;
    string AppID = 20;
    string GoodID = 30;
    string RecommenderID = 40;
    string Message = 50;
}

message CreateRecommendRequest {
    Recommend Info = 10;
}

message CreateRecommendResponse {
    Recommend Info = 10;
}

message CreateRecommendForOtherAppRequest {
    string TargetAppID = 10;
    Recommend Info = 20;
}

message CreateRecommendForOtherAppResponse {
    Recommend Info = 10;
}

message UpdateRecommendRequest {
    Recommend Info = 10;
}

message UpdateRecommendResponse {
    Recommend Info = 10;
}

message GetRecommendsByAppRequest {
    string AppID = 10;
}

message GetRecommendsByAppResponse {
    repeated Recommend Infos = 10;
}

message GetRecommendsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetRecommendsByOtherAppResponse {
    repeated Recommend Infos = 10;
}

message GetRecommendsByRecommenderRequest {
    string RecommenderID = 10;
}

message GetRecommendsByRecommenderResponse {
    repeated Recommend Infos = 10;
}

message DeleteRecommendRequest {
    string ID = 10;
}

message DeleteRecommendResponse {
    Recommend Info = 10;
}

message RecommendGood {
    Recommend Recommend = 10;
    GoodDetail Good = 20;
}

message GetRecommendGoodsByAppRequest {
    string AppID = 10;
}

message GetRecommendGoodsByAppResponse {
    repeated RecommendGood Infos = 10;
}

message GetRecommendGoodsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetRecommendGoodsByOtherAppResponse {
    repeated RecommendGood Infos = 10;
}

message GetRecommendGoodsByRecommenderRequest {
    string RecommenderID = 10;
}

message GetRecommendGoodsByRecommenderResponse {
    repeated RecommendGood Infos = 10;
}

message AppGoodInfo {
    string ID = 10;
    string AppID = 20;
    string GoodID = 30;
    double Price = 40;
    bool Online = 50;
    string InitAreaStrategy = 60;
    uint32 DisplayIndex = 70;
}

message SetAppGoodPriceRequest {
    AppGoodInfo Info = 10;
}

message SetAppGoodPriceResponse {
    AppGoodInfo Info = 10;
}

message SetAppGoodPriceForOtherAppRequest {
    string TargetAppID = 10;
    AppGoodInfo Info = 20;
}

message SetAppGoodPriceForOtherAppResponse {
    AppGoodInfo Info = 10;
}

message CheckAppGoodRequest {
    string AppID = 10;
    string GoodID = 20;
}

message CheckAppGoodResponse {
    AppGoodInfo Info = 10;
}

message OnsaleAppGoodRequest {
    AppGoodInfo Info = 10;
}

message OnsaleAppGoodResponse {
    AppGoodInfo Info = 10;
}

message OnsaleAppGoodForOtherAppRequest {
    string TargetAppID = 10;
    AppGoodInfo Info = 20;
}

message OnsaleAppGoodForOtherAppResponse {
    AppGoodInfo Info = 10;
}

message OffsaleAppGoodRequest {
    AppGoodInfo Info = 10;
}

message OffsaleAppGoodResponse {
    AppGoodInfo Info = 10;
}

message OffsaleAppGoodForOtherAppRequest {
    string TargetAppID = 10;
    AppGoodInfo Info = 20;
}

message OffsaleAppGoodForOtherAppResponse {
    AppGoodInfo Info = 10;
}

message AuthorizeAppGoodRequest {
    AppGoodInfo Info = 10;
}

message AuthorizeAppGoodResponse {
    AppGoodInfo Info = 10;
}

message AuthorizeAppGoodForOtherAppRequest {
    string TargetAppID = 10;
    AppGoodInfo Info = 20;
}

message AuthorizeAppGoodForOtherAppResponse {
    AppGoodInfo Info = 10;
}

message UnauthorizeAppGoodRequest {
    string ID = 10;
}

message UnauthorizeAppGoodResponse {
    AppGoodInfo Info = 10;
}

message GetAppGoodsRequest {
    string AppID = 10;
}

message GetAppGoodsResponse {
    repeated AppGoodInfo Infos = 10;
}

message GetAppGoodsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetAppGoodsByOtherAppResponse {
    repeated AppGoodInfo Infos = 10;
}

message GetAppGoodByAppGoodRequest {
    string AppID = 10;
    string GoodID = 20;
}

message GetAppGoodByAppGoodResponse {
    AppGoodInfo Info = 10;
}

message AppTargetAreaInfo {
    string ID = 10;
    string AppID = 20;
    string TargetAreaID = 30;
}

message AuthorizeAppTargetAreaRequest {
    AppTargetAreaInfo Info = 10;
}

message AuthorizeAppTargetAreaResponse {
    AppTargetAreaInfo Info = 10;
}

message CheckAppTargetAreaRequest {
    AppTargetAreaInfo Info = 10;
}

message CheckAppTargetAreaResponse {
    AppTargetAreaInfo Info = 10;
    bool Authorized = 20;
}

message UnauthorizeAppTargetAreaRequest {
    string ID = 10;
}

message UnauthorizeAppTargetAreaResponse {
    AppTargetAreaInfo Info = 10;
    bool Authorized = 20;
}

message AppGoodTargetAreaInfo {
    string ID = 10;
    string AppID = 20;
    string GoodID = 30;
    string TargetAreaID = 40;
}

message AuthorizeAppGoodTargetAreaRequest {
    AppGoodTargetAreaInfo Info = 10;
}

message AuthorizeAppGoodTargetAreaResponse {
    AppGoodTargetAreaInfo Info = 10;
}

message CheckAppGoodTargetAreaRequest {
    AppGoodTargetAreaInfo Info = 10;
}

message CheckAppGoodTargetAreaResponse {
    AppGoodTargetAreaInfo Info = 10;
}

message UnauthorizeAppGoodTargetAreaRequest {
    AppGoodTargetAreaInfo Info = 10;
}

message UnauthorizeAppGoodTargetAreaResponse {
    AppGoodTargetAreaInfo Info = 10;
}

message GoodComment {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string ReplyToID = 40;
    string GoodID = 50;
    string OrderID = 60;
    string Content = 70;
}

message CreateGoodCommentRequest {
    GoodComment Comment = 10;
}

message CreateGoodCommentResponse {
    GoodComment Comment = 10;
}

message UpdateGoodCommentRequest {
    GoodComment Comment = 10;
}

message UpdateGoodCommentResponse {
    GoodComment Comment = 10;
}

message GetGoodCommentsRequest {
    npool.v1.PageInfo PageInfo = 10;
    string GoodID = 20;
}

message GetGoodCommentsResponse {
    repeated GoodComment Comments = 10;
    int32 Total = 20;
}

message GoodExtraInfo {
    string ID = 10;
    string GoodID = 20;
    repeated string Posters = 30;
    repeated string Labels = 40;
    bool OutSale = 50;
    bool PreSale = 60;
    uint32 VoteCount = 70;
    float Rating = 80;
}

message CreateGoodExtraInfoRequest {
    GoodExtraInfo Info = 10;
}

message CreateGoodExtraInfoResponse {
    GoodExtraInfo Info = 10;
}

message GetGoodExtraInfoRequest {
    string GoodID = 10;
}

message GetGoodExtraInfoResponse {
    GoodExtraInfo Info = 10;
}

message UpdateGoodExtraInfoRequest {
    GoodExtraInfo Info = 10;
}

message UpdateGoodExtraInfoResponse {
    GoodExtraInfo Info = 10;
}

message GoodReviewInfo {
    string ID = 10;
    string Type = 20;
    string ReviewerID = 30;
    string State = 40;
    string Message = 50;
    string ReviewedID = 60;
}

message CreateGoodReviewRequest {
    GoodReviewInfo Info = 10;
}

message CreateGoodReviewResponse {
    GoodReviewInfo Info = 10;
}

message UpdateGoodReviewRequest {
    GoodReviewInfo Info = 10;
}

message UpdateGoodReviewResponse {
    GoodReviewInfo Info = 10;
}

message GetGoodReviewRequest {
    GoodReviewInfo Info = 10;
}

message GetGoodReviewResponse {
    GoodReviewInfo Info = 10;
}

message FeeType {
    string ID = 10;
    string FeeType = 20;
    string FeeDescription = 30;
    string PayType = 40;
}

message CreateFeeTypeRequest {
    FeeType Info = 10;
}

message CreateFeeTypeResponse {
    FeeType Info = 10;
}

message UpdateFeeTypeRequest {
    FeeType Info = 10;
}

message UpdateFeeTypeResponse {
    FeeType Info = 10;
}

message GetFeeTypeRequest {
    string ID = 10;
}

message GetFeeTypeResponse {
    FeeType Info = 10;
}

message GetFeeTypesRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetFeeTypesResponse {
    repeated FeeType Infos = 10;
}

message Fee {
    string ID = 10;
    string AppID = 20;
    string FeeTypeID = 30;
    double Value = 40;
}

message CreateFeeRequest {
    Fee Info = 10;
}

message CreateFeeResponse {
    Fee Info = 10;
}

message GetFeeRequest {
    string ID = 10;
}

message GetFeeResponse {
    Fee Info = 10;
}

message GetFeesRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetFeesResponse {
    repeated Fee Infos = 10;
}

message AppGoodPromotion {
    string ID = 10;
    string AppID = 20;
    string GoodID = 30;
    string Message = 40;
    uint32 Start = 50;
    uint32 End = 60;
    double Price = 70;
}

message CreateAppGoodPromotionRequest {
    AppGoodPromotion Info = 10;
}

message CreateAppGoodPromotionResponse {
    AppGoodPromotion Info = 20;
}

message CreateAppGoodPromotionForOtherAppRequest {
    string TargetAppID = 10;
    AppGoodPromotion Info = 20;
}

message CreateAppGoodPromotionForOtherAppResponse {
    AppGoodPromotion Info = 20;
}

message UpdateAppGoodPromotionRequest {
    AppGoodPromotion Info = 10;
}

message UpdateAppGoodPromotionResponse {
    AppGoodPromotion Info = 20;
}

message DeleteAppGoodPromotionRequest {
    string ID = 10;
}

message DeleteAppGoodPromotionResponse {
    AppGoodPromotion Info = 20;
}

message GetAppGoodPromotionRequest {
    string ID = 10;
}

message GetAppGoodPromotionResponse {
    AppGoodPromotion Info = 10;
}

message GetAppGoodPromotionsRequest {
}

message GetAppGoodPromotionsResponse {
    repeated AppGoodPromotion Infos = 10;
}

message GetAppGoodPromotionByAppGoodStartEndRequest {
    string AppID = 10;
    string GoodID = 20;
    uint32 Start = 30;
    uint32 End = 40;
}

message GetAppGoodPromotionByAppGoodStartEndResponse {
    AppGoodPromotion Info = 10;
}

message GetAppGoodPromotionByAppGoodTimestampRequest {
    string AppID = 10;
    string GoodID = 20;
    uint32 Timestamp = 30;
}

message GetAppGoodPromotionByAppGoodTimestampResponse {
    AppGoodPromotion Info = 10;
}

message GetAppGoodPromotionsByAppGoodRequest {
    string AppID = 10;
    string GoodID = 20;
}

message GetAppGoodPromotionsByAppGoodResponse {
    repeated AppGoodPromotion Infos = 10;
}

message GetAppGoodPromotionsByOtherAppGoodRequest {
    string TargetAppID = 10;
    string GoodID = 20;
}

message GetAppGoodPromotionsByOtherAppGoodResponse {
    repeated AppGoodPromotion Infos = 10;
}

message GetAppGoodPromotionsByAppRequest {
    string AppID = 10;
}

message GetAppGoodPromotionsByAppResponse {
    repeated AppGoodPromotion Infos = 10;
}

message GetAppGoodPromotionsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetAppGoodPromotionsByOtherAppResponse {
    repeated AppGoodPromotion Infos = 10;
}
