// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/kyc/kyc-management.proto

package kyc

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,10,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,20,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{0}
}

func (x *PageInfo) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageInfo) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// request body and response
type KycInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID              string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID             string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CardType           string `protobuf:"bytes,40,opt,name=CardType,proto3" json:"CardType,omitempty"`
	CardID             string `protobuf:"bytes,50,opt,name=CardID,proto3" json:"CardID,omitempty"`
	FrontCardImg       string `protobuf:"bytes,60,opt,name=FrontCardImg,proto3" json:"FrontCardImg,omitempty"`
	BackCardImg        string `protobuf:"bytes,70,opt,name=BackCardImg,proto3" json:"BackCardImg,omitempty"`
	UserHandingCardImg string `protobuf:"bytes,80,opt,name=UserHandingCardImg,proto3" json:"UserHandingCardImg,omitempty"`
	CreateAt           uint32 `protobuf:"varint,90,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt           uint32 `protobuf:"varint,100,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
}

func (x *KycInfo) Reset() {
	*x = KycInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KycInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KycInfo) ProtoMessage() {}

func (x *KycInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KycInfo.ProtoReflect.Descriptor instead.
func (*KycInfo) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{1}
}

func (x *KycInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *KycInfo) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *KycInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *KycInfo) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *KycInfo) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *KycInfo) GetFrontCardImg() string {
	if x != nil {
		return x.FrontCardImg
	}
	return ""
}

func (x *KycInfo) GetBackCardImg() string {
	if x != nil {
		return x.BackCardImg
	}
	return ""
}

func (x *KycInfo) GetUserHandingCardImg() string {
	if x != nil {
		return x.UserHandingCardImg
	}
	return ""
}

func (x *KycInfo) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *KycInfo) GetUpdateAt() uint32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type CreateKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateKycRequest) Reset() {
	*x = CreateKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKycRequest) ProtoMessage() {}

func (x *CreateKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKycRequest.ProtoReflect.Descriptor instead.
func (*CreateKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{2}
}

func (x *CreateKycRequest) GetInfo() *KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateKycResponse) Reset() {
	*x = CreateKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKycResponse) ProtoMessage() {}

func (x *CreateKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKycResponse.ProtoReflect.Descriptor instead.
func (*CreateKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{3}
}

func (x *CreateKycResponse) GetInfo() *KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetKycByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetKycByUserIDRequest) Reset() {
	*x = GetKycByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByUserIDRequest) ProtoMessage() {}

func (x *GetKycByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetKycByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{4}
}

func (x *GetKycByUserIDRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetKycByUserIDRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetKycByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetKycByUserIDResponse) Reset() {
	*x = GetKycByUserIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByUserIDResponse) ProtoMessage() {}

func (x *GetKycByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByUserIDResponse.ProtoReflect.Descriptor instead.
func (*GetKycByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{5}
}

func (x *GetKycByUserIDResponse) GetInfo() *KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetKycByAppIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string    `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	PageInfo    *PageInfo `protobuf:"bytes,20,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetKycByAppIDRequest) Reset() {
	*x = GetKycByAppIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByAppIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByAppIDRequest) ProtoMessage() {}

func (x *GetKycByAppIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByAppIDRequest.ProtoReflect.Descriptor instead.
func (*GetKycByAppIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{6}
}

func (x *GetKycByAppIDRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetKycByAppIDRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetKycByAppIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycInfo `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total int32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetKycByAppIDResponse) Reset() {
	*x = GetKycByAppIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByAppIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByAppIDResponse) ProtoMessage() {}

func (x *GetKycByAppIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByAppIDResponse.ProtoReflect.Descriptor instead.
func (*GetKycByAppIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{7}
}

func (x *GetKycByAppIDResponse) GetInfos() []*KycInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetKycByAppIDResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *PageInfo `protobuf:"bytes,10,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetAllKycRequest) Reset() {
	*x = GetAllKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllKycRequest) ProtoMessage() {}

func (x *GetAllKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllKycRequest.ProtoReflect.Descriptor instead.
func (*GetAllKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllKycRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetAllKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycInfo `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total int32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAllKycResponse) Reset() {
	*x = GetAllKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllKycResponse) ProtoMessage() {}

func (x *GetAllKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllKycResponse.ProtoReflect.Descriptor instead.
func (*GetAllKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllKycResponse) GetInfos() []*KycInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAllKycResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateKycRequest) Reset() {
	*x = UpdateKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycRequest) ProtoMessage() {}

func (x *UpdateKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycRequest.ProtoReflect.Descriptor instead.
func (*UpdateKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateKycRequest) GetInfo() *KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateKycResponse) Reset() {
	*x = UpdateKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycResponse) ProtoMessage() {}

func (x *UpdateKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycResponse.ProtoReflect.Descriptor instead.
func (*UpdateKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateKycResponse) GetInfo() *KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UploadKycImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID      string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ImageType   string `protobuf:"bytes,30,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	ImageBase64 string `protobuf:"bytes,40,opt,name=ImageBase64,proto3" json:"ImageBase64,omitempty"`
}

func (x *UploadKycImageRequest) Reset() {
	*x = UploadKycImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadKycImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKycImageRequest) ProtoMessage() {}

func (x *UploadKycImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKycImageRequest.ProtoReflect.Descriptor instead.
func (*UploadKycImageRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{12}
}

func (x *UploadKycImageRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UploadKycImageRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UploadKycImageRequest) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

func (x *UploadKycImageRequest) GetImageBase64() string {
	if x != nil {
		return x.ImageBase64
	}
	return ""
}

type UploadKycImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UploadKycImageResponse) Reset() {
	*x = UploadKycImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadKycImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKycImageResponse) ProtoMessage() {}

func (x *UploadKycImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKycImageResponse.ProtoReflect.Descriptor instead.
func (*UploadKycImageResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{13}
}

func (x *UploadKycImageResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetKycImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ImageS3Key string `protobuf:"bytes,30,opt,name=ImageS3Key,proto3" json:"ImageS3Key,omitempty"`
}

func (x *GetKycImageRequest) Reset() {
	*x = GetKycImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycImageRequest) ProtoMessage() {}

func (x *GetKycImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycImageRequest.ProtoReflect.Descriptor instead.
func (*GetKycImageRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{14}
}

func (x *GetKycImageRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetKycImageRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetKycImageRequest) GetImageS3Key() string {
	if x != nil {
		return x.ImageS3Key
	}
	return ""
}

type GetKycImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetKycImageResponse) Reset() {
	*x = GetKycImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycImageResponse) ProtoMessage() {}

func (x *GetKycImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycImageResponse.ProtoReflect.Descriptor instead.
func (*GetKycImageResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{15}
}

func (x *GetKycImageResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetKycByKycIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KycIDs []string `protobuf:"bytes,10,rep,name=KycIDs,proto3" json:"KycIDs,omitempty"`
}

func (x *GetKycByKycIDsRequest) Reset() {
	*x = GetKycByKycIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByKycIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByKycIDsRequest) ProtoMessage() {}

func (x *GetKycByKycIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByKycIDsRequest.ProtoReflect.Descriptor instead.
func (*GetKycByKycIDsRequest) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{16}
}

func (x *GetKycByKycIDsRequest) GetKycIDs() []string {
	if x != nil {
		return x.KycIDs
	}
	return nil
}

type GetKycByKycIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycInfo `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetKycByKycIDsResponse) Reset() {
	*x = GetKycByKycIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_kyc_kyc_management_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByKycIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByKycIDsResponse) ProtoMessage() {}

func (x *GetKycByKycIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_kyc_kyc_management_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByKycIDsResponse.ProtoReflect.Descriptor instead.
func (*GetKycByKycIDsResponse) Descriptor() ([]byte, []int) {
	return file_npool_kyc_kyc_management_proto_rawDescGZIP(), []int{17}
}

func (x *GetKycByKycIDsResponse) GetInfos() []*KycInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_kyc_kyc_management_proto protoreflect.FileDescriptor

var file_npool_kyc_kyc_management_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x6b, 0x79, 0x63, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x38, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x07,
	0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x12,
	0x2e, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x79,
	0x63, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b,
	0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b,
	0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x79,
	0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b, 0x79, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x42, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x33, 0x4b, 0x65, 0x79,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x33, 0x4b,
	0x65, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x73, 0x22, 0x4a,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xdc, 0x08, 0x0a, 0x0d, 0x4b,
	0x79, 0x63, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x19, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12,
	0x71, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x12, 0x23, 0x2e, 0x6b,
	0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22,
	0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6b, 0x79, 0x63, 0x3a,
	0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f,
	0x62, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x27,
	0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b,
	0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x72, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b, 0x79, 0x63, 0x12,
	0x23, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b,
	0x79, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x6c, 0x6c, 0x2f,
	0x6b, 0x79, 0x63, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x79, 0x63, 0x12, 0x23, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x6b, 0x79, 0x63, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x0e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x6b,
	0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4b, 0x79, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x88,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x4b, 0x79, 0x63, 0x49, 0x44,
	0x73, 0x12, 0x28, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x4b, 0x79,
	0x63, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x79,
	0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x62, 0x79, 0x2f, 0x6b,
	0x79, 0x63, 0x2f, 0x69, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x6b, 0x79, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_kyc_kyc_management_proto_rawDescOnce sync.Once
	file_npool_kyc_kyc_management_proto_rawDescData = file_npool_kyc_kyc_management_proto_rawDesc
)

func file_npool_kyc_kyc_management_proto_rawDescGZIP() []byte {
	file_npool_kyc_kyc_management_proto_rawDescOnce.Do(func() {
		file_npool_kyc_kyc_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_kyc_kyc_management_proto_rawDescData)
	})
	return file_npool_kyc_kyc_management_proto_rawDescData
}

var file_npool_kyc_kyc_management_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_npool_kyc_kyc_management_proto_goTypes = []interface{}{
	(*PageInfo)(nil),               // 0: kyc.management.v1.PageInfo
	(*KycInfo)(nil),                // 1: kyc.management.v1.KycInfo
	(*CreateKycRequest)(nil),       // 2: kyc.management.v1.CreateKycRequest
	(*CreateKycResponse)(nil),      // 3: kyc.management.v1.CreateKycResponse
	(*GetKycByUserIDRequest)(nil),  // 4: kyc.management.v1.GetKycByUserIDRequest
	(*GetKycByUserIDResponse)(nil), // 5: kyc.management.v1.GetKycByUserIDResponse
	(*GetKycByAppIDRequest)(nil),   // 6: kyc.management.v1.GetKycByAppIDRequest
	(*GetKycByAppIDResponse)(nil),  // 7: kyc.management.v1.GetKycByAppIDResponse
	(*GetAllKycRequest)(nil),       // 8: kyc.management.v1.GetAllKycRequest
	(*GetAllKycResponse)(nil),      // 9: kyc.management.v1.GetAllKycResponse
	(*UpdateKycRequest)(nil),       // 10: kyc.management.v1.UpdateKycRequest
	(*UpdateKycResponse)(nil),      // 11: kyc.management.v1.UpdateKycResponse
	(*UploadKycImageRequest)(nil),  // 12: kyc.management.v1.UploadKycImageRequest
	(*UploadKycImageResponse)(nil), // 13: kyc.management.v1.UploadKycImageResponse
	(*GetKycImageRequest)(nil),     // 14: kyc.management.v1.GetKycImageRequest
	(*GetKycImageResponse)(nil),    // 15: kyc.management.v1.GetKycImageResponse
	(*GetKycByKycIDsRequest)(nil),  // 16: kyc.management.v1.GetKycByKycIDsRequest
	(*GetKycByKycIDsResponse)(nil), // 17: kyc.management.v1.GetKycByKycIDsResponse
	(*emptypb.Empty)(nil),          // 18: google.protobuf.Empty
	(*npool.VersionResponse)(nil),  // 19: npool.v1.VersionResponse
}
var file_npool_kyc_kyc_management_proto_depIdxs = []int32{
	1,  // 0: kyc.management.v1.CreateKycRequest.Info:type_name -> kyc.management.v1.KycInfo
	1,  // 1: kyc.management.v1.CreateKycResponse.Info:type_name -> kyc.management.v1.KycInfo
	1,  // 2: kyc.management.v1.GetKycByUserIDResponse.Info:type_name -> kyc.management.v1.KycInfo
	0,  // 3: kyc.management.v1.GetKycByAppIDRequest.PageInfo:type_name -> kyc.management.v1.PageInfo
	1,  // 4: kyc.management.v1.GetKycByAppIDResponse.Infos:type_name -> kyc.management.v1.KycInfo
	0,  // 5: kyc.management.v1.GetAllKycRequest.PageInfo:type_name -> kyc.management.v1.PageInfo
	1,  // 6: kyc.management.v1.GetAllKycResponse.Infos:type_name -> kyc.management.v1.KycInfo
	1,  // 7: kyc.management.v1.UpdateKycRequest.Info:type_name -> kyc.management.v1.KycInfo
	1,  // 8: kyc.management.v1.UpdateKycResponse.Info:type_name -> kyc.management.v1.KycInfo
	1,  // 9: kyc.management.v1.GetKycByKycIDsResponse.Infos:type_name -> kyc.management.v1.KycInfo
	18, // 10: kyc.management.v1.KycManagement.Version:input_type -> google.protobuf.Empty
	2,  // 11: kyc.management.v1.KycManagement.CreateKyc:input_type -> kyc.management.v1.CreateKycRequest
	4,  // 12: kyc.management.v1.KycManagement.GetKycByUserID:input_type -> kyc.management.v1.GetKycByUserIDRequest
	6,  // 13: kyc.management.v1.KycManagement.GetKycByAppID:input_type -> kyc.management.v1.GetKycByAppIDRequest
	8,  // 14: kyc.management.v1.KycManagement.GetAllKyc:input_type -> kyc.management.v1.GetAllKycRequest
	10, // 15: kyc.management.v1.KycManagement.UpdateKyc:input_type -> kyc.management.v1.UpdateKycRequest
	12, // 16: kyc.management.v1.KycManagement.UploadKycImage:input_type -> kyc.management.v1.UploadKycImageRequest
	14, // 17: kyc.management.v1.KycManagement.GetKycImage:input_type -> kyc.management.v1.GetKycImageRequest
	16, // 18: kyc.management.v1.KycManagement.GetKycByKycIDs:input_type -> kyc.management.v1.GetKycByKycIDsRequest
	19, // 19: kyc.management.v1.KycManagement.Version:output_type -> npool.v1.VersionResponse
	3,  // 20: kyc.management.v1.KycManagement.CreateKyc:output_type -> kyc.management.v1.CreateKycResponse
	5,  // 21: kyc.management.v1.KycManagement.GetKycByUserID:output_type -> kyc.management.v1.GetKycByUserIDResponse
	7,  // 22: kyc.management.v1.KycManagement.GetKycByAppID:output_type -> kyc.management.v1.GetKycByAppIDResponse
	9,  // 23: kyc.management.v1.KycManagement.GetAllKyc:output_type -> kyc.management.v1.GetAllKycResponse
	11, // 24: kyc.management.v1.KycManagement.UpdateKyc:output_type -> kyc.management.v1.UpdateKycResponse
	13, // 25: kyc.management.v1.KycManagement.UploadKycImage:output_type -> kyc.management.v1.UploadKycImageResponse
	15, // 26: kyc.management.v1.KycManagement.GetKycImage:output_type -> kyc.management.v1.GetKycImageResponse
	17, // 27: kyc.management.v1.KycManagement.GetKycByKycIDs:output_type -> kyc.management.v1.GetKycByKycIDsResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_npool_kyc_kyc_management_proto_init() }
func file_npool_kyc_kyc_management_proto_init() {
	if File_npool_kyc_kyc_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_kyc_kyc_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KycInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByUserIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByAppIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByAppIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadKycImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadKycImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByKycIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_kyc_kyc_management_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByKycIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_kyc_kyc_management_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_kyc_kyc_management_proto_goTypes,
		DependencyIndexes: file_npool_kyc_kyc_management_proto_depIdxs,
		MessageInfos:      file_npool_kyc_kyc_management_proto_msgTypes,
	}.Build()
	File_npool_kyc_kyc_management_proto = out.File
	file_npool_kyc_kyc_management_proto_rawDesc = nil
	file_npool_kyc_kyc_management_proto_goTypes = nil
	file_npool_kyc_kyc_management_proto_depIdxs = nil
}
