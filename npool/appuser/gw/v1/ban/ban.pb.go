// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/appuser/gw/v1/ban/ban.proto

package ban

import (
	banapp "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/banapp"
	banappuser "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/banappuser"
	app "github.com/NpoolPlatform/message/npool/appuser/mw/v1/app"
	_ "github.com/NpoolPlatform/message/npool/appuser/mw/v1/user"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateBanAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Message     string `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CreateBanAppRequest) Reset() {
	*x = CreateBanAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBanAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanAppRequest) ProtoMessage() {}

func (x *CreateBanAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanAppRequest.ProtoReflect.Descriptor instead.
func (*CreateBanAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBanAppRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateBanAppRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateBanAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *app.App `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateBanAppResponse) Reset() {
	*x = CreateBanAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBanAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanAppResponse) ProtoMessage() {}

func (x *CreateBanAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanAppResponse.ProtoReflect.Descriptor instead.
func (*CreateBanAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBanAppResponse) GetInfo() *app.App {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateBanAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	Info *banapp.BanAppReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateBanAppRequest) Reset() {
	*x = UpdateBanAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBanAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBanAppRequest) ProtoMessage() {}

func (x *UpdateBanAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBanAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateBanAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBanAppRequest) GetInfo() *banapp.BanAppReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateBanAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *app.App `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateBanAppResponse) Reset() {
	*x = UpdateBanAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBanAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBanAppResponse) ProtoMessage() {}

func (x *UpdateBanAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBanAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateBanAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBanAppResponse) GetInfo() *app.App {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteBanAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteBanAppRequest) Reset() {
	*x = DeleteBanAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBanAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBanAppRequest) ProtoMessage() {}

func (x *DeleteBanAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBanAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteBanAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteBanAppRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteBanAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *banapp.BanApp `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteBanAppResponse) Reset() {
	*x = DeleteBanAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBanAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBanAppResponse) ProtoMessage() {}

func (x *DeleteBanAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBanAppResponse.ProtoReflect.Descriptor instead.
func (*DeleteBanAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteBanAppResponse) GetInfo() *banapp.BanApp {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateBanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	TargetUserID string                    `protobuf:"bytes,10,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Info         *banappuser.BanAppUserReq `protobuf:"bytes,20,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateBanUserRequest) Reset() {
	*x = CreateBanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanUserRequest) ProtoMessage() {}

func (x *CreateBanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanUserRequest.ProtoReflect.Descriptor instead.
func (*CreateBanUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{6}
}

func (x *CreateBanUserRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateBanUserRequest) GetInfo() *banappuser.BanAppUserReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateBanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *banappuser.BanAppUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateBanUserResponse) Reset() {
	*x = CreateBanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanUserResponse) ProtoMessage() {}

func (x *CreateBanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanUserResponse.ProtoReflect.Descriptor instead.
func (*CreateBanUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBanUserResponse) GetInfo() *banappuser.BanAppUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppBanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	TargetAppID  string                    `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string                    `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Info         *banappuser.BanAppUserReq `protobuf:"bytes,30,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppBanUserRequest) Reset() {
	*x = CreateAppBanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppBanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppBanUserRequest) ProtoMessage() {}

func (x *CreateAppBanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppBanUserRequest.ProtoReflect.Descriptor instead.
func (*CreateAppBanUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{8}
}

func (x *CreateAppBanUserRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppBanUserRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateAppBanUserRequest) GetInfo() *banappuser.BanAppUserReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppBanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *banappuser.BanAppUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppBanUserResponse) Reset() {
	*x = CreateAppBanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppBanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppBanUserResponse) ProtoMessage() {}

func (x *CreateAppBanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppBanUserResponse.ProtoReflect.Descriptor instead.
func (*CreateAppBanUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAppBanUserResponse) GetInfo() *banappuser.BanAppUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateBanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	Info *banappuser.BanAppUserReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateBanUserRequest) Reset() {
	*x = UpdateBanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBanUserRequest) ProtoMessage() {}

func (x *UpdateBanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBanUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateBanUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateBanUserRequest) GetInfo() *banappuser.BanAppUserReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateBanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *banappuser.BanAppUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateBanUserResponse) Reset() {
	*x = UpdateBanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBanUserResponse) ProtoMessage() {}

func (x *UpdateBanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBanUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateBanUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateBanUserResponse) GetInfo() *banappuser.BanAppUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteBanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permissioned by path
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteBanUserRequest) Reset() {
	*x = DeleteBanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBanUserRequest) ProtoMessage() {}

func (x *DeleteBanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBanUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteBanUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteBanUserRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteBanUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *banappuser.BanAppUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteBanUserResponse) Reset() {
	*x = DeleteBanUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBanUserResponse) ProtoMessage() {}

func (x *DeleteBanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBanUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteBanUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteBanUserResponse) GetInfo() *banappuser.BanAppUser {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_gw_v1_ban_ban_proto protoreflect.FileDescriptor

var file_npool_appuser_gw_v1_ban_ban_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x6e, 0x2f, 0x62, 0x61, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f,
	0x76, 0x32, 0x2f, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x2f, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x62, 0x61, 0x6e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x4a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61,
	0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x4d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x7c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x56,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xec, 0x07, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e,
	0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a,
	0x12, 0x8b, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x98,
	0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x42, 0x61, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x62,
	0x61, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e,
	0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x62, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x62, 0x61, 0x6e, 0x75, 0x73,
	0x65, 0x72, 0x3a, 0x01, 0x2a, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_appuser_gw_v1_ban_ban_proto_rawDescOnce sync.Once
	file_npool_appuser_gw_v1_ban_ban_proto_rawDescData = file_npool_appuser_gw_v1_ban_ban_proto_rawDesc
)

func file_npool_appuser_gw_v1_ban_ban_proto_rawDescGZIP() []byte {
	file_npool_appuser_gw_v1_ban_ban_proto_rawDescOnce.Do(func() {
		file_npool_appuser_gw_v1_ban_ban_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_gw_v1_ban_ban_proto_rawDescData)
	})
	return file_npool_appuser_gw_v1_ban_ban_proto_rawDescData
}

var file_npool_appuser_gw_v1_ban_ban_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_npool_appuser_gw_v1_ban_ban_proto_goTypes = []interface{}{
	(*CreateBanAppRequest)(nil),      // 0: appuser.gateway.ban.v1.CreateBanAppRequest
	(*CreateBanAppResponse)(nil),     // 1: appuser.gateway.ban.v1.CreateBanAppResponse
	(*UpdateBanAppRequest)(nil),      // 2: appuser.gateway.ban.v1.UpdateBanAppRequest
	(*UpdateBanAppResponse)(nil),     // 3: appuser.gateway.ban.v1.UpdateBanAppResponse
	(*DeleteBanAppRequest)(nil),      // 4: appuser.gateway.ban.v1.DeleteBanAppRequest
	(*DeleteBanAppResponse)(nil),     // 5: appuser.gateway.ban.v1.DeleteBanAppResponse
	(*CreateBanUserRequest)(nil),     // 6: appuser.gateway.ban.v1.CreateBanUserRequest
	(*CreateBanUserResponse)(nil),    // 7: appuser.gateway.ban.v1.CreateBanUserResponse
	(*CreateAppBanUserRequest)(nil),  // 8: appuser.gateway.ban.v1.CreateAppBanUserRequest
	(*CreateAppBanUserResponse)(nil), // 9: appuser.gateway.ban.v1.CreateAppBanUserResponse
	(*UpdateBanUserRequest)(nil),     // 10: appuser.gateway.ban.v1.UpdateBanUserRequest
	(*UpdateBanUserResponse)(nil),    // 11: appuser.gateway.ban.v1.UpdateBanUserResponse
	(*DeleteBanUserRequest)(nil),     // 12: appuser.gateway.ban.v1.DeleteBanUserRequest
	(*DeleteBanUserResponse)(nil),    // 13: appuser.gateway.ban.v1.DeleteBanUserResponse
	(*app.App)(nil),                  // 14: appuser.middleware.app.v1.App
	(*banapp.BanAppReq)(nil),         // 15: appuser.manager.banapp.v2.BanAppReq
	(*banapp.BanApp)(nil),            // 16: appuser.manager.banapp.v2.BanApp
	(*banappuser.BanAppUserReq)(nil), // 17: appuser.manager.banappuser.v2.BanAppUserReq
	(*banappuser.BanAppUser)(nil),    // 18: appuser.manager.banappuser.v2.BanAppUser
}
var file_npool_appuser_gw_v1_ban_ban_proto_depIdxs = []int32{
	14, // 0: appuser.gateway.ban.v1.CreateBanAppResponse.Info:type_name -> appuser.middleware.app.v1.App
	15, // 1: appuser.gateway.ban.v1.UpdateBanAppRequest.Info:type_name -> appuser.manager.banapp.v2.BanAppReq
	14, // 2: appuser.gateway.ban.v1.UpdateBanAppResponse.Info:type_name -> appuser.middleware.app.v1.App
	16, // 3: appuser.gateway.ban.v1.DeleteBanAppResponse.Info:type_name -> appuser.manager.banapp.v2.BanApp
	17, // 4: appuser.gateway.ban.v1.CreateBanUserRequest.Info:type_name -> appuser.manager.banappuser.v2.BanAppUserReq
	18, // 5: appuser.gateway.ban.v1.CreateBanUserResponse.Info:type_name -> appuser.manager.banappuser.v2.BanAppUser
	17, // 6: appuser.gateway.ban.v1.CreateAppBanUserRequest.Info:type_name -> appuser.manager.banappuser.v2.BanAppUserReq
	18, // 7: appuser.gateway.ban.v1.CreateAppBanUserResponse.Info:type_name -> appuser.manager.banappuser.v2.BanAppUser
	17, // 8: appuser.gateway.ban.v1.UpdateBanUserRequest.Info:type_name -> appuser.manager.banappuser.v2.BanAppUserReq
	18, // 9: appuser.gateway.ban.v1.UpdateBanUserResponse.Info:type_name -> appuser.manager.banappuser.v2.BanAppUser
	18, // 10: appuser.gateway.ban.v1.DeleteBanUserResponse.Info:type_name -> appuser.manager.banappuser.v2.BanAppUser
	0,  // 11: appuser.gateway.ban.v1.Gateway.CreateBanApp:input_type -> appuser.gateway.ban.v1.CreateBanAppRequest
	2,  // 12: appuser.gateway.ban.v1.Gateway.UpdateBanApp:input_type -> appuser.gateway.ban.v1.UpdateBanAppRequest
	4,  // 13: appuser.gateway.ban.v1.Gateway.DeleteBanApp:input_type -> appuser.gateway.ban.v1.DeleteBanAppRequest
	6,  // 14: appuser.gateway.ban.v1.Gateway.CreateBanUser:input_type -> appuser.gateway.ban.v1.CreateBanUserRequest
	8,  // 15: appuser.gateway.ban.v1.Gateway.CreateAppBanUser:input_type -> appuser.gateway.ban.v1.CreateAppBanUserRequest
	10, // 16: appuser.gateway.ban.v1.Gateway.UpdateBanUser:input_type -> appuser.gateway.ban.v1.UpdateBanUserRequest
	12, // 17: appuser.gateway.ban.v1.Gateway.DeleteBanUser:input_type -> appuser.gateway.ban.v1.DeleteBanUserRequest
	1,  // 18: appuser.gateway.ban.v1.Gateway.CreateBanApp:output_type -> appuser.gateway.ban.v1.CreateBanAppResponse
	3,  // 19: appuser.gateway.ban.v1.Gateway.UpdateBanApp:output_type -> appuser.gateway.ban.v1.UpdateBanAppResponse
	5,  // 20: appuser.gateway.ban.v1.Gateway.DeleteBanApp:output_type -> appuser.gateway.ban.v1.DeleteBanAppResponse
	7,  // 21: appuser.gateway.ban.v1.Gateway.CreateBanUser:output_type -> appuser.gateway.ban.v1.CreateBanUserResponse
	9,  // 22: appuser.gateway.ban.v1.Gateway.CreateAppBanUser:output_type -> appuser.gateway.ban.v1.CreateAppBanUserResponse
	11, // 23: appuser.gateway.ban.v1.Gateway.UpdateBanUser:output_type -> appuser.gateway.ban.v1.UpdateBanUserResponse
	13, // 24: appuser.gateway.ban.v1.Gateway.DeleteBanUser:output_type -> appuser.gateway.ban.v1.DeleteBanUserResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_npool_appuser_gw_v1_ban_ban_proto_init() }
func file_npool_appuser_gw_v1_ban_ban_proto_init() {
	if File_npool_appuser_gw_v1_ban_ban_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBanAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBanAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBanAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBanAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBanAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBanAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppBanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppBanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_gw_v1_ban_ban_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBanUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_gw_v1_ban_ban_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_gw_v1_ban_ban_proto_goTypes,
		DependencyIndexes: file_npool_appuser_gw_v1_ban_ban_proto_depIdxs,
		MessageInfos:      file_npool_appuser_gw_v1_ban_ban_proto_msgTypes,
	}.Build()
	File_npool_appuser_gw_v1_ban_ban_proto = out.File
	file_npool_appuser_gw_v1_ban_ban_proto_rawDesc = nil
	file_npool_appuser_gw_v1_ban_ban_proto_goTypes = nil
	file_npool_appuser_gw_v1_ban_ban_proto_depIdxs = nil
}
