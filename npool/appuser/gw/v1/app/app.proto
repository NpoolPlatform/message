syntax = "proto3";

package appuser.gateway.app.v1;

option go_package = "github.com/NpoolPlatform/message/npool/appuser/gw/v1/app";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";
import "npool/appuser/mgr/v2/app/app.proto";
import "npool/appuser/mw/v1/app/app.proto";
import "npool/appuser/mgr/v2/signmethod/signmethod.proto";
import "npool/appuser/mgr/v2/recaptcha/recaptcha.proto";

service AppGw {
    rpc CreateApp (CreateAppRequest) returns (CreateAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/app"
            body: "*"
        };
    }

    rpc UpdateApp (UpdateAppRequest) returns (UpdateAppResponse) {
        option (google.api.http) = {
            post: "/v1/update/app"
            body: "*"
        };
    }

    rpc GetApp (GetAppRequest) returns (GetAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/app"
            body: "*"
        };
    }

    // Super admin api
    rpc GetApps (GetAppsRequest) returns (GetAppsResponse) {
        option (google.api.http) = {
            post: "/v1/get/apps"
            body: "*"
        };
    }

    rpc GetUserApps (GetUserAppsRequest) returns (GetUserAppsResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/apps"
            body: "*"
        };
    }

    rpc GetSignMethods (GetSignMethodsRequest) returns (GetSignMethodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/signmethods"
            body: "*"
        };
    }

    rpc GetRecaptchas (GetRecaptchasRequest) returns (GetRecaptchasResponse) {
        option (google.api.http) = {
            post: "/v1/get/recaptchas"
            body: "*"
        };
    }
}

message CreateAppRequest {
    // Permissioned by path
    appuser.middleware.app.v1.AppReq Info = 10;
}

message CreateAppResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message UpdateAppRequest {
    // Permissioned by path
    appuser.middleware.app.v1.AppReq Info = 10;
}

message UpdateAppResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message GetAppRequest {
    // Permissioned by app
    string AppID = 10;
}

message GetAppResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message GetAppsRequest {
    // Permissioned by path
    int32  Offset = 30;
    int32  Limit  = 40;
}

message GetAppsResponse {
    repeated appuser.middleware.app.v1.App Infos = 10;
    uint32                                 Total = 20;
}

message GetUserAppsRequest {
    // Permissioned by path
    string TargetUserID = 10;
    int32  Offset       = 20;
    int32  Limit        = 30;
}

message GetUserAppsResponse {
    repeated appuser.middleware.app.v1.App Infos = 10;
    uint32                                 Total = 20;
}


message BanAppRequest {
    string AppID      = 10;
    string BanMessage = 20;
}

message BanAppResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message GetSignMethodsRequest {
}

message GetSignMethodsResponse {
    // In future this may be put to database then admin can change it
    repeated appuser.manager.signmethod.v2.SignMethod Infos = 10;
}

message SetSignMethodsRequest {
    string          AppID         = 10;
    repeated string SignMethodIDs = 20;
}

message SetSignMethodsResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message GetRecaptchasRequest {
}

message GetRecaptchasResponse {
    // In future this may be put to database then admin can change it
    repeated appuser.manager.recaptcha.v2.Recaptcha Infos = 10;
}

message SetRecaptchaRequest {
    string AppID       = 10;
    string RecaptchaID = 20;
}

message SetRecaptchaResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message SetKycRequest {
    string AppID  = 10;
    bool   Enable = 20;
}

message SetKycResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message SetSigninVerifyRequest {
    string AppID  = 10;
    bool   Enable = 20;
}

message SetSigninVerifyResponse {
    appuser.middleware.app.v1.App Info = 10;
}

message SetInvitationCodeMustRequest {
    string AppID  = 10;
    bool   Enable = 20;
}

message SetInvitationCodeMustResponse {
    appuser.middleware.app.v1.App Info = 10;
}
