syntax = "proto3";

package appuser.gateway.user.v1;

option go_package = "github.com/NpoolPlatform/message/npool/appuser/gw/v1/user";

import "google/api/annotations.proto";
import "npool/appuser/mgr/v2/appuser/appuser.proto";
import "npool/appuser/mgr/v2/signmethod/signmethod.proto";
import "npool/appuser/mw/v1/user/user.proto";

service Gateway {
    rpc Signup (SignupRequest) returns (SignupResponse) {
        option (google.api.http) = {
            post: "/v1/signup"
            body: "*"
        };
    }

    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create/user"
            body: "*"
        };
    }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            post: "/v1/update/user"
            body: "*"
        };
    }

    rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {
        option (google.api.http) = {
            post: "/v1/get/users"
            body: "*"
        };
    }

    rpc GetAppUsers (GetAppUsersRequest) returns (GetAppUsersResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/users"
            body: "*"
        };
    }

    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
        };
    }

    rpc LoginVerify (LoginVerifyRequest) returns (LoginVerifyResponse) {
        option (google.api.http) = {
            post: "/v1/loginverify"
            body: "*"
        };
    }

    rpc Logined (LoginedRequest) returns (LoginedResponse) {
        option (google.api.http) = {
            post: "/v1/logined"
            body: "*"
        };
    }

    rpc Logout (LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/v1/logout"
            body: "*"
        };
    }
}

message SignupRequest {
    // Permissioned by path
    string          AppID            = 10;
    string          Account          = 20;
    string          PasswordHash     = 30;
    appuser.manager.signmethod.v2.SignMethodType AccountType = 40;
    string          VerificationCode = 50;
    optional string InvitationCode   = 60;
}

message SignupResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message CreateUserRequest {
    optional string EmailAddress       = 10;
    optional string PhoneNO            = 20;

    // Imported
    optional string ImportedFromAppID  = 30;

    // Extra
    optional string Username           = 40;
    repeated string AddressFields      = 50;
    optional string Gender             = 60;
    optional string PostalCode         = 70;
    optional uint32 Age                = 80;
    optional uint32 Birthday           = 90;
    optional string Avatar             = 100;
    optional string Organization       = 110;
    optional string FirstName          = 120;
    optional string LastName           = 130;
    optional string IDNumber           = 140;

    // Secret
    optional string PasswordHash       = 150;

    // RoleUser
    repeated string RoleIDs            = 160;
}

message CreateUserResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message UpdateUserRequest {
    optional string EmailAddress       = 10;
    optional string PhoneNO            = 20;

    // Extra
    optional string Username           = 30;
    repeated string AddressFields      = 40;
    optional string Gender             = 50;
    optional string PostalCode         = 60;
    optional uint32 Age                = 70;
    optional uint32 Birthday           = 80;
    optional string Avatar             = 90;
    optional string Organization       = 100;
    optional string FirstName          = 110;
    optional string LastName           = 120;
    optional string IDNumber           = 130;

    // Control
    optional appuser.manager.signmethod.v2.SignMethodType SigninVerifyType = 140;

    // Secret
    optional string PasswordHash       = 150;

    // Banned
    optional bool   Banned             = 160;
    optional string BanMessage         = 170;

    // RoleUser
    repeated string RoleIDs            = 180;
}

message UpdateUserResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message GetUsersRequest {
    string AppID  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetUsersResponse {
    repeated appuser.middleware.user.v1.User Infos = 10;
    uint32 Total  = 40;
}

message GetAppUsersRequest {
    string TargetAppID = 10;
    int32  Offset      = 20;
    int32  Limit       = 30;
}

message GetAppUsersResponse {
    repeated appuser.middleware.user.v1.User Infos = 10;
    uint32 Total  = 40;
}

message LoginRequest {
    string AppID           = 10;
    string Account         = 20;
    string PasswordHash    = 30;
    appuser.manager.signmethod.v2.SignMethodType AccountType = 40;
    string ManMachineSpec  = 50;
    string EnvironmentSpec = 60;
}

message LoginResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message LoginVerifyRequest {
    string AppID            = 10;
    string UserID           = 20;
    string Token            = 30;
    string VerificationCode = 40;
}

message LoginVerifyResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message LoginedRequest {
    string AppID  = 10;
    string UserID = 20;
    string Token  = 30;
}

message LoginedResponse {
    appuser.middleware.user.v1.User Info = 10;
}

message LogoutRequest {
    string AppID  = 10;
    string UserID = 20;
    string Token  = 30;
}

message LogoutResponse {
  appuser.middleware.user.v1.User Info = 10;
}

