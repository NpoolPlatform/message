// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appuser/gw/v1/appuser/appuser.proto

package appuser

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserGwClient is the client API for AppUserGw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserGwClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	GetAppUser(ctx context.Context, in *GetAppUserRequest, opts ...grpc.CallOption) (*GetAppUserResponse, error)
	GetUserByAccount(ctx context.Context, in *GetUserByAccountRequest, opts ...grpc.CallOption) (*GetUserByAccountResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	GetUserRolesByUser(ctx context.Context, in *GetUserRolesByUserRequest, opts ...grpc.CallOption) (*GetUserRolesByUserResponse, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	GetAppUserInfo(ctx context.Context, in *GetAppUserInfoRequest, opts ...grpc.CallOption) (*GetAppUserInfoResponse, error)
	GetUserInfos(ctx context.Context, in *GetUserInfosRequest, opts ...grpc.CallOption) (*GetUserInfosResponse, error)
	GetAppUserInfos(ctx context.Context, in *GetAppUserInfosRequest, opts ...grpc.CallOption) (*GetAppUserInfosResponse, error)
	CreateUserWithSecret(ctx context.Context, in *CreateUserWithSecretRequest, opts ...grpc.CallOption) (*CreateUserWithSecretResponse, error)
}

type appUserGwClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserGwClient(cc grpc.ClientConnInterface) AppUserGwClient {
	return &appUserGwClient{cc}
}

func (c *appUserGwClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetAppUser(ctx context.Context, in *GetAppUserRequest, opts ...grpc.CallOption) (*GetAppUserResponse, error) {
	out := new(GetAppUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetUserByAccount(ctx context.Context, in *GetUserByAccountRequest, opts ...grpc.CallOption) (*GetUserByAccountResponse, error) {
	out := new(GetUserByAccountResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetUserByAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetUserRolesByUser(ctx context.Context, in *GetUserRolesByUserRequest, opts ...grpc.CallOption) (*GetUserRolesByUserResponse, error) {
	out := new(GetUserRolesByUserResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetUserRolesByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetAppUserInfo(ctx context.Context, in *GetAppUserInfoRequest, opts ...grpc.CallOption) (*GetAppUserInfoResponse, error) {
	out := new(GetAppUserInfoResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetAppUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetUserInfos(ctx context.Context, in *GetUserInfosRequest, opts ...grpc.CallOption) (*GetUserInfosResponse, error) {
	out := new(GetUserInfosResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetUserInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) GetAppUserInfos(ctx context.Context, in *GetAppUserInfosRequest, opts ...grpc.CallOption) (*GetAppUserInfosResponse, error) {
	out := new(GetAppUserInfosResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/GetAppUserInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGwClient) CreateUserWithSecret(ctx context.Context, in *CreateUserWithSecretRequest, opts ...grpc.CallOption) (*CreateUserWithSecretResponse, error) {
	out := new(CreateUserWithSecretResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.user.v1.AppUserGw/CreateUserWithSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserGwServer is the server API for AppUserGw service.
// All implementations must embed UnimplementedAppUserGwServer
// for forward compatibility
type AppUserGwServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	GetAppUser(context.Context, *GetAppUserRequest) (*GetAppUserResponse, error)
	GetUserByAccount(context.Context, *GetUserByAccountRequest) (*GetUserByAccountResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	GetUserRolesByUser(context.Context, *GetUserRolesByUserRequest) (*GetUserRolesByUserResponse, error)
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	GetAppUserInfo(context.Context, *GetAppUserInfoRequest) (*GetAppUserInfoResponse, error)
	GetUserInfos(context.Context, *GetUserInfosRequest) (*GetUserInfosResponse, error)
	GetAppUserInfos(context.Context, *GetAppUserInfosRequest) (*GetAppUserInfosResponse, error)
	CreateUserWithSecret(context.Context, *CreateUserWithSecretRequest) (*CreateUserWithSecretResponse, error)
	mustEmbedUnimplementedAppUserGwServer()
}

// UnimplementedAppUserGwServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserGwServer struct {
}

func (UnimplementedAppUserGwServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedAppUserGwServer) GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (UnimplementedAppUserGwServer) GetAppUser(context.Context, *GetAppUserRequest) (*GetAppUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUser not implemented")
}
func (UnimplementedAppUserGwServer) GetUserByAccount(context.Context, *GetUserByAccountRequest) (*GetUserByAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByAccount not implemented")
}
func (UnimplementedAppUserGwServer) UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (UnimplementedAppUserGwServer) GetUserRolesByUser(context.Context, *GetUserRolesByUserRequest) (*GetUserRolesByUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserRolesByUser not implemented")
}
func (UnimplementedAppUserGwServer) GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (UnimplementedAppUserGwServer) GetAppUserInfo(context.Context, *GetAppUserInfoRequest) (*GetAppUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserInfo not implemented")
}
func (UnimplementedAppUserGwServer) GetUserInfos(context.Context, *GetUserInfosRequest) (*GetUserInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfos not implemented")
}
func (UnimplementedAppUserGwServer) GetAppUserInfos(context.Context, *GetAppUserInfosRequest) (*GetAppUserInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserInfos not implemented")
}
func (UnimplementedAppUserGwServer) CreateUserWithSecret(context.Context, *CreateUserWithSecretRequest) (*CreateUserWithSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserWithSecret not implemented")
}
func (UnimplementedAppUserGwServer) mustEmbedUnimplementedAppUserGwServer() {}

// UnsafeAppUserGwServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserGwServer will
// result in compilation errors.
type UnsafeAppUserGwServer interface {
	mustEmbedUnimplementedAppUserGwServer()
}

func RegisterAppUserGwServer(s grpc.ServiceRegistrar, srv AppUserGwServer) {
	s.RegisterService(&AppUserGw_ServiceDesc, srv)
}

func _AppUserGw_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetAppUser(ctx, req.(*GetAppUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetUserByAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetUserByAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetUserByAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetUserByAccount(ctx, req.(*GetUserByAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetUserRolesByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRolesByUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetUserRolesByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetUserRolesByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetUserRolesByUser(ctx, req.(*GetUserRolesByUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetAppUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetAppUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetAppUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetAppUserInfo(ctx, req.(*GetAppUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetUserInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetUserInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetUserInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetUserInfos(ctx, req.(*GetUserInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_GetAppUserInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).GetAppUserInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/GetAppUserInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).GetAppUserInfos(ctx, req.(*GetAppUserInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGw_CreateUserWithSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserWithSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGwServer).CreateUserWithSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.user.v1.AppUserGw/CreateUserWithSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGwServer).CreateUserWithSecret(ctx, req.(*CreateUserWithSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserGw_ServiceDesc is the grpc.ServiceDesc for AppUserGw service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserGw_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.gateway.app.user.v1.AppUserGw",
	HandlerType: (*AppUserGwServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _AppUserGw_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _AppUserGw_GetUser_Handler,
		},
		{
			MethodName: "GetAppUser",
			Handler:    _AppUserGw_GetAppUser_Handler,
		},
		{
			MethodName: "GetUserByAccount",
			Handler:    _AppUserGw_GetUserByAccount_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _AppUserGw_UpdateUser_Handler,
		},
		{
			MethodName: "GetUserRolesByUser",
			Handler:    _AppUserGw_GetUserRolesByUser_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _AppUserGw_GetUserInfo_Handler,
		},
		{
			MethodName: "GetAppUserInfo",
			Handler:    _AppUserGw_GetAppUserInfo_Handler,
		},
		{
			MethodName: "GetUserInfos",
			Handler:    _AppUserGw_GetUserInfos_Handler,
		},
		{
			MethodName: "GetAppUserInfos",
			Handler:    _AppUserGw_GetAppUserInfos_Handler,
		},
		{
			MethodName: "CreateUserWithSecret",
			Handler:    _AppUserGw_CreateUserWithSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appuser/gw/v1/appuser/appuser.proto",
}
