// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appuser/mgr/v2/appuserextra/appuserextra.proto

package appuserextra

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserExtraMgrClient is the client API for AppUserExtraMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserExtraMgrClient interface {
	CreateAppUserExtra(ctx context.Context, in *CreateAppUserExtraRequest, opts ...grpc.CallOption) (*CreateAppUserExtraResponse, error)
	CreateAppUserExtras(ctx context.Context, in *CreateAppUserExtrasRequest, opts ...grpc.CallOption) (*CreateAppUserExtrasResponse, error)
	UpdateAppUserExtra(ctx context.Context, in *UpdateAppUserExtraRequest, opts ...grpc.CallOption) (*UpdateAppUserExtraResponse, error)
	GetAppUserExtra(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error)
	GetAppUserExtraOnly(ctx context.Context, in *GetAppUserExtraOnlyRequest, opts ...grpc.CallOption) (*GetAppUserExtraOnlyResponse, error)
	GetAppUserExtras(ctx context.Context, in *GetAppUserExtrasRequest, opts ...grpc.CallOption) (*GetAppUserExtrasResponse, error)
	ExistAppUserExtra(ctx context.Context, in *ExistAppUserExtraRequest, opts ...grpc.CallOption) (*ExistAppUserExtraResponse, error)
	ExistAppUserExtraConds(ctx context.Context, in *ExistAppUserExtraCondsRequest, opts ...grpc.CallOption) (*ExistAppUserExtraCondsResponse, error)
	CountAppUserExtras(ctx context.Context, in *CountAppUserExtrasRequest, opts ...grpc.CallOption) (*CountAppUserExtrasResponse, error)
	DeleteAppUserExtra(ctx context.Context, in *DeleteAppUserExtraRequest, opts ...grpc.CallOption) (*DeleteAppUserExtraResponse, error)
}

type appUserExtraMgrClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserExtraMgrClient(cc grpc.ClientConnInterface) AppUserExtraMgrClient {
	return &appUserExtraMgrClient{cc}
}

func (c *appUserExtraMgrClient) CreateAppUserExtra(ctx context.Context, in *CreateAppUserExtraRequest, opts ...grpc.CallOption) (*CreateAppUserExtraResponse, error) {
	out := new(CreateAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CreateAppUserExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) CreateAppUserExtras(ctx context.Context, in *CreateAppUserExtrasRequest, opts ...grpc.CallOption) (*CreateAppUserExtrasResponse, error) {
	out := new(CreateAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CreateAppUserExtras", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) UpdateAppUserExtra(ctx context.Context, in *UpdateAppUserExtraRequest, opts ...grpc.CallOption) (*UpdateAppUserExtraResponse, error) {
	out := new(UpdateAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/UpdateAppUserExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) GetAppUserExtra(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error) {
	out := new(GetAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) GetAppUserExtraOnly(ctx context.Context, in *GetAppUserExtraOnlyRequest, opts ...grpc.CallOption) (*GetAppUserExtraOnlyResponse, error) {
	out := new(GetAppUserExtraOnlyResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtraOnly", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) GetAppUserExtras(ctx context.Context, in *GetAppUserExtrasRequest, opts ...grpc.CallOption) (*GetAppUserExtrasResponse, error) {
	out := new(GetAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtras", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) ExistAppUserExtra(ctx context.Context, in *ExistAppUserExtraRequest, opts ...grpc.CallOption) (*ExistAppUserExtraResponse, error) {
	out := new(ExistAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/ExistAppUserExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) ExistAppUserExtraConds(ctx context.Context, in *ExistAppUserExtraCondsRequest, opts ...grpc.CallOption) (*ExistAppUserExtraCondsResponse, error) {
	out := new(ExistAppUserExtraCondsResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/ExistAppUserExtraConds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) CountAppUserExtras(ctx context.Context, in *CountAppUserExtrasRequest, opts ...grpc.CallOption) (*CountAppUserExtrasResponse, error) {
	out := new(CountAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CountAppUserExtras", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserExtraMgrClient) DeleteAppUserExtra(ctx context.Context, in *DeleteAppUserExtraRequest, opts ...grpc.CallOption) (*DeleteAppUserExtraResponse, error) {
	out := new(DeleteAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserExtraMgr/DeleteAppUserExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserExtraMgrServer is the server API for AppUserExtraMgr service.
// All implementations must embed UnimplementedAppUserExtraMgrServer
// for forward compatibility
type AppUserExtraMgrServer interface {
	CreateAppUserExtra(context.Context, *CreateAppUserExtraRequest) (*CreateAppUserExtraResponse, error)
	CreateAppUserExtras(context.Context, *CreateAppUserExtrasRequest) (*CreateAppUserExtrasResponse, error)
	UpdateAppUserExtra(context.Context, *UpdateAppUserExtraRequest) (*UpdateAppUserExtraResponse, error)
	GetAppUserExtra(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error)
	GetAppUserExtraOnly(context.Context, *GetAppUserExtraOnlyRequest) (*GetAppUserExtraOnlyResponse, error)
	GetAppUserExtras(context.Context, *GetAppUserExtrasRequest) (*GetAppUserExtrasResponse, error)
	ExistAppUserExtra(context.Context, *ExistAppUserExtraRequest) (*ExistAppUserExtraResponse, error)
	ExistAppUserExtraConds(context.Context, *ExistAppUserExtraCondsRequest) (*ExistAppUserExtraCondsResponse, error)
	CountAppUserExtras(context.Context, *CountAppUserExtrasRequest) (*CountAppUserExtrasResponse, error)
	DeleteAppUserExtra(context.Context, *DeleteAppUserExtraRequest) (*DeleteAppUserExtraResponse, error)
	mustEmbedUnimplementedAppUserExtraMgrServer()
}

// UnimplementedAppUserExtraMgrServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserExtraMgrServer struct {
}

func (UnimplementedAppUserExtraMgrServer) CreateAppUserExtra(context.Context, *CreateAppUserExtraRequest) (*CreateAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppUserExtra not implemented")
}
func (UnimplementedAppUserExtraMgrServer) CreateAppUserExtras(context.Context, *CreateAppUserExtrasRequest) (*CreateAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppUserExtras not implemented")
}
func (UnimplementedAppUserExtraMgrServer) UpdateAppUserExtra(context.Context, *UpdateAppUserExtraRequest) (*UpdateAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppUserExtra not implemented")
}
func (UnimplementedAppUserExtraMgrServer) GetAppUserExtra(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtra not implemented")
}
func (UnimplementedAppUserExtraMgrServer) GetAppUserExtraOnly(context.Context, *GetAppUserExtraOnlyRequest) (*GetAppUserExtraOnlyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtraOnly not implemented")
}
func (UnimplementedAppUserExtraMgrServer) GetAppUserExtras(context.Context, *GetAppUserExtrasRequest) (*GetAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtras not implemented")
}
func (UnimplementedAppUserExtraMgrServer) ExistAppUserExtra(context.Context, *ExistAppUserExtraRequest) (*ExistAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistAppUserExtra not implemented")
}
func (UnimplementedAppUserExtraMgrServer) ExistAppUserExtraConds(context.Context, *ExistAppUserExtraCondsRequest) (*ExistAppUserExtraCondsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistAppUserExtraConds not implemented")
}
func (UnimplementedAppUserExtraMgrServer) CountAppUserExtras(context.Context, *CountAppUserExtrasRequest) (*CountAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAppUserExtras not implemented")
}
func (UnimplementedAppUserExtraMgrServer) DeleteAppUserExtra(context.Context, *DeleteAppUserExtraRequest) (*DeleteAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAppUserExtra not implemented")
}
func (UnimplementedAppUserExtraMgrServer) mustEmbedUnimplementedAppUserExtraMgrServer() {}

// UnsafeAppUserExtraMgrServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserExtraMgrServer will
// result in compilation errors.
type UnsafeAppUserExtraMgrServer interface {
	mustEmbedUnimplementedAppUserExtraMgrServer()
}

func RegisterAppUserExtraMgrServer(s grpc.ServiceRegistrar, srv AppUserExtraMgrServer) {
	s.RegisterService(&AppUserExtraMgr_ServiceDesc, srv)
}

func _AppUserExtraMgr_CreateAppUserExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).CreateAppUserExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CreateAppUserExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).CreateAppUserExtra(ctx, req.(*CreateAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_CreateAppUserExtras_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).CreateAppUserExtras(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CreateAppUserExtras",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).CreateAppUserExtras(ctx, req.(*CreateAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_UpdateAppUserExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).UpdateAppUserExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/UpdateAppUserExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).UpdateAppUserExtra(ctx, req.(*UpdateAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_GetAppUserExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).GetAppUserExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).GetAppUserExtra(ctx, req.(*GetAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_GetAppUserExtraOnly_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtraOnlyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).GetAppUserExtraOnly(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtraOnly",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).GetAppUserExtraOnly(ctx, req.(*GetAppUserExtraOnlyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_GetAppUserExtras_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).GetAppUserExtras(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/GetAppUserExtras",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).GetAppUserExtras(ctx, req.(*GetAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_ExistAppUserExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).ExistAppUserExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/ExistAppUserExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).ExistAppUserExtra(ctx, req.(*ExistAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_ExistAppUserExtraConds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistAppUserExtraCondsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).ExistAppUserExtraConds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/ExistAppUserExtraConds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).ExistAppUserExtraConds(ctx, req.(*ExistAppUserExtraCondsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_CountAppUserExtras_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).CountAppUserExtras(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/CountAppUserExtras",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).CountAppUserExtras(ctx, req.(*CountAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserExtraMgr_DeleteAppUserExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserExtraMgrServer).DeleteAppUserExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserExtraMgr/DeleteAppUserExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserExtraMgrServer).DeleteAppUserExtra(ctx, req.(*DeleteAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserExtraMgr_ServiceDesc is the grpc.ServiceDesc for AppUserExtraMgr service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserExtraMgr_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.manager.appuserextra.v2.AppUserExtraMgr",
	HandlerType: (*AppUserExtraMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAppUserExtra",
			Handler:    _AppUserExtraMgr_CreateAppUserExtra_Handler,
		},
		{
			MethodName: "CreateAppUserExtras",
			Handler:    _AppUserExtraMgr_CreateAppUserExtras_Handler,
		},
		{
			MethodName: "UpdateAppUserExtra",
			Handler:    _AppUserExtraMgr_UpdateAppUserExtra_Handler,
		},
		{
			MethodName: "GetAppUserExtra",
			Handler:    _AppUserExtraMgr_GetAppUserExtra_Handler,
		},
		{
			MethodName: "GetAppUserExtraOnly",
			Handler:    _AppUserExtraMgr_GetAppUserExtraOnly_Handler,
		},
		{
			MethodName: "GetAppUserExtras",
			Handler:    _AppUserExtraMgr_GetAppUserExtras_Handler,
		},
		{
			MethodName: "ExistAppUserExtra",
			Handler:    _AppUserExtraMgr_ExistAppUserExtra_Handler,
		},
		{
			MethodName: "ExistAppUserExtraConds",
			Handler:    _AppUserExtraMgr_ExistAppUserExtraConds_Handler,
		},
		{
			MethodName: "CountAppUserExtras",
			Handler:    _AppUserExtraMgr_CountAppUserExtras_Handler,
		},
		{
			MethodName: "DeleteAppUserExtra",
			Handler:    _AppUserExtraMgr_DeleteAppUserExtra_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appuser/mgr/v2/appuserextra/appuserextra.proto",
}
