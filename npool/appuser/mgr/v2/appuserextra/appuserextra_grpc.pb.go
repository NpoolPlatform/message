// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appusermgrv2/appuserextra/appuserextra.proto

package appuserextra

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserManagerAppUserExtraClient is the client API for AppUserManagerAppUserExtra service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserManagerAppUserExtraClient interface {
	CreateAppUserExtraV2(ctx context.Context, in *CreateAppUserExtraRequest, opts ...grpc.CallOption) (*CreateAppUserExtraResponse, error)
	CreateAppUserExtrasV2(ctx context.Context, in *CreateAppUserExtrasRequest, opts ...grpc.CallOption) (*CreateAppUserExtrasResponse, error)
	UpdateAppUserExtraV2(ctx context.Context, in *UpdateAppUserExtraRequest, opts ...grpc.CallOption) (*UpdateAppUserExtraResponse, error)
	GetAppUserExtraV2(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error)
	GetAppUserExtraOnlyV2(ctx context.Context, in *GetAppUserExtraOnlyRequest, opts ...grpc.CallOption) (*GetAppUserExtraOnlyResponse, error)
	GetAppUserExtrasV2(ctx context.Context, in *GetAppUserExtrasRequest, opts ...grpc.CallOption) (*GetAppUserExtrasResponse, error)
	ExistAppUserExtraV2(ctx context.Context, in *ExistAppUserExtraRequest, opts ...grpc.CallOption) (*ExistAppUserExtraResponse, error)
	ExistAppUserExtraCondsV2(ctx context.Context, in *ExistAppUserExtraCondsRequest, opts ...grpc.CallOption) (*ExistAppUserExtraCondsResponse, error)
	CountAppUserExtrasV2(ctx context.Context, in *CountAppUserExtrasRequest, opts ...grpc.CallOption) (*CountAppUserExtrasResponse, error)
	DeleteAppUserExtraV2(ctx context.Context, in *DeleteAppUserExtraRequest, opts ...grpc.CallOption) (*DeleteAppUserExtraResponse, error)
}

type appUserManagerAppUserExtraClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserManagerAppUserExtraClient(cc grpc.ClientConnInterface) AppUserManagerAppUserExtraClient {
	return &appUserManagerAppUserExtraClient{cc}
}

func (c *appUserManagerAppUserExtraClient) CreateAppUserExtraV2(ctx context.Context, in *CreateAppUserExtraRequest, opts ...grpc.CallOption) (*CreateAppUserExtraResponse, error) {
	out := new(CreateAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CreateAppUserExtraV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) CreateAppUserExtrasV2(ctx context.Context, in *CreateAppUserExtrasRequest, opts ...grpc.CallOption) (*CreateAppUserExtrasResponse, error) {
	out := new(CreateAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CreateAppUserExtrasV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) UpdateAppUserExtraV2(ctx context.Context, in *UpdateAppUserExtraRequest, opts ...grpc.CallOption) (*UpdateAppUserExtraResponse, error) {
	out := new(UpdateAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/UpdateAppUserExtraV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) GetAppUserExtraV2(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error) {
	out := new(GetAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtraV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) GetAppUserExtraOnlyV2(ctx context.Context, in *GetAppUserExtraOnlyRequest, opts ...grpc.CallOption) (*GetAppUserExtraOnlyResponse, error) {
	out := new(GetAppUserExtraOnlyResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtraOnlyV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) GetAppUserExtrasV2(ctx context.Context, in *GetAppUserExtrasRequest, opts ...grpc.CallOption) (*GetAppUserExtrasResponse, error) {
	out := new(GetAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtrasV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) ExistAppUserExtraV2(ctx context.Context, in *ExistAppUserExtraRequest, opts ...grpc.CallOption) (*ExistAppUserExtraResponse, error) {
	out := new(ExistAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/ExistAppUserExtraV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) ExistAppUserExtraCondsV2(ctx context.Context, in *ExistAppUserExtraCondsRequest, opts ...grpc.CallOption) (*ExistAppUserExtraCondsResponse, error) {
	out := new(ExistAppUserExtraCondsResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/ExistAppUserExtraCondsV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) CountAppUserExtrasV2(ctx context.Context, in *CountAppUserExtrasRequest, opts ...grpc.CallOption) (*CountAppUserExtrasResponse, error) {
	out := new(CountAppUserExtrasResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CountAppUserExtrasV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserManagerAppUserExtraClient) DeleteAppUserExtraV2(ctx context.Context, in *DeleteAppUserExtraRequest, opts ...grpc.CallOption) (*DeleteAppUserExtraResponse, error) {
	out := new(DeleteAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/DeleteAppUserExtraV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserManagerAppUserExtraServer is the server API for AppUserManagerAppUserExtra service.
// All implementations must embed UnimplementedAppUserManagerAppUserExtraServer
// for forward compatibility
type AppUserManagerAppUserExtraServer interface {
	CreateAppUserExtraV2(context.Context, *CreateAppUserExtraRequest) (*CreateAppUserExtraResponse, error)
	CreateAppUserExtrasV2(context.Context, *CreateAppUserExtrasRequest) (*CreateAppUserExtrasResponse, error)
	UpdateAppUserExtraV2(context.Context, *UpdateAppUserExtraRequest) (*UpdateAppUserExtraResponse, error)
	GetAppUserExtraV2(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error)
	GetAppUserExtraOnlyV2(context.Context, *GetAppUserExtraOnlyRequest) (*GetAppUserExtraOnlyResponse, error)
	GetAppUserExtrasV2(context.Context, *GetAppUserExtrasRequest) (*GetAppUserExtrasResponse, error)
	ExistAppUserExtraV2(context.Context, *ExistAppUserExtraRequest) (*ExistAppUserExtraResponse, error)
	ExistAppUserExtraCondsV2(context.Context, *ExistAppUserExtraCondsRequest) (*ExistAppUserExtraCondsResponse, error)
	CountAppUserExtrasV2(context.Context, *CountAppUserExtrasRequest) (*CountAppUserExtrasResponse, error)
	DeleteAppUserExtraV2(context.Context, *DeleteAppUserExtraRequest) (*DeleteAppUserExtraResponse, error)
	mustEmbedUnimplementedAppUserManagerAppUserExtraServer()
}

// UnimplementedAppUserManagerAppUserExtraServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserManagerAppUserExtraServer struct {
}

func (UnimplementedAppUserManagerAppUserExtraServer) CreateAppUserExtraV2(context.Context, *CreateAppUserExtraRequest) (*CreateAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppUserExtraV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) CreateAppUserExtrasV2(context.Context, *CreateAppUserExtrasRequest) (*CreateAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppUserExtrasV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) UpdateAppUserExtraV2(context.Context, *UpdateAppUserExtraRequest) (*UpdateAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppUserExtraV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) GetAppUserExtraV2(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtraV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) GetAppUserExtraOnlyV2(context.Context, *GetAppUserExtraOnlyRequest) (*GetAppUserExtraOnlyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtraOnlyV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) GetAppUserExtrasV2(context.Context, *GetAppUserExtrasRequest) (*GetAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtrasV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) ExistAppUserExtraV2(context.Context, *ExistAppUserExtraRequest) (*ExistAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistAppUserExtraV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) ExistAppUserExtraCondsV2(context.Context, *ExistAppUserExtraCondsRequest) (*ExistAppUserExtraCondsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistAppUserExtraCondsV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) CountAppUserExtrasV2(context.Context, *CountAppUserExtrasRequest) (*CountAppUserExtrasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAppUserExtrasV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) DeleteAppUserExtraV2(context.Context, *DeleteAppUserExtraRequest) (*DeleteAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAppUserExtraV2 not implemented")
}
func (UnimplementedAppUserManagerAppUserExtraServer) mustEmbedUnimplementedAppUserManagerAppUserExtraServer() {
}

// UnsafeAppUserManagerAppUserExtraServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserManagerAppUserExtraServer will
// result in compilation errors.
type UnsafeAppUserManagerAppUserExtraServer interface {
	mustEmbedUnimplementedAppUserManagerAppUserExtraServer()
}

func RegisterAppUserManagerAppUserExtraServer(s grpc.ServiceRegistrar, srv AppUserManagerAppUserExtraServer) {
	s.RegisterService(&AppUserManagerAppUserExtra_ServiceDesc, srv)
}

func _AppUserManagerAppUserExtra_CreateAppUserExtraV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).CreateAppUserExtraV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CreateAppUserExtraV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).CreateAppUserExtraV2(ctx, req.(*CreateAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_CreateAppUserExtrasV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).CreateAppUserExtrasV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CreateAppUserExtrasV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).CreateAppUserExtrasV2(ctx, req.(*CreateAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_UpdateAppUserExtraV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).UpdateAppUserExtraV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/UpdateAppUserExtraV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).UpdateAppUserExtraV2(ctx, req.(*UpdateAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_GetAppUserExtraV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtraV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtraV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtraV2(ctx, req.(*GetAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_GetAppUserExtraOnlyV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtraOnlyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtraOnlyV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtraOnlyV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtraOnlyV2(ctx, req.(*GetAppUserExtraOnlyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_GetAppUserExtrasV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtrasV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/GetAppUserExtrasV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).GetAppUserExtrasV2(ctx, req.(*GetAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_ExistAppUserExtraV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).ExistAppUserExtraV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/ExistAppUserExtraV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).ExistAppUserExtraV2(ctx, req.(*ExistAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_ExistAppUserExtraCondsV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistAppUserExtraCondsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).ExistAppUserExtraCondsV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/ExistAppUserExtraCondsV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).ExistAppUserExtraCondsV2(ctx, req.(*ExistAppUserExtraCondsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_CountAppUserExtrasV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountAppUserExtrasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).CountAppUserExtrasV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/CountAppUserExtrasV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).CountAppUserExtrasV2(ctx, req.(*CountAppUserExtrasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserManagerAppUserExtra_DeleteAppUserExtraV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserManagerAppUserExtraServer).DeleteAppUserExtraV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra/DeleteAppUserExtraV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserManagerAppUserExtraServer).DeleteAppUserExtraV2(ctx, req.(*DeleteAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserManagerAppUserExtra_ServiceDesc is the grpc.ServiceDesc for AppUserManagerAppUserExtra service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserManagerAppUserExtra_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.manager.appuserextra.v2.AppUserManagerAppUserExtra",
	HandlerType: (*AppUserManagerAppUserExtraServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAppUserExtraV2",
			Handler:    _AppUserManagerAppUserExtra_CreateAppUserExtraV2_Handler,
		},
		{
			MethodName: "CreateAppUserExtrasV2",
			Handler:    _AppUserManagerAppUserExtra_CreateAppUserExtrasV2_Handler,
		},
		{
			MethodName: "UpdateAppUserExtraV2",
			Handler:    _AppUserManagerAppUserExtra_UpdateAppUserExtraV2_Handler,
		},
		{
			MethodName: "GetAppUserExtraV2",
			Handler:    _AppUserManagerAppUserExtra_GetAppUserExtraV2_Handler,
		},
		{
			MethodName: "GetAppUserExtraOnlyV2",
			Handler:    _AppUserManagerAppUserExtra_GetAppUserExtraOnlyV2_Handler,
		},
		{
			MethodName: "GetAppUserExtrasV2",
			Handler:    _AppUserManagerAppUserExtra_GetAppUserExtrasV2_Handler,
		},
		{
			MethodName: "ExistAppUserExtraV2",
			Handler:    _AppUserManagerAppUserExtra_ExistAppUserExtraV2_Handler,
		},
		{
			MethodName: "ExistAppUserExtraCondsV2",
			Handler:    _AppUserManagerAppUserExtra_ExistAppUserExtraCondsV2_Handler,
		},
		{
			MethodName: "CountAppUserExtrasV2",
			Handler:    _AppUserManagerAppUserExtra_CountAppUserExtrasV2_Handler,
		},
		{
			MethodName: "DeleteAppUserExtraV2",
			Handler:    _AppUserManagerAppUserExtra_DeleteAppUserExtraV2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appusermgrv2/appuserextra/appuserextra.proto",
}
