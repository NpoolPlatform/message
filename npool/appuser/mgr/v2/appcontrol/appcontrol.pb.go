// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/appuser/mgr/v2/appcontrol/appcontrol.proto

package appcontrol

import (
	npool "github.com/NpoolPlatform/message/npool"
	recaptcha "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/recaptcha"
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateInvitationCodeWhen int32

const (
	CreateInvitationCodeWhen_DefaultWhen  CreateInvitationCodeWhen = 0
	CreateInvitationCodeWhen_Registration CreateInvitationCodeWhen = 10
	CreateInvitationCodeWhen_SetToKol     CreateInvitationCodeWhen = 20
	CreateInvitationCodeWhen_HasPaidOrder CreateInvitationCodeWhen = 30
)

// Enum value maps for CreateInvitationCodeWhen.
var (
	CreateInvitationCodeWhen_name = map[int32]string{
		0:  "DefaultWhen",
		10: "Registration",
		20: "SetToKol",
		30: "HasPaidOrder",
	}
	CreateInvitationCodeWhen_value = map[string]int32{
		"DefaultWhen":  0,
		"Registration": 10,
		"SetToKol":     20,
		"HasPaidOrder": 30,
	}
)

func (x CreateInvitationCodeWhen) Enum() *CreateInvitationCodeWhen {
	p := new(CreateInvitationCodeWhen)
	*p = x
	return p
}

func (x CreateInvitationCodeWhen) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateInvitationCodeWhen) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_enumTypes[0].Descriptor()
}

func (CreateInvitationCodeWhen) Type() protoreflect.EnumType {
	return &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_enumTypes[0]
}

func (x CreateInvitationCodeWhen) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateInvitationCodeWhen.Descriptor instead.
func (CreateInvitationCodeWhen) EnumDescriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{0}
}

type AppControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       *string                   `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID                    *string                   `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	SignupMethods            []v1.SignMethod           `protobuf:"varint,30,rep,packed,name=SignupMethods,proto3,enum=npool.basetypes.v1.SignMethod" json:"SignupMethods,omitempty"`
	ExtSigninMethods         []v1.SignMethod           `protobuf:"varint,40,rep,packed,name=ExtSigninMethods,proto3,enum=npool.basetypes.v1.SignMethod" json:"ExtSigninMethods,omitempty"`
	RecaptchaMethod          *recaptcha.RecaptchaType  `protobuf:"varint,50,opt,name=RecaptchaMethod,proto3,enum=appuser.manager.recaptcha.v2.RecaptchaType,oneof" json:"RecaptchaMethod,omitempty"`
	KycEnable                *bool                     `protobuf:"varint,60,opt,name=KycEnable,proto3,oneof" json:"KycEnable,omitempty"`
	SigninVerifyEnable       *bool                     `protobuf:"varint,70,opt,name=SigninVerifyEnable,proto3,oneof" json:"SigninVerifyEnable,omitempty"`
	InvitationCodeMust       *bool                     `protobuf:"varint,80,opt,name=InvitationCodeMust,proto3,oneof" json:"InvitationCodeMust,omitempty"`
	CreateInvitationCodeWhen *CreateInvitationCodeWhen `protobuf:"varint,90,opt,name=CreateInvitationCodeWhen,proto3,enum=appuser.manager.appcontrol.v2.CreateInvitationCodeWhen,oneof" json:"CreateInvitationCodeWhen,omitempty"`
	MaxTypedCouponsPerOrder  *uint32                   `protobuf:"varint,100,opt,name=MaxTypedCouponsPerOrder,proto3,oneof" json:"MaxTypedCouponsPerOrder,omitempty"`
}

func (x *AppControlReq) Reset() {
	*x = AppControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppControlReq) ProtoMessage() {}

func (x *AppControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppControlReq.ProtoReflect.Descriptor instead.
func (*AppControlReq) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{0}
}

func (x *AppControlReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AppControlReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *AppControlReq) GetSignupMethods() []v1.SignMethod {
	if x != nil {
		return x.SignupMethods
	}
	return nil
}

func (x *AppControlReq) GetExtSigninMethods() []v1.SignMethod {
	if x != nil {
		return x.ExtSigninMethods
	}
	return nil
}

func (x *AppControlReq) GetRecaptchaMethod() recaptcha.RecaptchaType {
	if x != nil && x.RecaptchaMethod != nil {
		return *x.RecaptchaMethod
	}
	return recaptcha.RecaptchaType(0)
}

func (x *AppControlReq) GetKycEnable() bool {
	if x != nil && x.KycEnable != nil {
		return *x.KycEnable
	}
	return false
}

func (x *AppControlReq) GetSigninVerifyEnable() bool {
	if x != nil && x.SigninVerifyEnable != nil {
		return *x.SigninVerifyEnable
	}
	return false
}

func (x *AppControlReq) GetInvitationCodeMust() bool {
	if x != nil && x.InvitationCodeMust != nil {
		return *x.InvitationCodeMust
	}
	return false
}

func (x *AppControlReq) GetCreateInvitationCodeWhen() CreateInvitationCodeWhen {
	if x != nil && x.CreateInvitationCodeWhen != nil {
		return *x.CreateInvitationCodeWhen
	}
	return CreateInvitationCodeWhen_DefaultWhen
}

func (x *AppControlReq) GetMaxTypedCouponsPerOrder() uint32 {
	if x != nil && x.MaxTypedCouponsPerOrder != nil {
		return *x.MaxTypedCouponsPerOrder
	}
	return 0
}

type AppControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       string                   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID                    string                   `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SignupMethods            []v1.SignMethod          `protobuf:"varint,30,rep,packed,name=SignupMethods,proto3,enum=npool.basetypes.v1.SignMethod" json:"SignupMethods,omitempty"`
	ExtSigninMethods         []v1.SignMethod          `protobuf:"varint,40,rep,packed,name=ExtSigninMethods,proto3,enum=npool.basetypes.v1.SignMethod" json:"ExtSigninMethods,omitempty"`
	RecaptchaMethod          recaptcha.RecaptchaType  `protobuf:"varint,50,opt,name=RecaptchaMethod,proto3,enum=appuser.manager.recaptcha.v2.RecaptchaType" json:"RecaptchaMethod,omitempty"`
	KycEnable                bool                     `protobuf:"varint,60,opt,name=KycEnable,proto3" json:"KycEnable,omitempty"`
	SigninVerifyEnable       bool                     `protobuf:"varint,70,opt,name=SigninVerifyEnable,proto3" json:"SigninVerifyEnable,omitempty"`
	InvitationCodeMust       bool                     `protobuf:"varint,80,opt,name=InvitationCodeMust,proto3" json:"InvitationCodeMust,omitempty"`
	CreateInvitationCodeWhen CreateInvitationCodeWhen `protobuf:"varint,90,opt,name=CreateInvitationCodeWhen,proto3,enum=appuser.manager.appcontrol.v2.CreateInvitationCodeWhen" json:"CreateInvitationCodeWhen,omitempty"`
	MaxTypedCouponsPerOrder  uint32                   `protobuf:"varint,100,opt,name=MaxTypedCouponsPerOrder,proto3" json:"MaxTypedCouponsPerOrder,omitempty"`
}

func (x *AppControl) Reset() {
	*x = AppControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppControl) ProtoMessage() {}

func (x *AppControl) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppControl.ProtoReflect.Descriptor instead.
func (*AppControl) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{1}
}

func (x *AppControl) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppControl) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppControl) GetSignupMethods() []v1.SignMethod {
	if x != nil {
		return x.SignupMethods
	}
	return nil
}

func (x *AppControl) GetExtSigninMethods() []v1.SignMethod {
	if x != nil {
		return x.ExtSigninMethods
	}
	return nil
}

func (x *AppControl) GetRecaptchaMethod() recaptcha.RecaptchaType {
	if x != nil {
		return x.RecaptchaMethod
	}
	return recaptcha.RecaptchaType(0)
}

func (x *AppControl) GetKycEnable() bool {
	if x != nil {
		return x.KycEnable
	}
	return false
}

func (x *AppControl) GetSigninVerifyEnable() bool {
	if x != nil {
		return x.SigninVerifyEnable
	}
	return false
}

func (x *AppControl) GetInvitationCodeMust() bool {
	if x != nil {
		return x.InvitationCodeMust
	}
	return false
}

func (x *AppControl) GetCreateInvitationCodeWhen() CreateInvitationCodeWhen {
	if x != nil {
		return x.CreateInvitationCodeWhen
	}
	return CreateInvitationCodeWhen_DefaultWhen
}

func (x *AppControl) GetMaxTypedCouponsPerOrder() uint32 {
	if x != nil {
		return x.MaxTypedCouponsPerOrder
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID              *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	KycEnable          *npool.BoolVal   `protobuf:"bytes,30,opt,name=KycEnable,proto3" json:"KycEnable,omitempty"`
	SigninVerifyEnable *npool.BoolVal   `protobuf:"bytes,40,opt,name=SigninVerifyEnable,proto3" json:"SigninVerifyEnable,omitempty"`
	InvitationCodeMust *npool.BoolVal   `protobuf:"bytes,50,opt,name=InvitationCodeMust,proto3" json:"InvitationCodeMust,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetKycEnable() *npool.BoolVal {
	if x != nil {
		return x.KycEnable
	}
	return nil
}

func (x *Conds) GetSigninVerifyEnable() *npool.BoolVal {
	if x != nil {
		return x.SigninVerifyEnable
	}
	return nil
}

func (x *Conds) GetInvitationCodeMust() *npool.BoolVal {
	if x != nil {
		return x.InvitationCodeMust
	}
	return nil
}

type CreateAppControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControlReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppControlRequest) Reset() {
	*x = CreateAppControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppControlRequest) ProtoMessage() {}

func (x *CreateAppControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppControlRequest.ProtoReflect.Descriptor instead.
func (*CreateAppControlRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppControlRequest) GetInfo() *AppControlReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControl `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppControlResponse) Reset() {
	*x = CreateAppControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppControlResponse) ProtoMessage() {}

func (x *CreateAppControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppControlResponse.ProtoReflect.Descriptor instead.
func (*CreateAppControlResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppControlResponse) GetInfo() *AppControl {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppControlsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppControlReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppControlsRequest) Reset() {
	*x = CreateAppControlsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppControlsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppControlsRequest) ProtoMessage() {}

func (x *CreateAppControlsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppControlsRequest.ProtoReflect.Descriptor instead.
func (*CreateAppControlsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAppControlsRequest) GetInfos() []*AppControlReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateAppControlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppControl `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppControlsResponse) Reset() {
	*x = CreateAppControlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppControlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppControlsResponse) ProtoMessage() {}

func (x *CreateAppControlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppControlsResponse.ProtoReflect.Descriptor instead.
func (*CreateAppControlsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAppControlsResponse) GetInfos() []*AppControl {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetAppControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppControlRequest) Reset() {
	*x = GetAppControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlRequest) ProtoMessage() {}

func (x *GetAppControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlRequest.ProtoReflect.Descriptor instead.
func (*GetAppControlRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{7}
}

func (x *GetAppControlRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControl `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppControlResponse) Reset() {
	*x = GetAppControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlResponse) ProtoMessage() {}

func (x *GetAppControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlResponse.ProtoReflect.Descriptor instead.
func (*GetAppControlResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{8}
}

func (x *GetAppControlResponse) GetInfo() *AppControl {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppControlsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppControlsRequest) Reset() {
	*x = GetAppControlsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlsRequest) ProtoMessage() {}

func (x *GetAppControlsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlsRequest.ProtoReflect.Descriptor instead.
func (*GetAppControlsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppControlsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetAppControlsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppControlsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppControlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppControl `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppControlsResponse) Reset() {
	*x = GetAppControlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlsResponse) ProtoMessage() {}

func (x *GetAppControlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlsResponse.ProtoReflect.Descriptor instead.
func (*GetAppControlsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppControlsResponse) GetInfos() []*AppControl {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppControlsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppControlOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetAppControlOnlyRequest) Reset() {
	*x = GetAppControlOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlOnlyRequest) ProtoMessage() {}

func (x *GetAppControlOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetAppControlOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppControlOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetAppControlOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControl `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppControlOnlyResponse) Reset() {
	*x = GetAppControlOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppControlOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppControlOnlyResponse) ProtoMessage() {}

func (x *GetAppControlOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppControlOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetAppControlOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppControlOnlyResponse) GetInfo() *AppControl {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControlReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppControlRequest) Reset() {
	*x = UpdateAppControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppControlRequest) ProtoMessage() {}

func (x *UpdateAppControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppControlRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppControlRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppControlRequest) GetInfo() *AppControlReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControl `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppControlResponse) Reset() {
	*x = UpdateAppControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppControlResponse) ProtoMessage() {}

func (x *UpdateAppControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppControlResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppControlResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAppControlResponse) GetInfo() *AppControl {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistAppControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistAppControlRequest) Reset() {
	*x = ExistAppControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppControlRequest) ProtoMessage() {}

func (x *ExistAppControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppControlRequest.ProtoReflect.Descriptor instead.
func (*ExistAppControlRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{15}
}

func (x *ExistAppControlRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistAppControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppControlResponse) Reset() {
	*x = ExistAppControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppControlResponse) ProtoMessage() {}

func (x *ExistAppControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppControlResponse.ProtoReflect.Descriptor instead.
func (*ExistAppControlResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{16}
}

func (x *ExistAppControlResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistAppControlCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAppControlCondsRequest) Reset() {
	*x = ExistAppControlCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppControlCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppControlCondsRequest) ProtoMessage() {}

func (x *ExistAppControlCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppControlCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAppControlCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{17}
}

func (x *ExistAppControlCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAppControlCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppControlCondsResponse) Reset() {
	*x = ExistAppControlCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppControlCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppControlCondsResponse) ProtoMessage() {}

func (x *ExistAppControlCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppControlCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAppControlCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{18}
}

func (x *ExistAppControlCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountAppControlsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountAppControlsRequest) Reset() {
	*x = CountAppControlsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppControlsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppControlsRequest) ProtoMessage() {}

func (x *CountAppControlsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppControlsRequest.ProtoReflect.Descriptor instead.
func (*CountAppControlsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{19}
}

func (x *CountAppControlsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountAppControlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountAppControlsResponse) Reset() {
	*x = CountAppControlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppControlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppControlsResponse) ProtoMessage() {}

func (x *CountAppControlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppControlsResponse.ProtoReflect.Descriptor instead.
func (*CountAppControlsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{20}
}

func (x *CountAppControlsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteAppControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAppControlRequest) Reset() {
	*x = DeleteAppControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppControlRequest) ProtoMessage() {}

func (x *DeleteAppControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppControlRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppControlRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAppControlRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteAppControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppControl `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAppControlResponse) Reset() {
	*x = DeleteAppControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppControlResponse) ProtoMessage() {}

func (x *DeleteAppControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppControlResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppControlResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAppControlResponse) GetInfo() *AppControl {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_mgr_v2_appcontrol_appcontrol_proto protoreflect.FileDescriptor

var file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76,
	0x32, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f,
	0x72, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x06, 0x0a, 0x0d, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x12, 0x4a, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x45, 0x78, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x5a, 0x0a,
	0x0f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x4b, 0x79, 0x63,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09,
	0x4b, 0x79, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x12, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x4d,
	0x75, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x78, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68,
	0x65, 0x6e, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65,
	0x6e, 0x48, 0x06, 0x52, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x07, 0x52, 0x17, 0x4d, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4b, 0x79, 0x63, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x75, 0x73, 0x74,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x42, 0x1a, 0x0a,
	0x18, 0x5f, 0x4d, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xc8, 0x04, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x44,
	0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x1e, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10,
	0x45, 0x78, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x55, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4b, 0x79, 0x63, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4b, 0x79, 0x63, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x4d, 0x75, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65,
	0x6e, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65, 0x6e,
	0x52, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x4d, 0x61,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x4d, 0x61, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x8e, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x23,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x2f,
	0x0a, 0x09, 0x4b, 0x79, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x4b, 0x79, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x41, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x52, 0x12,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x52, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x4d, 0x75, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5c, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x59, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0x32, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x2a, 0x5d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0a,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x4b, 0x6f, 0x6c, 0x10, 0x14, 0x12, 0x10,
	0x0a, 0x0c, 0x48, 0x61, 0x73, 0x50, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x1e,
	0x32, 0xd7, 0x0a, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x85, 0x01, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x85, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x37, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x3a, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12,
	0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescOnce sync.Once
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescData = file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDesc
)

func file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescGZIP() []byte {
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescOnce.Do(func() {
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescData)
	})
	return file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDescData
}

var file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_goTypes = []interface{}{
	(CreateInvitationCodeWhen)(0),        // 0: appuser.manager.appcontrol.v2.CreateInvitationCodeWhen
	(*AppControlReq)(nil),                // 1: appuser.manager.appcontrol.v2.AppControlReq
	(*AppControl)(nil),                   // 2: appuser.manager.appcontrol.v2.AppControl
	(*Conds)(nil),                        // 3: appuser.manager.appcontrol.v2.Conds
	(*CreateAppControlRequest)(nil),      // 4: appuser.manager.appcontrol.v2.CreateAppControlRequest
	(*CreateAppControlResponse)(nil),     // 5: appuser.manager.appcontrol.v2.CreateAppControlResponse
	(*CreateAppControlsRequest)(nil),     // 6: appuser.manager.appcontrol.v2.CreateAppControlsRequest
	(*CreateAppControlsResponse)(nil),    // 7: appuser.manager.appcontrol.v2.CreateAppControlsResponse
	(*GetAppControlRequest)(nil),         // 8: appuser.manager.appcontrol.v2.GetAppControlRequest
	(*GetAppControlResponse)(nil),        // 9: appuser.manager.appcontrol.v2.GetAppControlResponse
	(*GetAppControlsRequest)(nil),        // 10: appuser.manager.appcontrol.v2.GetAppControlsRequest
	(*GetAppControlsResponse)(nil),       // 11: appuser.manager.appcontrol.v2.GetAppControlsResponse
	(*GetAppControlOnlyRequest)(nil),     // 12: appuser.manager.appcontrol.v2.GetAppControlOnlyRequest
	(*GetAppControlOnlyResponse)(nil),    // 13: appuser.manager.appcontrol.v2.GetAppControlOnlyResponse
	(*UpdateAppControlRequest)(nil),      // 14: appuser.manager.appcontrol.v2.UpdateAppControlRequest
	(*UpdateAppControlResponse)(nil),     // 15: appuser.manager.appcontrol.v2.UpdateAppControlResponse
	(*ExistAppControlRequest)(nil),       // 16: appuser.manager.appcontrol.v2.ExistAppControlRequest
	(*ExistAppControlResponse)(nil),      // 17: appuser.manager.appcontrol.v2.ExistAppControlResponse
	(*ExistAppControlCondsRequest)(nil),  // 18: appuser.manager.appcontrol.v2.ExistAppControlCondsRequest
	(*ExistAppControlCondsResponse)(nil), // 19: appuser.manager.appcontrol.v2.ExistAppControlCondsResponse
	(*CountAppControlsRequest)(nil),      // 20: appuser.manager.appcontrol.v2.CountAppControlsRequest
	(*CountAppControlsResponse)(nil),     // 21: appuser.manager.appcontrol.v2.CountAppControlsResponse
	(*DeleteAppControlRequest)(nil),      // 22: appuser.manager.appcontrol.v2.DeleteAppControlRequest
	(*DeleteAppControlResponse)(nil),     // 23: appuser.manager.appcontrol.v2.DeleteAppControlResponse
	(v1.SignMethod)(0),                   // 24: npool.basetypes.v1.SignMethod
	(recaptcha.RecaptchaType)(0),         // 25: appuser.manager.recaptcha.v2.RecaptchaType
	(*npool.StringVal)(nil),              // 26: npool.v1.StringVal
	(*npool.BoolVal)(nil),                // 27: npool.v1.BoolVal
}
var file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_depIdxs = []int32{
	24, // 0: appuser.manager.appcontrol.v2.AppControlReq.SignupMethods:type_name -> npool.basetypes.v1.SignMethod
	24, // 1: appuser.manager.appcontrol.v2.AppControlReq.ExtSigninMethods:type_name -> npool.basetypes.v1.SignMethod
	25, // 2: appuser.manager.appcontrol.v2.AppControlReq.RecaptchaMethod:type_name -> appuser.manager.recaptcha.v2.RecaptchaType
	0,  // 3: appuser.manager.appcontrol.v2.AppControlReq.CreateInvitationCodeWhen:type_name -> appuser.manager.appcontrol.v2.CreateInvitationCodeWhen
	24, // 4: appuser.manager.appcontrol.v2.AppControl.SignupMethods:type_name -> npool.basetypes.v1.SignMethod
	24, // 5: appuser.manager.appcontrol.v2.AppControl.ExtSigninMethods:type_name -> npool.basetypes.v1.SignMethod
	25, // 6: appuser.manager.appcontrol.v2.AppControl.RecaptchaMethod:type_name -> appuser.manager.recaptcha.v2.RecaptchaType
	0,  // 7: appuser.manager.appcontrol.v2.AppControl.CreateInvitationCodeWhen:type_name -> appuser.manager.appcontrol.v2.CreateInvitationCodeWhen
	26, // 8: appuser.manager.appcontrol.v2.Conds.ID:type_name -> npool.v1.StringVal
	26, // 9: appuser.manager.appcontrol.v2.Conds.AppID:type_name -> npool.v1.StringVal
	27, // 10: appuser.manager.appcontrol.v2.Conds.KycEnable:type_name -> npool.v1.BoolVal
	27, // 11: appuser.manager.appcontrol.v2.Conds.SigninVerifyEnable:type_name -> npool.v1.BoolVal
	27, // 12: appuser.manager.appcontrol.v2.Conds.InvitationCodeMust:type_name -> npool.v1.BoolVal
	1,  // 13: appuser.manager.appcontrol.v2.CreateAppControlRequest.Info:type_name -> appuser.manager.appcontrol.v2.AppControlReq
	2,  // 14: appuser.manager.appcontrol.v2.CreateAppControlResponse.Info:type_name -> appuser.manager.appcontrol.v2.AppControl
	1,  // 15: appuser.manager.appcontrol.v2.CreateAppControlsRequest.Infos:type_name -> appuser.manager.appcontrol.v2.AppControlReq
	2,  // 16: appuser.manager.appcontrol.v2.CreateAppControlsResponse.Infos:type_name -> appuser.manager.appcontrol.v2.AppControl
	2,  // 17: appuser.manager.appcontrol.v2.GetAppControlResponse.Info:type_name -> appuser.manager.appcontrol.v2.AppControl
	3,  // 18: appuser.manager.appcontrol.v2.GetAppControlsRequest.Conds:type_name -> appuser.manager.appcontrol.v2.Conds
	2,  // 19: appuser.manager.appcontrol.v2.GetAppControlsResponse.Infos:type_name -> appuser.manager.appcontrol.v2.AppControl
	3,  // 20: appuser.manager.appcontrol.v2.GetAppControlOnlyRequest.Conds:type_name -> appuser.manager.appcontrol.v2.Conds
	2,  // 21: appuser.manager.appcontrol.v2.GetAppControlOnlyResponse.Info:type_name -> appuser.manager.appcontrol.v2.AppControl
	1,  // 22: appuser.manager.appcontrol.v2.UpdateAppControlRequest.Info:type_name -> appuser.manager.appcontrol.v2.AppControlReq
	2,  // 23: appuser.manager.appcontrol.v2.UpdateAppControlResponse.Info:type_name -> appuser.manager.appcontrol.v2.AppControl
	3,  // 24: appuser.manager.appcontrol.v2.ExistAppControlCondsRequest.Conds:type_name -> appuser.manager.appcontrol.v2.Conds
	3,  // 25: appuser.manager.appcontrol.v2.CountAppControlsRequest.Conds:type_name -> appuser.manager.appcontrol.v2.Conds
	2,  // 26: appuser.manager.appcontrol.v2.DeleteAppControlResponse.Info:type_name -> appuser.manager.appcontrol.v2.AppControl
	4,  // 27: appuser.manager.appcontrol.v2.Manager.CreateAppControl:input_type -> appuser.manager.appcontrol.v2.CreateAppControlRequest
	6,  // 28: appuser.manager.appcontrol.v2.Manager.CreateAppControls:input_type -> appuser.manager.appcontrol.v2.CreateAppControlsRequest
	14, // 29: appuser.manager.appcontrol.v2.Manager.UpdateAppControl:input_type -> appuser.manager.appcontrol.v2.UpdateAppControlRequest
	8,  // 30: appuser.manager.appcontrol.v2.Manager.GetAppControl:input_type -> appuser.manager.appcontrol.v2.GetAppControlRequest
	12, // 31: appuser.manager.appcontrol.v2.Manager.GetAppControlOnly:input_type -> appuser.manager.appcontrol.v2.GetAppControlOnlyRequest
	10, // 32: appuser.manager.appcontrol.v2.Manager.GetAppControls:input_type -> appuser.manager.appcontrol.v2.GetAppControlsRequest
	16, // 33: appuser.manager.appcontrol.v2.Manager.ExistAppControl:input_type -> appuser.manager.appcontrol.v2.ExistAppControlRequest
	18, // 34: appuser.manager.appcontrol.v2.Manager.ExistAppControlConds:input_type -> appuser.manager.appcontrol.v2.ExistAppControlCondsRequest
	20, // 35: appuser.manager.appcontrol.v2.Manager.CountAppControls:input_type -> appuser.manager.appcontrol.v2.CountAppControlsRequest
	22, // 36: appuser.manager.appcontrol.v2.Manager.DeleteAppControl:input_type -> appuser.manager.appcontrol.v2.DeleteAppControlRequest
	5,  // 37: appuser.manager.appcontrol.v2.Manager.CreateAppControl:output_type -> appuser.manager.appcontrol.v2.CreateAppControlResponse
	7,  // 38: appuser.manager.appcontrol.v2.Manager.CreateAppControls:output_type -> appuser.manager.appcontrol.v2.CreateAppControlsResponse
	15, // 39: appuser.manager.appcontrol.v2.Manager.UpdateAppControl:output_type -> appuser.manager.appcontrol.v2.UpdateAppControlResponse
	9,  // 40: appuser.manager.appcontrol.v2.Manager.GetAppControl:output_type -> appuser.manager.appcontrol.v2.GetAppControlResponse
	13, // 41: appuser.manager.appcontrol.v2.Manager.GetAppControlOnly:output_type -> appuser.manager.appcontrol.v2.GetAppControlOnlyResponse
	11, // 42: appuser.manager.appcontrol.v2.Manager.GetAppControls:output_type -> appuser.manager.appcontrol.v2.GetAppControlsResponse
	17, // 43: appuser.manager.appcontrol.v2.Manager.ExistAppControl:output_type -> appuser.manager.appcontrol.v2.ExistAppControlResponse
	19, // 44: appuser.manager.appcontrol.v2.Manager.ExistAppControlConds:output_type -> appuser.manager.appcontrol.v2.ExistAppControlCondsResponse
	21, // 45: appuser.manager.appcontrol.v2.Manager.CountAppControls:output_type -> appuser.manager.appcontrol.v2.CountAppControlsResponse
	23, // 46: appuser.manager.appcontrol.v2.Manager.DeleteAppControl:output_type -> appuser.manager.appcontrol.v2.DeleteAppControlResponse
	37, // [37:47] is the sub-list for method output_type
	27, // [27:37] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_init() }
func file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_init() {
	if File_npool_appuser_mgr_v2_appcontrol_appcontrol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppControlsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppControlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppControlOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppControlCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppControlCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppControlsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppControlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_goTypes,
		DependencyIndexes: file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_depIdxs,
		EnumInfos:         file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_enumTypes,
		MessageInfos:      file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_msgTypes,
	}.Build()
	File_npool_appuser_mgr_v2_appcontrol_appcontrol_proto = out.File
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_rawDesc = nil
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_goTypes = nil
	file_npool_appuser_mgr_v2_appcontrol_appcontrol_proto_depIdxs = nil
}
