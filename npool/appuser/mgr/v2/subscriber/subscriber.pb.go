// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/appuser/mgr/v2/subscriber/subscriber.proto

package subscriber

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID        *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	EmailAddress *string `protobuf:"bytes,30,opt,name=EmailAddress,proto3,oneof" json:"EmailAddress,omitempty"`
}

func (x *SubscriberReq) Reset() {
	*x = SubscriberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberReq) ProtoMessage() {}

func (x *SubscriberReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberReq.ProtoReflect.Descriptor instead.
func (*SubscriberReq) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriberReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *SubscriberReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *SubscriberReq) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

type Subscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EmailAddress string `protobuf:"bytes,30,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
}

func (x *Subscriber) Reset() {
	*x = Subscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriber) ProtoMessage() {}

func (x *Subscriber) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriber.ProtoReflect.Descriptor instead.
func (*Subscriber) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{1}
}

func (x *Subscriber) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Subscriber) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Subscriber) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *npool.StringVal      `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        *npool.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EmailAddress *npool.StringVal      `protobuf:"bytes,30,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	IDs          *npool.StringSliceVal `protobuf:"bytes,40,opt,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetEmailAddress() *npool.StringVal {
	if x != nil {
		return x.EmailAddress
	}
	return nil
}

func (x *Conds) GetIDs() *npool.StringSliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubscriberReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSubscriberRequest) Reset() {
	*x = CreateSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriberRequest) ProtoMessage() {}

func (x *CreateSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriberRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubscriberRequest) GetInfo() *SubscriberReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSubscriberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Subscriber `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSubscriberResponse) Reset() {
	*x = CreateSubscriberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriberResponse) ProtoMessage() {}

func (x *CreateSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriberResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSubscriberResponse) GetInfo() *Subscriber {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSubscribersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SubscriberReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSubscribersRequest) Reset() {
	*x = CreateSubscribersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscribersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscribersRequest) ProtoMessage() {}

func (x *CreateSubscribersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscribersRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscribersRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSubscribersRequest) GetInfos() []*SubscriberReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateSubscribersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Subscriber `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSubscribersResponse) Reset() {
	*x = CreateSubscribersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscribersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscribersResponse) ProtoMessage() {}

func (x *CreateSubscribersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscribersResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscribersResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSubscribersResponse) GetInfos() []*Subscriber {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSubscriberRequest) Reset() {
	*x = GetSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriberRequest) ProtoMessage() {}

func (x *GetSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriberRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubscriberRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetSubscriberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Subscriber `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSubscriberResponse) Reset() {
	*x = GetSubscriberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriberResponse) ProtoMessage() {}

func (x *GetSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriberResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubscriberResponse) GetInfo() *Subscriber {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSubscribersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSubscribersRequest) Reset() {
	*x = GetSubscribersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribersRequest) ProtoMessage() {}

func (x *GetSubscribersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribersRequest.ProtoReflect.Descriptor instead.
func (*GetSubscribersRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubscribersRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetSubscribersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSubscribersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSubscribersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Subscriber `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSubscribersResponse) Reset() {
	*x = GetSubscribersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribersResponse) ProtoMessage() {}

func (x *GetSubscribersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribersResponse.ProtoReflect.Descriptor instead.
func (*GetSubscribersResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubscribersResponse) GetInfos() []*Subscriber {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSubscribersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetSubscriberOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetSubscriberOnlyRequest) Reset() {
	*x = GetSubscriberOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriberOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriberOnlyRequest) ProtoMessage() {}

func (x *GetSubscriberOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriberOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriberOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubscriberOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetSubscriberOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Subscriber `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSubscriberOnlyResponse) Reset() {
	*x = GetSubscriberOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriberOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriberOnlyResponse) ProtoMessage() {}

func (x *GetSubscriberOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriberOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriberOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{12}
}

func (x *GetSubscriberOnlyResponse) GetInfo() *Subscriber {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubscriberReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSubscriberRequest) Reset() {
	*x = UpdateSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriberRequest) ProtoMessage() {}

func (x *UpdateSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriberRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSubscriberRequest) GetInfo() *SubscriberReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSubscriberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Subscriber `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSubscriberResponse) Reset() {
	*x = UpdateSubscriberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriberResponse) ProtoMessage() {}

func (x *UpdateSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriberResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSubscriberResponse) GetInfo() *Subscriber {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistSubscriberRequest) Reset() {
	*x = ExistSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSubscriberRequest) ProtoMessage() {}

func (x *ExistSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSubscriberRequest.ProtoReflect.Descriptor instead.
func (*ExistSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{15}
}

func (x *ExistSubscriberRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistSubscriberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSubscriberResponse) Reset() {
	*x = ExistSubscriberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSubscriberResponse) ProtoMessage() {}

func (x *ExistSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSubscriberResponse.ProtoReflect.Descriptor instead.
func (*ExistSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{16}
}

func (x *ExistSubscriberResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistSubscriberCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistSubscriberCondsRequest) Reset() {
	*x = ExistSubscriberCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSubscriberCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSubscriberCondsRequest) ProtoMessage() {}

func (x *ExistSubscriberCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSubscriberCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistSubscriberCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{17}
}

func (x *ExistSubscriberCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistSubscriberCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSubscriberCondsResponse) Reset() {
	*x = ExistSubscriberCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSubscriberCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSubscriberCondsResponse) ProtoMessage() {}

func (x *ExistSubscriberCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSubscriberCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistSubscriberCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{18}
}

func (x *ExistSubscriberCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountSubscribersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountSubscribersRequest) Reset() {
	*x = CountSubscribersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubscribersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubscribersRequest) ProtoMessage() {}

func (x *CountSubscribersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubscribersRequest.ProtoReflect.Descriptor instead.
func (*CountSubscribersRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{19}
}

func (x *CountSubscribersRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountSubscribersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountSubscribersResponse) Reset() {
	*x = CountSubscribersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubscribersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubscribersResponse) ProtoMessage() {}

func (x *CountSubscribersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubscribersResponse.ProtoReflect.Descriptor instead.
func (*CountSubscribersResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{20}
}

func (x *CountSubscribersResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteSubscriberRequest) Reset() {
	*x = DeleteSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriberRequest) ProtoMessage() {}

func (x *DeleteSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriberRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteSubscriberRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteSubscriberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Subscriber `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSubscriberResponse) Reset() {
	*x = DeleteSubscriberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriberResponse) ProtoMessage() {}

func (x *DeleteSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriberResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteSubscriberResponse) GetInfo() *Subscriber {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_mgr_v2_subscriber_subscriber_proto protoreflect.FileDescriptor

var file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x56, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x0c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x03,
	0x49, 0x44, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x56, 0x61, 0x6c, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x5e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x5c, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x28, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x17, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2e,
	0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x32, 0xd7, 0x0a, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x85, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x37,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12,
	0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85,
	0x01, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42,
	0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescOnce sync.Once
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescData = file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDesc
)

func file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescGZIP() []byte {
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescOnce.Do(func() {
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescData)
	})
	return file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDescData
}

var file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_appuser_mgr_v2_subscriber_subscriber_proto_goTypes = []interface{}{
	(*SubscriberReq)(nil),                // 0: appuser.manager.subscriber.v2.SubscriberReq
	(*Subscriber)(nil),                   // 1: appuser.manager.subscriber.v2.Subscriber
	(*Conds)(nil),                        // 2: appuser.manager.subscriber.v2.Conds
	(*CreateSubscriberRequest)(nil),      // 3: appuser.manager.subscriber.v2.CreateSubscriberRequest
	(*CreateSubscriberResponse)(nil),     // 4: appuser.manager.subscriber.v2.CreateSubscriberResponse
	(*CreateSubscribersRequest)(nil),     // 5: appuser.manager.subscriber.v2.CreateSubscribersRequest
	(*CreateSubscribersResponse)(nil),    // 6: appuser.manager.subscriber.v2.CreateSubscribersResponse
	(*GetSubscriberRequest)(nil),         // 7: appuser.manager.subscriber.v2.GetSubscriberRequest
	(*GetSubscriberResponse)(nil),        // 8: appuser.manager.subscriber.v2.GetSubscriberResponse
	(*GetSubscribersRequest)(nil),        // 9: appuser.manager.subscriber.v2.GetSubscribersRequest
	(*GetSubscribersResponse)(nil),       // 10: appuser.manager.subscriber.v2.GetSubscribersResponse
	(*GetSubscriberOnlyRequest)(nil),     // 11: appuser.manager.subscriber.v2.GetSubscriberOnlyRequest
	(*GetSubscriberOnlyResponse)(nil),    // 12: appuser.manager.subscriber.v2.GetSubscriberOnlyResponse
	(*UpdateSubscriberRequest)(nil),      // 13: appuser.manager.subscriber.v2.UpdateSubscriberRequest
	(*UpdateSubscriberResponse)(nil),     // 14: appuser.manager.subscriber.v2.UpdateSubscriberResponse
	(*ExistSubscriberRequest)(nil),       // 15: appuser.manager.subscriber.v2.ExistSubscriberRequest
	(*ExistSubscriberResponse)(nil),      // 16: appuser.manager.subscriber.v2.ExistSubscriberResponse
	(*ExistSubscriberCondsRequest)(nil),  // 17: appuser.manager.subscriber.v2.ExistSubscriberCondsRequest
	(*ExistSubscriberCondsResponse)(nil), // 18: appuser.manager.subscriber.v2.ExistSubscriberCondsResponse
	(*CountSubscribersRequest)(nil),      // 19: appuser.manager.subscriber.v2.CountSubscribersRequest
	(*CountSubscribersResponse)(nil),     // 20: appuser.manager.subscriber.v2.CountSubscribersResponse
	(*DeleteSubscriberRequest)(nil),      // 21: appuser.manager.subscriber.v2.DeleteSubscriberRequest
	(*DeleteSubscriberResponse)(nil),     // 22: appuser.manager.subscriber.v2.DeleteSubscriberResponse
	(*npool.StringVal)(nil),              // 23: npool.v1.StringVal
	(*npool.StringSliceVal)(nil),         // 24: npool.v1.StringSliceVal
}
var file_npool_appuser_mgr_v2_subscriber_subscriber_proto_depIdxs = []int32{
	23, // 0: appuser.manager.subscriber.v2.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: appuser.manager.subscriber.v2.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: appuser.manager.subscriber.v2.Conds.EmailAddress:type_name -> npool.v1.StringVal
	24, // 3: appuser.manager.subscriber.v2.Conds.IDs:type_name -> npool.v1.StringSliceVal
	0,  // 4: appuser.manager.subscriber.v2.CreateSubscriberRequest.Info:type_name -> appuser.manager.subscriber.v2.SubscriberReq
	1,  // 5: appuser.manager.subscriber.v2.CreateSubscriberResponse.Info:type_name -> appuser.manager.subscriber.v2.Subscriber
	0,  // 6: appuser.manager.subscriber.v2.CreateSubscribersRequest.Infos:type_name -> appuser.manager.subscriber.v2.SubscriberReq
	1,  // 7: appuser.manager.subscriber.v2.CreateSubscribersResponse.Infos:type_name -> appuser.manager.subscriber.v2.Subscriber
	1,  // 8: appuser.manager.subscriber.v2.GetSubscriberResponse.Info:type_name -> appuser.manager.subscriber.v2.Subscriber
	2,  // 9: appuser.manager.subscriber.v2.GetSubscribersRequest.Conds:type_name -> appuser.manager.subscriber.v2.Conds
	1,  // 10: appuser.manager.subscriber.v2.GetSubscribersResponse.Infos:type_name -> appuser.manager.subscriber.v2.Subscriber
	2,  // 11: appuser.manager.subscriber.v2.GetSubscriberOnlyRequest.Conds:type_name -> appuser.manager.subscriber.v2.Conds
	1,  // 12: appuser.manager.subscriber.v2.GetSubscriberOnlyResponse.Info:type_name -> appuser.manager.subscriber.v2.Subscriber
	0,  // 13: appuser.manager.subscriber.v2.UpdateSubscriberRequest.Info:type_name -> appuser.manager.subscriber.v2.SubscriberReq
	1,  // 14: appuser.manager.subscriber.v2.UpdateSubscriberResponse.Info:type_name -> appuser.manager.subscriber.v2.Subscriber
	2,  // 15: appuser.manager.subscriber.v2.ExistSubscriberCondsRequest.Conds:type_name -> appuser.manager.subscriber.v2.Conds
	2,  // 16: appuser.manager.subscriber.v2.CountSubscribersRequest.Conds:type_name -> appuser.manager.subscriber.v2.Conds
	1,  // 17: appuser.manager.subscriber.v2.DeleteSubscriberResponse.Info:type_name -> appuser.manager.subscriber.v2.Subscriber
	3,  // 18: appuser.manager.subscriber.v2.Manager.CreateSubscriber:input_type -> appuser.manager.subscriber.v2.CreateSubscriberRequest
	5,  // 19: appuser.manager.subscriber.v2.Manager.CreateSubscribers:input_type -> appuser.manager.subscriber.v2.CreateSubscribersRequest
	13, // 20: appuser.manager.subscriber.v2.Manager.UpdateSubscriber:input_type -> appuser.manager.subscriber.v2.UpdateSubscriberRequest
	7,  // 21: appuser.manager.subscriber.v2.Manager.GetSubscriber:input_type -> appuser.manager.subscriber.v2.GetSubscriberRequest
	11, // 22: appuser.manager.subscriber.v2.Manager.GetSubscriberOnly:input_type -> appuser.manager.subscriber.v2.GetSubscriberOnlyRequest
	9,  // 23: appuser.manager.subscriber.v2.Manager.GetSubscribers:input_type -> appuser.manager.subscriber.v2.GetSubscribersRequest
	15, // 24: appuser.manager.subscriber.v2.Manager.ExistSubscriber:input_type -> appuser.manager.subscriber.v2.ExistSubscriberRequest
	17, // 25: appuser.manager.subscriber.v2.Manager.ExistSubscriberConds:input_type -> appuser.manager.subscriber.v2.ExistSubscriberCondsRequest
	19, // 26: appuser.manager.subscriber.v2.Manager.CountSubscribers:input_type -> appuser.manager.subscriber.v2.CountSubscribersRequest
	21, // 27: appuser.manager.subscriber.v2.Manager.DeleteSubscriber:input_type -> appuser.manager.subscriber.v2.DeleteSubscriberRequest
	4,  // 28: appuser.manager.subscriber.v2.Manager.CreateSubscriber:output_type -> appuser.manager.subscriber.v2.CreateSubscriberResponse
	6,  // 29: appuser.manager.subscriber.v2.Manager.CreateSubscribers:output_type -> appuser.manager.subscriber.v2.CreateSubscribersResponse
	14, // 30: appuser.manager.subscriber.v2.Manager.UpdateSubscriber:output_type -> appuser.manager.subscriber.v2.UpdateSubscriberResponse
	8,  // 31: appuser.manager.subscriber.v2.Manager.GetSubscriber:output_type -> appuser.manager.subscriber.v2.GetSubscriberResponse
	12, // 32: appuser.manager.subscriber.v2.Manager.GetSubscriberOnly:output_type -> appuser.manager.subscriber.v2.GetSubscriberOnlyResponse
	10, // 33: appuser.manager.subscriber.v2.Manager.GetSubscribers:output_type -> appuser.manager.subscriber.v2.GetSubscribersResponse
	16, // 34: appuser.manager.subscriber.v2.Manager.ExistSubscriber:output_type -> appuser.manager.subscriber.v2.ExistSubscriberResponse
	18, // 35: appuser.manager.subscriber.v2.Manager.ExistSubscriberConds:output_type -> appuser.manager.subscriber.v2.ExistSubscriberCondsResponse
	20, // 36: appuser.manager.subscriber.v2.Manager.CountSubscribers:output_type -> appuser.manager.subscriber.v2.CountSubscribersResponse
	22, // 37: appuser.manager.subscriber.v2.Manager.DeleteSubscriber:output_type -> appuser.manager.subscriber.v2.DeleteSubscriberResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_npool_appuser_mgr_v2_subscriber_subscriber_proto_init() }
func file_npool_appuser_mgr_v2_subscriber_subscriber_proto_init() {
	if File_npool_appuser_mgr_v2_subscriber_subscriber_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscriberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscribersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscribersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriberOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriberOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSubscriberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSubscriberCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSubscriberCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubscribersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubscribersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscriberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_mgr_v2_subscriber_subscriber_proto_goTypes,
		DependencyIndexes: file_npool_appuser_mgr_v2_subscriber_subscriber_proto_depIdxs,
		MessageInfos:      file_npool_appuser_mgr_v2_subscriber_subscriber_proto_msgTypes,
	}.Build()
	File_npool_appuser_mgr_v2_subscriber_subscriber_proto = out.File
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_rawDesc = nil
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_goTypes = nil
	file_npool_appuser_mgr_v2_subscriber_subscriber_proto_depIdxs = nil
}
