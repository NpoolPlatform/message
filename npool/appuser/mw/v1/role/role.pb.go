// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/appuser/mw/v1/role/role.proto

package role

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID       *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	CreatedBy   *string `protobuf:"bytes,30,opt,name=CreatedBy,proto3,oneof" json:"CreatedBy,omitempty"`
	Role        *string `protobuf:"bytes,40,opt,name=Role,proto3,oneof" json:"Role,omitempty"`
	Description *string `protobuf:"bytes,50,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	Default     *bool   `protobuf:"varint,60,opt,name=Default,proto3,oneof" json:"Default,omitempty"`
	Genesis     *bool   `protobuf:"varint,70,opt,name=Genesis,proto3,oneof" json:"Genesis,omitempty"`
}

func (x *RoleReq) Reset() {
	*x = RoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleReq) ProtoMessage() {}

func (x *RoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleReq.ProtoReflect.Descriptor instead.
func (*RoleReq) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{0}
}

func (x *RoleReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *RoleReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *RoleReq) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *RoleReq) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *RoleReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RoleReq) GetDefault() bool {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return false
}

func (x *RoleReq) GetGenesis() bool {
	if x != nil && x.Genesis != nil {
		return *x.Genesis
	}
	return false
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base info
	// @inject_tag: sql:"id"
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"created_by"
	CreatedBy string `protobuf:"bytes,20,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" sql:"created_by"`
	// @inject_tag: sql:"role"
	Role string `protobuf:"bytes,30,opt,name=Role,proto3" json:"Role,omitempty" sql:"role"`
	// @inject_tag: sql:"description"
	Description string `protobuf:"bytes,40,opt,name=Description,proto3" json:"Description,omitempty" sql:"description"`
	// @inject_tag: sql:"default"
	Default bool `protobuf:"varint,60,opt,name=Default,proto3" json:"Default,omitempty" sql:"default"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,70,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"app_name"
	AppName string `protobuf:"bytes,80,opt,name=AppName,proto3" json:"AppName,omitempty" sql:"app_name"`
	// @inject_tag: sql:"app_logo"
	AppLogo string `protobuf:"bytes,90,opt,name=AppLogo,proto3" json:"AppLogo,omitempty" sql:"app_logo"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,100,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"genesis"
	Genesis bool `protobuf:"varint,120,opt,name=Genesis,proto3" json:"Genesis,omitempty" sql:"genesis"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Role) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Role) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Role) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Role) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Role) GetAppLogo() string {
	if x != nil {
		return x.AppLogo
	}
	return ""
}

func (x *Role) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Role) GetGenesis() bool {
	if x != nil {
		return x.Genesis
	}
	return false
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *v1.StringVal      `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID     *v1.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	CreatedBy *v1.StringVal      `protobuf:"bytes,30,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	Role      *v1.StringVal      `protobuf:"bytes,40,opt,name=Role,proto3" json:"Role,omitempty"`
	Default   *v1.BoolVal        `protobuf:"bytes,50,opt,name=Default,proto3" json:"Default,omitempty"`
	Roles     *v1.StringSliceVal `protobuf:"bytes,60,opt,name=Roles,proto3" json:"Roles,omitempty"`
	Genesis   *v1.BoolVal        `protobuf:"bytes,70,opt,name=Genesis,proto3" json:"Genesis,omitempty"`
<<<<<<< HEAD
	IDs       *v1.StringSliceVal `protobuf:"bytes,80,opt,name=IDs,proto3" json:"IDs,omitempty"`
=======
>>>>>>> Move role to middleware
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
<<<<<<< HEAD
}

func (x *Conds) GetCreatedBy() *v1.StringVal {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Conds) GetRole() *v1.StringVal {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Conds) GetDefault() *v1.BoolVal {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *Conds) GetRoles() *v1.StringSliceVal {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Conds) GetGenesis() *v1.BoolVal {
	if x != nil {
		return x.Genesis
	}
	return nil
}

func (x *Conds) GetIDs() *v1.StringSliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RoleReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
=======
}

func (x *Conds) GetCreatedBy() *v1.StringVal {
	if x != nil {
		return x.CreatedBy
>>>>>>> Move role to middleware
	}
	return nil
}

<<<<<<< HEAD
func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
=======
func (x *Conds) GetRole() *v1.StringVal {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Conds) GetDefault() *v1.BoolVal {
	if x != nil {
		return x.Default
>>>>>>> Move role to middleware
	}
	return nil
}

<<<<<<< HEAD
// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoleRequest) GetInfo() *RoleReq {
=======
func (x *Conds) GetRoles() *v1.StringSliceVal {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Conds) GetGenesis() *v1.BoolVal {
>>>>>>> Move role to middleware
	if x != nil {
		return x.Genesis
	}
	return nil
}

<<<<<<< HEAD
type CreateRoleResponse struct {
=======
type CreateRoleRequest struct {
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
=======
	Info *RoleReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[4]
=======
func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[3]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoleResponse) GetInfo() *Role {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*RoleReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateRolesRequest) Reset() {
	*x = CreateRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRolesRequest) ProtoMessage() {}

func (x *CreateRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRolesRequest.ProtoReflect.Descriptor instead.
func (*CreateRolesRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRolesRequest) GetInfos() []*RoleReq {
	if x != nil {
		return x.Infos
=======
// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoleRequest) GetInfo() *RoleReq {
	if x != nil {
		return x.Info
>>>>>>> Move role to middleware
	}
	return nil
}

<<<<<<< HEAD
type CreateRolesResponse struct {
=======
type CreateRoleResponse struct {
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Infos []*Role `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateRolesResponse) Reset() {
	*x = CreateRolesResponse{}
=======
	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *CreateRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRolesResponse) ProtoMessage() {}

func (x *CreateRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[6]
=======
func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[4]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use CreateRolesResponse.ProtoReflect.Descriptor instead.
func (*CreateRolesResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRolesResponse) GetInfos() []*Role {
=======
// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoleResponse) GetInfo() *Role {
>>>>>>> Move role to middleware
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RoleReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[7]
=======
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[5]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{7}
=======
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{5}
>>>>>>> Move role to middleware
}

func (x *UpdateRoleRequest) GetInfo() *RoleReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateRoleResponse) Reset() {
	*x = UpdateRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResponse) ProtoMessage() {}

func (x *UpdateRoleResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[8]
=======
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[6]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{8}
=======
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{6}
>>>>>>> Move role to middleware
}

func (x *UpdateRoleResponse) GetInfo() *Role {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetRoleRequest struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{9}
}

func (x *GetRoleRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetRoleResponse struct {
=======
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetRoleResponse) Reset() {
	*x = GetRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleResponse) ProtoMessage() {}

func (x *GetRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleResponse.ProtoReflect.Descriptor instead.
func (*GetRoleResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{10}
}

func (x *GetRoleResponse) GetInfo() *Role {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,9,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetRolesRequest) Reset() {
	*x = GetRolesRequest{}
=======
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *GetRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRequest) ProtoMessage() {}

func (x *GetRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[11]
=======
func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[7]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use GetRolesRequest.ProtoReflect.Descriptor instead.
func (*GetRolesRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{11}
}

func (x *GetRolesRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetRolesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRolesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Role `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetRolesResponse) Reset() {
	*x = GetRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResponse) ProtoMessage() {}

func (x *GetRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesResponse.ProtoReflect.Descriptor instead.
func (*GetRolesResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{12}
}

func (x *GetRolesResponse) GetInfos() []*Role {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetRolesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistRoleRequest struct {
=======
// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{7}
}

func (x *GetRoleRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetRoleResponse struct {
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

<<<<<<< HEAD
func (x *ExistRoleRequest) Reset() {
	*x = ExistRoleRequest{}
=======
func (x *GetRoleResponse) Reset() {
	*x = GetRoleResponse{}
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *ExistRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistRoleRequest) ProtoMessage() {}

func (x *ExistRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[13]
=======
func (x *GetRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleResponse) ProtoMessage() {}

func (x *GetRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[8]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ExistRoleRequest.ProtoReflect.Descriptor instead.
func (*ExistRoleRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{13}
}

func (x *ExistRoleRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistRoleResponse) Reset() {
	*x = ExistRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistRoleResponse) ProtoMessage() {}

func (x *ExistRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistRoleResponse.ProtoReflect.Descriptor instead.
func (*ExistRoleResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{14}
}

func (x *ExistRoleResponse) GetInfo() bool {
=======
// Deprecated: Use GetRoleResponse.ProtoReflect.Descriptor instead.
func (*GetRoleResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{8}
}

func (x *GetRoleResponse) GetInfo() *Role {
>>>>>>> Move role to middleware
	if x != nil {
		return x.Info
	}
	return false
}

<<<<<<< HEAD
type ExistRoleCondsRequest struct {
=======
type GetRolesRequest struct {
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistRoleCondsRequest) Reset() {
	*x = ExistRoleCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[15]
=======
	// Permissioned by path
	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetRolesRequest) Reset() {
	*x = GetRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[9]
>>>>>>> Move role to middleware
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *ExistRoleCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistRoleCondsRequest) ProtoMessage() {}

func (x *ExistRoleCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[15]
=======
func (x *GetRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRequest) ProtoMessage() {}

func (x *GetRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[9]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ExistRoleCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistRoleCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{15}
}

func (x *ExistRoleCondsRequest) GetConds() *Conds {
=======
// Deprecated: Use GetRolesRequest.ProtoReflect.Descriptor instead.
func (*GetRolesRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{9}
}

func (x *GetRolesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetRolesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRolesRequest) GetLimit() int32 {
>>>>>>> Move role to middleware
	if x != nil {
		return x.Conds
	}
	return nil
}

<<<<<<< HEAD
type ExistRoleCondsResponse struct {
=======
type GetRolesResponse struct {
>>>>>>> Move role to middleware
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistRoleCondsResponse) Reset() {
	*x = ExistRoleCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[16]
=======
	Infos []*Role `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetRolesResponse) Reset() {
	*x = GetRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[10]
>>>>>>> Move role to middleware
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *ExistRoleCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistRoleCondsResponse) ProtoMessage() {}

func (x *ExistRoleCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[16]
=======
func (x *GetRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResponse) ProtoMessage() {}

func (x *GetRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[10]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use ExistRoleCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistRoleCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{16}
}

func (x *ExistRoleCondsResponse) GetInfo() bool {
=======
// Deprecated: Use GetRolesResponse.ProtoReflect.Descriptor instead.
func (*GetRolesResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{10}
}

func (x *GetRolesResponse) GetInfos() []*Role {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetRolesResponse) GetTotal() uint32 {
>>>>>>> Move role to middleware
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RoleReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[17]
=======
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[11]
>>>>>>> Move role to middleware
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[17]
=======
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[11]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{17}
=======
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{11}
>>>>>>> Move role to middleware
}

func (x *DeleteRoleRequest) GetInfo() *RoleReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Role `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[18]
=======
		mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[12]
>>>>>>> Move role to middleware
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[18]
=======
	mi := &file_npool_appuser_mw_v1_role_role_proto_msgTypes[12]
>>>>>>> Move role to middleware
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{18}
=======
	return file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP(), []int{12}
>>>>>>> Move role to middleware
}

func (x *DeleteRoleResponse) GetInfo() *Role {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_mw_v1_role_role_proto protoreflect.FileDescriptor

var file_npool_appuser_mw_v1_role_role_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x05, 0x52, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x06, 0x52, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75,
<<<<<<< HEAD
	0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x22, 0x86,
=======
	0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x22, 0xc6,
>>>>>>> Move role to middleware
	0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
<<<<<<< HEAD
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x44,
=======
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44,
>>>>>>> Move role to middleware
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01,
<<<<<<< HEAD
	0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x22, 0x89, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
=======
	0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
>>>>>>> Move role to middleware
	0x73, 0x12, 0x27, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x2b, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32,
	0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x47, 0x65, 0x6e, 0x65,
<<<<<<< HEAD
	0x73, 0x69, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x52, 0x03,
	0x49, 0x44, 0x73, 0x22, 0x4c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
=======
	0x73, 0x69, 0x73, 0x22, 0x4c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
>>>>>>> Move role to middleware
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
<<<<<<< HEAD
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4d,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4c, 0x0a,
=======
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a,
>>>>>>> Move role to middleware
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
<<<<<<< HEAD
	0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x60, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x22,
	0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x27, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x15, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a,
	0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x81, 0x07, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x2a, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x79, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4c, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xa8, 0x04, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> Move role to middleware
}

var (
	file_npool_appuser_mw_v1_role_role_proto_rawDescOnce sync.Once
	file_npool_appuser_mw_v1_role_role_proto_rawDescData = file_npool_appuser_mw_v1_role_role_proto_rawDesc
)

func file_npool_appuser_mw_v1_role_role_proto_rawDescGZIP() []byte {
	file_npool_appuser_mw_v1_role_role_proto_rawDescOnce.Do(func() {
		file_npool_appuser_mw_v1_role_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_mw_v1_role_role_proto_rawDescData)
	})
	return file_npool_appuser_mw_v1_role_role_proto_rawDescData
}

<<<<<<< HEAD
var file_npool_appuser_mw_v1_role_role_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_npool_appuser_mw_v1_role_role_proto_goTypes = []interface{}{
	(*RoleReq)(nil),                // 0: appuser.middleware.role.v1.RoleReq
	(*Role)(nil),                   // 1: appuser.middleware.role.v1.Role
	(*Conds)(nil),                  // 2: appuser.middleware.role.v1.Conds
	(*CreateRoleRequest)(nil),      // 3: appuser.middleware.role.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),     // 4: appuser.middleware.role.v1.CreateRoleResponse
	(*CreateRolesRequest)(nil),     // 5: appuser.middleware.role.v1.CreateRolesRequest
	(*CreateRolesResponse)(nil),    // 6: appuser.middleware.role.v1.CreateRolesResponse
	(*UpdateRoleRequest)(nil),      // 7: appuser.middleware.role.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil),     // 8: appuser.middleware.role.v1.UpdateRoleResponse
	(*GetRoleRequest)(nil),         // 9: appuser.middleware.role.v1.GetRoleRequest
	(*GetRoleResponse)(nil),        // 10: appuser.middleware.role.v1.GetRoleResponse
	(*GetRolesRequest)(nil),        // 11: appuser.middleware.role.v1.GetRolesRequest
	(*GetRolesResponse)(nil),       // 12: appuser.middleware.role.v1.GetRolesResponse
	(*ExistRoleRequest)(nil),       // 13: appuser.middleware.role.v1.ExistRoleRequest
	(*ExistRoleResponse)(nil),      // 14: appuser.middleware.role.v1.ExistRoleResponse
	(*ExistRoleCondsRequest)(nil),  // 15: appuser.middleware.role.v1.ExistRoleCondsRequest
	(*ExistRoleCondsResponse)(nil), // 16: appuser.middleware.role.v1.ExistRoleCondsResponse
	(*DeleteRoleRequest)(nil),      // 17: appuser.middleware.role.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),     // 18: appuser.middleware.role.v1.DeleteRoleResponse
	(*v1.StringVal)(nil),           // 19: basetypes.v1.StringVal
	(*v1.BoolVal)(nil),             // 20: basetypes.v1.BoolVal
	(*v1.StringSliceVal)(nil),      // 21: basetypes.v1.StringSliceVal
}
var file_npool_appuser_mw_v1_role_role_proto_depIdxs = []int32{
	19, // 0: appuser.middleware.role.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	19, // 1: appuser.middleware.role.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	19, // 2: appuser.middleware.role.v1.Conds.CreatedBy:type_name -> basetypes.v1.StringVal
	19, // 3: appuser.middleware.role.v1.Conds.Role:type_name -> basetypes.v1.StringVal
	20, // 4: appuser.middleware.role.v1.Conds.Default:type_name -> basetypes.v1.BoolVal
	21, // 5: appuser.middleware.role.v1.Conds.Roles:type_name -> basetypes.v1.StringSliceVal
	20, // 6: appuser.middleware.role.v1.Conds.Genesis:type_name -> basetypes.v1.BoolVal
	21, // 7: appuser.middleware.role.v1.Conds.IDs:type_name -> basetypes.v1.StringSliceVal
	0,  // 8: appuser.middleware.role.v1.CreateRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 9: appuser.middleware.role.v1.CreateRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	0,  // 10: appuser.middleware.role.v1.CreateRolesRequest.Infos:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 11: appuser.middleware.role.v1.CreateRolesResponse.Infos:type_name -> appuser.middleware.role.v1.Role
	0,  // 12: appuser.middleware.role.v1.UpdateRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 13: appuser.middleware.role.v1.UpdateRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	1,  // 14: appuser.middleware.role.v1.GetRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	2,  // 15: appuser.middleware.role.v1.GetRolesRequest.Conds:type_name -> appuser.middleware.role.v1.Conds
	1,  // 16: appuser.middleware.role.v1.GetRolesResponse.Infos:type_name -> appuser.middleware.role.v1.Role
	2,  // 17: appuser.middleware.role.v1.ExistRoleCondsRequest.Conds:type_name -> appuser.middleware.role.v1.Conds
	0,  // 18: appuser.middleware.role.v1.DeleteRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 19: appuser.middleware.role.v1.DeleteRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	3,  // 20: appuser.middleware.role.v1.Middleware.CreateRole:input_type -> appuser.middleware.role.v1.CreateRoleRequest
	5,  // 21: appuser.middleware.role.v1.Middleware.CreateRoles:input_type -> appuser.middleware.role.v1.CreateRolesRequest
	7,  // 22: appuser.middleware.role.v1.Middleware.UpdateRole:input_type -> appuser.middleware.role.v1.UpdateRoleRequest
	9,  // 23: appuser.middleware.role.v1.Middleware.GetRole:input_type -> appuser.middleware.role.v1.GetRoleRequest
	11, // 24: appuser.middleware.role.v1.Middleware.GetRoles:input_type -> appuser.middleware.role.v1.GetRolesRequest
	13, // 25: appuser.middleware.role.v1.Middleware.ExistRole:input_type -> appuser.middleware.role.v1.ExistRoleRequest
	15, // 26: appuser.middleware.role.v1.Middleware.ExistRoleConds:input_type -> appuser.middleware.role.v1.ExistRoleCondsRequest
	17, // 27: appuser.middleware.role.v1.Middleware.DeleteRole:input_type -> appuser.middleware.role.v1.DeleteRoleRequest
	4,  // 28: appuser.middleware.role.v1.Middleware.CreateRole:output_type -> appuser.middleware.role.v1.CreateRoleResponse
	6,  // 29: appuser.middleware.role.v1.Middleware.CreateRoles:output_type -> appuser.middleware.role.v1.CreateRolesResponse
	8,  // 30: appuser.middleware.role.v1.Middleware.UpdateRole:output_type -> appuser.middleware.role.v1.UpdateRoleResponse
	10, // 31: appuser.middleware.role.v1.Middleware.GetRole:output_type -> appuser.middleware.role.v1.GetRoleResponse
	12, // 32: appuser.middleware.role.v1.Middleware.GetRoles:output_type -> appuser.middleware.role.v1.GetRolesResponse
	14, // 33: appuser.middleware.role.v1.Middleware.ExistRole:output_type -> appuser.middleware.role.v1.ExistRoleResponse
	16, // 34: appuser.middleware.role.v1.Middleware.ExistRoleConds:output_type -> appuser.middleware.role.v1.ExistRoleCondsResponse
	18, // 35: appuser.middleware.role.v1.Middleware.DeleteRole:output_type -> appuser.middleware.role.v1.DeleteRoleResponse
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
=======
var file_npool_appuser_mw_v1_role_role_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_appuser_mw_v1_role_role_proto_goTypes = []interface{}{
	(*RoleReq)(nil),            // 0: appuser.middleware.role.v1.RoleReq
	(*Role)(nil),               // 1: appuser.middleware.role.v1.Role
	(*Conds)(nil),              // 2: appuser.middleware.role.v1.Conds
	(*CreateRoleRequest)(nil),  // 3: appuser.middleware.role.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil), // 4: appuser.middleware.role.v1.CreateRoleResponse
	(*UpdateRoleRequest)(nil),  // 5: appuser.middleware.role.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil), // 6: appuser.middleware.role.v1.UpdateRoleResponse
	(*GetRoleRequest)(nil),     // 7: appuser.middleware.role.v1.GetRoleRequest
	(*GetRoleResponse)(nil),    // 8: appuser.middleware.role.v1.GetRoleResponse
	(*GetRolesRequest)(nil),    // 9: appuser.middleware.role.v1.GetRolesRequest
	(*GetRolesResponse)(nil),   // 10: appuser.middleware.role.v1.GetRolesResponse
	(*DeleteRoleRequest)(nil),  // 11: appuser.middleware.role.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil), // 12: appuser.middleware.role.v1.DeleteRoleResponse
	(*v1.StringVal)(nil),       // 13: basetypes.v1.StringVal
	(*v1.BoolVal)(nil),         // 14: basetypes.v1.BoolVal
	(*v1.StringSliceVal)(nil),  // 15: basetypes.v1.StringSliceVal
}
var file_npool_appuser_mw_v1_role_role_proto_depIdxs = []int32{
	13, // 0: appuser.middleware.role.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	13, // 1: appuser.middleware.role.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	13, // 2: appuser.middleware.role.v1.Conds.CreatedBy:type_name -> basetypes.v1.StringVal
	13, // 3: appuser.middleware.role.v1.Conds.Role:type_name -> basetypes.v1.StringVal
	14, // 4: appuser.middleware.role.v1.Conds.Default:type_name -> basetypes.v1.BoolVal
	15, // 5: appuser.middleware.role.v1.Conds.Roles:type_name -> basetypes.v1.StringSliceVal
	14, // 6: appuser.middleware.role.v1.Conds.Genesis:type_name -> basetypes.v1.BoolVal
	0,  // 7: appuser.middleware.role.v1.CreateRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 8: appuser.middleware.role.v1.CreateRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	0,  // 9: appuser.middleware.role.v1.UpdateRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 10: appuser.middleware.role.v1.UpdateRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	1,  // 11: appuser.middleware.role.v1.GetRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	1,  // 12: appuser.middleware.role.v1.GetRolesResponse.Infos:type_name -> appuser.middleware.role.v1.Role
	0,  // 13: appuser.middleware.role.v1.DeleteRoleRequest.Info:type_name -> appuser.middleware.role.v1.RoleReq
	1,  // 14: appuser.middleware.role.v1.DeleteRoleResponse.Info:type_name -> appuser.middleware.role.v1.Role
	3,  // 15: appuser.middleware.role.v1.Middleware.CreateRole:input_type -> appuser.middleware.role.v1.CreateRoleRequest
	5,  // 16: appuser.middleware.role.v1.Middleware.UpdateRole:input_type -> appuser.middleware.role.v1.UpdateRoleRequest
	7,  // 17: appuser.middleware.role.v1.Middleware.GetRole:input_type -> appuser.middleware.role.v1.GetRoleRequest
	9,  // 18: appuser.middleware.role.v1.Middleware.GetRoles:input_type -> appuser.middleware.role.v1.GetRolesRequest
	11, // 19: appuser.middleware.role.v1.Middleware.DeleteRole:input_type -> appuser.middleware.role.v1.DeleteRoleRequest
	4,  // 20: appuser.middleware.role.v1.Middleware.CreateRole:output_type -> appuser.middleware.role.v1.CreateRoleResponse
	6,  // 21: appuser.middleware.role.v1.Middleware.UpdateRole:output_type -> appuser.middleware.role.v1.UpdateRoleResponse
	8,  // 22: appuser.middleware.role.v1.Middleware.GetRole:output_type -> appuser.middleware.role.v1.GetRoleResponse
	10, // 23: appuser.middleware.role.v1.Middleware.GetRoles:output_type -> appuser.middleware.role.v1.GetRolesResponse
	12, // 24: appuser.middleware.role.v1.Middleware.DeleteRole:output_type -> appuser.middleware.role.v1.DeleteRoleResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
>>>>>>> Move role to middleware
}

func init() { file_npool_appuser_mw_v1_role_role_proto_init() }
func file_npool_appuser_mw_v1_role_role_proto_init() {
	if File_npool_appuser_mw_v1_role_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*CreateRolesRequest); i {
=======
			switch v := v.(*UpdateRoleRequest); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*CreateRolesResponse); i {
=======
			switch v := v.(*UpdateRoleResponse); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*UpdateRoleRequest); i {
=======
			switch v := v.(*GetRoleRequest); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*UpdateRoleResponse); i {
=======
			switch v := v.(*GetRoleResponse); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*GetRoleRequest); i {
=======
			switch v := v.(*GetRolesRequest); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*GetRoleResponse); i {
=======
			switch v := v.(*GetRolesResponse); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*GetRolesRequest); i {
=======
			switch v := v.(*DeleteRoleRequest); i {
>>>>>>> Move role to middleware
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*GetRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistRoleCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistRoleCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_role_role_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
=======
>>>>>>> Move role to middleware
			switch v := v.(*DeleteRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appuser_mw_v1_role_role_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_mw_v1_role_role_proto_rawDesc,
			NumEnums:      0,
<<<<<<< HEAD
			NumMessages:   19,
=======
			NumMessages:   13,
>>>>>>> Move role to middleware
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_mw_v1_role_role_proto_goTypes,
		DependencyIndexes: file_npool_appuser_mw_v1_role_role_proto_depIdxs,
		MessageInfos:      file_npool_appuser_mw_v1_role_role_proto_msgTypes,
	}.Build()
	File_npool_appuser_mw_v1_role_role_proto = out.File
	file_npool_appuser_mw_v1_role_role_proto_rawDesc = nil
	file_npool_appuser_mw_v1_role_role_proto_goTypes = nil
	file_npool_appuser_mw_v1_role_role_proto_depIdxs = nil
}
