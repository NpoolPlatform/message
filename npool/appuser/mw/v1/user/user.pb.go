// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/appuser/mw/v1/user/user.proto

package user

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/approle"
	_ "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/appuser"
	_ "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/appusersecret"
	_ "github.com/NpoolPlatform/message/npool/appuser/mgr/v2/appuserthirdparty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base
	ID           *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID        *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	EmailAddress *string `protobuf:"bytes,30,opt,name=EmailAddress,proto3,oneof" json:"EmailAddress,omitempty"`
	PhoneNO      *string `protobuf:"bytes,40,opt,name=PhoneNO,proto3,oneof" json:"PhoneNO,omitempty"`
	// Imported
	ImportedFromAppID   *string `protobuf:"bytes,50,opt,name=ImportedFromAppID,proto3,oneof" json:"ImportedFromAppID,omitempty"`
	ImportedFromAppName *string `protobuf:"bytes,60,opt,name=ImportedFromAppName,proto3,oneof" json:"ImportedFromAppName,omitempty"`
	ImportedFromAppLogo *string `protobuf:"bytes,70,opt,name=ImportedFromAppLogo,proto3,oneof" json:"ImportedFromAppLogo,omitempty"`
	ImportedFromAppHome *string `protobuf:"bytes,80,opt,name=ImportedFromAppHome,proto3,oneof" json:"ImportedFromAppHome,omitempty"`
	// Extra
	Username      *string  `protobuf:"bytes,90,opt,name=Username,proto3,oneof" json:"Username,omitempty"`
	AddressFields []string `protobuf:"bytes,100,rep,name=AddressFields,proto3" json:"AddressFields,omitempty"`
	Gender        *string  `protobuf:"bytes,110,opt,name=Gender,proto3,oneof" json:"Gender,omitempty"`
	PostalCode    *string  `protobuf:"bytes,120,opt,name=PostalCode,proto3,oneof" json:"PostalCode,omitempty"`
	Age           *uint32  `protobuf:"varint,130,opt,name=Age,proto3,oneof" json:"Age,omitempty"`
	Birthday      *uint32  `protobuf:"varint,140,opt,name=Birthday,proto3,oneof" json:"Birthday,omitempty"`
	Avatar        *string  `protobuf:"bytes,150,opt,name=Avatar,proto3,oneof" json:"Avatar,omitempty"`
	Organization  *string  `protobuf:"bytes,160,opt,name=Organization,proto3,oneof" json:"Organization,omitempty"`
	FirstName     *string  `protobuf:"bytes,170,opt,name=FirstName,proto3,oneof" json:"FirstName,omitempty"`
	LastName      *string  `protobuf:"bytes,180,opt,name=LastName,proto3,oneof" json:"LastName,omitempty"`
	IDNumber      *string  `protobuf:"bytes,190,opt,name=IDNumber,proto3,oneof" json:"IDNumber,omitempty"`
	// Control flat
	SigninVerifyByGoogleAuthentication *bool   `protobuf:"varint,200,opt,name=SigninVerifyByGoogleAuthentication,proto3,oneof" json:"SigninVerifyByGoogleAuthentication,omitempty"`
	GoogleAuthenticationVerified       *bool   `protobuf:"varint,210,opt,name=GoogleAuthenticationVerified,proto3,oneof" json:"GoogleAuthenticationVerified,omitempty"`
	Banned                             *bool   `protobuf:"varint,220,opt,name=Banned,proto3,oneof" json:"Banned,omitempty"`
	BanMessage                         *string `protobuf:"bytes,230,opt,name=BanMessage,proto3,oneof" json:"BanMessage,omitempty"`
	// Secret map
	HasGoogleSecret *bool `protobuf:"varint,240,opt,name=HasGoogleSecret,proto3,oneof" json:"HasGoogleSecret,omitempty"`
	// Role
	Roles    []string `protobuf:"bytes,250,rep,name=Roles,proto3" json:"Roles,omitempty"`
	CreateAt *uint32  `protobuf:"varint,260,opt,name=CreateAt,proto3,oneof" json:"CreateAt,omitempty"`
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *UserReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *UserReq) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

func (x *UserReq) GetPhoneNO() string {
	if x != nil && x.PhoneNO != nil {
		return *x.PhoneNO
	}
	return ""
}

func (x *UserReq) GetImportedFromAppID() string {
	if x != nil && x.ImportedFromAppID != nil {
		return *x.ImportedFromAppID
	}
	return ""
}

func (x *UserReq) GetImportedFromAppName() string {
	if x != nil && x.ImportedFromAppName != nil {
		return *x.ImportedFromAppName
	}
	return ""
}

func (x *UserReq) GetImportedFromAppLogo() string {
	if x != nil && x.ImportedFromAppLogo != nil {
		return *x.ImportedFromAppLogo
	}
	return ""
}

func (x *UserReq) GetImportedFromAppHome() string {
	if x != nil && x.ImportedFromAppHome != nil {
		return *x.ImportedFromAppHome
	}
	return ""
}

func (x *UserReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UserReq) GetAddressFields() []string {
	if x != nil {
		return x.AddressFields
	}
	return nil
}

func (x *UserReq) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *UserReq) GetPostalCode() string {
	if x != nil && x.PostalCode != nil {
		return *x.PostalCode
	}
	return ""
}

func (x *UserReq) GetAge() uint32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *UserReq) GetBirthday() uint32 {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return 0
}

func (x *UserReq) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UserReq) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *UserReq) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *UserReq) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *UserReq) GetIDNumber() string {
	if x != nil && x.IDNumber != nil {
		return *x.IDNumber
	}
	return ""
}

func (x *UserReq) GetSigninVerifyByGoogleAuthentication() bool {
	if x != nil && x.SigninVerifyByGoogleAuthentication != nil {
		return *x.SigninVerifyByGoogleAuthentication
	}
	return false
}

func (x *UserReq) GetGoogleAuthenticationVerified() bool {
	if x != nil && x.GoogleAuthenticationVerified != nil {
		return *x.GoogleAuthenticationVerified
	}
	return false
}

func (x *UserReq) GetBanned() bool {
	if x != nil && x.Banned != nil {
		return *x.Banned
	}
	return false
}

func (x *UserReq) GetBanMessage() string {
	if x != nil && x.BanMessage != nil {
		return *x.BanMessage
	}
	return ""
}

func (x *UserReq) GetHasGoogleSecret() bool {
	if x != nil && x.HasGoogleSecret != nil {
		return *x.HasGoogleSecret
	}
	return false
}

func (x *UserReq) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserReq) GetCreateAt() uint32 {
	if x != nil && x.CreateAt != nil {
		return *x.CreateAt
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base
	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EmailAddress string `protobuf:"bytes,30,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO      string `protobuf:"bytes,40,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	// Imported
	ImportedFromAppID   string `protobuf:"bytes,50,opt,name=ImportedFromAppID,proto3" json:"ImportedFromAppID,omitempty"`
	ImportedFromAppName string `protobuf:"bytes,60,opt,name=ImportedFromAppName,proto3" json:"ImportedFromAppName,omitempty"`
	ImportedFromAppLogo string `protobuf:"bytes,70,opt,name=ImportedFromAppLogo,proto3" json:"ImportedFromAppLogo,omitempty"`
	ImportedFromAppHome string `protobuf:"bytes,80,opt,name=ImportedFromAppHome,proto3" json:"ImportedFromAppHome,omitempty"`
	// Extra
	Username      string   `protobuf:"bytes,90,opt,name=Username,proto3" json:"Username,omitempty"`
	AddressFields []string `protobuf:"bytes,100,rep,name=AddressFields,proto3" json:"AddressFields,omitempty"`
	Gender        string   `protobuf:"bytes,110,opt,name=Gender,proto3" json:"Gender,omitempty"`
	PostalCode    string   `protobuf:"bytes,120,opt,name=PostalCode,proto3" json:"PostalCode,omitempty"`
	Age           uint32   `protobuf:"varint,130,opt,name=Age,proto3" json:"Age,omitempty"`
	Birthday      uint32   `protobuf:"varint,140,opt,name=Birthday,proto3" json:"Birthday,omitempty"`
	Avatar        string   `protobuf:"bytes,150,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Organization  string   `protobuf:"bytes,160,opt,name=Organization,proto3" json:"Organization,omitempty"`
	FirstName     string   `protobuf:"bytes,170,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName      string   `protobuf:"bytes,180,opt,name=LastName,proto3" json:"LastName,omitempty"`
	IDNumber      string   `protobuf:"bytes,190,opt,name=IDNumber,proto3" json:"IDNumber,omitempty"`
	// Control flat
	SigninVerifyByGoogleAuthentication bool   `protobuf:"varint,200,opt,name=SigninVerifyByGoogleAuthentication,proto3" json:"SigninVerifyByGoogleAuthentication,omitempty"`
	GoogleAuthenticationVerified       bool   `protobuf:"varint,210,opt,name=GoogleAuthenticationVerified,proto3" json:"GoogleAuthenticationVerified,omitempty"`
	Banned                             bool   `protobuf:"varint,220,opt,name=Banned,proto3" json:"Banned,omitempty"`
	BanMessage                         string `protobuf:"bytes,230,opt,name=BanMessage,proto3" json:"BanMessage,omitempty"`
	// Secret map
	HasGoogleSecret bool `protobuf:"varint,240,opt,name=HasGoogleSecret,proto3" json:"HasGoogleSecret,omitempty"`
	// Role
	Roles    []string `protobuf:"bytes,250,rep,name=Roles,proto3" json:"Roles,omitempty"`
	CreateAt uint32   `protobuf:"varint,260,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *User) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *User) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *User) GetImportedFromAppID() string {
	if x != nil {
		return x.ImportedFromAppID
	}
	return ""
}

func (x *User) GetImportedFromAppName() string {
	if x != nil {
		return x.ImportedFromAppName
	}
	return ""
}

func (x *User) GetImportedFromAppLogo() string {
	if x != nil {
		return x.ImportedFromAppLogo
	}
	return ""
}

func (x *User) GetImportedFromAppHome() string {
	if x != nil {
		return x.ImportedFromAppHome
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetAddressFields() []string {
	if x != nil {
		return x.AddressFields
	}
	return nil
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *User) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *User) GetBirthday() uint32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetIDNumber() string {
	if x != nil {
		return x.IDNumber
	}
	return ""
}

func (x *User) GetSigninVerifyByGoogleAuthentication() bool {
	if x != nil {
		return x.SigninVerifyByGoogleAuthentication
	}
	return false
}

func (x *User) GetGoogleAuthenticationVerified() bool {
	if x != nil {
		return x.GoogleAuthenticationVerified
	}
	return false
}

func (x *User) GetBanned() bool {
	if x != nil {
		return x.Banned
	}
	return false
}

func (x *User) GetBanMessage() string {
	if x != nil {
		return x.BanMessage
	}
	return ""
}

func (x *User) GetHasGoogleSecret() bool {
	if x != nil {
		return x.HasGoogleSecret
	}
	return false
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID         *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	PhoneNo       *npool.StringVal `protobuf:"bytes,30,opt,name=PhoneNo,proto3" json:"PhoneNo,omitempty"`
	EmailAddress  *npool.StringVal `protobuf:"bytes,40,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	ImportFromApp *npool.StringVal `protobuf:"bytes,50,opt,name=ImportFromApp,proto3" json:"ImportFromApp,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetPhoneNo() *npool.StringVal {
	if x != nil {
		return x.PhoneNo
	}
	return nil
}

func (x *Conds) GetEmailAddress() *npool.StringVal {
	if x != nil {
		return x.EmailAddress
	}
	return nil
}

func (x *Conds) GetImportFromApp() *npool.StringVal {
	if x != nil {
		return x.ImportFromApp
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{3}
}

func (x *GetUsersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUsersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*User `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetUsersResponse) GetInfos() []*User {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetAppUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppUsersRequest) Reset() {
	*x = GetAppUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUsersRequest) ProtoMessage() {}

func (x *GetAppUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAppUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppUsersRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppUsersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*User `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetAppUsersResponse) Reset() {
	*x = GetAppUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUsersResponse) ProtoMessage() {}

func (x *GetAppUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUsersResponse.ProtoReflect.Descriptor instead.
func (*GetAppUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppUsersResponse) GetInfos() []*User {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUserRequest) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserResponse) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Info        *User  `protobuf:"bytes,20,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserRequest) Reset() {
	*x = CreateAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserRequest) ProtoMessage() {}

func (x *CreateAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAppUserRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppUserRequest) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserResponse) Reset() {
	*x = CreateAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserResponse) ProtoMessage() {}

func (x *CreateAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAppUserResponse) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserRequest) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_user_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserResponse) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_mw_v1_user_user_proto protoreflect.FileDescriptor

var file_npool_appuser_mw_v1_user_user_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2a, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2f, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x3e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa8, 0x0b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x4f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x4f, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x13,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4c,
	0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x64, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x82, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x0b, 0x52, 0x03, 0x41, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x08, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x0c, 0x52, 0x08, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0d, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x10, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x08, 0x49, 0x44, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x11, 0x52, 0x08, 0x49, 0x44, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x54, 0x0a, 0x22, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x42, 0x79, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x12, 0x52,
	0x22, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x13, 0x52,
	0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x14, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xe6, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0f, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x16,
	0x52, 0x0f, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0xfa, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x17,
	0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67,
	0x6f, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x41, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x49, 0x44, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x25, 0x0a, 0x23, 0x5f, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x48, 0x61, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x9e, 0x07, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x48, 0x6f,
	0x6d, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x82,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x23, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x08, 0x49, 0x44, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xbe, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x44, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4f,
	0x0a, 0x22, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x43, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0xd2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0xdc,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0a, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xe6, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x0f, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0xfa, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x84, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xfa, 0x01,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x37, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x39, 0x0a, 0x0d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x0d, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x64, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xb9, 0x04, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x77, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_appuser_mw_v1_user_user_proto_rawDescOnce sync.Once
	file_npool_appuser_mw_v1_user_user_proto_rawDescData = file_npool_appuser_mw_v1_user_user_proto_rawDesc
)

func file_npool_appuser_mw_v1_user_user_proto_rawDescGZIP() []byte {
	file_npool_appuser_mw_v1_user_user_proto_rawDescOnce.Do(func() {
		file_npool_appuser_mw_v1_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_mw_v1_user_user_proto_rawDescData)
	})
	return file_npool_appuser_mw_v1_user_user_proto_rawDescData
}

var file_npool_appuser_mw_v1_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_appuser_mw_v1_user_user_proto_goTypes = []interface{}{
	(*UserReq)(nil),               // 0: appuser.middleware.user.v1.UserReq
	(*User)(nil),                  // 1: appuser.middleware.user.v1.User
	(*Conds)(nil),                 // 2: appuser.middleware.user.v1.Conds
	(*GetUsersRequest)(nil),       // 3: appuser.middleware.user.v1.GetUsersRequest
	(*GetUsersResponse)(nil),      // 4: appuser.middleware.user.v1.GetUsersResponse
	(*GetAppUsersRequest)(nil),    // 5: appuser.middleware.user.v1.GetAppUsersRequest
	(*GetAppUsersResponse)(nil),   // 6: appuser.middleware.user.v1.GetAppUsersResponse
	(*CreateUserRequest)(nil),     // 7: appuser.middleware.user.v1.CreateUserRequest
	(*CreateUserResponse)(nil),    // 8: appuser.middleware.user.v1.CreateUserResponse
	(*CreateAppUserRequest)(nil),  // 9: appuser.middleware.user.v1.CreateAppUserRequest
	(*CreateAppUserResponse)(nil), // 10: appuser.middleware.user.v1.CreateAppUserResponse
	(*UpdateUserRequest)(nil),     // 11: appuser.middleware.user.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),    // 12: appuser.middleware.user.v1.UpdateUserResponse
	(*npool.StringVal)(nil),       // 13: npool.v1.StringVal
}
var file_npool_appuser_mw_v1_user_user_proto_depIdxs = []int32{
	13, // 0: appuser.middleware.user.v1.Conds.ID:type_name -> npool.v1.StringVal
	13, // 1: appuser.middleware.user.v1.Conds.AppID:type_name -> npool.v1.StringVal
	13, // 2: appuser.middleware.user.v1.Conds.PhoneNo:type_name -> npool.v1.StringVal
	13, // 3: appuser.middleware.user.v1.Conds.EmailAddress:type_name -> npool.v1.StringVal
	13, // 4: appuser.middleware.user.v1.Conds.ImportFromApp:type_name -> npool.v1.StringVal
	1,  // 5: appuser.middleware.user.v1.GetUsersResponse.Infos:type_name -> appuser.middleware.user.v1.User
	1,  // 6: appuser.middleware.user.v1.GetAppUsersResponse.Infos:type_name -> appuser.middleware.user.v1.User
	1,  // 7: appuser.middleware.user.v1.CreateUserRequest.Info:type_name -> appuser.middleware.user.v1.User
	1,  // 8: appuser.middleware.user.v1.CreateUserResponse.Info:type_name -> appuser.middleware.user.v1.User
	1,  // 9: appuser.middleware.user.v1.CreateAppUserRequest.Info:type_name -> appuser.middleware.user.v1.User
	1,  // 10: appuser.middleware.user.v1.CreateAppUserResponse.Info:type_name -> appuser.middleware.user.v1.User
	1,  // 11: appuser.middleware.user.v1.UpdateUserRequest.Info:type_name -> appuser.middleware.user.v1.User
	1,  // 12: appuser.middleware.user.v1.UpdateUserResponse.Info:type_name -> appuser.middleware.user.v1.User
	3,  // 13: appuser.middleware.user.v1.UserMw.GetUsers:input_type -> appuser.middleware.user.v1.GetUsersRequest
	5,  // 14: appuser.middleware.user.v1.UserMw.GetAppUsers:input_type -> appuser.middleware.user.v1.GetAppUsersRequest
	7,  // 15: appuser.middleware.user.v1.UserMw.CreateUser:input_type -> appuser.middleware.user.v1.CreateUserRequest
	9,  // 16: appuser.middleware.user.v1.UserMw.CreateAppUser:input_type -> appuser.middleware.user.v1.CreateAppUserRequest
	11, // 17: appuser.middleware.user.v1.UserMw.UpdateUser:input_type -> appuser.middleware.user.v1.UpdateUserRequest
	4,  // 18: appuser.middleware.user.v1.UserMw.GetUsers:output_type -> appuser.middleware.user.v1.GetUsersResponse
	6,  // 19: appuser.middleware.user.v1.UserMw.GetAppUsers:output_type -> appuser.middleware.user.v1.GetAppUsersResponse
	8,  // 20: appuser.middleware.user.v1.UserMw.CreateUser:output_type -> appuser.middleware.user.v1.CreateUserResponse
	10, // 21: appuser.middleware.user.v1.UserMw.CreateAppUser:output_type -> appuser.middleware.user.v1.CreateAppUserResponse
	12, // 22: appuser.middleware.user.v1.UserMw.UpdateUser:output_type -> appuser.middleware.user.v1.UpdateUserResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_npool_appuser_mw_v1_user_user_proto_init() }
func file_npool_appuser_mw_v1_user_user_proto_init() {
	if File_npool_appuser_mw_v1_user_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_user_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appuser_mw_v1_user_user_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_mw_v1_user_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_mw_v1_user_user_proto_goTypes,
		DependencyIndexes: file_npool_appuser_mw_v1_user_user_proto_depIdxs,
		MessageInfos:      file_npool_appuser_mw_v1_user_user_proto_msgTypes,
	}.Build()
	File_npool_appuser_mw_v1_user_user_proto = out.File
	file_npool_appuser_mw_v1_user_user_proto_rawDesc = nil
	file_npool_appuser_mw_v1_user_user_proto_goTypes = nil
	file_npool_appuser_mw_v1_user_user_proto_depIdxs = nil
}
