syntax = "proto3";

package appuser.middleware.kyc.v1;

option go_package = "github.com/NpoolPlatform/message/npool/appuser/mw/v1/kyc";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";
import "npool/appuser/mgr/v2/kyc/kyc.proto";
import "npool/review/mgr/v2/mgr.proto";

service Middleware {
    rpc GetKyc      (GetKycRequest)     returns (GetKycResponse)     {}
    rpc GetKycs     (GetKycsRequest)    returns (GetKycsResponse)    {}
}

message Kyc {
    // @inject_tag: sql:"id"
    string          ID              = 10;
    // @inject_tag: sql:"app_id"
    string          AppID           = 20;
    // @inject_tag: sql:"app_name"
    string          AppName         = 30;
    // @inject_tag: sql:"app_logo"
    string          AppLogo         = 40;
    // @inject_tag: sql:"user_id"
    string          UserID          = 50;
    // @inject_tag: sql:"email_address"
    string          EmailAddress    = 60;
    // @inject_tag: sql:"phone_no"
    string          PhoneNO         = 70;
    // @inject_tag: sql:"document_type"
    string          DocumentTypeStr = 80;
    appuser.manager.kyc.v2.KycDocumentType DocumentType = 90;
    // @inject_tag: sql:"id_number"
    string          IDNumber        = 100;
    // @inject_tag: sql:"front_img"
    string          FrontImg        = 110;
    // @inject_tag: sql:"back_img"
    string          BackImg         = 120;
    // @inject_tag: sql:"selfie_img"
    string          SelfieImg       = 130;
    // @inject_tag: sql:"entity_type"
    string          EntityTypeStr   = 140;
    appuser.manager.kyc.v2.KycEntityType   EntityType    = 150;
    // @inject_tag: sql:"review_id"
    string          ReviewID        = 160;
    // @inject_tag: sql:"review_state"
    string          ReviewStateStr  = 170;
    review.manager.v2.ReviewState          ReviewState   = 180;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 190;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 200;
}

message Conds {
    appuser.manager.kyc.v2.Conds Conds = 10;
}

message GetKycRequest {
    string ID    = 10;
}

message GetKycResponse {
    Kyc Info = 10;
}

message GetKycsRequest {
    Conds  Conds    = 10;
    int32  Offset   = 20;
    int32  Limit    = 30;
}

message GetKycsResponse {
    repeated Kyc Infos = 10;
    uint32       Total = 20;
}

