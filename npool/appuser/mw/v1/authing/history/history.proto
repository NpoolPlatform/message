syntax = "proto3";

package appuser.middleware.authing.history.v1;

option go_package = "github.com/NpoolPlatform/message/npool/appuser/mw/v1/authing/history";

import "npool/basetypes/v1/conds.proto";

service Middleware {
  rpc CreateHistory(CreateHistoryRequest) returns (CreateHistoryResponse) {}
  rpc GetHistories(GetHistoriesRequest) returns (GetHistoriesResponse) {}
}

message HistoryReq {
  optional uint32 ID = 9;
  optional string EntID = 10;
  optional string AppID = 20;
  optional string UserID = 30;
  optional string Resource = 40;
  optional string Method = 50;
  optional bool Allowed = 60;
}

message History {
  // @inject_tag: sql:"app_id"
  string AppID = 10;
  // @inject_tag: sql:"app_name"
  string AppName = 20;
  // @inject_tag: sql:"app_logo"
  string AppLogo = 30;
  // @inject_tag: sql:"user_id"
  string UserID = 40;
  // @inject_tag: sql:"email_address"
  string EmailAddress = 50;
  // @inject_tag: sql:"phone_no"
  string PhoneNO = 60;
  // @inject_tag: sql:"resource"
  string Resource = 70;
  // @inject_tag: sql:"method"
  string Method = 80;
  // @inject_tag: sql:"allowed"
  bool Allowed = 90;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 100;
}

message Conds {
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.StringVal UserID = 30;
  optional basetypes.v1.StringVal Resource = 40;
  optional basetypes.v1.StringVal Method = 50;
  optional basetypes.v1.BoolVal Allowed = 60;
}

message CreateHistoryRequest { HistoryReq Info = 10; }

message CreateHistoryResponse { History Info = 10; }

message GetHistoriesRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetHistoriesResponse {
  repeated History Infos = 10;
  uint32 Total = 20;
}
