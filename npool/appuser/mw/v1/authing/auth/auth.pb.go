// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/appuser/mw/v1/authing/auth/auth.proto

package auth

import (
<<<<<<< HEAD
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
=======
	npool "github.com/NpoolPlatform/message/npool"
>>>>>>> Refactor authing
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID    *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	RoleID   *string `protobuf:"bytes,30,opt,name=RoleID,proto3,oneof" json:"RoleID,omitempty"`
	UserID   *string `protobuf:"bytes,40,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Resource *string `protobuf:"bytes,50,opt,name=Resource,proto3,oneof" json:"Resource,omitempty"`
	Method   *string `protobuf:"bytes,60,opt,name=Method,proto3,oneof" json:"Method,omitempty"`
}

func (x *AuthReq) Reset() {
	*x = AuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReq) ProtoMessage() {}

func (x *AuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReq.ProtoReflect.Descriptor instead.
func (*AuthReq) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AuthReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *AuthReq) GetRoleID() string {
	if x != nil && x.RoleID != nil {
		return *x.RoleID
	}
	return ""
}

func (x *AuthReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *AuthReq) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *AuthReq) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID string `protobuf:"bytes,5,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"app_name"
	AppName string `protobuf:"bytes,20,opt,name=AppName,proto3" json:"AppName,omitempty" sql:"app_name"`
	// @inject_tag: sql:"app_logo"
	AppLogo string `protobuf:"bytes,30,opt,name=AppLogo,proto3" json:"AppLogo,omitempty" sql:"app_logo"`
	// @inject_tag: sql:"role_id"
	RoleID string `protobuf:"bytes,40,opt,name=RoleID,proto3" json:"RoleID,omitempty" sql:"role_id"`
	// @inject_tag: sql:"role_name"
	RoleName string `protobuf:"bytes,50,opt,name=RoleName,proto3" json:"RoleName,omitempty" sql:"role_name"`
	// @inject_tag: sql:"user_id"
	UserID string `protobuf:"bytes,60,opt,name=UserID,proto3" json:"UserID,omitempty" sql:"user_id"`
	// @inject_tag: sql:"email_address"
	EmailAddress string `protobuf:"bytes,70,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty" sql:"email_address"`
	// @inject_tag: sql:"phone_no"
	PhoneNO string `protobuf:"bytes,80,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty" sql:"phone_no"`
	// @inject_tag: sql:"resource"
	Resource string `protobuf:"bytes,90,opt,name=Resource,proto3" json:"Resource,omitempty" sql:"resource"`
	// @inject_tag: sql:"method"
	Method string `protobuf:"bytes,100,opt,name=Method,proto3" json:"Method,omitempty" sql:"method"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{1}
}

func (x *Auth) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Auth) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Auth) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Auth) GetAppLogo() string {
	if x != nil {
		return x.AppLogo
	}
	return ""
}

func (x *Auth) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

func (x *Auth) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *Auth) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Auth) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Auth) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Auth) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Auth) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Auth) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	ID       *v1.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID    *v1.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	RoleID   *v1.StringVal `protobuf:"bytes,30,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	UserID   *v1.StringVal `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Resource *v1.StringVal `protobuf:"bytes,50,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Method   *v1.StringVal `protobuf:"bytes,60,opt,name=Method,proto3" json:"Method,omitempty"`
=======
	ID       *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID    *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	RoleID   *npool.StringVal `protobuf:"bytes,30,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	UserID   *npool.StringVal `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Resource *npool.StringVal `protobuf:"bytes,50,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Method   *npool.StringVal `protobuf:"bytes,60,opt,name=Method,proto3" json:"Method,omitempty"`
>>>>>>> Refactor authing
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{2}
}

<<<<<<< HEAD
func (x *Conds) GetID() *v1.StringVal {
=======
func (x *Conds) GetID() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.ID
	}
	return nil
}

<<<<<<< HEAD
func (x *Conds) GetAppID() *v1.StringVal {
=======
func (x *Conds) GetAppID() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.AppID
	}
	return nil
}

<<<<<<< HEAD
func (x *Conds) GetRoleID() *v1.StringVal {
=======
func (x *Conds) GetRoleID() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.RoleID
	}
	return nil
}

<<<<<<< HEAD
func (x *Conds) GetUserID() *v1.StringVal {
=======
func (x *Conds) GetUserID() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.UserID
	}
	return nil
}

<<<<<<< HEAD
func (x *Conds) GetResource() *v1.StringVal {
=======
func (x *Conds) GetResource() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.Resource
	}
	return nil
}

<<<<<<< HEAD
func (x *Conds) GetMethod() *v1.StringVal {
=======
func (x *Conds) GetMethod() *npool.StringVal {
>>>>>>> Refactor authing
	if x != nil {
		return x.Method
	}
	return nil
}

type CreateAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AuthReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAuthRequest) Reset() {
	*x = CreateAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthRequest) ProtoMessage() {}

func (x *CreateAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAuthRequest) GetInfo() *AuthReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Auth `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAuthResponse) Reset() {
	*x = CreateAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthResponse) ProtoMessage() {}

func (x *CreateAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthResponse.ProtoReflect.Descriptor instead.
func (*CreateAuthResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAuthResponse) GetInfo() *Auth {
	if x != nil {
		return x.Info
	}
	return nil
}

<<<<<<< HEAD
type CreateAuthsRequest struct {
=======
type UpdateAuthRequest struct {
>>>>>>> Refactor authing
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Infos []*AuthReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAuthsRequest) Reset() {
	*x = CreateAuthsRequest{}
=======
	Info *AuthReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAuthRequest) Reset() {
	*x = UpdateAuthRequest{}
>>>>>>> Refactor authing
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *CreateAuthsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthsRequest) ProtoMessage() {}

func (x *CreateAuthsRequest) ProtoReflect() protoreflect.Message {
=======
func (x *UpdateAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthRequest) ProtoMessage() {}

func (x *UpdateAuthRequest) ProtoReflect() protoreflect.Message {
>>>>>>> Refactor authing
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use CreateAuthsRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAuthsRequest) GetInfos() []*AuthReq {
	if x != nil {
		return x.Infos
=======
// Deprecated: Use UpdateAuthRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAuthRequest) GetInfo() *AuthReq {
	if x != nil {
		return x.Info
>>>>>>> Refactor authing
	}
	return nil
}

<<<<<<< HEAD
type CreateAuthsResponse struct {
=======
type UpdateAuthResponse struct {
>>>>>>> Refactor authing
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Infos []*Auth `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAuthsResponse) Reset() {
	*x = CreateAuthsResponse{}
=======
	Info *Auth `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAuthResponse) Reset() {
	*x = UpdateAuthResponse{}
>>>>>>> Refactor authing
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

<<<<<<< HEAD
func (x *CreateAuthsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthsResponse) ProtoMessage() {}

func (x *CreateAuthsResponse) ProtoReflect() protoreflect.Message {
=======
func (x *UpdateAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthResponse) ProtoMessage() {}

func (x *UpdateAuthResponse) ProtoReflect() protoreflect.Message {
>>>>>>> Refactor authing
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use CreateAuthsResponse.ProtoReflect.Descriptor instead.
func (*CreateAuthsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAuthsResponse) GetInfos() []*Auth {
	if x != nil {
		return x.Infos
=======
// Deprecated: Use UpdateAuthResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuthResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAuthResponse) GetInfo() *Auth {
	if x != nil {
		return x.Info
>>>>>>> Refactor authing
	}
	return nil
}

type ExistAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID   *string `protobuf:"bytes,20,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Resource string  `protobuf:"bytes,30,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Method   string  `protobuf:"bytes,40,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *ExistAuthRequest) Reset() {
	*x = ExistAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAuthRequest) ProtoMessage() {}

func (x *ExistAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAuthRequest.ProtoReflect.Descriptor instead.
func (*ExistAuthRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{7}
}

func (x *ExistAuthRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ExistAuthRequest) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *ExistAuthRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ExistAuthRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ExistAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAuthResponse) Reset() {
	*x = ExistAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAuthResponse) ProtoMessage() {}

func (x *ExistAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAuthResponse.ProtoReflect.Descriptor instead.
func (*ExistAuthResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{8}
}

func (x *ExistAuthResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type GetAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAuthRequest) Reset() {
	*x = GetAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthRequest) ProtoMessage() {}

func (x *GetAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthRequest.ProtoReflect.Descriptor instead.
func (*GetAuthRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{9}
}

func (x *GetAuthRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Auth `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAuthResponse) Reset() {
	*x = GetAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthResponse) ProtoMessage() {}

func (x *GetAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthResponse.ProtoReflect.Descriptor instead.
func (*GetAuthResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{10}
}

func (x *GetAuthResponse) GetInfo() *Auth {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAuthsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Conds  *Conds `protobuf:"bytes,9,opt,name=Conds,proto3" json:"Conds,omitempty"`
=======
	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
>>>>>>> Refactor authing
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAuthsRequest) Reset() {
	*x = GetAuthsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthsRequest) ProtoMessage() {}

func (x *GetAuthsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthsRequest.ProtoReflect.Descriptor instead.
func (*GetAuthsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{11}
}

<<<<<<< HEAD
func (x *GetAuthsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
=======
func (x *GetAuthsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
>>>>>>> Refactor authing
}

func (x *GetAuthsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAuthsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAuthsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Auth `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAuthsResponse) Reset() {
	*x = GetAuthsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthsResponse) ProtoMessage() {}

func (x *GetAuthsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthsResponse.ProtoReflect.Descriptor instead.
func (*GetAuthsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{12}
}

func (x *GetAuthsResponse) GetInfos() []*Auth {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAuthsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

<<<<<<< HEAD
type ExistAuthCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAuthCondsRequest) Reset() {
	*x = ExistAuthCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAuthCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAuthCondsRequest) ProtoMessage() {}

func (x *ExistAuthCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAuthCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAuthCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{13}
}

func (x *ExistAuthCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAuthCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAuthCondsResponse) Reset() {
	*x = ExistAuthCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAuthCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAuthCondsResponse) ProtoMessage() {}

func (x *ExistAuthCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAuthCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAuthCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{14}
}

func (x *ExistAuthCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

=======
>>>>>>> Refactor authing
type DeleteAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AuthReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAuthRequest) Reset() {
	*x = DeleteAuthRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[15]
=======
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[13]
>>>>>>> Refactor authing
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthRequest) ProtoMessage() {}

func (x *DeleteAuthRequest) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[15]
=======
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[13]
>>>>>>> Refactor authing
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthRequest) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{15}
=======
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{13}
>>>>>>> Refactor authing
}

func (x *DeleteAuthRequest) GetInfo() *AuthReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Auth `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAuthResponse) Reset() {
	*x = DeleteAuthResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[16]
=======
		mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14]
>>>>>>> Refactor authing
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthResponse) ProtoMessage() {}

func (x *DeleteAuthResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[16]
=======
	mi := &file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14]
>>>>>>> Refactor authing
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthResponse.ProtoReflect.Descriptor instead.
func (*DeleteAuthResponse) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{16}
=======
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP(), []int{14}
>>>>>>> Refactor authing
}

func (x *DeleteAuthResponse) GetInfo() *Auth {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appuser_mw_v1_authing_auth_auth_proto protoreflect.FileDescriptor

var file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
<<<<<<< HEAD
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a,
	0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22,
	0xbc, 0x02, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4c,
	0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa7,
	0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x2d, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x2f, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x2f, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x33, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x57, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1b, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x11, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52,
=======
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf0, 0x01, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70,
	0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x8f, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x29, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x27,
	0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x68, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x52, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
>>>>>>> Refactor authing
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
<<<<<<< HEAD
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x68, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x58, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x52, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x32, 0x84, 0x07, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x74, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x32, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x89, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x39, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xf4, 0x05, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7a, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73,
	0x12, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> Refactor authing
}

var (
	file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescOnce sync.Once
	file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescData = file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDesc
)

func file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescGZIP() []byte {
	file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescOnce.Do(func() {
		file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescData)
	})
	return file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDescData
}

<<<<<<< HEAD
var file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_appuser_mw_v1_authing_auth_auth_proto_goTypes = []interface{}{
	(*AuthReq)(nil),                // 0: appuser.middleware.authing.auth.v1.AuthReq
	(*Auth)(nil),                   // 1: appuser.middleware.authing.auth.v1.Auth
	(*Conds)(nil),                  // 2: appuser.middleware.authing.auth.v1.Conds
	(*CreateAuthRequest)(nil),      // 3: appuser.middleware.authing.auth.v1.CreateAuthRequest
	(*CreateAuthResponse)(nil),     // 4: appuser.middleware.authing.auth.v1.CreateAuthResponse
	(*CreateAuthsRequest)(nil),     // 5: appuser.middleware.authing.auth.v1.CreateAuthsRequest
	(*CreateAuthsResponse)(nil),    // 6: appuser.middleware.authing.auth.v1.CreateAuthsResponse
	(*ExistAuthRequest)(nil),       // 7: appuser.middleware.authing.auth.v1.ExistAuthRequest
	(*ExistAuthResponse)(nil),      // 8: appuser.middleware.authing.auth.v1.ExistAuthResponse
	(*GetAuthRequest)(nil),         // 9: appuser.middleware.authing.auth.v1.GetAuthRequest
	(*GetAuthResponse)(nil),        // 10: appuser.middleware.authing.auth.v1.GetAuthResponse
	(*GetAuthsRequest)(nil),        // 11: appuser.middleware.authing.auth.v1.GetAuthsRequest
	(*GetAuthsResponse)(nil),       // 12: appuser.middleware.authing.auth.v1.GetAuthsResponse
	(*ExistAuthCondsRequest)(nil),  // 13: appuser.middleware.authing.auth.v1.ExistAuthCondsRequest
	(*ExistAuthCondsResponse)(nil), // 14: appuser.middleware.authing.auth.v1.ExistAuthCondsResponse
	(*DeleteAuthRequest)(nil),      // 15: appuser.middleware.authing.auth.v1.DeleteAuthRequest
	(*DeleteAuthResponse)(nil),     // 16: appuser.middleware.authing.auth.v1.DeleteAuthResponse
	(*v1.StringVal)(nil),           // 17: basetypes.v1.StringVal
}
var file_npool_appuser_mw_v1_authing_auth_auth_proto_depIdxs = []int32{
	17, // 0: appuser.middleware.authing.auth.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	17, // 1: appuser.middleware.authing.auth.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	17, // 2: appuser.middleware.authing.auth.v1.Conds.RoleID:type_name -> basetypes.v1.StringVal
	17, // 3: appuser.middleware.authing.auth.v1.Conds.UserID:type_name -> basetypes.v1.StringVal
	17, // 4: appuser.middleware.authing.auth.v1.Conds.Resource:type_name -> basetypes.v1.StringVal
	17, // 5: appuser.middleware.authing.auth.v1.Conds.Method:type_name -> basetypes.v1.StringVal
	0,  // 6: appuser.middleware.authing.auth.v1.CreateAuthRequest.Info:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 7: appuser.middleware.authing.auth.v1.CreateAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	0,  // 8: appuser.middleware.authing.auth.v1.CreateAuthsRequest.Infos:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 9: appuser.middleware.authing.auth.v1.CreateAuthsResponse.Infos:type_name -> appuser.middleware.authing.auth.v1.Auth
	1,  // 10: appuser.middleware.authing.auth.v1.GetAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	2,  // 11: appuser.middleware.authing.auth.v1.GetAuthsRequest.Conds:type_name -> appuser.middleware.authing.auth.v1.Conds
	1,  // 12: appuser.middleware.authing.auth.v1.GetAuthsResponse.Infos:type_name -> appuser.middleware.authing.auth.v1.Auth
	2,  // 13: appuser.middleware.authing.auth.v1.ExistAuthCondsRequest.Conds:type_name -> appuser.middleware.authing.auth.v1.Conds
	0,  // 14: appuser.middleware.authing.auth.v1.DeleteAuthRequest.Info:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 15: appuser.middleware.authing.auth.v1.DeleteAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	3,  // 16: appuser.middleware.authing.auth.v1.Middleware.CreateAuth:input_type -> appuser.middleware.authing.auth.v1.CreateAuthRequest
	5,  // 17: appuser.middleware.authing.auth.v1.Middleware.CreateAuths:input_type -> appuser.middleware.authing.auth.v1.CreateAuthsRequest
	7,  // 18: appuser.middleware.authing.auth.v1.Middleware.ExistAuth:input_type -> appuser.middleware.authing.auth.v1.ExistAuthRequest
	9,  // 19: appuser.middleware.authing.auth.v1.Middleware.GetAuth:input_type -> appuser.middleware.authing.auth.v1.GetAuthRequest
	11, // 20: appuser.middleware.authing.auth.v1.Middleware.GetAuths:input_type -> appuser.middleware.authing.auth.v1.GetAuthsRequest
	13, // 21: appuser.middleware.authing.auth.v1.Middleware.ExistAuthConds:input_type -> appuser.middleware.authing.auth.v1.ExistAuthCondsRequest
	15, // 22: appuser.middleware.authing.auth.v1.Middleware.DeleteAuth:input_type -> appuser.middleware.authing.auth.v1.DeleteAuthRequest
	4,  // 23: appuser.middleware.authing.auth.v1.Middleware.CreateAuth:output_type -> appuser.middleware.authing.auth.v1.CreateAuthResponse
	6,  // 24: appuser.middleware.authing.auth.v1.Middleware.CreateAuths:output_type -> appuser.middleware.authing.auth.v1.CreateAuthsResponse
	8,  // 25: appuser.middleware.authing.auth.v1.Middleware.ExistAuth:output_type -> appuser.middleware.authing.auth.v1.ExistAuthResponse
	10, // 26: appuser.middleware.authing.auth.v1.Middleware.GetAuth:output_type -> appuser.middleware.authing.auth.v1.GetAuthResponse
	12, // 27: appuser.middleware.authing.auth.v1.Middleware.GetAuths:output_type -> appuser.middleware.authing.auth.v1.GetAuthsResponse
	14, // 28: appuser.middleware.authing.auth.v1.Middleware.ExistAuthConds:output_type -> appuser.middleware.authing.auth.v1.ExistAuthCondsResponse
	16, // 29: appuser.middleware.authing.auth.v1.Middleware.DeleteAuth:output_type -> appuser.middleware.authing.auth.v1.DeleteAuthResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
=======
var file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_appuser_mw_v1_authing_auth_auth_proto_goTypes = []interface{}{
	(*AuthReq)(nil),            // 0: appuser.middleware.authing.auth.v1.AuthReq
	(*Auth)(nil),               // 1: appuser.middleware.authing.auth.v1.Auth
	(*Conds)(nil),              // 2: appuser.middleware.authing.auth.v1.Conds
	(*CreateAuthRequest)(nil),  // 3: appuser.middleware.authing.auth.v1.CreateAuthRequest
	(*CreateAuthResponse)(nil), // 4: appuser.middleware.authing.auth.v1.CreateAuthResponse
	(*UpdateAuthRequest)(nil),  // 5: appuser.middleware.authing.auth.v1.UpdateAuthRequest
	(*UpdateAuthResponse)(nil), // 6: appuser.middleware.authing.auth.v1.UpdateAuthResponse
	(*ExistAuthRequest)(nil),   // 7: appuser.middleware.authing.auth.v1.ExistAuthRequest
	(*ExistAuthResponse)(nil),  // 8: appuser.middleware.authing.auth.v1.ExistAuthResponse
	(*GetAuthRequest)(nil),     // 9: appuser.middleware.authing.auth.v1.GetAuthRequest
	(*GetAuthResponse)(nil),    // 10: appuser.middleware.authing.auth.v1.GetAuthResponse
	(*GetAuthsRequest)(nil),    // 11: appuser.middleware.authing.auth.v1.GetAuthsRequest
	(*GetAuthsResponse)(nil),   // 12: appuser.middleware.authing.auth.v1.GetAuthsResponse
	(*DeleteAuthRequest)(nil),  // 13: appuser.middleware.authing.auth.v1.DeleteAuthRequest
	(*DeleteAuthResponse)(nil), // 14: appuser.middleware.authing.auth.v1.DeleteAuthResponse
	(*npool.StringVal)(nil),    // 15: npool.v1.StringVal
}
var file_npool_appuser_mw_v1_authing_auth_auth_proto_depIdxs = []int32{
	15, // 0: appuser.middleware.authing.auth.v1.Conds.ID:type_name -> npool.v1.StringVal
	15, // 1: appuser.middleware.authing.auth.v1.Conds.AppID:type_name -> npool.v1.StringVal
	15, // 2: appuser.middleware.authing.auth.v1.Conds.RoleID:type_name -> npool.v1.StringVal
	15, // 3: appuser.middleware.authing.auth.v1.Conds.UserID:type_name -> npool.v1.StringVal
	15, // 4: appuser.middleware.authing.auth.v1.Conds.Resource:type_name -> npool.v1.StringVal
	15, // 5: appuser.middleware.authing.auth.v1.Conds.Method:type_name -> npool.v1.StringVal
	0,  // 6: appuser.middleware.authing.auth.v1.CreateAuthRequest.Info:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 7: appuser.middleware.authing.auth.v1.CreateAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	0,  // 8: appuser.middleware.authing.auth.v1.UpdateAuthRequest.Info:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 9: appuser.middleware.authing.auth.v1.UpdateAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	1,  // 10: appuser.middleware.authing.auth.v1.GetAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	1,  // 11: appuser.middleware.authing.auth.v1.GetAuthsResponse.Infos:type_name -> appuser.middleware.authing.auth.v1.Auth
	0,  // 12: appuser.middleware.authing.auth.v1.DeleteAuthRequest.Info:type_name -> appuser.middleware.authing.auth.v1.AuthReq
	1,  // 13: appuser.middleware.authing.auth.v1.DeleteAuthResponse.Info:type_name -> appuser.middleware.authing.auth.v1.Auth
	3,  // 14: appuser.middleware.authing.auth.v1.Middleware.CreateAuth:input_type -> appuser.middleware.authing.auth.v1.CreateAuthRequest
	5,  // 15: appuser.middleware.authing.auth.v1.Middleware.UpdateAuth:input_type -> appuser.middleware.authing.auth.v1.UpdateAuthRequest
	7,  // 16: appuser.middleware.authing.auth.v1.Middleware.ExistAuth:input_type -> appuser.middleware.authing.auth.v1.ExistAuthRequest
	9,  // 17: appuser.middleware.authing.auth.v1.Middleware.GetAuth:input_type -> appuser.middleware.authing.auth.v1.GetAuthRequest
	11, // 18: appuser.middleware.authing.auth.v1.Middleware.GetAuths:input_type -> appuser.middleware.authing.auth.v1.GetAuthsRequest
	13, // 19: appuser.middleware.authing.auth.v1.Middleware.DeleteAuth:input_type -> appuser.middleware.authing.auth.v1.DeleteAuthRequest
	4,  // 20: appuser.middleware.authing.auth.v1.Middleware.CreateAuth:output_type -> appuser.middleware.authing.auth.v1.CreateAuthResponse
	6,  // 21: appuser.middleware.authing.auth.v1.Middleware.UpdateAuth:output_type -> appuser.middleware.authing.auth.v1.UpdateAuthResponse
	8,  // 22: appuser.middleware.authing.auth.v1.Middleware.ExistAuth:output_type -> appuser.middleware.authing.auth.v1.ExistAuthResponse
	10, // 23: appuser.middleware.authing.auth.v1.Middleware.GetAuth:output_type -> appuser.middleware.authing.auth.v1.GetAuthResponse
	12, // 24: appuser.middleware.authing.auth.v1.Middleware.GetAuths:output_type -> appuser.middleware.authing.auth.v1.GetAuthsResponse
	14, // 25: appuser.middleware.authing.auth.v1.Middleware.DeleteAuth:output_type -> appuser.middleware.authing.auth.v1.DeleteAuthResponse
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
>>>>>>> Refactor authing
}

func init() { file_npool_appuser_mw_v1_authing_auth_auth_proto_init() }
func file_npool_appuser_mw_v1_authing_auth_auth_proto_init() {
	if File_npool_appuser_mw_v1_authing_auth_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*CreateAuthsRequest); i {
=======
			switch v := v.(*UpdateAuthRequest); i {
>>>>>>> Refactor authing
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*CreateAuthsResponse); i {
=======
			switch v := v.(*UpdateAuthResponse); i {
>>>>>>> Refactor authing
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ExistAuthCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAuthCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
=======
>>>>>>> Refactor authing
			switch v := v.(*DeleteAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
=======
		file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
>>>>>>> Refactor authing
			switch v := v.(*DeleteAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDesc,
			NumEnums:      0,
<<<<<<< HEAD
			NumMessages:   17,
=======
			NumMessages:   15,
>>>>>>> Refactor authing
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appuser_mw_v1_authing_auth_auth_proto_goTypes,
		DependencyIndexes: file_npool_appuser_mw_v1_authing_auth_auth_proto_depIdxs,
		MessageInfos:      file_npool_appuser_mw_v1_authing_auth_auth_proto_msgTypes,
	}.Build()
	File_npool_appuser_mw_v1_authing_auth_auth_proto = out.File
	file_npool_appuser_mw_v1_authing_auth_auth_proto_rawDesc = nil
	file_npool_appuser_mw_v1_authing_auth_auth_proto_goTypes = nil
	file_npool_appuser_mw_v1_authing_auth_auth_proto_depIdxs = nil
}
