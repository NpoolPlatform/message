syntax = "proto3";

package appuser.middleware.authing.auth.v1;

option go_package = "github.com/NpoolPlatform/message/npool/appuser/mw/v1/authing/auth";

import "npool/basetypes/v1/conds.proto";

service Middleware {
  rpc CreateAuth(CreateAuthRequest) returns (CreateAuthResponse) {}
  rpc CreateAuths(CreateAuthsRequest) returns (CreateAuthsResponse) {}
  rpc ExistAuth(ExistAuthRequest) returns (ExistAuthResponse) {}
  rpc GetAuth(GetAuthRequest) returns (GetAuthResponse) {}
  rpc GetAuths(GetAuthsRequest) returns (GetAuthsResponse) {}
  rpc ExistAuthConds(ExistAuthCondsRequest) returns (ExistAuthCondsResponse) {}
  rpc DeleteAuth(DeleteAuthRequest) returns (DeleteAuthResponse) {}
}

message AuthReq {
  optional uint32 ID = 9;
  optional string EntID = 10;
  optional string AppID = 20;
  optional string RoleID = 30;
  optional string UserID = 40;
  optional string Resource = 50;
  optional string Method = 60;
}

message Auth {
  // @inject_tag: sql:"id"
  uint32 ID = 5;
  // @inject_tag: sql:"ent_id"
  string EntID = 9;
  // @inject_tag: sql:"app_id"
  string AppID = 10;
  // @inject_tag: sql:"app_name"
  string AppName = 20;
  // @inject_tag: sql:"app_logo"
  string AppLogo = 30;
  // @inject_tag: sql:"role_id"
  string RoleID = 40;
  // @inject_tag: sql:"role_name"
  string RoleName = 50;
  // @inject_tag: sql:"user_id"
  string UserID = 60;
  // @inject_tag: sql:"email_address"
  string EmailAddress = 70;
  // @inject_tag: sql:"phone_no"
  string PhoneNO = 80;
  // @inject_tag: sql:"resource"
  string Resource = 90;
  // @inject_tag: sql:"method"
  string Method = 100;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 110;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 9;
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.StringVal RoleID = 30;
  optional basetypes.v1.StringVal UserID = 40;
  optional basetypes.v1.StringVal Resource = 50;
  optional basetypes.v1.StringVal Method = 60;
}

message CreateAuthRequest { AuthReq Info = 10; }

message CreateAuthResponse { Auth Info = 10; }

message CreateAuthsRequest { repeated AuthReq Infos = 10; }

message CreateAuthsResponse { repeated Auth Infos = 10; }

message ExistAuthRequest {
  string AppID = 10;
  optional string UserID = 20;
  string Resource = 30;
  string Method = 40;
}

message ExistAuthResponse { bool Info = 10; }

message GetAuthRequest { string EntID = 10; }

message GetAuthResponse { Auth Info = 10; }

message GetAuthsRequest {
  Conds Conds = 9;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetAuthsResponse {
  repeated Auth Infos = 10;
  uint32 Total = 20;
}

message ExistAuthCondsRequest { Conds Conds = 10; }

message ExistAuthCondsResponse { bool Info = 10; }

message DeleteAuthRequest { AuthReq Info = 10; }

message DeleteAuthResponse { Auth Info = 10; }
