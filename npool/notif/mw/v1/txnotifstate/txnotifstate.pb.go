// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/notif/mw/v1/txnotifstate/txnotifstate.proto

package txnotifstate

import (
	txnotiftstate "github.com/NpoolPlatform/message/npool/notif/mgr/v1/txnotiftstate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTxNotifStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *txnotiftstate.TxNotifStateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTxNotifStateRequest) Reset() {
	*x = CreateTxNotifStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTxNotifStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTxNotifStateRequest) ProtoMessage() {}

func (x *CreateTxNotifStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTxNotifStateRequest.ProtoReflect.Descriptor instead.
func (*CreateTxNotifStateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTxNotifStateRequest) GetInfo() *txnotiftstate.TxNotifStateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTxNotifStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *txnotiftstate.TxNotifState `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTxNotifStateResponse) Reset() {
	*x = CreateTxNotifStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTxNotifStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTxNotifStateResponse) ProtoMessage() {}

func (x *CreateTxNotifStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTxNotifStateResponse.ProtoReflect.Descriptor instead.
func (*CreateTxNotifStateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTxNotifStateResponse) GetInfo() *txnotiftstate.TxNotifState {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTxNotifStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *txnotiftstate.TxNotifStateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTxNotifStateRequest) Reset() {
	*x = UpdateTxNotifStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTxNotifStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTxNotifStateRequest) ProtoMessage() {}

func (x *UpdateTxNotifStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTxNotifStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTxNotifStateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTxNotifStateRequest) GetInfo() *txnotiftstate.TxNotifStateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTxNotifStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *txnotiftstate.TxNotifState `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTxNotifStateResponse) Reset() {
	*x = UpdateTxNotifStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTxNotifStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTxNotifStateResponse) ProtoMessage() {}

func (x *UpdateTxNotifStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTxNotifStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTxNotifStateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTxNotifStateResponse) GetInfo() *txnotiftstate.TxNotifState {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTxNotifStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *txnotiftstate.Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32                `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32                `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTxNotifStatesRequest) Reset() {
	*x = GetTxNotifStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxNotifStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxNotifStatesRequest) ProtoMessage() {}

func (x *GetTxNotifStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxNotifStatesRequest.ProtoReflect.Descriptor instead.
func (*GetTxNotifStatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{4}
}

func (x *GetTxNotifStatesRequest) GetConds() *txnotiftstate.Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetTxNotifStatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTxNotifStatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTxNotifStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*txnotiftstate.TxNotifState `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTxNotifStatesResponse) Reset() {
	*x = GetTxNotifStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxNotifStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxNotifStatesResponse) ProtoMessage() {}

func (x *GetTxNotifStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxNotifStatesResponse.ProtoReflect.Descriptor instead.
func (*GetTxNotifStatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{5}
}

func (x *GetTxNotifStatesResponse) GetInfos() []*txnotiftstate.TxNotifState {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTxNotifStatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetTxNotifStateOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *txnotiftstate.Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetTxNotifStateOnlyRequest) Reset() {
	*x = GetTxNotifStateOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxNotifStateOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxNotifStateOnlyRequest) ProtoMessage() {}

func (x *GetTxNotifStateOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxNotifStateOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetTxNotifStateOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{6}
}

func (x *GetTxNotifStateOnlyRequest) GetConds() *txnotiftstate.Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetTxNotifStateOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *txnotiftstate.TxNotifState `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTxNotifStateOnlyResponse) Reset() {
	*x = GetTxNotifStateOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxNotifStateOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxNotifStateOnlyResponse) ProtoMessage() {}

func (x *GetTxNotifStateOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxNotifStateOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetTxNotifStateOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP(), []int{7}
}

func (x *GetTxNotifStateOnlyResponse) GetInfo() *txnotiftstate.TxNotifState {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_notif_mw_v1_txnotifstate_txnotifstate_proto protoreflect.FileDescriptor

var file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x32, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x74, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x59, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xd9, 0x04, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x3b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x39, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescOnce sync.Once
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescData = file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDesc
)

func file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescGZIP() []byte {
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescOnce.Do(func() {
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescData)
	})
	return file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDescData
}

var file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_goTypes = []interface{}{
	(*CreateTxNotifStateRequest)(nil),     // 0: notif.middleware.txnotifstate.v1.CreateTxNotifStateRequest
	(*CreateTxNotifStateResponse)(nil),    // 1: notif.middleware.txnotifstate.v1.CreateTxNotifStateResponse
	(*UpdateTxNotifStateRequest)(nil),     // 2: notif.middleware.txnotifstate.v1.UpdateTxNotifStateRequest
	(*UpdateTxNotifStateResponse)(nil),    // 3: notif.middleware.txnotifstate.v1.UpdateTxNotifStateResponse
	(*GetTxNotifStatesRequest)(nil),       // 4: notif.middleware.txnotifstate.v1.GetTxNotifStatesRequest
	(*GetTxNotifStatesResponse)(nil),      // 5: notif.middleware.txnotifstate.v1.GetTxNotifStatesResponse
	(*GetTxNotifStateOnlyRequest)(nil),    // 6: notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyRequest
	(*GetTxNotifStateOnlyResponse)(nil),   // 7: notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyResponse
	(*txnotiftstate.TxNotifStateReq)(nil), // 8: notif.manager.txnotiftstate.v1.TxNotifStateReq
	(*txnotiftstate.TxNotifState)(nil),    // 9: notif.manager.txnotiftstate.v1.TxNotifState
	(*txnotiftstate.Conds)(nil),           // 10: notif.manager.txnotiftstate.v1.Conds
}
var file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_depIdxs = []int32{
	8,  // 0: notif.middleware.txnotifstate.v1.CreateTxNotifStateRequest.Info:type_name -> notif.manager.txnotiftstate.v1.TxNotifStateReq
	9,  // 1: notif.middleware.txnotifstate.v1.CreateTxNotifStateResponse.Info:type_name -> notif.manager.txnotiftstate.v1.TxNotifState
	8,  // 2: notif.middleware.txnotifstate.v1.UpdateTxNotifStateRequest.Info:type_name -> notif.manager.txnotiftstate.v1.TxNotifStateReq
	9,  // 3: notif.middleware.txnotifstate.v1.UpdateTxNotifStateResponse.Info:type_name -> notif.manager.txnotiftstate.v1.TxNotifState
	10, // 4: notif.middleware.txnotifstate.v1.GetTxNotifStatesRequest.Conds:type_name -> notif.manager.txnotiftstate.v1.Conds
	9,  // 5: notif.middleware.txnotifstate.v1.GetTxNotifStatesResponse.Infos:type_name -> notif.manager.txnotiftstate.v1.TxNotifState
	10, // 6: notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyRequest.Conds:type_name -> notif.manager.txnotiftstate.v1.Conds
	9,  // 7: notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyResponse.Info:type_name -> notif.manager.txnotiftstate.v1.TxNotifState
	0,  // 8: notif.middleware.txnotifstate.v1.Middleware.CreateTxNotifState:input_type -> notif.middleware.txnotifstate.v1.CreateTxNotifStateRequest
	2,  // 9: notif.middleware.txnotifstate.v1.Middleware.UpdateTxNotifState:input_type -> notif.middleware.txnotifstate.v1.UpdateTxNotifStateRequest
	4,  // 10: notif.middleware.txnotifstate.v1.Middleware.GetTxNotifStates:input_type -> notif.middleware.txnotifstate.v1.GetTxNotifStatesRequest
	6,  // 11: notif.middleware.txnotifstate.v1.Middleware.GetTxNotifStateOnly:input_type -> notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyRequest
	1,  // 12: notif.middleware.txnotifstate.v1.Middleware.CreateTxNotifState:output_type -> notif.middleware.txnotifstate.v1.CreateTxNotifStateResponse
	3,  // 13: notif.middleware.txnotifstate.v1.Middleware.UpdateTxNotifState:output_type -> notif.middleware.txnotifstate.v1.UpdateTxNotifStateResponse
	5,  // 14: notif.middleware.txnotifstate.v1.Middleware.GetTxNotifStates:output_type -> notif.middleware.txnotifstate.v1.GetTxNotifStatesResponse
	7,  // 15: notif.middleware.txnotifstate.v1.Middleware.GetTxNotifStateOnly:output_type -> notif.middleware.txnotifstate.v1.GetTxNotifStateOnlyResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_init() }
func file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_init() {
	if File_npool_notif_mw_v1_txnotifstate_txnotifstate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTxNotifStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTxNotifStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTxNotifStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTxNotifStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxNotifStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxNotifStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxNotifStateOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxNotifStateOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_goTypes,
		DependencyIndexes: file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_depIdxs,
		MessageInfos:      file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_msgTypes,
	}.Build()
	File_npool_notif_mw_v1_txnotifstate_txnotifstate_proto = out.File
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_rawDesc = nil
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_goTypes = nil
	file_npool_notif_mw_v1_txnotifstate_txnotifstate_proto_depIdxs = nil
}
