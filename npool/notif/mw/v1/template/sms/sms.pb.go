// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/notif/mw/v1/template/sms/sms.proto

package sms

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SMSTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string     `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID   string     `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	LangID  string     `protobuf:"bytes,30,opt,name=LangID,proto3" json:"LangID,omitempty"`
	UsedFor v1.UsedFor `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor" json:"UsedFor,omitempty"`
	Subject string     `protobuf:"bytes,50,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Message string     `protobuf:"bytes,60,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SMSTemplate) Reset() {
	*x = SMSTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSTemplate) ProtoMessage() {}

func (x *SMSTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSTemplate.ProtoReflect.Descriptor instead.
func (*SMSTemplate) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{0}
}

func (x *SMSTemplate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SMSTemplate) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SMSTemplate) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *SMSTemplate) GetUsedFor() v1.UsedFor {
	if x != nil {
		return x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *SMSTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SMSTemplate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SMSTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *string     `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID   *string     `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID  *string     `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	UsedFor *v1.UsedFor `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor,oneof" json:"UsedFor,omitempty"`
	Subject *string     `protobuf:"bytes,50,opt,name=Subject,proto3,oneof" json:"Subject,omitempty"`
	Message *string     `protobuf:"bytes,60,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *SMSTemplateReq) Reset() {
	*x = SMSTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSTemplateReq) ProtoMessage() {}

func (x *SMSTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSTemplateReq.ProtoReflect.Descriptor instead.
func (*SMSTemplateReq) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{1}
}

func (x *SMSTemplateReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *SMSTemplateReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *SMSTemplateReq) GetLangID() string {
	if x != nil && x.LangID != nil {
		return *x.LangID
	}
	return ""
}

func (x *SMSTemplateReq) GetUsedFor() v1.UsedFor {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *SMSTemplateReq) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *SMSTemplateReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *v1.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID   *v1.StringVal `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	LangID  *v1.StringVal `protobuf:"bytes,40,opt,name=LangID,proto3" json:"LangID,omitempty"`
	UsedFor *v1.Int32Val  `protobuf:"bytes,50,opt,name=UsedFor,proto3" json:"UsedFor,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetLangID() *v1.StringVal {
	if x != nil {
		return x.LangID
	}
	return nil
}

func (x *Conds) GetUsedFor() *v1.Int32Val {
	if x != nil {
		return x.UsedFor
	}
	return nil
}

type GetSMSTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSMSTemplateRequest) Reset() {
	*x = GetSMSTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplateRequest) ProtoMessage() {}

func (x *GetSMSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetSMSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{3}
}

func (x *GetSMSTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetSMSTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSMSTemplateResponse) Reset() {
	*x = GetSMSTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplateResponse) ProtoMessage() {}

func (x *GetSMSTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetSMSTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{4}
}

func (x *GetSMSTemplateResponse) GetInfo() *SMSTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSMSTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset uint32 `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  uint32 `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSMSTemplatesRequest) Reset() {
	*x = GetSMSTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplatesRequest) ProtoMessage() {}

func (x *GetSMSTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetSMSTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{5}
}

func (x *GetSMSTemplatesRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetSMSTemplatesRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSMSTemplatesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSMSTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SMSTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32         `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSMSTemplatesResponse) Reset() {
	*x = GetSMSTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplatesResponse) ProtoMessage() {}

func (x *GetSMSTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetSMSTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{6}
}

func (x *GetSMSTemplatesResponse) GetInfos() []*SMSTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSMSTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetSMSTemplateOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetSMSTemplateOnlyRequest) Reset() {
	*x = GetSMSTemplateOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplateOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplateOnlyRequest) ProtoMessage() {}

func (x *GetSMSTemplateOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplateOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetSMSTemplateOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{7}
}

func (x *GetSMSTemplateOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetSMSTemplateOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSMSTemplateOnlyResponse) Reset() {
	*x = GetSMSTemplateOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSMSTemplateOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSTemplateOnlyResponse) ProtoMessage() {}

func (x *GetSMSTemplateOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSTemplateOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetSMSTemplateOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{8}
}

func (x *GetSMSTemplateOnlyResponse) GetInfo() *SMSTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSMSTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSMSTemplateRequest) Reset() {
	*x = CreateSMSTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSMSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSMSTemplateRequest) ProtoMessage() {}

func (x *CreateSMSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSMSTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateSMSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSMSTemplateRequest) GetInfo() *SMSTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSMSTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSMSTemplateResponse) Reset() {
	*x = CreateSMSTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSMSTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSMSTemplateResponse) ProtoMessage() {}

func (x *CreateSMSTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSMSTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateSMSTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSMSTemplateResponse) GetInfo() *SMSTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSMSTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SMSTemplateReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSMSTemplatesRequest) Reset() {
	*x = CreateSMSTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSMSTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSMSTemplatesRequest) ProtoMessage() {}

func (x *CreateSMSTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSMSTemplatesRequest.ProtoReflect.Descriptor instead.
func (*CreateSMSTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSMSTemplatesRequest) GetInfos() []*SMSTemplateReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateSMSTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SMSTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSMSTemplatesResponse) Reset() {
	*x = CreateSMSTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSMSTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSMSTemplatesResponse) ProtoMessage() {}

func (x *CreateSMSTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSMSTemplatesResponse.ProtoReflect.Descriptor instead.
func (*CreateSMSTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{12}
}

func (x *CreateSMSTemplatesResponse) GetInfos() []*SMSTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateSMSTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSMSTemplateRequest) Reset() {
	*x = UpdateSMSTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSMSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSMSTemplateRequest) ProtoMessage() {}

func (x *UpdateSMSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSMSTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateSMSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSMSTemplateRequest) GetInfo() *SMSTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSMSTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSMSTemplateResponse) Reset() {
	*x = UpdateSMSTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSMSTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSMSTemplateResponse) ProtoMessage() {}

func (x *UpdateSMSTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSMSTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateSMSTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSMSTemplateResponse) GetInfo() *SMSTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistSMSTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistSMSTemplateRequest) Reset() {
	*x = ExistSMSTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSMSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSMSTemplateRequest) ProtoMessage() {}

func (x *ExistSMSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSMSTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExistSMSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{15}
}

func (x *ExistSMSTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistSMSTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSMSTemplateResponse) Reset() {
	*x = ExistSMSTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSMSTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSMSTemplateResponse) ProtoMessage() {}

func (x *ExistSMSTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSMSTemplateResponse.ProtoReflect.Descriptor instead.
func (*ExistSMSTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{16}
}

func (x *ExistSMSTemplateResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistSMSTemplateCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistSMSTemplateCondsRequest) Reset() {
	*x = ExistSMSTemplateCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSMSTemplateCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSMSTemplateCondsRequest) ProtoMessage() {}

func (x *ExistSMSTemplateCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSMSTemplateCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistSMSTemplateCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{17}
}

func (x *ExistSMSTemplateCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistSMSTemplateCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSMSTemplateCondsResponse) Reset() {
	*x = ExistSMSTemplateCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSMSTemplateCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSMSTemplateCondsResponse) ProtoMessage() {}

func (x *ExistSMSTemplateCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSMSTemplateCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistSMSTemplateCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{18}
}

func (x *ExistSMSTemplateCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteSMSTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSMSTemplateRequest) Reset() {
	*x = DeleteSMSTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSMSTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSMSTemplateRequest) ProtoMessage() {}

func (x *DeleteSMSTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSMSTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteSMSTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteSMSTemplateRequest) GetInfo() *SMSTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteSMSTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SMSTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSMSTemplateResponse) Reset() {
	*x = DeleteSMSTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSMSTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSMSTemplateResponse) ProtoMessage() {}

func (x *DeleteSMSTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSMSTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteSMSTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSMSTemplateResponse) GetInfo() *SMSTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_notif_mw_v1_template_sms_sms_proto protoreflect.FileDescriptor

var file_npool_notif_mw_v1_template_sms_sms_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x6d, 0x73,
	0x2f, 0x73, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73,
	0x31, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x64, 0x66, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x53, 0x4d, 0x53, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x52, 0x07, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0e, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x48, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc2, 0x01,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x2d, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x2f, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x57, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x59, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x58, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x2e, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x55, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0x8f, 0x09, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x75,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d,
	0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x81, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d,
	0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x4d, 0x53, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x4d,
	0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x36,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d, 0x73, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x6d,
	0x73, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x4d, 0x53, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2f, 0x73, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_notif_mw_v1_template_sms_sms_proto_rawDescOnce sync.Once
	file_npool_notif_mw_v1_template_sms_sms_proto_rawDescData = file_npool_notif_mw_v1_template_sms_sms_proto_rawDesc
)

func file_npool_notif_mw_v1_template_sms_sms_proto_rawDescGZIP() []byte {
	file_npool_notif_mw_v1_template_sms_sms_proto_rawDescOnce.Do(func() {
		file_npool_notif_mw_v1_template_sms_sms_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_mw_v1_template_sms_sms_proto_rawDescData)
	})
	return file_npool_notif_mw_v1_template_sms_sms_proto_rawDescData
}

var file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_npool_notif_mw_v1_template_sms_sms_proto_goTypes = []interface{}{
	(*SMSTemplate)(nil),                   // 0: notif.middleware.sms1.v1.SMSTemplate
	(*SMSTemplateReq)(nil),                // 1: notif.middleware.sms1.v1.SMSTemplateReq
	(*Conds)(nil),                         // 2: notif.middleware.sms1.v1.Conds
	(*GetSMSTemplateRequest)(nil),         // 3: notif.middleware.sms1.v1.GetSMSTemplateRequest
	(*GetSMSTemplateResponse)(nil),        // 4: notif.middleware.sms1.v1.GetSMSTemplateResponse
	(*GetSMSTemplatesRequest)(nil),        // 5: notif.middleware.sms1.v1.GetSMSTemplatesRequest
	(*GetSMSTemplatesResponse)(nil),       // 6: notif.middleware.sms1.v1.GetSMSTemplatesResponse
	(*GetSMSTemplateOnlyRequest)(nil),     // 7: notif.middleware.sms1.v1.GetSMSTemplateOnlyRequest
	(*GetSMSTemplateOnlyResponse)(nil),    // 8: notif.middleware.sms1.v1.GetSMSTemplateOnlyResponse
	(*CreateSMSTemplateRequest)(nil),      // 9: notif.middleware.sms1.v1.CreateSMSTemplateRequest
	(*CreateSMSTemplateResponse)(nil),     // 10: notif.middleware.sms1.v1.CreateSMSTemplateResponse
	(*CreateSMSTemplatesRequest)(nil),     // 11: notif.middleware.sms1.v1.CreateSMSTemplatesRequest
	(*CreateSMSTemplatesResponse)(nil),    // 12: notif.middleware.sms1.v1.CreateSMSTemplatesResponse
	(*UpdateSMSTemplateRequest)(nil),      // 13: notif.middleware.sms1.v1.UpdateSMSTemplateRequest
	(*UpdateSMSTemplateResponse)(nil),     // 14: notif.middleware.sms1.v1.UpdateSMSTemplateResponse
	(*ExistSMSTemplateRequest)(nil),       // 15: notif.middleware.sms1.v1.ExistSMSTemplateRequest
	(*ExistSMSTemplateResponse)(nil),      // 16: notif.middleware.sms1.v1.ExistSMSTemplateResponse
	(*ExistSMSTemplateCondsRequest)(nil),  // 17: notif.middleware.sms1.v1.ExistSMSTemplateCondsRequest
	(*ExistSMSTemplateCondsResponse)(nil), // 18: notif.middleware.sms1.v1.ExistSMSTemplateCondsResponse
	(*DeleteSMSTemplateRequest)(nil),      // 19: notif.middleware.sms1.v1.DeleteSMSTemplateRequest
	(*DeleteSMSTemplateResponse)(nil),     // 20: notif.middleware.sms1.v1.DeleteSMSTemplateResponse
	(v1.UsedFor)(0),                       // 21: basetypes.v1.UsedFor
	(*v1.StringVal)(nil),                  // 22: basetypes.v1.StringVal
	(*v1.Int32Val)(nil),                   // 23: basetypes.v1.Int32Val
}
var file_npool_notif_mw_v1_template_sms_sms_proto_depIdxs = []int32{
	21, // 0: notif.middleware.sms1.v1.SMSTemplate.UsedFor:type_name -> basetypes.v1.UsedFor
	21, // 1: notif.middleware.sms1.v1.SMSTemplateReq.UsedFor:type_name -> basetypes.v1.UsedFor
	22, // 2: notif.middleware.sms1.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	22, // 3: notif.middleware.sms1.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	22, // 4: notif.middleware.sms1.v1.Conds.LangID:type_name -> basetypes.v1.StringVal
	23, // 5: notif.middleware.sms1.v1.Conds.UsedFor:type_name -> basetypes.v1.Int32Val
	0,  // 6: notif.middleware.sms1.v1.GetSMSTemplateResponse.Info:type_name -> notif.middleware.sms1.v1.SMSTemplate
	2,  // 7: notif.middleware.sms1.v1.GetSMSTemplatesRequest.Conds:type_name -> notif.middleware.sms1.v1.Conds
	0,  // 8: notif.middleware.sms1.v1.GetSMSTemplatesResponse.Infos:type_name -> notif.middleware.sms1.v1.SMSTemplate
	2,  // 9: notif.middleware.sms1.v1.GetSMSTemplateOnlyRequest.Conds:type_name -> notif.middleware.sms1.v1.Conds
	0,  // 10: notif.middleware.sms1.v1.GetSMSTemplateOnlyResponse.Info:type_name -> notif.middleware.sms1.v1.SMSTemplate
	1,  // 11: notif.middleware.sms1.v1.CreateSMSTemplateRequest.Info:type_name -> notif.middleware.sms1.v1.SMSTemplateReq
	0,  // 12: notif.middleware.sms1.v1.CreateSMSTemplateResponse.Info:type_name -> notif.middleware.sms1.v1.SMSTemplate
	1,  // 13: notif.middleware.sms1.v1.CreateSMSTemplatesRequest.Infos:type_name -> notif.middleware.sms1.v1.SMSTemplateReq
	0,  // 14: notif.middleware.sms1.v1.CreateSMSTemplatesResponse.Infos:type_name -> notif.middleware.sms1.v1.SMSTemplate
	1,  // 15: notif.middleware.sms1.v1.UpdateSMSTemplateRequest.Info:type_name -> notif.middleware.sms1.v1.SMSTemplateReq
	0,  // 16: notif.middleware.sms1.v1.UpdateSMSTemplateResponse.Info:type_name -> notif.middleware.sms1.v1.SMSTemplate
	2,  // 17: notif.middleware.sms1.v1.ExistSMSTemplateCondsRequest.Conds:type_name -> notif.middleware.sms1.v1.Conds
	1,  // 18: notif.middleware.sms1.v1.DeleteSMSTemplateRequest.Info:type_name -> notif.middleware.sms1.v1.SMSTemplateReq
	0,  // 19: notif.middleware.sms1.v1.DeleteSMSTemplateResponse.Info:type_name -> notif.middleware.sms1.v1.SMSTemplate
	3,  // 20: notif.middleware.sms1.v1.Middleware.GetSMSTemplate:input_type -> notif.middleware.sms1.v1.GetSMSTemplateRequest
	5,  // 21: notif.middleware.sms1.v1.Middleware.GetSMSTemplates:input_type -> notif.middleware.sms1.v1.GetSMSTemplatesRequest
	7,  // 22: notif.middleware.sms1.v1.Middleware.GetSMSTemplateOnly:input_type -> notif.middleware.sms1.v1.GetSMSTemplateOnlyRequest
	9,  // 23: notif.middleware.sms1.v1.Middleware.CreateSMSTemplate:input_type -> notif.middleware.sms1.v1.CreateSMSTemplateRequest
	11, // 24: notif.middleware.sms1.v1.Middleware.CreateSMSTemplates:input_type -> notif.middleware.sms1.v1.CreateSMSTemplatesRequest
	13, // 25: notif.middleware.sms1.v1.Middleware.UpdateSMSTemplate:input_type -> notif.middleware.sms1.v1.UpdateSMSTemplateRequest
	15, // 26: notif.middleware.sms1.v1.Middleware.ExistSMSTemplate:input_type -> notif.middleware.sms1.v1.ExistSMSTemplateRequest
	17, // 27: notif.middleware.sms1.v1.Middleware.ExistSMSTemplateConds:input_type -> notif.middleware.sms1.v1.ExistSMSTemplateCondsRequest
	19, // 28: notif.middleware.sms1.v1.Middleware.DeleteSMSTemplate:input_type -> notif.middleware.sms1.v1.DeleteSMSTemplateRequest
	4,  // 29: notif.middleware.sms1.v1.Middleware.GetSMSTemplate:output_type -> notif.middleware.sms1.v1.GetSMSTemplateResponse
	6,  // 30: notif.middleware.sms1.v1.Middleware.GetSMSTemplates:output_type -> notif.middleware.sms1.v1.GetSMSTemplatesResponse
	8,  // 31: notif.middleware.sms1.v1.Middleware.GetSMSTemplateOnly:output_type -> notif.middleware.sms1.v1.GetSMSTemplateOnlyResponse
	10, // 32: notif.middleware.sms1.v1.Middleware.CreateSMSTemplate:output_type -> notif.middleware.sms1.v1.CreateSMSTemplateResponse
	12, // 33: notif.middleware.sms1.v1.Middleware.CreateSMSTemplates:output_type -> notif.middleware.sms1.v1.CreateSMSTemplatesResponse
	14, // 34: notif.middleware.sms1.v1.Middleware.UpdateSMSTemplate:output_type -> notif.middleware.sms1.v1.UpdateSMSTemplateResponse
	16, // 35: notif.middleware.sms1.v1.Middleware.ExistSMSTemplate:output_type -> notif.middleware.sms1.v1.ExistSMSTemplateResponse
	18, // 36: notif.middleware.sms1.v1.Middleware.ExistSMSTemplateConds:output_type -> notif.middleware.sms1.v1.ExistSMSTemplateCondsResponse
	20, // 37: notif.middleware.sms1.v1.Middleware.DeleteSMSTemplate:output_type -> notif.middleware.sms1.v1.DeleteSMSTemplateResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_npool_notif_mw_v1_template_sms_sms_proto_init() }
func file_npool_notif_mw_v1_template_sms_sms_proto_init() {
	if File_npool_notif_mw_v1_template_sms_sms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplateOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSMSTemplateOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSMSTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSMSTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSMSTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSMSTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSMSTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSMSTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSMSTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSMSTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSMSTemplateCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSMSTemplateCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSMSTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSMSTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_mw_v1_template_sms_sms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_mw_v1_template_sms_sms_proto_goTypes,
		DependencyIndexes: file_npool_notif_mw_v1_template_sms_sms_proto_depIdxs,
		MessageInfos:      file_npool_notif_mw_v1_template_sms_sms_proto_msgTypes,
	}.Build()
	File_npool_notif_mw_v1_template_sms_sms_proto = out.File
	file_npool_notif_mw_v1_template_sms_sms_proto_rawDesc = nil
	file_npool_notif_mw_v1_template_sms_sms_proto_goTypes = nil
	file_npool_notif_mw_v1_template_sms_sms_proto_depIdxs = nil
}
