syntax = "proto3";

package notif.middleware.template.sms.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/template/sms";

import "google/api/annotations.proto";
import "npool/basetypes/v1/usedfor.proto";
import "npool/basetypes/v1/conds.proto";

service Middleware {
  rpc GetSMSTemplate(GetSMSTemplateRequest) returns (GetSMSTemplateResponse) {}
  rpc GetSMSTemplates(GetSMSTemplatesRequest)
      returns (GetSMSTemplatesResponse) {}
  rpc CreateSMSTemplate(CreateSMSTemplateRequest)
      returns (CreateSMSTemplateResponse) {}
  rpc CreateSMSTemplates(CreateSMSTemplatesRequest)
      returns (CreateSMSTemplatesResponse) {}
  rpc UpdateSMSTemplate(UpdateSMSTemplateRequest)
      returns (UpdateSMSTemplateResponse) {}
  rpc ExistSMSTemplate(ExistSMSTemplateRequest)
      returns (ExistSMSTemplateResponse) {}
  rpc ExistSMSTemplateConds(ExistSMSTemplateCondsRequest)
      returns (ExistSMSTemplateCondsResponse) {}
  rpc DeleteSMSTemplate(DeleteSMSTemplateRequest)
      returns (DeleteSMSTemplateResponse) {
    option (google.api.http) = {
      post : "/v1/template_DeleteSMSTemplate"
      body : "*"
    };
  }
}

message SMSTemplate {
  // @inject_tag: sql:"id"
  uint32 ID = 9;
  // @inject_tag: sql:"ent_id"
  string EntID = 10;
  // @inject_tag: sql:"app_id"
  string AppID = 20;
  // @inject_tag: sql:"lang_id"
  string LangID = 30;
  // @inject_tag: sql:"used_for"
  string UsedForStr = 40;
  basetypes.v1.UsedFor UsedFor = 50;
  // @inject_tag: sql:"subject"
  string Subject = 60;
  // @inject_tag: sql:"message"
  string Message = 70;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 1000;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 1010;
}

message SMSTemplateReq {
  optional uint32 ID = 9;
  optional string EntID = 10;
  optional string AppID = 20;
  optional string LangID = 30;
  optional basetypes.v1.UsedFor UsedFor = 40;
  optional string Subject = 50;
  optional string Message = 60;
}

message Conds {
  basetypes.v1.Uint32Val ID = 9;
  basetypes.v1.StringVal EntID = 10;
  basetypes.v1.StringVal AppID = 30;
  basetypes.v1.StringVal LangID = 40;
  basetypes.v1.Uint32Val UsedFor = 50;
}

message GetSMSTemplateRequest { string EntID = 10; }

message GetSMSTemplateResponse { SMSTemplate Info = 10; }

message GetSMSTemplatesRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetSMSTemplatesResponse {
  repeated SMSTemplate Infos = 10;
  uint32 Total = 20;
}

message CreateSMSTemplateRequest { SMSTemplateReq Info = 10; }

message CreateSMSTemplateResponse { SMSTemplate Info = 10; }

message CreateSMSTemplatesRequest { repeated SMSTemplateReq Infos = 10; }

message CreateSMSTemplatesResponse { repeated SMSTemplate Infos = 10; }

message UpdateSMSTemplateRequest { SMSTemplateReq Info = 10; }

message UpdateSMSTemplateResponse { SMSTemplate Info = 10; }

message ExistSMSTemplateRequest { string EntID = 10; }

message ExistSMSTemplateResponse { bool Info = 10; }

message ExistSMSTemplateCondsRequest { Conds Conds = 10; }

message ExistSMSTemplateCondsResponse { bool Info = 10; }

message DeleteSMSTemplateRequest { SMSTemplateReq Info = 10; }

message DeleteSMSTemplateResponse { SMSTemplate Info = 10; }
