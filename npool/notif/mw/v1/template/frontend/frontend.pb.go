// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/notif/mw/v1/template/frontend/frontend.proto

package frontend

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrontendTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"lang_id"
	LangID string `protobuf:"bytes,30,opt,name=LangID,proto3" json:"LangID,omitempty" sql:"lang_id"`
	// @inject_tag: sql:"used_for"
	UsedForStr string     `protobuf:"bytes,40,opt,name=UsedForStr,proto3" json:"UsedForStr,omitempty" sql:"used_for"`
	UsedFor    v1.UsedFor `protobuf:"varint,50,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor" json:"UsedFor,omitempty"`
	// @inject_tag: sql:"title"
	Title string `protobuf:"bytes,60,opt,name=Title,proto3" json:"Title,omitempty" sql:"title"`
	// @inject_tag: sql:"content"
	Content string `protobuf:"bytes,70,opt,name=Content,proto3" json:"Content,omitempty" sql:"content"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *FrontendTemplate) Reset() {
	*x = FrontendTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTemplate) ProtoMessage() {}

func (x *FrontendTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTemplate.ProtoReflect.Descriptor instead.
func (*FrontendTemplate) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{0}
}

func (x *FrontendTemplate) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FrontendTemplate) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *FrontendTemplate) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FrontendTemplate) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *FrontendTemplate) GetUsedForStr() string {
	if x != nil {
		return x.UsedForStr
	}
	return ""
}

func (x *FrontendTemplate) GetUsedFor() v1.UsedFor {
	if x != nil {
		return x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *FrontendTemplate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FrontendTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FrontendTemplate) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FrontendTemplate) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FrontendTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *uint32     `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID   *string     `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID   *string     `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID  *string     `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	UsedFor *v1.UsedFor `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor,oneof" json:"UsedFor,omitempty"`
	Title   *string     `protobuf:"bytes,50,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Content *string     `protobuf:"bytes,60,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
}

func (x *FrontendTemplateReq) Reset() {
	*x = FrontendTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendTemplateReq) ProtoMessage() {}

func (x *FrontendTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendTemplateReq.ProtoReflect.Descriptor instead.
func (*FrontendTemplateReq) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{1}
}

func (x *FrontendTemplateReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *FrontendTemplateReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *FrontendTemplateReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *FrontendTemplateReq) GetLangID() string {
	if x != nil && x.LangID != nil {
		return *x.LangID
	}
	return ""
}

func (x *FrontendTemplateReq) GetUsedFor() v1.UsedFor {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *FrontendTemplateReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *FrontendTemplateReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *v1.Uint32Val      `protobuf:"bytes,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID    *v1.StringVal      `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID    *v1.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID   *v1.StringVal      `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	UsedFor  *v1.Uint32Val      `protobuf:"bytes,40,opt,name=UsedFor,proto3,oneof" json:"UsedFor,omitempty"`
	AppIDs   *v1.StringSliceVal `protobuf:"bytes,50,opt,name=AppIDs,proto3,oneof" json:"AppIDs,omitempty"`
	LangIDs  *v1.StringSliceVal `protobuf:"bytes,60,opt,name=LangIDs,proto3,oneof" json:"LangIDs,omitempty"`
	UsedFors *v1.Uint32SliceVal `protobuf:"bytes,70,opt,name=UsedFors,proto3,oneof" json:"UsedFors,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetLangID() *v1.StringVal {
	if x != nil {
		return x.LangID
	}
	return nil
}

func (x *Conds) GetUsedFor() *v1.Uint32Val {
	if x != nil {
		return x.UsedFor
	}
	return nil
}

func (x *Conds) GetAppIDs() *v1.StringSliceVal {
	if x != nil {
		return x.AppIDs
	}
	return nil
}

func (x *Conds) GetLangIDs() *v1.StringSliceVal {
	if x != nil {
		return x.LangIDs
	}
	return nil
}

func (x *Conds) GetUsedFors() *v1.Uint32SliceVal {
	if x != nil {
		return x.UsedFors
	}
	return nil
}

type GetFrontendTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetFrontendTemplateRequest) Reset() {
	*x = GetFrontendTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendTemplateRequest) ProtoMessage() {}

func (x *GetFrontendTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetFrontendTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{3}
}

func (x *GetFrontendTemplateRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetFrontendTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetFrontendTemplateResponse) Reset() {
	*x = GetFrontendTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendTemplateResponse) ProtoMessage() {}

func (x *GetFrontendTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetFrontendTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{4}
}

func (x *GetFrontendTemplateResponse) GetInfo() *FrontendTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetFrontendTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetFrontendTemplatesRequest) Reset() {
	*x = GetFrontendTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendTemplatesRequest) ProtoMessage() {}

func (x *GetFrontendTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetFrontendTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{5}
}

func (x *GetFrontendTemplatesRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetFrontendTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetFrontendTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetFrontendTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FrontendTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32              `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetFrontendTemplatesResponse) Reset() {
	*x = GetFrontendTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendTemplatesResponse) ProtoMessage() {}

func (x *GetFrontendTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetFrontendTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{6}
}

func (x *GetFrontendTemplatesResponse) GetInfos() []*FrontendTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetFrontendTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateFrontendTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateFrontendTemplateRequest) Reset() {
	*x = CreateFrontendTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFrontendTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFrontendTemplateRequest) ProtoMessage() {}

func (x *CreateFrontendTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFrontendTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateFrontendTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFrontendTemplateRequest) GetInfo() *FrontendTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateFrontendTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateFrontendTemplateResponse) Reset() {
	*x = CreateFrontendTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFrontendTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFrontendTemplateResponse) ProtoMessage() {}

func (x *CreateFrontendTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFrontendTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateFrontendTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{8}
}

func (x *CreateFrontendTemplateResponse) GetInfo() *FrontendTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateFrontendTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FrontendTemplateReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateFrontendTemplatesRequest) Reset() {
	*x = CreateFrontendTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFrontendTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFrontendTemplatesRequest) ProtoMessage() {}

func (x *CreateFrontendTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFrontendTemplatesRequest.ProtoReflect.Descriptor instead.
func (*CreateFrontendTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{9}
}

func (x *CreateFrontendTemplatesRequest) GetInfos() []*FrontendTemplateReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateFrontendTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FrontendTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateFrontendTemplatesResponse) Reset() {
	*x = CreateFrontendTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFrontendTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFrontendTemplatesResponse) ProtoMessage() {}

func (x *CreateFrontendTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFrontendTemplatesResponse.ProtoReflect.Descriptor instead.
func (*CreateFrontendTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFrontendTemplatesResponse) GetInfos() []*FrontendTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateFrontendTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateFrontendTemplateRequest) Reset() {
	*x = UpdateFrontendTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFrontendTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFrontendTemplateRequest) ProtoMessage() {}

func (x *UpdateFrontendTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFrontendTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateFrontendTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateFrontendTemplateRequest) GetInfo() *FrontendTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateFrontendTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateFrontendTemplateResponse) Reset() {
	*x = UpdateFrontendTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFrontendTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFrontendTemplateResponse) ProtoMessage() {}

func (x *UpdateFrontendTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFrontendTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateFrontendTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFrontendTemplateResponse) GetInfo() *FrontendTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistFrontendTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *ExistFrontendTemplateRequest) Reset() {
	*x = ExistFrontendTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistFrontendTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistFrontendTemplateRequest) ProtoMessage() {}

func (x *ExistFrontendTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistFrontendTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExistFrontendTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{13}
}

func (x *ExistFrontendTemplateRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type ExistFrontendTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistFrontendTemplateResponse) Reset() {
	*x = ExistFrontendTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistFrontendTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistFrontendTemplateResponse) ProtoMessage() {}

func (x *ExistFrontendTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistFrontendTemplateResponse.ProtoReflect.Descriptor instead.
func (*ExistFrontendTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{14}
}

func (x *ExistFrontendTemplateResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistFrontendTemplateCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistFrontendTemplateCondsRequest) Reset() {
	*x = ExistFrontendTemplateCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistFrontendTemplateCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistFrontendTemplateCondsRequest) ProtoMessage() {}

func (x *ExistFrontendTemplateCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistFrontendTemplateCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistFrontendTemplateCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{15}
}

func (x *ExistFrontendTemplateCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistFrontendTemplateCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistFrontendTemplateCondsResponse) Reset() {
	*x = ExistFrontendTemplateCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistFrontendTemplateCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistFrontendTemplateCondsResponse) ProtoMessage() {}

func (x *ExistFrontendTemplateCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistFrontendTemplateCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistFrontendTemplateCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{16}
}

func (x *ExistFrontendTemplateCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteFrontendTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplateReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteFrontendTemplateRequest) Reset() {
	*x = DeleteFrontendTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFrontendTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFrontendTemplateRequest) ProtoMessage() {}

func (x *DeleteFrontendTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFrontendTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteFrontendTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteFrontendTemplateRequest) GetInfo() *FrontendTemplateReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteFrontendTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrontendTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteFrontendTemplateResponse) Reset() {
	*x = DeleteFrontendTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFrontendTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFrontendTemplateResponse) ProtoMessage() {}

func (x *DeleteFrontendTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFrontendTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteFrontendTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteFrontendTemplateResponse) GetInfo() *FrontendTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_notif_mw_v1_template_frontend_frontend_proto protoreflect.FileDescriptor

var file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x64, 0x66, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x02, 0x0a, 0x10,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x53,
	0x74, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x52, 0x07, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xb5, 0x02, 0x0a, 0x13, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x48, 0x04, 0x52, 0x07, 0x55,
	0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x98, 0x04, 0x0a, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48,
	0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x06, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x07, 0x55,
	0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x06, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x56, 0x61, 0x6c, 0x48, 0x06, 0x52, 0x07, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x3d, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x73, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x48, 0x07, 0x52, 0x08, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x6d, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x72,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x50, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x70, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x1d, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x67, 0x0a, 0x21, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x22, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0x87, 0x0b, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x41, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x42, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xaa, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x45, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa4, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x43, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb3,
	0x01, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x48, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xd5, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x46, 0x5a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescOnce sync.Once
	file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescData = file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDesc
)

func file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescGZIP() []byte {
	file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescOnce.Do(func() {
		file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescData)
	})
	return file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDescData
}

var file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_npool_notif_mw_v1_template_frontend_frontend_proto_goTypes = []interface{}{
	(*FrontendTemplate)(nil),                   // 0: notif.middleware.template.frontend.v1.FrontendTemplate
	(*FrontendTemplateReq)(nil),                // 1: notif.middleware.template.frontend.v1.FrontendTemplateReq
	(*Conds)(nil),                              // 2: notif.middleware.template.frontend.v1.Conds
	(*GetFrontendTemplateRequest)(nil),         // 3: notif.middleware.template.frontend.v1.GetFrontendTemplateRequest
	(*GetFrontendTemplateResponse)(nil),        // 4: notif.middleware.template.frontend.v1.GetFrontendTemplateResponse
	(*GetFrontendTemplatesRequest)(nil),        // 5: notif.middleware.template.frontend.v1.GetFrontendTemplatesRequest
	(*GetFrontendTemplatesResponse)(nil),       // 6: notif.middleware.template.frontend.v1.GetFrontendTemplatesResponse
	(*CreateFrontendTemplateRequest)(nil),      // 7: notif.middleware.template.frontend.v1.CreateFrontendTemplateRequest
	(*CreateFrontendTemplateResponse)(nil),     // 8: notif.middleware.template.frontend.v1.CreateFrontendTemplateResponse
	(*CreateFrontendTemplatesRequest)(nil),     // 9: notif.middleware.template.frontend.v1.CreateFrontendTemplatesRequest
	(*CreateFrontendTemplatesResponse)(nil),    // 10: notif.middleware.template.frontend.v1.CreateFrontendTemplatesResponse
	(*UpdateFrontendTemplateRequest)(nil),      // 11: notif.middleware.template.frontend.v1.UpdateFrontendTemplateRequest
	(*UpdateFrontendTemplateResponse)(nil),     // 12: notif.middleware.template.frontend.v1.UpdateFrontendTemplateResponse
	(*ExistFrontendTemplateRequest)(nil),       // 13: notif.middleware.template.frontend.v1.ExistFrontendTemplateRequest
	(*ExistFrontendTemplateResponse)(nil),      // 14: notif.middleware.template.frontend.v1.ExistFrontendTemplateResponse
	(*ExistFrontendTemplateCondsRequest)(nil),  // 15: notif.middleware.template.frontend.v1.ExistFrontendTemplateCondsRequest
	(*ExistFrontendTemplateCondsResponse)(nil), // 16: notif.middleware.template.frontend.v1.ExistFrontendTemplateCondsResponse
	(*DeleteFrontendTemplateRequest)(nil),      // 17: notif.middleware.template.frontend.v1.DeleteFrontendTemplateRequest
	(*DeleteFrontendTemplateResponse)(nil),     // 18: notif.middleware.template.frontend.v1.DeleteFrontendTemplateResponse
	(v1.UsedFor)(0),                            // 19: basetypes.v1.UsedFor
	(*v1.Uint32Val)(nil),                       // 20: basetypes.v1.Uint32Val
	(*v1.StringVal)(nil),                       // 21: basetypes.v1.StringVal
	(*v1.StringSliceVal)(nil),                  // 22: basetypes.v1.StringSliceVal
	(*v1.Uint32SliceVal)(nil),                  // 23: basetypes.v1.Uint32SliceVal
}
var file_npool_notif_mw_v1_template_frontend_frontend_proto_depIdxs = []int32{
	19, // 0: notif.middleware.template.frontend.v1.FrontendTemplate.UsedFor:type_name -> basetypes.v1.UsedFor
	19, // 1: notif.middleware.template.frontend.v1.FrontendTemplateReq.UsedFor:type_name -> basetypes.v1.UsedFor
	20, // 2: notif.middleware.template.frontend.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	21, // 3: notif.middleware.template.frontend.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	21, // 4: notif.middleware.template.frontend.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	21, // 5: notif.middleware.template.frontend.v1.Conds.LangID:type_name -> basetypes.v1.StringVal
	20, // 6: notif.middleware.template.frontend.v1.Conds.UsedFor:type_name -> basetypes.v1.Uint32Val
	22, // 7: notif.middleware.template.frontend.v1.Conds.AppIDs:type_name -> basetypes.v1.StringSliceVal
	22, // 8: notif.middleware.template.frontend.v1.Conds.LangIDs:type_name -> basetypes.v1.StringSliceVal
	23, // 9: notif.middleware.template.frontend.v1.Conds.UsedFors:type_name -> basetypes.v1.Uint32SliceVal
	0,  // 10: notif.middleware.template.frontend.v1.GetFrontendTemplateResponse.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	2,  // 11: notif.middleware.template.frontend.v1.GetFrontendTemplatesRequest.Conds:type_name -> notif.middleware.template.frontend.v1.Conds
	0,  // 12: notif.middleware.template.frontend.v1.GetFrontendTemplatesResponse.Infos:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	1,  // 13: notif.middleware.template.frontend.v1.CreateFrontendTemplateRequest.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplateReq
	0,  // 14: notif.middleware.template.frontend.v1.CreateFrontendTemplateResponse.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	1,  // 15: notif.middleware.template.frontend.v1.CreateFrontendTemplatesRequest.Infos:type_name -> notif.middleware.template.frontend.v1.FrontendTemplateReq
	0,  // 16: notif.middleware.template.frontend.v1.CreateFrontendTemplatesResponse.Infos:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	1,  // 17: notif.middleware.template.frontend.v1.UpdateFrontendTemplateRequest.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplateReq
	0,  // 18: notif.middleware.template.frontend.v1.UpdateFrontendTemplateResponse.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	2,  // 19: notif.middleware.template.frontend.v1.ExistFrontendTemplateCondsRequest.Conds:type_name -> notif.middleware.template.frontend.v1.Conds
	1,  // 20: notif.middleware.template.frontend.v1.DeleteFrontendTemplateRequest.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplateReq
	0,  // 21: notif.middleware.template.frontend.v1.DeleteFrontendTemplateResponse.Info:type_name -> notif.middleware.template.frontend.v1.FrontendTemplate
	3,  // 22: notif.middleware.template.frontend.v1.Middleware.GetFrontendTemplate:input_type -> notif.middleware.template.frontend.v1.GetFrontendTemplateRequest
	5,  // 23: notif.middleware.template.frontend.v1.Middleware.GetFrontendTemplates:input_type -> notif.middleware.template.frontend.v1.GetFrontendTemplatesRequest
	7,  // 24: notif.middleware.template.frontend.v1.Middleware.CreateFrontendTemplate:input_type -> notif.middleware.template.frontend.v1.CreateFrontendTemplateRequest
	9,  // 25: notif.middleware.template.frontend.v1.Middleware.CreateFrontendTemplates:input_type -> notif.middleware.template.frontend.v1.CreateFrontendTemplatesRequest
	11, // 26: notif.middleware.template.frontend.v1.Middleware.UpdateFrontendTemplate:input_type -> notif.middleware.template.frontend.v1.UpdateFrontendTemplateRequest
	13, // 27: notif.middleware.template.frontend.v1.Middleware.ExistFrontendTemplate:input_type -> notif.middleware.template.frontend.v1.ExistFrontendTemplateRequest
	15, // 28: notif.middleware.template.frontend.v1.Middleware.ExistFrontendTemplateConds:input_type -> notif.middleware.template.frontend.v1.ExistFrontendTemplateCondsRequest
	17, // 29: notif.middleware.template.frontend.v1.Middleware.DeleteFrontendTemplate:input_type -> notif.middleware.template.frontend.v1.DeleteFrontendTemplateRequest
	4,  // 30: notif.middleware.template.frontend.v1.Middleware.GetFrontendTemplate:output_type -> notif.middleware.template.frontend.v1.GetFrontendTemplateResponse
	6,  // 31: notif.middleware.template.frontend.v1.Middleware.GetFrontendTemplates:output_type -> notif.middleware.template.frontend.v1.GetFrontendTemplatesResponse
	8,  // 32: notif.middleware.template.frontend.v1.Middleware.CreateFrontendTemplate:output_type -> notif.middleware.template.frontend.v1.CreateFrontendTemplateResponse
	10, // 33: notif.middleware.template.frontend.v1.Middleware.CreateFrontendTemplates:output_type -> notif.middleware.template.frontend.v1.CreateFrontendTemplatesResponse
	12, // 34: notif.middleware.template.frontend.v1.Middleware.UpdateFrontendTemplate:output_type -> notif.middleware.template.frontend.v1.UpdateFrontendTemplateResponse
	14, // 35: notif.middleware.template.frontend.v1.Middleware.ExistFrontendTemplate:output_type -> notif.middleware.template.frontend.v1.ExistFrontendTemplateResponse
	16, // 36: notif.middleware.template.frontend.v1.Middleware.ExistFrontendTemplateConds:output_type -> notif.middleware.template.frontend.v1.ExistFrontendTemplateCondsResponse
	18, // 37: notif.middleware.template.frontend.v1.Middleware.DeleteFrontendTemplate:output_type -> notif.middleware.template.frontend.v1.DeleteFrontendTemplateResponse
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_npool_notif_mw_v1_template_frontend_frontend_proto_init() }
func file_npool_notif_mw_v1_template_frontend_frontend_proto_init() {
	if File_npool_notif_mw_v1_template_frontend_frontend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontendTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontendTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontendTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontendTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFrontendTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFrontendTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFrontendTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFrontendTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFrontendTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFrontendTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistFrontendTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistFrontendTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistFrontendTemplateCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistFrontendTemplateCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFrontendTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFrontendTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_mw_v1_template_frontend_frontend_proto_goTypes,
		DependencyIndexes: file_npool_notif_mw_v1_template_frontend_frontend_proto_depIdxs,
		MessageInfos:      file_npool_notif_mw_v1_template_frontend_frontend_proto_msgTypes,
	}.Build()
	File_npool_notif_mw_v1_template_frontend_frontend_proto = out.File
	file_npool_notif_mw_v1_template_frontend_frontend_proto_rawDesc = nil
	file_npool_notif_mw_v1_template_frontend_frontend_proto_goTypes = nil
	file_npool_notif_mw_v1_template_frontend_frontend_proto_depIdxs = nil
}
