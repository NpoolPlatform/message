syntax = "proto3";

package notif.middleware.announcement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/announcement";

import "npool/notif/mgr/v1/channel/channel.proto";

// Service Name
service Middleware {
    rpc GetReadState        (GetReadStateRequest)        returns (GetReadStateResponse)        {}
    rpc GetReadStates       (GetReadStatesRequest)       returns (GetReadStatesResponse)       {}
}

message ReadState {
    // @inject_tag: sql:"id"
    string AnnouncementID = 10;
    // @inject_tag: sql:"app_id"
    string AppID          = 20;
    // @inject_tag: sql:"user_id"
    string UserID         = 30;
    // @inject_tag: sql:"title"
    string Title          = 40;
    // @inject_tag: sql:"content"
    string Content        = 50;
    // @inject_tag: sql:"channels"
    repeated notif.manager.channel.v1.NotifChannel Channels = 60;
    // @inject_tag: sql:"email_send"
    bool   EmailSend   = 70;
    bool   AlreadyRead = 80;
    uint32 CreatedAt   = 90;
    uint32 UpdatedAt   = 100;
}

message GetReadStateRequest {
    string AnnouncementID = 10;
}

message GetReadStateResponse {
    ReadState Info = 10;
}

message GetReadStatesRequest {
    string AppID  = 10;
    string UserID = 20;
    int32  Offset = 30;
    int32  Limit  = 40;
}

message GetReadStatesResponse {
    repeated ReadState Infos = 10;
    uint32             Total = 20;
}