syntax = "proto3";

package notif.middleware.announcement.sendstate.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/announcement/sendstate";

import "npool/notif/mgr/v1/announcement/sendstate/sendstate.proto";
import "npool/notif/mgr/v1/channel/channel.proto";

// Service Name
service Middleware {
    rpc CreateSendState  (CreateSendStateRequest) returns (CreateSendStateResponse)  {}
    rpc GetSendStates    (GetSendStatesRequest)   returns (GetSendStatesResponse)    {}
}

message SendState {
    // @inject_tag: sql:"announcement_id"
    string AnnouncementID = 10;
    // @inject_tag: sql:"app_id"
    string AppID          = 20;
    // @inject_tag: sql:"user_id"
    string UserID         = 30;
    // @inject_tag: sql:"title"
    string Title          = 40;
    // @inject_tag: sql:"content"
    string Content        = 50;
    // @inject_tag: sql:"channel"
    string ChannelStr = 60;
    notif.manager.channel.v1.NotifChannel Channel = 61;
    // @inject_tag: sql:"email_send"
    bool  AlreadySend   = 70;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt   = 90;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt   = 100;
}

message CreateSendStateRequest {
    string AppID          = 20;
    string UserID         = 30;
    string AnnouncementID = 40;
    notif.manager.channel.v1.NotifChannel Channel = 50;
}

message CreateSendStateResponse {
}

message GetSendStatesRequest {
    notif.manager.sendstate.v1.Conds Conds = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetSendStatesResponse {
    repeated SendState Infos = 10;
    uint32             Total = 20;
}
