syntax = "proto3";

package notif.middleware.announcement.readstate.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/announcement/readstate";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateReadState     (CreateReadStateRequest)     returns (CreateReadStateResponse)     {}
    rpc CreateReadStates    (CreateReadStatesRequest)    returns (CreateReadStatesResponse)    {}
    rpc UpdateReadState     (UpdateReadStateRequest)     returns (UpdateReadStateResponse)     {}
    rpc GetReadState        (GetReadStateRequest)        returns (GetReadStateResponse)        {}
    rpc GetReadStateOnly    (GetReadStateOnlyRequest)    returns (GetReadStateOnlyResponse)    {}
    rpc GetReadStates       (GetReadStatesRequest)       returns (GetReadStatesResponse)       {}
    rpc ExistReadState      (ExistReadStateRequest)      returns (ExistReadStateResponse)      {}
    rpc ExistReadStateConds (ExistReadStateCondsRequest) returns (ExistReadStateCondsResponse) {}
    rpc CountReadStates     (CountReadStatesRequest)     returns (CountReadStatesResponse)     {}
    rpc DeleteReadState     (DeleteReadStateRequest)     returns (DeleteReadStateResponse)     {}
}

message ReadState {
    // @inject_tag: sql:"id"
    string ID             = 10;
    // @inject_tag: sql:"app_id"
    string AppID          = 20;
    // @inject_tag: sql:"user_id"
    string UserID         = 30;
    // @inject_tag: sql:"notif_id"
    string NotifID        = 40;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt      = 50;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt      = 60;
}

message Conds {
    optional basetypes.v1.StringVal ID             = 10;
    optional basetypes.v1.StringVal AppID          = 20;
    optional basetypes.v1.StringVal UserID         = 30;
    optional basetypes.v1.StringVal NotifID        = 40;
}

message ReadStateReq {
    optional string ID             = 10;
    optional string AppID          = 20;
    optional string UserID         = 30;
    optional string NotifID        = 40;
}

message CreateReadStateRequest {
    ReadStateReq Info = 10;
}

message CreateReadStateResponse {
    ReadState Info = 10;
}

message CreateReadStatesRequest {
    repeated ReadStateReq Infos = 10;
}

message CreateReadStatesResponse {
    repeated ReadState Infos = 10;
}

message UpdateReadStateRequest {
    ReadStateReq Info = 10;
}

message UpdateReadStateResponse {
    ReadState Info = 10;
}

message GetReadStateRequest {
    string ID = 10;
}

message GetReadStateResponse {
    ReadState Info = 10;
}

message GetReadStatesRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetReadStatesResponse {
    repeated ReadState Infos = 10;
    uint32             Total = 20;
}

message GetReadStateOnlyRequest {
    Conds Conds = 10;
}

message GetReadStateOnlyResponse {
    ReadState Info = 10;
}

message ExistReadStateRequest {
    string ID = 10;
}

message ExistReadStateResponse {
    bool Info = 10;
}

message ExistReadStateCondsRequest {
    Conds Conds = 10;
}

message ExistReadStateCondsResponse {
    bool Info = 10;
}

message CountReadStatesRequest {
    Conds Conds = 10;
}

message CountReadStatesResponse {
    uint32 Info = 10;
}

message DeleteReadStateRequest {
    string ID = 10;
}

message DeleteReadStateResponse {
    ReadState Info = 10;
}