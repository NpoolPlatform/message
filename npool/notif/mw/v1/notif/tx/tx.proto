syntax = "proto3";

package notif.middleware.notif.tx.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/notif/tx";

import "npool/basetypes/v1/txtype.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateTx     (CreateTxRequest)     returns (CreateTxResponse)  {}
    rpc UpdateTx     (UpdateTxRequest)     returns (UpdateTxResponse)  {}
    rpc GetTxs       (GetTxsRequest)       returns (GetTxsResponse)    {}
    rpc GetTxOnly    (GetTxOnlyRequest)    returns (GetTxOnlyResponse) {}
    rpc GetTx        (GetTxRequest)        returns (GetTxResponse)        {}
    rpc ExistTx      (ExistTxRequest)      returns (ExistTxResponse)      {}
    rpc ExistTxConds (ExistTxCondsRequest) returns (ExistTxCondsResponse) {}
    rpc DeleteTx     (DeleteTxRequest)     returns (DeleteTxResponse)     {}
}

enum TxState {
    DefaultState  = 0;
    WaitSuccess   = 10;
    WaitNotified  = 20;
    Notified      = 30;
}

message TxReq {
    optional string              ID         = 10;
    optional string              TxID       = 20;
    optional TxState             NotifState = 30;
    optional basetypes.v1.TxType TxType     = 40;
}

message Tx {
    // @inject_tag: sql:"id"
    string              ID         = 10;
    // @inject_tag: sql:"tx_id"
    string              TxID       = 20;
     // @inject_tag: sql:"notif_state"
    string              NotifStateStr = 29;
    TxState             NotifState = 30;
     // @inject_tag: sql:"tx_type"
    string              TxTypeStr  = 39;
    basetypes.v1.TxType TxType     = 40;
     // @inject_tag: sql:"created_at"
    uint32              CreatedAt  = 50;
     // @inject_tag: sql:"updated_at"
    uint32              UpdatedAt  = 60;
}

message Conds {
    optional basetypes.v1.StringVal ID         = 10;
    optional basetypes.v1.StringVal TxID       = 20;
    optional basetypes.v1.Uint32Val NotifState = 30;
    optional basetypes.v1.Uint32Val TxType     = 40;
    optional basetypes.v1.Uint32SliceVal TxTypes  = 50;
}

message CreateTxRequest {
    TxReq Info = 10;
}

message CreateTxResponse {
    Tx Info = 10;
}

message UpdateTxRequest {
    TxReq Info = 10;
}

message UpdateTxResponse {
    Tx Info = 10;
}

message GetTxsRequest {
    Conds Conds = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetTxsResponse {
    repeated Tx Infos = 10;
    uint32      Total = 20;
}

message GetTxOnlyRequest {
    Conds Conds = 10;
}

message GetTxOnlyResponse {
    Tx Info = 10;
}

message GetTxRequest {
    string ID = 10;
}

message GetTxResponse {
    Tx Info = 10;
}

message ExistTxRequest {
    string ID = 10;
}

message ExistTxResponse {
    bool Info = 10;
}

message ExistTxCondsRequest {
    Conds Conds = 10;
}

message ExistTxCondsResponse {
    bool Info = 10;
}

message DeleteTxRequest {
    TxReq Info = 10;
}

message DeleteTxResponse {
    Tx Info = 10;
}