// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/notif/mw/v1/notif/notif.proto

package notif

import (
	channel "github.com/NpoolPlatform/message/npool/notif/mgr/v1/channel"
	notif "github.com/NpoolPlatform/message/npool/notif/mgr/v1/notif"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Notif struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID       string                 `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID      string                 `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AlreadyRead bool                   `protobuf:"varint,40,opt,name=AlreadyRead,proto3" json:"AlreadyRead,omitempty"`
	LangID      string                 `protobuf:"bytes,50,opt,name=LangID,proto3" json:"LangID,omitempty"`
	EventType   notif.EventType        `protobuf:"varint,60,opt,name=EventType,proto3,enum=notif.manager.notif1.v1.EventType" json:"EventType,omitempty"`
	UseTemplate bool                   `protobuf:"varint,70,opt,name=UseTemplate,proto3" json:"UseTemplate,omitempty"`
	Title       string                 `protobuf:"bytes,80,opt,name=Title,proto3" json:"Title,omitempty"`
	Content     string                 `protobuf:"bytes,90,opt,name=Content,proto3" json:"Content,omitempty"`
	Channels    []channel.NotifChannel `protobuf:"varint,100,rep,packed,name=Channels,proto3,enum=notif.manager.channel.v1.NotifChannel" json:"Channels,omitempty"`
	EmailSend   bool                   `protobuf:"varint,110,opt,name=EmailSend,proto3" json:"EmailSend,omitempty"`
	CreatedAt   uint32                 `protobuf:"varint,120,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt   uint32                 `protobuf:"varint,130,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Notif) Reset() {
	*x = Notif{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notif) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notif) ProtoMessage() {}

func (x *Notif) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notif.ProtoReflect.Descriptor instead.
func (*Notif) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{0}
}

func (x *Notif) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Notif) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Notif) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Notif) GetAlreadyRead() bool {
	if x != nil {
		return x.AlreadyRead
	}
	return false
}

func (x *Notif) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *Notif) GetEventType() notif.EventType {
	if x != nil {
		return x.EventType
	}
	return notif.EventType(0)
}

func (x *Notif) GetUseTemplate() bool {
	if x != nil {
		return x.UseTemplate
	}
	return false
}

func (x *Notif) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notif) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notif) GetChannels() []channel.NotifChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Notif) GetEmailSend() bool {
	if x != nil {
		return x.EmailSend
	}
	return false
}

func (x *Notif) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Notif) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateNotifRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif.NotifReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateNotifRequest) Reset() {
	*x = CreateNotifRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifRequest) ProtoMessage() {}

func (x *CreateNotifRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotifRequest) GetInfo() *notif.NotifReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateNotifResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Notif `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateNotifResponse) Reset() {
	*x = CreateNotifResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifResponse) ProtoMessage() {}

func (x *CreateNotifResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNotifResponse) GetInfo() *Notif {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateNotifRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *notif.NotifReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateNotifRequest) Reset() {
	*x = UpdateNotifRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifRequest) ProtoMessage() {}

func (x *UpdateNotifRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNotifRequest) GetInfo() *notif.NotifReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateNotifResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Notif `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateNotifResponse) Reset() {
	*x = UpdateNotifResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifResponse) ProtoMessage() {}

func (x *UpdateNotifResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNotifResponse) GetInfo() *Notif {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateNotifsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs         []string `protobuf:"bytes,10,rep,name=IDs,proto3" json:"IDs,omitempty"`
	EmailSend   []bool   `protobuf:"varint,20,rep,packed,name=EmailSend,proto3" json:"EmailSend,omitempty"`
	AlreadyRead []bool   `protobuf:"varint,30,rep,packed,name=AlreadyRead,proto3" json:"AlreadyRead,omitempty"`
}

func (x *UpdateNotifsRequest) Reset() {
	*x = UpdateNotifsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifsRequest) ProtoMessage() {}

func (x *UpdateNotifsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifsRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifsRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNotifsRequest) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *UpdateNotifsRequest) GetEmailSend() []bool {
	if x != nil {
		return x.EmailSend
	}
	return nil
}

func (x *UpdateNotifsRequest) GetAlreadyRead() []bool {
	if x != nil {
		return x.AlreadyRead
	}
	return nil
}

type UpdateNotifsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Notif `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *UpdateNotifsResponse) Reset() {
	*x = UpdateNotifsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifsResponse) ProtoMessage() {}

func (x *UpdateNotifsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifsResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifsResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNotifsResponse) GetInfos() []*Notif {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetNotifRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetNotifRequest) Reset() {
	*x = GetNotifRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifRequest) ProtoMessage() {}

func (x *GetNotifRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifRequest.ProtoReflect.Descriptor instead.
func (*GetNotifRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{7}
}

func (x *GetNotifRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetNotifResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Notif `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetNotifResponse) Reset() {
	*x = GetNotifResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifResponse) ProtoMessage() {}

func (x *GetNotifResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifResponse.ProtoReflect.Descriptor instead.
func (*GetNotifResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{8}
}

func (x *GetNotifResponse) GetInfo() *Notif {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNotifsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *notif.Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32        `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32        `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNotifsRequest) Reset() {
	*x = GetNotifsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifsRequest) ProtoMessage() {}

func (x *GetNotifsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifsRequest.ProtoReflect.Descriptor instead.
func (*GetNotifsRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{9}
}

func (x *GetNotifsRequest) GetConds() *notif.Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetNotifsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNotifsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNotifsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Notif `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNotifsResponse) Reset() {
	*x = GetNotifsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifsResponse) ProtoMessage() {}

func (x *GetNotifsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifsResponse.ProtoReflect.Descriptor instead.
func (*GetNotifsResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{10}
}

func (x *GetNotifsResponse) GetInfos() []*Notif {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNotifsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNotifOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *notif.Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetNotifOnlyRequest) Reset() {
	*x = GetNotifOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifOnlyRequest) ProtoMessage() {}

func (x *GetNotifOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetNotifOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{11}
}

func (x *GetNotifOnlyRequest) GetConds() *notif.Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetNotifOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Notif `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetNotifOnlyResponse) Reset() {
	*x = GetNotifOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifOnlyResponse) ProtoMessage() {}

func (x *GetNotifOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_mw_v1_notif_notif_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetNotifOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP(), []int{12}
}

func (x *GetNotifOnlyResponse) GetInfo() *Notif {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_notif_mw_v1_notif_notif_proto protoreflect.FileDescriptor

var file_npool_notif_mw_v1_notif_notif_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76,
	0x31, 0x1a, 0x28, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d,
	0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb2, 0x03, 0x0a, 0x05, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x61, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x6e, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4d, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xaf, 0x05, 0x0a,
	0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x12, 0x2e, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x12, 0x2e, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x12,
	0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_npool_notif_mw_v1_notif_notif_proto_rawDescOnce sync.Once
	file_npool_notif_mw_v1_notif_notif_proto_rawDescData = file_npool_notif_mw_v1_notif_notif_proto_rawDesc
)

func file_npool_notif_mw_v1_notif_notif_proto_rawDescGZIP() []byte {
	file_npool_notif_mw_v1_notif_notif_proto_rawDescOnce.Do(func() {
		file_npool_notif_mw_v1_notif_notif_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_mw_v1_notif_notif_proto_rawDescData)
	})
	return file_npool_notif_mw_v1_notif_notif_proto_rawDescData
}

var file_npool_notif_mw_v1_notif_notif_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_notif_mw_v1_notif_notif_proto_goTypes = []interface{}{
	(*Notif)(nil),                // 0: notif.middleware.notif2.v1.Notif
	(*CreateNotifRequest)(nil),   // 1: notif.middleware.notif2.v1.CreateNotifRequest
	(*CreateNotifResponse)(nil),  // 2: notif.middleware.notif2.v1.CreateNotifResponse
	(*UpdateNotifRequest)(nil),   // 3: notif.middleware.notif2.v1.UpdateNotifRequest
	(*UpdateNotifResponse)(nil),  // 4: notif.middleware.notif2.v1.UpdateNotifResponse
	(*UpdateNotifsRequest)(nil),  // 5: notif.middleware.notif2.v1.UpdateNotifsRequest
	(*UpdateNotifsResponse)(nil), // 6: notif.middleware.notif2.v1.UpdateNotifsResponse
	(*GetNotifRequest)(nil),      // 7: notif.middleware.notif2.v1.GetNotifRequest
	(*GetNotifResponse)(nil),     // 8: notif.middleware.notif2.v1.GetNotifResponse
	(*GetNotifsRequest)(nil),     // 9: notif.middleware.notif2.v1.GetNotifsRequest
	(*GetNotifsResponse)(nil),    // 10: notif.middleware.notif2.v1.GetNotifsResponse
	(*GetNotifOnlyRequest)(nil),  // 11: notif.middleware.notif2.v1.GetNotifOnlyRequest
	(*GetNotifOnlyResponse)(nil), // 12: notif.middleware.notif2.v1.GetNotifOnlyResponse
	(notif.EventType)(0),         // 13: notif.manager.notif1.v1.EventType
	(channel.NotifChannel)(0),    // 14: notif.manager.channel.v1.NotifChannel
	(*notif.NotifReq)(nil),       // 15: notif.manager.notif1.v1.NotifReq
	(*notif.Conds)(nil),          // 16: notif.manager.notif1.v1.Conds
}
var file_npool_notif_mw_v1_notif_notif_proto_depIdxs = []int32{
	13, // 0: notif.middleware.notif2.v1.Notif.EventType:type_name -> notif.manager.notif1.v1.EventType
	14, // 1: notif.middleware.notif2.v1.Notif.Channels:type_name -> notif.manager.channel.v1.NotifChannel
	15, // 2: notif.middleware.notif2.v1.CreateNotifRequest.Info:type_name -> notif.manager.notif1.v1.NotifReq
	0,  // 3: notif.middleware.notif2.v1.CreateNotifResponse.Info:type_name -> notif.middleware.notif2.v1.Notif
	15, // 4: notif.middleware.notif2.v1.UpdateNotifRequest.Info:type_name -> notif.manager.notif1.v1.NotifReq
	0,  // 5: notif.middleware.notif2.v1.UpdateNotifResponse.Info:type_name -> notif.middleware.notif2.v1.Notif
	0,  // 6: notif.middleware.notif2.v1.UpdateNotifsResponse.Infos:type_name -> notif.middleware.notif2.v1.Notif
	0,  // 7: notif.middleware.notif2.v1.GetNotifResponse.Info:type_name -> notif.middleware.notif2.v1.Notif
	16, // 8: notif.middleware.notif2.v1.GetNotifsRequest.Conds:type_name -> notif.manager.notif1.v1.Conds
	0,  // 9: notif.middleware.notif2.v1.GetNotifsResponse.Infos:type_name -> notif.middleware.notif2.v1.Notif
	16, // 10: notif.middleware.notif2.v1.GetNotifOnlyRequest.Conds:type_name -> notif.manager.notif1.v1.Conds
	0,  // 11: notif.middleware.notif2.v1.GetNotifOnlyResponse.Info:type_name -> notif.middleware.notif2.v1.Notif
	1,  // 12: notif.middleware.notif2.v1.Middleware.CreateNotif:input_type -> notif.middleware.notif2.v1.CreateNotifRequest
	3,  // 13: notif.middleware.notif2.v1.Middleware.UpdateNotif:input_type -> notif.middleware.notif2.v1.UpdateNotifRequest
	5,  // 14: notif.middleware.notif2.v1.Middleware.UpdateNotifs:input_type -> notif.middleware.notif2.v1.UpdateNotifsRequest
	7,  // 15: notif.middleware.notif2.v1.Middleware.GetNotif:input_type -> notif.middleware.notif2.v1.GetNotifRequest
	9,  // 16: notif.middleware.notif2.v1.Middleware.GetNotifs:input_type -> notif.middleware.notif2.v1.GetNotifsRequest
	11, // 17: notif.middleware.notif2.v1.Middleware.GetNotifOnly:input_type -> notif.middleware.notif2.v1.GetNotifOnlyRequest
	2,  // 18: notif.middleware.notif2.v1.Middleware.CreateNotif:output_type -> notif.middleware.notif2.v1.CreateNotifResponse
	4,  // 19: notif.middleware.notif2.v1.Middleware.UpdateNotif:output_type -> notif.middleware.notif2.v1.UpdateNotifResponse
	6,  // 20: notif.middleware.notif2.v1.Middleware.UpdateNotifs:output_type -> notif.middleware.notif2.v1.UpdateNotifsResponse
	8,  // 21: notif.middleware.notif2.v1.Middleware.GetNotif:output_type -> notif.middleware.notif2.v1.GetNotifResponse
	10, // 22: notif.middleware.notif2.v1.Middleware.GetNotifs:output_type -> notif.middleware.notif2.v1.GetNotifsResponse
	12, // 23: notif.middleware.notif2.v1.Middleware.GetNotifOnly:output_type -> notif.middleware.notif2.v1.GetNotifOnlyResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_npool_notif_mw_v1_notif_notif_proto_init() }
func file_npool_notif_mw_v1_notif_notif_proto_init() {
	if File_npool_notif_mw_v1_notif_notif_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notif); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_mw_v1_notif_notif_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_mw_v1_notif_notif_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_mw_v1_notif_notif_proto_goTypes,
		DependencyIndexes: file_npool_notif_mw_v1_notif_notif_proto_depIdxs,
		MessageInfos:      file_npool_notif_mw_v1_notif_notif_proto_msgTypes,
	}.Build()
	File_npool_notif_mw_v1_notif_notif_proto = out.File
	file_npool_notif_mw_v1_notif_notif_proto_rawDesc = nil
	file_npool_notif_mw_v1_notif_notif_proto_goTypes = nil
	file_npool_notif_mw_v1_notif_notif_proto_depIdxs = nil
}
