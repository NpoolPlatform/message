syntax = "proto3";

package notif.middleware.notif2.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/notif";

import "npool/notif/mgr/v1/channel/channel.proto";
import "npool/notif/mgr/v1/notif/notif.proto";
import "npool/notif/mw/v1/template/template.proto";
import "npool/basetypes/v1/usedfor.proto";

// Service Name
service Middleware {
    rpc CreateNotif    (CreateNotifRequest)    returns (CreateNotifResponse)    {}
    rpc CreateNotifs   (CreateNotifsRequest)   returns (CreateNotifsResponse)   {}
    rpc UpdateNotif    (UpdateNotifRequest)    returns (UpdateNotifResponse)    {}
    rpc UpdateNotifs   (UpdateNotifsRequest)   returns (UpdateNotifsResponse)   {}
    rpc GetNotif       (GetNotifRequest)       returns (GetNotifResponse)       {}
    rpc GetNotifs      (GetNotifsRequest)      returns (GetNotifsResponse)      {}
    rpc GetNotifOnly   (GetNotifOnlyRequest)   returns (GetNotifOnlyResponse)   {}
    rpc GenerateNotifs (GenerateNotifsRequest) returns (GenerateNotifsResponse) {}
}

message Notif {
    string ID          = 10;
    string AppID       = 20;
    string UserID      = 30;
    bool   Notified    = 40;
    string LangID      = 50;
    basetypes.v1.UsedFor EventType = 60;
    bool   UseTemplate = 70;
    string Title       = 80;
    string Content     = 90;
    notif.manager.channel.v1.NotifChannel Channel = 100;
    uint32 CreatedAt   = 110;
    uint32 UpdatedAt   = 120;
}

message CreateNotifRequest {
    notif.manager.notif1.v1.NotifReq Info = 10;
}

message CreateNotifResponse {
    Notif Info = 10;
}


message CreateNotifsRequest {
    repeated notif.manager.notif1.v1.NotifReq Infos = 10;
}

message CreateNotifsResponse {
    repeated Notif Infos = 10;
}

message UpdateNotifRequest {
    notif.manager.notif1.v1.NotifReq Info = 10;
}

message UpdateNotifResponse {
    Notif Info = 10;
}

message UpdateNotifsRequest {
    repeated string IDs      = 10;
    optional bool   Notified = 20;
}

message UpdateNotifsResponse {
    repeated Notif Infos = 10;
}

message GetNotifRequest {
    string ID = 10;
}

message GetNotifResponse {
    Notif Info = 10;
}

message GetNotifsRequest {
    notif.manager.notif1.v1.Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetNotifsResponse {
    repeated Notif Infos = 10;
    uint32         Total = 20;
}

message GetNotifOnlyRequest {
    notif.manager.notif1.v1.Conds Conds = 10;
}

message GetNotifOnlyResponse {
    Notif Info = 10;
}

message GenerateNotifsRequest {
    string                                             AppID     = 10;
    basetypes.v1.UsedFor                               EventType = 20;
    optional notif.middleware.template.v1.TemplateVars Vars      = 30;
}

message GenerateNotifsResponse {
    repeated Notif Infos = 10;
}
