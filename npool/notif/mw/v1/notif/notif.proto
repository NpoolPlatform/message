syntax = "proto3";

package notif.middleware.notif.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mw/v1/notif";

import "npool/basetypes/v1/channel.proto";
import "npool/basetypes/v1/usedfor.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/notif/mw/v1/template/template.proto";

// Service Name
service Middleware {
    rpc CreateNotif    (CreateNotifRequest)    returns (CreateNotifResponse)    {}
    rpc CreateNotifs   (CreateNotifsRequest)   returns (CreateNotifsResponse)   {}
    rpc UpdateNotif    (UpdateNotifRequest)    returns (UpdateNotifResponse)    {}
    rpc UpdateNotifs   (UpdateNotifsRequest)   returns (UpdateNotifsResponse)   {}
    rpc GetNotif       (GetNotifRequest)       returns (GetNotifResponse)       {}
    rpc GetNotifs      (GetNotifsRequest)      returns (GetNotifsResponse)      {}
    rpc GetNotifOnly   (GetNotifOnlyRequest)   returns (GetNotifOnlyResponse)   {}
    rpc GenerateNotifs (GenerateNotifsRequest) returns (GenerateNotifsResponse) {}
}

enum NotifType {
    DefaultType   = 0;
    Broadcast     = 10;
    Multicast     = 20;
    Unicast       = 30;
}

message Notif {
    // @inject_tag: sql:"id"
    string    ID          = 10;
    // @inject_tag: sql:"app_id"
    string    AppID       = 20;
    // @inject_tag: sql:"user_id"
    string    UserID      = 30;
    // @inject_tag: sql:"notified"
    bool      Notified    = 40;
    // @inject_tag: sql:"lang_id"
    string    LangID      = 50;
    // @inject_tag: sql:"event_type"
    string    EventTypeStr = 59;
    basetypes.v1.UsedFor EventType = 60;
    // @inject_tag: sql:"use_template"
    bool      UseTemplate = 70;
    // @inject_tag: sql:"title"
    string    Title       = 80;
    // @inject_tag: sql:"content"
    string    Content     = 90;
    // @inject_tag: sql:"channel"
    string    ChannelStr   = 99;
    basetypes.v1.NotifChannel Channel = 100;
    // @inject_tag: sql:"extra"
    string    Extra       = 110;
    // @inject_tag: sql:"created_at"
    uint32    CreatedAt   = 120;
    // @inject_tag: sql:"updated_at"
    uint32    UpdatedAt   = 130;
    // @inject_tag: sql:"event_id"
    string    EventID     = 140;
    // @inject_tag: sql:"notif_type"
    NotifType NotifTypeStr = 149;
    NotifType NotifType    = 150;
}

message NotifReq {
    optional string    ID          = 10;
    optional string    AppID       = 20;
    optional string    UserID      = 30;
    optional bool      Notified    = 40;
    optional string    LangID      = 50;
    optional basetypes.v1.UsedFor EventType = 60;
    optional bool      UseTemplate = 70;
    optional string    Title       = 80;
    optional string    Content     = 90;
    optional basetypes.v1.NotifChannel Channel = 100;
    optional string    Extra       = 110;
    optional string    EventID     = 120;
}

message Conds {
    optional basetypes.v1.StringVal      ID          = 10;
    optional basetypes.v1.StringSliceVal IDs         = 11;
    optional basetypes.v1.StringVal      AppID       = 20;
    optional basetypes.v1.StringVal      UserID      = 30;
    optional basetypes.v1.BoolVal        Notified    = 40;
    optional basetypes.v1.StringVal      LangID      = 50;
    optional basetypes.v1.Uint32Val      EventType   = 60;
    optional basetypes.v1.BoolVal        UseTemplate = 70;
    optional basetypes.v1.Uint32SliceVal Channels    = 80;
    optional basetypes.v1.Uint32Val      Channel     = 90;
    optional basetypes.v1.Uint32SliceVal EventTypes  = 100;
    optional basetypes.v1.StringVal      Extra       = 110;
    optional basetypes.v1.StringVal      EventID     = 120;
}

message CreateNotifRequest {
    NotifReq Info = 10;
}

message CreateNotifResponse {
    Notif Info = 10;
}


message CreateNotifsRequest {
    repeated NotifReq Infos = 10;
}

message CreateNotifsResponse {
    repeated Notif Infos = 10;
}

message UpdateNotifRequest {
    NotifReq Info = 10;
}

message UpdateNotifResponse {
    Notif Info = 10;
}

message UpdateNotifsRequest {
    repeated string IDs      = 10;
    optional bool   Notified = 20;
}

message UpdateNotifsResponse {
    repeated Notif Infos = 10;
}

message GetNotifRequest {
    string ID = 10;
}

message GetNotifResponse {
    Notif Info = 10;
}

message GetNotifsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetNotifsResponse {
    repeated Notif Infos = 10;
    uint32         Total = 20;
}

message GetNotifOnlyRequest {
    Conds Conds = 10;
}

message GetNotifOnlyResponse {
    Notif Info = 10;
}

message GenerateNotifsRequest {
    string                                              AppID     = 10;
    string                                              UserID    = 20;
    basetypes.v1.UsedFor                                EventType = 30;
    optional .notif.middleware.template.v1.TemplateVars Vars      = 40;
    optional string                                     Extra     = 50;
}

message GenerateNotifsResponse {
    repeated Notif Infos = 10;
}
