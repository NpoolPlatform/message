syntax = "proto3";

package notif.manager.announcement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/mgr/v1/announcement";

import "npool/notif/mgr/v1/channel/channel.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateAnnouncement     (CreateAnnouncementRequest)     returns (CreateAnnouncementResponse)     {}
    rpc CreateAnnouncements    (CreateAnnouncementsRequest)    returns (CreateAnnouncementsResponse)    {}
    rpc UpdateAnnouncement     (UpdateAnnouncementRequest)     returns (UpdateAnnouncementResponse)     {}
    rpc GetAnnouncement        (GetAnnouncementRequest)        returns (GetAnnouncementResponse)        {}
    rpc GetAnnouncementOnly    (GetAnnouncementOnlyRequest)    returns (GetAnnouncementOnlyResponse)    {}
    rpc GetAnnouncements       (GetAnnouncementsRequest)       returns (GetAnnouncementsResponse)       {}
    rpc ExistAnnouncement      (ExistAnnouncementRequest)      returns (ExistAnnouncementResponse)      {}
    rpc ExistAnnouncementConds (ExistAnnouncementCondsRequest) returns (ExistAnnouncementCondsResponse) {}
    rpc CountAnnouncements     (CountAnnouncementsRequest)     returns (CountAnnouncementsResponse)     {}
    rpc DeleteAnnouncement     (DeleteAnnouncementRequest)     returns (DeleteAnnouncementResponse)     {}
}

enum AnnouncementType {
    DefaultType   = 0;
    Broadcast     = 10;
    Multicast     = 20;
}

message AnnouncementReq {
    optional string ID         = 10;
    optional string AppID      = 20;
    optional string LangID     = 30;
    optional string Title      = 40;
    optional string Content    = 50;
    optional notif.manager.channel.v1.NotifChannel Channel = 60;
    optional uint32 EndAt      = 70;
    optional AnnouncementType AnnouncementType = 80;
}

message Announcement {
    string ID         = 10;
    string AppID      = 20;
    string LangID     = 30;
    string Title      = 40;
    string Content    = 50;
    notif.manager.channel.v1.NotifChannel Channel = 60;
    uint32 EndAt      = 70;
    AnnouncementType AnnouncementType = 80;
    uint32 CreatedAt  = 90;
    uint32 UpdatedAt  = 100;
}

message Conds {
    optional npool.v1.StringVal      ID        = 10;
    optional npool.v1.StringVal      AppID     = 20;
    optional npool.v1.StringVal      LangID    = 30;
    optional npool.v1.Uint32SliceVal Channels  = 40;
    optional npool.v1.Uint32Val      EndAt     = 50;
    optional npool.v1.Uint32Val      Channel   = 60;
}


message CreateAnnouncementRequest {
    AnnouncementReq Info = 10;
}

message CreateAnnouncementResponse {
    Announcement Info = 10;
}

message CreateAnnouncementsRequest {
    repeated AnnouncementReq Infos = 10;
}

message CreateAnnouncementsResponse {
    repeated Announcement Infos = 10;
}

message UpdateAnnouncementRequest {
    AnnouncementReq Info = 10;
}

message UpdateAnnouncementResponse {
    Announcement Info = 10;
}

message GetAnnouncementRequest {
    string ID = 10;
}

message GetAnnouncementResponse {
    Announcement Info = 10;
}

message GetAnnouncementsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetAnnouncementsResponse {
    repeated Announcement Infos = 10;
    uint32                Total = 20;
}

message GetAnnouncementOnlyRequest {
    Conds Conds = 10;
}

message GetAnnouncementOnlyResponse {
    Announcement Info = 10;
}

message ExistAnnouncementRequest {
    string ID = 10;
}

message ExistAnnouncementResponse {
    bool Info = 10;
}

message ExistAnnouncementCondsRequest {
    Conds Conds = 10;
}

message ExistAnnouncementCondsResponse {
    bool Info = 10;
}

message CountAnnouncementsRequest {
    Conds Conds = 10;
}

message CountAnnouncementsResponse {
    uint32 Info = 10;
}

message DeleteAnnouncementRequest {
    string ID = 10;
}

message DeleteAnnouncementResponse {
    Announcement Info = 10;
}
