syntax = "proto3";

package notif.gateway.notif2.notifchannel.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/gw/v1/notif/notifchannel";

import "google/api/annotations.proto";
import "npool/notif/mgr/v1/channel/channel.proto";
import "npool/third/mgr/v1/usedfor/userdfor.proto";

// Service Name
service Gateway {
    rpc CreateNotifChannel (CreateNotifChannelRequest) returns (CreateNotifChannelResponse) {
        option (google.api.http) = {
            post: "/v1/create/notifchannel"
            body: "*"
        };
    }
    rpc DeleteNotifChannel (DeleteNotifChannelRequest) returns (DeleteNotifChannelResponse) {
        option (google.api.http) = {
            post: "/v1/delete/notifchannel"
            body: "*"
        };
    }

    rpc GetAppNotifChannels (GetAppNotifChannelsRequest) returns (GetAppNotifChannelsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/notifchannels"
            body: "*"
        };
    }

    rpc GetNAppNotifChannels (GetNAppNotifChannelsRequest) returns (GetNAppNotifChannelsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/app/notifchannels"
            body: "*"
        };
    }
}

message NotifChannel {
    string AppID     = 10;
    string AppName   = 20;
    third.manager.usedfor.v1.UsedFor      EventType = 30;
    notif.manager.channel.v1.NotifChannel Channel   = 40;
    uint32 CreatedAt = 50;
}

message CreateNotifChannelRequest {
    string AppID = 10;
    third.manager.usedfor.v1.UsedFor EventType              = 20;
    repeated notif.manager.channel.v1.NotifChannel Channels = 30;
}

message CreateNotifChannelResponse {
    repeated NotifChannel Infos = 10;
}

message DeleteNotifChannelRequest {
    string ID    = 10;
    string AppID = 20;
}

message DeleteNotifChannelResponse {
    NotifChannel Info = 10;
}

message GetNotifChannelsRequest {
    string AppID          = 10;
    uint32 Offset         = 30;
    uint32 Limit          = 40;
}

message GetNotifChannelsResponse {
    repeated NotifChannel Infos = 10;
    uint32                Total = 20;
}

message GetAppNotifChannelsRequest {
    string AppID  = 10;
    uint32 Offset = 30;
    uint32 Limit  = 40;
}

message GetAppNotifChannelsResponse {
    repeated NotifChannel Infos = 10;
    uint32                Total = 20;
}

message GetNAppNotifChannelsRequest {
    string TargetAppID  = 10;
    uint32 Offset       = 20;
    uint32 Limit        = 30;
}

message GetNAppNotifChannelsResponse {
    repeated NotifChannel Infos = 10;
    uint32                Total = 20;
}
