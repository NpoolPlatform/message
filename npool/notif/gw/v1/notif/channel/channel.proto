syntax = "proto3";

package notif.gateway.notif2.channel.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/gw/v1/notif/channel";

import "google/api/annotations.proto";
import "npool/basetypes/v1/channel.proto";
import "npool/basetypes/v1/usedfor.proto";

// Service Name
service Gateway {
    rpc CreateChannels (CreateChannelsRequest) returns (CreateChannelsResponse) {
        option (google.api.http) = {
            post: "/v1/create/notifchannels"
            body: "*"
        };
    }
    rpc DeleteChannel (DeleteChannelRequest) returns (DeleteChannelResponse) {
        option (google.api.http) = {
            post: "/v1/delete/notifchannel"
            body: "*"
        };
    }

    rpc GetAppChannels (GetAppChannelsRequest) returns (GetAppChannelsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/notifchannels"
            body: "*"
        };
    }

    rpc GetNAppChannels (GetNAppChannelsRequest) returns (GetNAppChannelsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/app/notifchannels"
            body: "*"
        };
    }
}

message Channel {
    string ID        = 10;
    string AppID     = 20;
    string AppName   = 30;
    basetypes.v1.UsedFor      EventType = 40;
    basetypes.v1.NotifChannel Channel   = 50;
    uint32 CreatedAt = 60;
}

message CreateChannelsRequest {
    string AppID = 10;
    repeated basetypes.v1.UsedFor   EventTypes = 20;
    basetypes.v1.NotifChannel Channel    = 30;
}

message CreateChannelsResponse {
    repeated Channel Infos = 10;
}

message DeleteChannelRequest {
    string ID    = 10;
    string AppID = 20;
}

message DeleteChannelResponse {
    Channel Info = 10;
}

message GetAppChannelsRequest {
    string AppID          = 10;
    uint32 Offset         = 30;
    uint32 Limit          = 40;
}

message GetAppChannelsResponse {
    repeated Channel Infos = 10;
    uint32           Total = 20;
}

message GetNAppChannelsRequest {
    string TargetAppID  = 10;
    uint32 Offset       = 20;
    uint32 Limit        = 30;
}

message GetNAppChannelsResponse {
    repeated Channel Infos = 10;
    uint32           Total = 20;
}
