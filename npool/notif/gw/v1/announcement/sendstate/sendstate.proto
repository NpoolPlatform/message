syntax = "proto3";

package notif.gateway.announcement.sendstate.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/gw/v1/announcement/sendstate";

import "google/api/annotations.proto";
import "npool/basetypes/v1/channel.proto";
import "npool/basetypes/v1/notiftype.proto";

// Service Name
service Gateway {
  rpc GetSendStates(GetSendStatesRequest) returns (GetSendStatesResponse) {
    option (google.api.http) = {
      post : "/v1/get/sendstates"
      body : "*"
    };
  }

  rpc GetAppUserSendStates(GetAppUserSendStatesRequest)
      returns (GetAppUserSendStatesResponse) {
    option (google.api.http) = {
      post : "/v1/get/app/user/sendstates"
      body : "*"
    };
  }

  rpc GetAppSendStates(GetAppSendStatesRequest)
      returns (GetAppSendStatesResponse) {
    option (google.api.http) = {
      post : "/v1/get/app/sendstates"
      body : "*"
    };
  }

  rpc GetNAppSendStates(GetNAppSendStatesRequest)
      returns (GetNAppSendStatesResponse) {
    option (google.api.http) = {
      post : "/v1/get/n/app/sendstates"
      body : "*"
    };
  }
}

message SendState {
  uint32 ID = 9;
  string EntID = 10;
  string AnnouncementID = 20;
  string AppID = 30;
  string AppName = 40;
  string UserID = 50;
  string EmailAddress = 60;
  string PhoneNO = 70;
  string Username = 80;
  string Title = 90;
  string Content = 100;
  basetypes.v1.NotifChannel Channel = 110;
  basetypes.v1.NotifType AnnouncementType = 120;
  uint32 CreatedAt = 1000;
  uint32 UpdatedAt = 1010;
}

message GetSendStatesRequest {
  string AppID = 10;
  string UserID = 20;
  optional basetypes.v1.NotifChannel Channel = 30;
  int32 Offset = 40;
  int32 Limit = 50;
}

message GetSendStatesResponse {
  repeated SendState Infos = 10;
  uint32 Total = 20;
}

message GetAppUserSendStatesRequest {
  string TargetAppID = 10;
  string TargetUserID = 20;
  optional basetypes.v1.NotifChannel Channel = 30;
  int32 Offset = 40;
  int32 Limit = 50;
}

message GetAppUserSendStatesResponse {
  repeated SendState Infos = 10;
  uint32 Total = 20;
}

message GetAppSendStatesRequest {
  string AppID = 10;
  optional basetypes.v1.NotifChannel Channel = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppSendStatesResponse {
  repeated SendState Infos = 10;
  uint32 Total = 20;
}

message GetNAppSendStatesRequest {
  string TargetAppID = 10;
  optional basetypes.v1.NotifChannel Channel = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetNAppSendStatesResponse {
  repeated SendState Infos = 10;
  uint32 Total = 20;
}
