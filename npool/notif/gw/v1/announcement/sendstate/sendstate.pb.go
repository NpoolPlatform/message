// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/notif/gw/v1/announcement/sendstate/sendstate.proto

package sendstate

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint32          `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID            string          `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AnnouncementID   string          `protobuf:"bytes,20,opt,name=AnnouncementID,proto3" json:"AnnouncementID,omitempty"`
	AppID            string          `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName          string          `protobuf:"bytes,40,opt,name=AppName,proto3" json:"AppName,omitempty"`
	UserID           string          `protobuf:"bytes,50,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress     string          `protobuf:"bytes,60,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO          string          `protobuf:"bytes,70,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	Username         string          `protobuf:"bytes,80,opt,name=Username,proto3" json:"Username,omitempty"`
	Title            string          `protobuf:"bytes,90,opt,name=Title,proto3" json:"Title,omitempty"`
	Content          string          `protobuf:"bytes,100,opt,name=Content,proto3" json:"Content,omitempty"`
	Channel          v1.NotifChannel `protobuf:"varint,110,opt,name=Channel,proto3,enum=basetypes.v1.NotifChannel" json:"Channel,omitempty"`
	AnnouncementType v1.NotifType    `protobuf:"varint,120,opt,name=AnnouncementType,proto3,enum=basetypes.v1.NotifType" json:"AnnouncementType,omitempty"`
	CreatedAt        uint32          `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt        uint32          `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *SendState) Reset() {
	*x = SendState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendState) ProtoMessage() {}

func (x *SendState) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendState.ProtoReflect.Descriptor instead.
func (*SendState) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{0}
}

func (x *SendState) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SendState) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *SendState) GetAnnouncementID() string {
	if x != nil {
		return x.AnnouncementID
	}
	return ""
}

func (x *SendState) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SendState) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SendState) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SendState) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *SendState) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *SendState) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SendState) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendState) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendState) GetChannel() v1.NotifChannel {
	if x != nil {
		return x.Channel
	}
	return v1.NotifChannel(0)
}

func (x *SendState) GetAnnouncementType() v1.NotifType {
	if x != nil {
		return x.AnnouncementType
	}
	return v1.NotifType(0)
}

func (x *SendState) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SendState) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetSendStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string           `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string           `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Channel *v1.NotifChannel `protobuf:"varint,30,opt,name=Channel,proto3,enum=basetypes.v1.NotifChannel,oneof" json:"Channel,omitempty"`
	Offset  int32            `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32            `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSendStatesRequest) Reset() {
	*x = GetSendStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendStatesRequest) ProtoMessage() {}

func (x *GetSendStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendStatesRequest.ProtoReflect.Descriptor instead.
func (*GetSendStatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{1}
}

func (x *GetSendStatesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetSendStatesRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetSendStatesRequest) GetChannel() v1.NotifChannel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return v1.NotifChannel(0)
}

func (x *GetSendStatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSendStatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSendStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SendState `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSendStatesResponse) Reset() {
	*x = GetSendStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendStatesResponse) ProtoMessage() {}

func (x *GetSendStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendStatesResponse.ProtoReflect.Descriptor instead.
func (*GetSendStatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{2}
}

func (x *GetSendStatesResponse) GetInfos() []*SendState {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSendStatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppUserSendStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string           `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string           `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Channel      *v1.NotifChannel `protobuf:"varint,30,opt,name=Channel,proto3,enum=basetypes.v1.NotifChannel,oneof" json:"Channel,omitempty"`
	Offset       int32            `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32            `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppUserSendStatesRequest) Reset() {
	*x = GetAppUserSendStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSendStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSendStatesRequest) ProtoMessage() {}

func (x *GetAppUserSendStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSendStatesRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserSendStatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppUserSendStatesRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppUserSendStatesRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *GetAppUserSendStatesRequest) GetChannel() v1.NotifChannel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return v1.NotifChannel(0)
}

func (x *GetAppUserSendStatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppUserSendStatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppUserSendStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SendState `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppUserSendStatesResponse) Reset() {
	*x = GetAppUserSendStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSendStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSendStatesResponse) ProtoMessage() {}

func (x *GetAppUserSendStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSendStatesResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserSendStatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppUserSendStatesResponse) GetInfos() []*SendState {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppUserSendStatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppSendStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string           `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Channel *v1.NotifChannel `protobuf:"varint,20,opt,name=Channel,proto3,enum=basetypes.v1.NotifChannel,oneof" json:"Channel,omitempty"`
	Offset  int32            `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32            `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppSendStatesRequest) Reset() {
	*x = GetAppSendStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSendStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSendStatesRequest) ProtoMessage() {}

func (x *GetAppSendStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSendStatesRequest.ProtoReflect.Descriptor instead.
func (*GetAppSendStatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppSendStatesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppSendStatesRequest) GetChannel() v1.NotifChannel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return v1.NotifChannel(0)
}

func (x *GetAppSendStatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppSendStatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppSendStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SendState `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppSendStatesResponse) Reset() {
	*x = GetAppSendStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSendStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSendStatesResponse) ProtoMessage() {}

func (x *GetAppSendStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSendStatesResponse.ProtoReflect.Descriptor instead.
func (*GetAppSendStatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppSendStatesResponse) GetInfos() []*SendState {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppSendStatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNAppSendStatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string           `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Channel     *v1.NotifChannel `protobuf:"varint,20,opt,name=Channel,proto3,enum=basetypes.v1.NotifChannel,oneof" json:"Channel,omitempty"`
	Offset      int32            `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32            `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNAppSendStatesRequest) Reset() {
	*x = GetNAppSendStatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppSendStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppSendStatesRequest) ProtoMessage() {}

func (x *GetNAppSendStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppSendStatesRequest.ProtoReflect.Descriptor instead.
func (*GetNAppSendStatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{7}
}

func (x *GetNAppSendStatesRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetNAppSendStatesRequest) GetChannel() v1.NotifChannel {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return v1.NotifChannel(0)
}

func (x *GetNAppSendStatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNAppSendStatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNAppSendStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SendState `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNAppSendStatesResponse) Reset() {
	*x = GetNAppSendStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppSendStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppSendStatesResponse) ProtoMessage() {}

func (x *GetNAppSendStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppSendStatesResponse.ProtoReflect.Descriptor instead.
func (*GetNAppSendStatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP(), []int{8}
}

func (x *GetNAppSendStatesResponse) GetInfos() []*SendState {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNAppSendStatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_notif_gw_v1_announcement_sendstate_sendstate_proto protoreflect.FileDescriptor

var file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDesc = []byte{
	0x0a, 0x38, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x43, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb9,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x77, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xd8, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x7e,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa4,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x39, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xb1, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x39, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x32, 0x86, 0x06, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xad,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x3d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0xcb,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0xba, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x40, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0xbf, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x41, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01,
	0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6e, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x67, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescOnce sync.Once
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescData = file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDesc
)

func file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescGZIP() []byte {
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescOnce.Do(func() {
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescData)
	})
	return file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDescData
}

var file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_goTypes = []interface{}{
	(*SendState)(nil),                    // 0: notif.gateway.announcement.sendstate.v1.SendState
	(*GetSendStatesRequest)(nil),         // 1: notif.gateway.announcement.sendstate.v1.GetSendStatesRequest
	(*GetSendStatesResponse)(nil),        // 2: notif.gateway.announcement.sendstate.v1.GetSendStatesResponse
	(*GetAppUserSendStatesRequest)(nil),  // 3: notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesRequest
	(*GetAppUserSendStatesResponse)(nil), // 4: notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesResponse
	(*GetAppSendStatesRequest)(nil),      // 5: notif.gateway.announcement.sendstate.v1.GetAppSendStatesRequest
	(*GetAppSendStatesResponse)(nil),     // 6: notif.gateway.announcement.sendstate.v1.GetAppSendStatesResponse
	(*GetNAppSendStatesRequest)(nil),     // 7: notif.gateway.announcement.sendstate.v1.GetNAppSendStatesRequest
	(*GetNAppSendStatesResponse)(nil),    // 8: notif.gateway.announcement.sendstate.v1.GetNAppSendStatesResponse
	(v1.NotifChannel)(0),                 // 9: basetypes.v1.NotifChannel
	(v1.NotifType)(0),                    // 10: basetypes.v1.NotifType
}
var file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_depIdxs = []int32{
	9,  // 0: notif.gateway.announcement.sendstate.v1.SendState.Channel:type_name -> basetypes.v1.NotifChannel
	10, // 1: notif.gateway.announcement.sendstate.v1.SendState.AnnouncementType:type_name -> basetypes.v1.NotifType
	9,  // 2: notif.gateway.announcement.sendstate.v1.GetSendStatesRequest.Channel:type_name -> basetypes.v1.NotifChannel
	0,  // 3: notif.gateway.announcement.sendstate.v1.GetSendStatesResponse.Infos:type_name -> notif.gateway.announcement.sendstate.v1.SendState
	9,  // 4: notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesRequest.Channel:type_name -> basetypes.v1.NotifChannel
	0,  // 5: notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesResponse.Infos:type_name -> notif.gateway.announcement.sendstate.v1.SendState
	9,  // 6: notif.gateway.announcement.sendstate.v1.GetAppSendStatesRequest.Channel:type_name -> basetypes.v1.NotifChannel
	0,  // 7: notif.gateway.announcement.sendstate.v1.GetAppSendStatesResponse.Infos:type_name -> notif.gateway.announcement.sendstate.v1.SendState
	9,  // 8: notif.gateway.announcement.sendstate.v1.GetNAppSendStatesRequest.Channel:type_name -> basetypes.v1.NotifChannel
	0,  // 9: notif.gateway.announcement.sendstate.v1.GetNAppSendStatesResponse.Infos:type_name -> notif.gateway.announcement.sendstate.v1.SendState
	1,  // 10: notif.gateway.announcement.sendstate.v1.Gateway.GetSendStates:input_type -> notif.gateway.announcement.sendstate.v1.GetSendStatesRequest
	3,  // 11: notif.gateway.announcement.sendstate.v1.Gateway.GetAppUserSendStates:input_type -> notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesRequest
	5,  // 12: notif.gateway.announcement.sendstate.v1.Gateway.GetAppSendStates:input_type -> notif.gateway.announcement.sendstate.v1.GetAppSendStatesRequest
	7,  // 13: notif.gateway.announcement.sendstate.v1.Gateway.GetNAppSendStates:input_type -> notif.gateway.announcement.sendstate.v1.GetNAppSendStatesRequest
	2,  // 14: notif.gateway.announcement.sendstate.v1.Gateway.GetSendStates:output_type -> notif.gateway.announcement.sendstate.v1.GetSendStatesResponse
	4,  // 15: notif.gateway.announcement.sendstate.v1.Gateway.GetAppUserSendStates:output_type -> notif.gateway.announcement.sendstate.v1.GetAppUserSendStatesResponse
	6,  // 16: notif.gateway.announcement.sendstate.v1.Gateway.GetAppSendStates:output_type -> notif.gateway.announcement.sendstate.v1.GetAppSendStatesResponse
	8,  // 17: notif.gateway.announcement.sendstate.v1.Gateway.GetNAppSendStates:output_type -> notif.gateway.announcement.sendstate.v1.GetNAppSendStatesResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_init() }
func file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_init() {
	if File_npool_notif_gw_v1_announcement_sendstate_sendstate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSendStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSendStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSendStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSendStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppSendStatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppSendStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_goTypes,
		DependencyIndexes: file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_depIdxs,
		MessageInfos:      file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_msgTypes,
	}.Build()
	File_npool_notif_gw_v1_announcement_sendstate_sendstate_proto = out.File
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_rawDesc = nil
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_goTypes = nil
	file_npool_notif_gw_v1_announcement_sendstate_sendstate_proto_depIdxs = nil
}
