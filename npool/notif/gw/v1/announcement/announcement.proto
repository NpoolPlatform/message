syntax = "proto3";

package notif.gateway.announcement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/gw/v1/announcement";

import "google/api/annotations.proto";
import "npool/notif/mgr/v1/channel/channel.proto";

// Service Name
service Gateway {
    rpc CreateAnnouncement (CreateAnnouncementRequest) returns (CreateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/create/announcement"
            body: "*"
        };
    }

    rpc UpdateAnnouncement (UpdateAnnouncementRequest) returns (UpdateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/update/announcement"
            body: "*"
        };
    }

    rpc DeleteAnnouncement (DeleteAnnouncementRequest) returns (DeleteAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/delete/announcement"
            body: "*"
        };
    }

    rpc GetAnnouncements (GetAnnouncementsRequest) returns (GetAnnouncementsResponse) {
        option (google.api.http) = {
            post: "/v1/get/announcements"
            body: "*"
        };
    }

    rpc GetAppAnnouncements (GetAnnouncementsRequest) returns (GetAnnouncementsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/announcements"
            body: "*"
        };
    }

    rpc GetNAppAnnouncements (GetNAppAnnouncementsRequest) returns (GetNAppAnnouncementsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/app/announcements"
            body: "*"
        };
    }

    rpc GetAnnouncement (GetAnnouncementRequest) returns (GetAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/get/announcement"
            body: "*"
        };
    }
}

message Announcement {
    string           ID             = 10;
    string           AppID          = 20;
    string           AppName        = 30;
    string           UserID         = 40;
    string           EmailAddress   = 50;
    string           PhoneNO        = 60;
    string           Username       = 70;
    string           Title          = 80;
    string           Content        = 90;
    bool             AlreadyRead    = 110;
    bool             AlreadySend    = 120;
    uint32           CreatedAt      = 130;
    //if AlreadySend = true SendChannel valid
    notif.manager.channel.v1.NotifChannel SendChannel = 100;
}

message CreateAnnouncementRequest {
    string          AppID       = 10;
    string          Title       = 20;
    string          Content     = 30;
    repeated notif.manager.channel.v1.NotifChannel Channels = 40;
    uint32          EndAt       = 50;
}

message CreateAnnouncementResponse {
    Announcement Info = 10;
}

message UpdateAnnouncementRequest {
    string          ID          = 10;
    optional string Title       = 20;
    optional string Content     = 30;
    repeated notif.manager.channel.v1.NotifChannel Channels = 40;
    optional uint32 EndAt       = 50;
}

message UpdateAnnouncementResponse {
    Announcement Info = 10;
}

message DeleteAnnouncementRequest {
    string ID = 10;
}

message DeleteAnnouncementResponse {
    Announcement Info = 10;
}

message GetAnnouncementsRequest {
    string AppID  = 10;
    string UserID = 20;
    uint32 Offset = 30;
    uint32 Limit  = 40;
}

message GetAnnouncementsResponse {
    repeated Announcement Infos = 10;
    uint32                Total = 20;
}

message GetAppAnnouncementsRequest {
    string AppID  = 10;
    uint32 Offset = 30;
    uint32 Limit  = 40;
}

message GetAppAnnouncementsResponse {
    repeated Announcement Infos = 10;
    uint32                Total = 20;
}

message GetNAppAnnouncementsRequest {
    string TargetAppID  = 10;
    uint32 Offset       = 30;
    uint32 Limit        = 40;
}

message GetNAppAnnouncementsResponse {
    repeated Announcement Infos = 10;
    uint32                Total = 20;
}

message GetAnnouncementRequest {
    string ID = 10;
}

message GetAnnouncementResponse {
    Announcement Info = 10;
}