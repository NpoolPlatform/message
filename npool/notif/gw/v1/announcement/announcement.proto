syntax = "proto3";

package notif.gateway.announcement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/notif/gw/v1/announcement";

import "google/api/annotations.proto";
import "npool/basetypes/v1/channel.proto";
import "npool/basetypes/v1/notiftype.proto";

// Service Name
service Gateway {
  rpc CreateAnnouncement(CreateAnnouncementRequest)
      returns (CreateAnnouncementResponse) {
    option (google.api.http) = {
      post : "/v1/create/announcement"
      body : "*"
    };
  }

  rpc UpdateAnnouncement(UpdateAnnouncementRequest)
      returns (UpdateAnnouncementResponse) {
    option (google.api.http) = {
      post : "/v1/update/announcement"
      body : "*"
    };
  }

  rpc DeleteAnnouncement(DeleteAnnouncementRequest)
      returns (DeleteAnnouncementResponse) {
    option (google.api.http) = {
      post : "/v1/delete/announcement"
      body : "*"
    };
  }

  rpc GetAnnouncements(GetAnnouncementsRequest)
      returns (GetAnnouncementsResponse) {
    option (google.api.http) = {
      post : "/v1/get/announcements"
      body : "*"
    };
  }

  rpc GetAppAnnouncements(GetAppAnnouncementsRequest)
      returns (GetAppAnnouncementsResponse) {
    option (google.api.http) = {
      post : "/v1/get/app/announcements"
      body : "*"
    };
  }

  rpc GetNAppAnnouncements(GetNAppAnnouncementsRequest)
      returns (GetNAppAnnouncementsResponse) {
    option (google.api.http) = {
      post : "/v1/get/n/app/announcements"
      body : "*"
    };
  }
}

message Announcement {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string UserID = 40;
  string LangID = 41;
  string EmailAddress = 50;
  string PhoneNO = 60;
  string Username = 70;
  string Title = 80;
  string Content = 90;
  bool Notified = 110;
  uint32 StartAt = 130;
  uint32 EndAt = 140;
  basetypes.v1.NotifChannel Channel = 150;
  basetypes.v1.NotifType AnnouncementType = 160;
  uint32 CreatedAt = 1000;
  uint32 UpdatedAt = 1010;
}

message CreateAnnouncementRequest {
  string AppID = 10;
  string TargetLangID = 20;
  string Title = 30;
  string Content = 40;
  basetypes.v1.NotifChannel Channel = 50;
  uint32 EndAt = 60;
  basetypes.v1.NotifType AnnouncementType = 70;
  uint32 StartAt = 90;
}

message CreateAnnouncementResponse { Announcement Info = 10; }

message UpdateAnnouncementRequest {
  uint32 ID = 10;
  string EntID = 11;
  string AppID = 12;
  optional string Title = 20;
  optional string Content = 30;
  optional uint32 EndAt = 50;
  optional basetypes.v1.NotifType AnnouncementType = 60;
  optional uint32 StartAt = 70;
}

message UpdateAnnouncementResponse { Announcement Info = 10; }

message DeleteAnnouncementRequest {
  uint32 ID = 10;
  string EntID = 11;
  string AppID = 20;
}

message DeleteAnnouncementResponse { Announcement Info = 10; }

message GetAnnouncementsRequest {
  string AppID = 10;
  optional string UserID = 20;
  string LangID = 30;
  int32 Offset = 40;
  int32 Limit = 50;
}

message GetAnnouncementsResponse {
  repeated Announcement Infos = 10;
  uint32 Total = 20;
}

message GetAppAnnouncementsRequest {
  string AppID = 10;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppAnnouncementsResponse {
  repeated Announcement Infos = 10;
  uint32 Total = 20;
}

message GetNAppAnnouncementsRequest {
  string TargetAppID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetNAppAnnouncementsResponse {
  repeated Announcement Infos = 10;
  uint32 Total = 20;
}
