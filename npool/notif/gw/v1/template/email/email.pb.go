// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/notif/gw/v1/template/email/email.proto

package email

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	email "github.com/NpoolPlatform/message/npool/notif/mgr/v1/template/email"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID             string     `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetLangID      string     `protobuf:"bytes,20,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	UsedFor           v1.UsedFor `protobuf:"varint,30,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor" json:"UsedFor,omitempty"`
	Sender            string     `protobuf:"bytes,40,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ReplyTos          []string   `protobuf:"bytes,50,rep,name=ReplyTos,proto3" json:"ReplyTos,omitempty"`
	CCTos             []string   `protobuf:"bytes,60,rep,name=CCTos,proto3" json:"CCTos,omitempty"`
	Subject           string     `protobuf:"bytes,70,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body              string     `protobuf:"bytes,80,opt,name=Body,proto3" json:"Body,omitempty"`
	DefaultToUsername string     `protobuf:"bytes,90,opt,name=DefaultToUsername,proto3" json:"DefaultToUsername,omitempty"`
}

func (x *CreateEmailTemplateRequest) Reset() {
	*x = CreateEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateRequest) ProtoMessage() {}

func (x *CreateEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEmailTemplateRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateEmailTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *CreateEmailTemplateRequest) GetUsedFor() v1.UsedFor {
	if x != nil {
		return x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *CreateEmailTemplateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *CreateEmailTemplateRequest) GetReplyTos() []string {
	if x != nil {
		return x.ReplyTos
	}
	return nil
}

func (x *CreateEmailTemplateRequest) GetCCTos() []string {
	if x != nil {
		return x.CCTos
	}
	return nil
}

func (x *CreateEmailTemplateRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateEmailTemplateRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateEmailTemplateRequest) GetDefaultToUsername() string {
	if x != nil {
		return x.DefaultToUsername
	}
	return ""
}

type CreateEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *email.EmailTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateEmailTemplateResponse) Reset() {
	*x = CreateEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateResponse) ProtoMessage() {}

func (x *CreateEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEmailTemplateResponse) GetInfo() *email.EmailTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID       string     `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetLangID      string     `protobuf:"bytes,20,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	UsedFor           v1.UsedFor `protobuf:"varint,30,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor" json:"UsedFor,omitempty"`
	Sender            string     `protobuf:"bytes,40,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ReplyTos          []string   `protobuf:"bytes,50,rep,name=ReplyTos,proto3" json:"ReplyTos,omitempty"`
	CCTos             []string   `protobuf:"bytes,60,rep,name=CCTos,proto3" json:"CCTos,omitempty"`
	Subject           string     `protobuf:"bytes,70,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body              string     `protobuf:"bytes,80,opt,name=Body,proto3" json:"Body,omitempty"`
	DefaultToUsername string     `protobuf:"bytes,90,opt,name=DefaultToUsername,proto3" json:"DefaultToUsername,omitempty"`
}

func (x *CreateAppEmailTemplateRequest) Reset() {
	*x = CreateAppEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppEmailTemplateRequest) ProtoMessage() {}

func (x *CreateAppEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateAppEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAppEmailTemplateRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppEmailTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *CreateAppEmailTemplateRequest) GetUsedFor() v1.UsedFor {
	if x != nil {
		return x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *CreateAppEmailTemplateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *CreateAppEmailTemplateRequest) GetReplyTos() []string {
	if x != nil {
		return x.ReplyTos
	}
	return nil
}

func (x *CreateAppEmailTemplateRequest) GetCCTos() []string {
	if x != nil {
		return x.CCTos
	}
	return nil
}

func (x *CreateAppEmailTemplateRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateAppEmailTemplateRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateAppEmailTemplateRequest) GetDefaultToUsername() string {
	if x != nil {
		return x.DefaultToUsername
	}
	return ""
}

type CreateAppEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *email.EmailTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppEmailTemplateResponse) Reset() {
	*x = CreateAppEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppEmailTemplateResponse) ProtoMessage() {}

func (x *CreateAppEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateAppEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppEmailTemplateResponse) GetInfo() *email.EmailTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetEmailTemplateRequest) Reset() {
	*x = GetEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplateRequest) ProtoMessage() {}

func (x *GetEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{4}
}

func (x *GetEmailTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *email.EmailTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetEmailTemplateResponse) Reset() {
	*x = GetEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplateResponse) ProtoMessage() {}

func (x *GetEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{5}
}

func (x *GetEmailTemplateResponse) GetInfo() *email.EmailTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetEmailTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetEmailTemplatesRequest) Reset() {
	*x = GetEmailTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplatesRequest) ProtoMessage() {}

func (x *GetEmailTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetEmailTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{6}
}

func (x *GetEmailTemplatesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetEmailTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetEmailTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetEmailTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*email.EmailTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                 `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetEmailTemplatesResponse) Reset() {
	*x = GetEmailTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplatesResponse) ProtoMessage() {}

func (x *GetEmailTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetEmailTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{7}
}

func (x *GetEmailTemplatesResponse) GetInfos() []*email.EmailTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetEmailTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppEmailTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppEmailTemplatesRequest) Reset() {
	*x = GetAppEmailTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppEmailTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppEmailTemplatesRequest) ProtoMessage() {}

func (x *GetAppEmailTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppEmailTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetAppEmailTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{8}
}

func (x *GetAppEmailTemplatesRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppEmailTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppEmailTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppEmailTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*email.EmailTemplate `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                 `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppEmailTemplatesResponse) Reset() {
	*x = GetAppEmailTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppEmailTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppEmailTemplatesResponse) ProtoMessage() {}

func (x *GetAppEmailTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppEmailTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetAppEmailTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppEmailTemplatesResponse) GetInfos() []*email.EmailTemplate {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppEmailTemplatesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID             string   `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetLangID      string   `protobuf:"bytes,30,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	Sender            *string  `protobuf:"bytes,40,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
	ReplyTos          []string `protobuf:"bytes,50,rep,name=ReplyTos,proto3" json:"ReplyTos,omitempty"`
	CCTos             []string `protobuf:"bytes,60,rep,name=CCTos,proto3" json:"CCTos,omitempty"`
	Subject           *string  `protobuf:"bytes,70,opt,name=Subject,proto3,oneof" json:"Subject,omitempty"`
	Body              *string  `protobuf:"bytes,80,opt,name=Body,proto3,oneof" json:"Body,omitempty"`
	DefaultToUsername *string  `protobuf:"bytes,90,opt,name=DefaultToUsername,proto3,oneof" json:"DefaultToUsername,omitempty"`
}

func (x *UpdateEmailTemplateRequest) Reset() {
	*x = UpdateEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateRequest) ProtoMessage() {}

func (x *UpdateEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEmailTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetReplyTos() []string {
	if x != nil {
		return x.ReplyTos
	}
	return nil
}

func (x *UpdateEmailTemplateRequest) GetCCTos() []string {
	if x != nil {
		return x.CCTos
	}
	return nil
}

func (x *UpdateEmailTemplateRequest) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *UpdateEmailTemplateRequest) GetDefaultToUsername() string {
	if x != nil && x.DefaultToUsername != nil {
		return *x.DefaultToUsername
	}
	return ""
}

type UpdateEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *email.EmailTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateEmailTemplateResponse) Reset() {
	*x = UpdateEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateResponse) ProtoMessage() {}

func (x *UpdateEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEmailTemplateResponse) GetInfo() *email.EmailTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppEmailTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	TargetAppID       string   `protobuf:"bytes,20,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetLangID      string   `protobuf:"bytes,30,opt,name=TargetLangID,proto3" json:"TargetLangID,omitempty"`
	Sender            *string  `protobuf:"bytes,40,opt,name=Sender,proto3,oneof" json:"Sender,omitempty"`
	ReplyTos          []string `protobuf:"bytes,50,rep,name=ReplyTos,proto3" json:"ReplyTos,omitempty"`
	CCTos             []string `protobuf:"bytes,60,rep,name=CCTos,proto3" json:"CCTos,omitempty"`
	Subject           *string  `protobuf:"bytes,70,opt,name=Subject,proto3,oneof" json:"Subject,omitempty"`
	Body              *string  `protobuf:"bytes,80,opt,name=Body,proto3,oneof" json:"Body,omitempty"`
	DefaultToUsername *string  `protobuf:"bytes,90,opt,name=DefaultToUsername,proto3,oneof" json:"DefaultToUsername,omitempty"`
}

func (x *UpdateAppEmailTemplateRequest) Reset() {
	*x = UpdateAppEmailTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppEmailTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppEmailTemplateRequest) ProtoMessage() {}

func (x *UpdateAppEmailTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppEmailTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppEmailTemplateRequest) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAppEmailTemplateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetTargetLangID() string {
	if x != nil {
		return x.TargetLangID
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetReplyTos() []string {
	if x != nil {
		return x.ReplyTos
	}
	return nil
}

func (x *UpdateAppEmailTemplateRequest) GetCCTos() []string {
	if x != nil {
		return x.CCTos
	}
	return nil
}

func (x *UpdateAppEmailTemplateRequest) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *UpdateAppEmailTemplateRequest) GetDefaultToUsername() string {
	if x != nil && x.DefaultToUsername != nil {
		return *x.DefaultToUsername
	}
	return ""
}

type UpdateAppEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *email.EmailTemplate `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppEmailTemplateResponse) Reset() {
	*x = UpdateAppEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppEmailTemplateResponse) ProtoMessage() {}

func (x *UpdateAppEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_notif_gw_v1_template_email_email_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppEmailTemplateResponse) GetInfo() *email.EmailTemplate {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_notif_gw_v1_template_email_email_proto protoreflect.FileDescriptor

var file_npool_notif_gw_v1_template_email_email_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x64, 0x66, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad,
	0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x18, 0x32, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x43, 0x54, 0x6f, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x43, 0x54,
	0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x61,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xbc, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x18, 0x32,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x43, 0x54, 0x6f, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x43, 0x54, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x64, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x77, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6d, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7a, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd6, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1b,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x43, 0x54, 0x6f, 0x73,
	0x18, 0x3c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x43, 0x54, 0x6f, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x61,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x6f, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x43, 0x54, 0x6f, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x43, 0x43, 0x54, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x11, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x42,
	0x6f, 0x64, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0x9c, 0x0a, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xb5, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0xc2, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xa9, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0xad, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0xba, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01,
	0x2a, 0x12, 0xb5, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xc2, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x43,
	0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x2f, 0x67,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_notif_gw_v1_template_email_email_proto_rawDescOnce sync.Once
	file_npool_notif_gw_v1_template_email_email_proto_rawDescData = file_npool_notif_gw_v1_template_email_email_proto_rawDesc
)

func file_npool_notif_gw_v1_template_email_email_proto_rawDescGZIP() []byte {
	file_npool_notif_gw_v1_template_email_email_proto_rawDescOnce.Do(func() {
		file_npool_notif_gw_v1_template_email_email_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_notif_gw_v1_template_email_email_proto_rawDescData)
	})
	return file_npool_notif_gw_v1_template_email_email_proto_rawDescData
}

var file_npool_notif_gw_v1_template_email_email_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_npool_notif_gw_v1_template_email_email_proto_goTypes = []interface{}{
	(*CreateEmailTemplateRequest)(nil),     // 0: notif.gateway.template.email.v1.CreateEmailTemplateRequest
	(*CreateEmailTemplateResponse)(nil),    // 1: notif.gateway.template.email.v1.CreateEmailTemplateResponse
	(*CreateAppEmailTemplateRequest)(nil),  // 2: notif.gateway.template.email.v1.CreateAppEmailTemplateRequest
	(*CreateAppEmailTemplateResponse)(nil), // 3: notif.gateway.template.email.v1.CreateAppEmailTemplateResponse
	(*GetEmailTemplateRequest)(nil),        // 4: notif.gateway.template.email.v1.GetEmailTemplateRequest
	(*GetEmailTemplateResponse)(nil),       // 5: notif.gateway.template.email.v1.GetEmailTemplateResponse
	(*GetEmailTemplatesRequest)(nil),       // 6: notif.gateway.template.email.v1.GetEmailTemplatesRequest
	(*GetEmailTemplatesResponse)(nil),      // 7: notif.gateway.template.email.v1.GetEmailTemplatesResponse
	(*GetAppEmailTemplatesRequest)(nil),    // 8: notif.gateway.template.email.v1.GetAppEmailTemplatesRequest
	(*GetAppEmailTemplatesResponse)(nil),   // 9: notif.gateway.template.email.v1.GetAppEmailTemplatesResponse
	(*UpdateEmailTemplateRequest)(nil),     // 10: notif.gateway.template.email.v1.UpdateEmailTemplateRequest
	(*UpdateEmailTemplateResponse)(nil),    // 11: notif.gateway.template.email.v1.UpdateEmailTemplateResponse
	(*UpdateAppEmailTemplateRequest)(nil),  // 12: notif.gateway.template.email.v1.UpdateAppEmailTemplateRequest
	(*UpdateAppEmailTemplateResponse)(nil), // 13: notif.gateway.template.email.v1.UpdateAppEmailTemplateResponse
	(v1.UsedFor)(0),                        // 14: basetypes.v1.UsedFor
	(*email.EmailTemplate)(nil),            // 15: notif.manager.template.email.v1.EmailTemplate
}
var file_npool_notif_gw_v1_template_email_email_proto_depIdxs = []int32{
	14, // 0: notif.gateway.template.email.v1.CreateEmailTemplateRequest.UsedFor:type_name -> basetypes.v1.UsedFor
	15, // 1: notif.gateway.template.email.v1.CreateEmailTemplateResponse.Info:type_name -> notif.manager.template.email.v1.EmailTemplate
	14, // 2: notif.gateway.template.email.v1.CreateAppEmailTemplateRequest.UsedFor:type_name -> basetypes.v1.UsedFor
	15, // 3: notif.gateway.template.email.v1.CreateAppEmailTemplateResponse.Info:type_name -> notif.manager.template.email.v1.EmailTemplate
	15, // 4: notif.gateway.template.email.v1.GetEmailTemplateResponse.Info:type_name -> notif.manager.template.email.v1.EmailTemplate
	15, // 5: notif.gateway.template.email.v1.GetEmailTemplatesResponse.Infos:type_name -> notif.manager.template.email.v1.EmailTemplate
	15, // 6: notif.gateway.template.email.v1.GetAppEmailTemplatesResponse.Infos:type_name -> notif.manager.template.email.v1.EmailTemplate
	15, // 7: notif.gateway.template.email.v1.UpdateEmailTemplateResponse.Info:type_name -> notif.manager.template.email.v1.EmailTemplate
	15, // 8: notif.gateway.template.email.v1.UpdateAppEmailTemplateResponse.Info:type_name -> notif.manager.template.email.v1.EmailTemplate
	0,  // 9: notif.gateway.template.email.v1.Gateway.CreateEmailTemplate:input_type -> notif.gateway.template.email.v1.CreateEmailTemplateRequest
	2,  // 10: notif.gateway.template.email.v1.Gateway.CreateAppEmailTemplate:input_type -> notif.gateway.template.email.v1.CreateAppEmailTemplateRequest
	4,  // 11: notif.gateway.template.email.v1.Gateway.GetEmailTemplate:input_type -> notif.gateway.template.email.v1.GetEmailTemplateRequest
	6,  // 12: notif.gateway.template.email.v1.Gateway.GetEmailTemplates:input_type -> notif.gateway.template.email.v1.GetEmailTemplatesRequest
	8,  // 13: notif.gateway.template.email.v1.Gateway.GetAppEmailTemplates:input_type -> notif.gateway.template.email.v1.GetAppEmailTemplatesRequest
	10, // 14: notif.gateway.template.email.v1.Gateway.UpdateEmailTemplate:input_type -> notif.gateway.template.email.v1.UpdateEmailTemplateRequest
	12, // 15: notif.gateway.template.email.v1.Gateway.UpdateAppEmailTemplate:input_type -> notif.gateway.template.email.v1.UpdateAppEmailTemplateRequest
	1,  // 16: notif.gateway.template.email.v1.Gateway.CreateEmailTemplate:output_type -> notif.gateway.template.email.v1.CreateEmailTemplateResponse
	3,  // 17: notif.gateway.template.email.v1.Gateway.CreateAppEmailTemplate:output_type -> notif.gateway.template.email.v1.CreateAppEmailTemplateResponse
	5,  // 18: notif.gateway.template.email.v1.Gateway.GetEmailTemplate:output_type -> notif.gateway.template.email.v1.GetEmailTemplateResponse
	7,  // 19: notif.gateway.template.email.v1.Gateway.GetEmailTemplates:output_type -> notif.gateway.template.email.v1.GetEmailTemplatesResponse
	9,  // 20: notif.gateway.template.email.v1.Gateway.GetAppEmailTemplates:output_type -> notif.gateway.template.email.v1.GetAppEmailTemplatesResponse
	11, // 21: notif.gateway.template.email.v1.Gateway.UpdateEmailTemplate:output_type -> notif.gateway.template.email.v1.UpdateEmailTemplateResponse
	13, // 22: notif.gateway.template.email.v1.Gateway.UpdateAppEmailTemplate:output_type -> notif.gateway.template.email.v1.UpdateAppEmailTemplateResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_npool_notif_gw_v1_template_email_email_proto_init() }
func file_npool_notif_gw_v1_template_email_email_proto_init() {
	if File_npool_notif_gw_v1_template_email_email_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppEmailTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppEmailTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppEmailTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_notif_gw_v1_template_email_email_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_notif_gw_v1_template_email_email_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_npool_notif_gw_v1_template_email_email_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_notif_gw_v1_template_email_email_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_notif_gw_v1_template_email_email_proto_goTypes,
		DependencyIndexes: file_npool_notif_gw_v1_template_email_email_proto_depIdxs,
		MessageInfos:      file_npool_notif_gw_v1_template_email_email_proto_msgTypes,
	}.Build()
	File_npool_notif_gw_v1_template_email_email_proto = out.File
	file_npool_notif_gw_v1_template_email_email_proto_rawDesc = nil
	file_npool_notif_gw_v1_template_email_email_proto_goTypes = nil
	file_npool_notif_gw_v1_template_email_email_proto_depIdxs = nil
}
