syntax = "proto3";

package sphinx.coininfo.v1;

option go_package = "github.com/NpoolPlatform/message/npool/coininfo";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service SphinxCoinInfo {
    rpc Version (google.protobuf.Empty) returns (VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }
    rpc CreateCoinInfo (CreateCoinInfoRequest) returns (CreateCoinInfoResponse){
        option (google.api.http) = {
            post: "/v1/create/coininfo"
            body: "*"
        };
    }
    rpc GetCoinInfo (GetCoinInfoRequest) returns (GetCoinInfoResponse) {
        option (google.api.http) = {
            post: "/v1/get/coininfo"
      body: "*"
        };
  }
    rpc GetCoinInfos (GetCoinInfosRequest) returns (GetCoinInfosResponse){
        option (google.api.http) = {
            post: "/v1/get/coininfos"
      body: "*"
        };
    }
    rpc UpdateCoinInfo (UpdateCoinInfoRequest) returns (UpdateCoinInfoResponse) {
        option (google.api.http) = {
            post: "/v1/update/coininfo"
            body: "*"
        };
    }
    rpc CreateCoinDescription (CreateCoinDescriptionRequest) returns (CreateCoinDescriptionResponse){
      option (google.api.http) = {
          post: "/v1/create/coin/description"
          body: "*"
      };
    }
    rpc GetCoinDescription (GetCoinDescriptionRequest) returns (GetCoinDescriptionResponse) {
      option (google.api.http) = {
        post: "/v1/get/coin/description"
        body: "*"
      };
    }
    rpc UpdateCoinDescription (UpdateCoinDescriptionRequest) returns (UpdateCoinDescriptionResponse) {
      option (google.api.http) = {
        post: "/v1/update/coin/description"
        body: "*"
      };
    }
}

message VersionResponse {
  string Info = 100;
}

message CoinInfo {
    string  ID                    = 100; // uuid
    bool    PreSale         = 110; // 是否为预售，false为在售商品
    string  Name                  = 120; // 币种名称 FIL, BTC
    string  Unit                  = 130; // 单位：FIL
    string  Logo                    = 140; // url; can be empty
    string  ENV             = 150; // main or test
    double  ReservedAmount  = 160; // 预留金额
    uint32  CreatedAt         = 170;
    uint32  UpdatedAt         = 180;
    bool ForPay = 190; // 是否可用作支付货币
    string HomePage = 200;
    string Specs = 210;
}

message GetCoinInfoRequest {
  string ID   = 100;
  string Name = 110;
}

message GetCoinInfoResponse {
  CoinInfo Info = 100;
}

message CreateCoinInfoRequest {
  bool    PreSale = 100; // 是否为预售，false为在售商品
    string  Name      = 110; // 币种名称 FIL, BTC
    string  Unit      = 120; // 单位：FIL
    string  Logo        = 130; // url; can be empty
  string  ENV     = 140; // main or test
}

message CreateCoinInfoResponse {
    CoinInfo Info = 100;
}

message GetCoinInfosRequest {
    bool    PreSale = 100; // 是否为预售，false为在售商品
    string  Name      = 110; // 币种名称 FIL, BTC
    int32   Offset  = 120;
    int32   Limit       = 130;
}

message GetCoinInfosResponse {
    int32 Total                   = 100;
    repeated CoinInfo Infos = 110;
}

message UpdateCoinInfoRequest {
    string  ID                      = 100;
    bool    PreSale               = 110; // 是否为预售，false为在售商品
    string  Logo            = 120; // url; can be empty
    double  ReservedAmount  = 130;
    bool ForPay = 140;
    string HomePage = 150;
    string Specs = 160;
}

message UpdateCoinInfoResponse {
    CoinInfo Info = 100;
}

message CoinDescriptionInfo {
  string ID         = 100;
  string CoinTypeID = 110;
  string Title      = 120;
  string Message    = 130;
  string UsedFor    = 140;
  uint32 CreatedAt  = 150;
  uint32 UpdatedAt  = 160;
}

message CreateCoinDescriptionRequest  {
  string CoinTypeID = 100;
  string Title      = 110;
  string Message    = 120;
  string UsedFor    = 130;
}

message CreateCoinDescriptionResponse {
  CoinDescriptionInfo Info = 100;
}

message GetCoinDescriptionRequest {
  string CoinTypeID = 100;
}

message GetCoinDescriptionResponse {
  CoinDescriptionInfo Info = 100;
}

message UpdateCoinDescriptionRequest {
  string CoinTypeID = 110;
  string Title      = 120;
  string Message    = 130;
  string UsedFor    = 140;
}

message UpdateCoinDescriptionResponse {
  CoinDescriptionInfo Info = 100;
}
