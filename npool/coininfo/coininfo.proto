syntax = "proto3";

package sphinx.coininfo.v1;

option go_package = "github.com/NpoolPlatform/message/npool/coininfo";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// CoinInfo 服务
service SphinxCoinInfo {
	// 注册新币种
	rpc CreateCoinInfo (CreateCoinInfoRequest) returns (CreateCoinInfoResponse){
		option (google.api.http) = {
			post: "/v1/create/coin/info"
			body: "*"
		};
	}
	// 获取币种信息
	rpc GetCoinInfos (google.protobuf.Empty) returns (GetCoinInfosResponse){
		option (google.api.http) = {
			post: "/v1/get/coin/infos"
            body: "*"
		};
	}
	// 获取单个币种
	rpc GetCoinInfo (GetCoinInfoRequest) returns (GetCoinInfoResponse) {
		option (google.api.http) = {
			post: "/v1/get/coin/info"
            body: "*"
		};
    }

	// 设置币种是否预售
	rpc UpdateCoinInfo (UpdateCoinInfoRequest) returns (UpdateCoinInfoResponse) {
		option (google.api.http) = {
			post: "/v1/update/coin/info"
			body: "*"
		};
	}
}

// 数据库内CoinInfo
message CoinInfo {
	string ID 		= 100; // uuid
	bool PreSale 	= 110; // 是否为预售，false为在售商品
	string Name 	= 120; // 币种名称 FIL, BTC
	string Unit 	= 130; // 单位：FIL
	string Logo		= 140; // url; can be empty
}

// 获取单个币种
message GetCoinInfoRequest {
    string ID = 100;
}

message GetCoinInfoResponse {
    CoinInfo Info = 100;
}

// 注册币种信息
message CreateCoinInfoRequest {
    bool PreSale 	= 100; // 是否为预售，false为在售商品
	string Name 	= 110; // 币种名称 FIL, BTC
	string Unit 	= 120; // 单位：FIL
	string Logo		= 130; // url; can be empty
}

message CreateCoinInfoResponse {
	string ID = 100;
}

message GetCoinInfosRequest {
	bool PreSale 	= 100; // 是否为预售，false为在售商品
	string Name 	= 110; // 币种名称 FIL, BTC
	int32 Offset 	= 120;
	int32 Limit		= 130;
}

// 所有币种信息
message GetCoinInfosResponse {
	repeated CoinInfo Infos = 100;
}

// 设置预售请求
message UpdateCoinInfoRequest {
    string ID 		= 100;
	bool PreSale 	= 110; // 是否为预售，false为在售商品
	string Logo		= 120; // url; can be empty
}

message UpdateCoinInfoResponse {

}
