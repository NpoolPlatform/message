// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/ledger/mgr/v1/mining/profit/unsold/unsold.proto

package unsold

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnsoldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	GoodID      *string `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID  *string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	Amount      *string `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	BenefitDate *uint32 `protobuf:"varint,50,opt,name=BenefitDate,proto3,oneof" json:"BenefitDate,omitempty"`
	CreatedAt   *uint32 `protobuf:"varint,60,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
}

func (x *UnsoldReq) Reset() {
	*x = UnsoldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsoldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsoldReq) ProtoMessage() {}

func (x *UnsoldReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsoldReq.ProtoReflect.Descriptor instead.
func (*UnsoldReq) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{0}
}

func (x *UnsoldReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *UnsoldReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *UnsoldReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

func (x *UnsoldReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *UnsoldReq) GetBenefitDate() uint32 {
	if x != nil && x.BenefitDate != nil {
		return *x.BenefitDate
	}
	return 0
}

func (x *UnsoldReq) GetCreatedAt() uint32 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

type Unsold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID      string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID  string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Amount      string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	BenefitDate uint32 `protobuf:"varint,50,opt,name=BenefitDate,proto3" json:"BenefitDate,omitempty"`
	CreatedAt   uint32 `protobuf:"varint,60,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *Unsold) Reset() {
	*x = Unsold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsold) ProtoMessage() {}

func (x *Unsold) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsold.ProtoReflect.Descriptor instead.
func (*Unsold) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{1}
}

func (x *Unsold) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Unsold) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Unsold) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Unsold) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Unsold) GetBenefitDate() uint32 {
	if x != nil {
		return x.BenefitDate
	}
	return 0
}

func (x *Unsold) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	GoodID      *npool.StringVal `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID  *npool.StringVal `protobuf:"bytes,30,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	Amount      *npool.StringVal `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	BenefitDate *npool.Uint32Val `protobuf:"bytes,50,opt,name=BenefitDate,proto3,oneof" json:"BenefitDate,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetGoodID() *npool.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

func (x *Conds) GetAmount() *npool.StringVal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Conds) GetBenefitDate() *npool.Uint32Val {
	if x != nil {
		return x.BenefitDate
	}
	return nil
}

type CreateUnsoldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UnsoldReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUnsoldRequest) Reset() {
	*x = CreateUnsoldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUnsoldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnsoldRequest) ProtoMessage() {}

func (x *CreateUnsoldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnsoldRequest.ProtoReflect.Descriptor instead.
func (*CreateUnsoldRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUnsoldRequest) GetInfo() *UnsoldReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUnsoldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Unsold `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUnsoldResponse) Reset() {
	*x = CreateUnsoldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUnsoldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnsoldResponse) ProtoMessage() {}

func (x *CreateUnsoldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnsoldResponse.ProtoReflect.Descriptor instead.
func (*CreateUnsoldResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUnsoldResponse) GetInfo() *Unsold {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUnsoldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UnsoldReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateUnsoldsRequest) Reset() {
	*x = CreateUnsoldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUnsoldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnsoldsRequest) ProtoMessage() {}

func (x *CreateUnsoldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnsoldsRequest.ProtoReflect.Descriptor instead.
func (*CreateUnsoldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUnsoldsRequest) GetInfos() []*UnsoldReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateUnsoldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Unsold `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateUnsoldsResponse) Reset() {
	*x = CreateUnsoldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUnsoldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUnsoldsResponse) ProtoMessage() {}

func (x *CreateUnsoldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUnsoldsResponse.ProtoReflect.Descriptor instead.
func (*CreateUnsoldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUnsoldsResponse) GetInfos() []*Unsold {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUnsoldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetUnsoldRequest) Reset() {
	*x = GetUnsoldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldRequest) ProtoMessage() {}

func (x *GetUnsoldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldRequest.ProtoReflect.Descriptor instead.
func (*GetUnsoldRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{7}
}

func (x *GetUnsoldRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetUnsoldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Unsold `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUnsoldResponse) Reset() {
	*x = GetUnsoldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldResponse) ProtoMessage() {}

func (x *GetUnsoldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldResponse.ProtoReflect.Descriptor instead.
func (*GetUnsoldResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{8}
}

func (x *GetUnsoldResponse) GetInfo() *Unsold {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUnsoldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUnsoldsRequest) Reset() {
	*x = GetUnsoldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldsRequest) ProtoMessage() {}

func (x *GetUnsoldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldsRequest.ProtoReflect.Descriptor instead.
func (*GetUnsoldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{9}
}

func (x *GetUnsoldsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetUnsoldsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUnsoldsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUnsoldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Unsold `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetUnsoldsResponse) Reset() {
	*x = GetUnsoldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldsResponse) ProtoMessage() {}

func (x *GetUnsoldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldsResponse.ProtoReflect.Descriptor instead.
func (*GetUnsoldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{10}
}

func (x *GetUnsoldsResponse) GetInfos() []*Unsold {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetUnsoldsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUnsoldOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetUnsoldOnlyRequest) Reset() {
	*x = GetUnsoldOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldOnlyRequest) ProtoMessage() {}

func (x *GetUnsoldOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetUnsoldOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{11}
}

func (x *GetUnsoldOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetUnsoldOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Unsold `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUnsoldOnlyResponse) Reset() {
	*x = GetUnsoldOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnsoldOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnsoldOnlyResponse) ProtoMessage() {}

func (x *GetUnsoldOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnsoldOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetUnsoldOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{12}
}

func (x *GetUnsoldOnlyResponse) GetInfo() *Unsold {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistUnsoldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistUnsoldRequest) Reset() {
	*x = ExistUnsoldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUnsoldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUnsoldRequest) ProtoMessage() {}

func (x *ExistUnsoldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUnsoldRequest.ProtoReflect.Descriptor instead.
func (*ExistUnsoldRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{13}
}

func (x *ExistUnsoldRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistUnsoldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistUnsoldResponse) Reset() {
	*x = ExistUnsoldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUnsoldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUnsoldResponse) ProtoMessage() {}

func (x *ExistUnsoldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUnsoldResponse.ProtoReflect.Descriptor instead.
func (*ExistUnsoldResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{14}
}

func (x *ExistUnsoldResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistUnsoldCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistUnsoldCondsRequest) Reset() {
	*x = ExistUnsoldCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUnsoldCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUnsoldCondsRequest) ProtoMessage() {}

func (x *ExistUnsoldCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUnsoldCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistUnsoldCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{15}
}

func (x *ExistUnsoldCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistUnsoldCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistUnsoldCondsResponse) Reset() {
	*x = ExistUnsoldCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUnsoldCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUnsoldCondsResponse) ProtoMessage() {}

func (x *ExistUnsoldCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUnsoldCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistUnsoldCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{16}
}

func (x *ExistUnsoldCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountUnsoldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountUnsoldsRequest) Reset() {
	*x = CountUnsoldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUnsoldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUnsoldsRequest) ProtoMessage() {}

func (x *CountUnsoldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUnsoldsRequest.ProtoReflect.Descriptor instead.
func (*CountUnsoldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{17}
}

func (x *CountUnsoldsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountUnsoldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountUnsoldsResponse) Reset() {
	*x = CountUnsoldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUnsoldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUnsoldsResponse) ProtoMessage() {}

func (x *CountUnsoldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUnsoldsResponse.ProtoReflect.Descriptor instead.
func (*CountUnsoldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP(), []int{18}
}

func (x *CountUnsoldsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

var File_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto protoreflect.FileDescriptor

var file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDesc = []byte{
	0x0a, 0x35, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d,
	0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x2f, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2f, 0x75, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x93, 0x02, 0x0a, 0x09, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc7, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x06, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48,
	0x02, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x0b,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5c, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e,
	0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e,
	0x73, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73,
	0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x70, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e,
	0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x13,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73,
	0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x6f,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xb9, 0x09, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x12, 0x3b, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f,
	0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x3c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x12, 0x38, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8e, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x3c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f,
	0x6c, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x85, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x12,
	0x39, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75,
	0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x12, 0x3a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73,
	0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3f, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x3b,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e,
	0x73, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x73,
	0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x2e, 0x75, 0x6e, 0x73, 0x6f, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x2f, 0x75, 0x6e, 0x73, 0x6f, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescOnce sync.Once
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescData = file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDesc
)

func file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescGZIP() []byte {
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescOnce.Do(func() {
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescData)
	})
	return file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDescData
}

var file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_goTypes = []interface{}{
	(*UnsoldReq)(nil),                // 0: ledger.manager.mining.profit.unsold.v1.UnsoldReq
	(*Unsold)(nil),                   // 1: ledger.manager.mining.profit.unsold.v1.Unsold
	(*Conds)(nil),                    // 2: ledger.manager.mining.profit.unsold.v1.Conds
	(*CreateUnsoldRequest)(nil),      // 3: ledger.manager.mining.profit.unsold.v1.CreateUnsoldRequest
	(*CreateUnsoldResponse)(nil),     // 4: ledger.manager.mining.profit.unsold.v1.CreateUnsoldResponse
	(*CreateUnsoldsRequest)(nil),     // 5: ledger.manager.mining.profit.unsold.v1.CreateUnsoldsRequest
	(*CreateUnsoldsResponse)(nil),    // 6: ledger.manager.mining.profit.unsold.v1.CreateUnsoldsResponse
	(*GetUnsoldRequest)(nil),         // 7: ledger.manager.mining.profit.unsold.v1.GetUnsoldRequest
	(*GetUnsoldResponse)(nil),        // 8: ledger.manager.mining.profit.unsold.v1.GetUnsoldResponse
	(*GetUnsoldsRequest)(nil),        // 9: ledger.manager.mining.profit.unsold.v1.GetUnsoldsRequest
	(*GetUnsoldsResponse)(nil),       // 10: ledger.manager.mining.profit.unsold.v1.GetUnsoldsResponse
	(*GetUnsoldOnlyRequest)(nil),     // 11: ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyRequest
	(*GetUnsoldOnlyResponse)(nil),    // 12: ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyResponse
	(*ExistUnsoldRequest)(nil),       // 13: ledger.manager.mining.profit.unsold.v1.ExistUnsoldRequest
	(*ExistUnsoldResponse)(nil),      // 14: ledger.manager.mining.profit.unsold.v1.ExistUnsoldResponse
	(*ExistUnsoldCondsRequest)(nil),  // 15: ledger.manager.mining.profit.unsold.v1.ExistUnsoldCondsRequest
	(*ExistUnsoldCondsResponse)(nil), // 16: ledger.manager.mining.profit.unsold.v1.ExistUnsoldCondsResponse
	(*CountUnsoldsRequest)(nil),      // 17: ledger.manager.mining.profit.unsold.v1.CountUnsoldsRequest
	(*CountUnsoldsResponse)(nil),     // 18: ledger.manager.mining.profit.unsold.v1.CountUnsoldsResponse
	(*npool.StringVal)(nil),          // 19: npool.v1.StringVal
	(*npool.Uint32Val)(nil),          // 20: npool.v1.Uint32Val
	(*emptypb.Empty)(nil),            // 21: google.protobuf.Empty
	(*npool.VersionResponse)(nil),    // 22: npool.v1.VersionResponse
}
var file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_depIdxs = []int32{
	19, // 0: ledger.manager.mining.profit.unsold.v1.Conds.ID:type_name -> npool.v1.StringVal
	19, // 1: ledger.manager.mining.profit.unsold.v1.Conds.GoodID:type_name -> npool.v1.StringVal
	19, // 2: ledger.manager.mining.profit.unsold.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	19, // 3: ledger.manager.mining.profit.unsold.v1.Conds.Amount:type_name -> npool.v1.StringVal
	20, // 4: ledger.manager.mining.profit.unsold.v1.Conds.BenefitDate:type_name -> npool.v1.Uint32Val
	0,  // 5: ledger.manager.mining.profit.unsold.v1.CreateUnsoldRequest.Info:type_name -> ledger.manager.mining.profit.unsold.v1.UnsoldReq
	1,  // 6: ledger.manager.mining.profit.unsold.v1.CreateUnsoldResponse.Info:type_name -> ledger.manager.mining.profit.unsold.v1.Unsold
	0,  // 7: ledger.manager.mining.profit.unsold.v1.CreateUnsoldsRequest.Infos:type_name -> ledger.manager.mining.profit.unsold.v1.UnsoldReq
	1,  // 8: ledger.manager.mining.profit.unsold.v1.CreateUnsoldsResponse.Infos:type_name -> ledger.manager.mining.profit.unsold.v1.Unsold
	1,  // 9: ledger.manager.mining.profit.unsold.v1.GetUnsoldResponse.Info:type_name -> ledger.manager.mining.profit.unsold.v1.Unsold
	2,  // 10: ledger.manager.mining.profit.unsold.v1.GetUnsoldsRequest.Conds:type_name -> ledger.manager.mining.profit.unsold.v1.Conds
	1,  // 11: ledger.manager.mining.profit.unsold.v1.GetUnsoldsResponse.Infos:type_name -> ledger.manager.mining.profit.unsold.v1.Unsold
	2,  // 12: ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyRequest.Conds:type_name -> ledger.manager.mining.profit.unsold.v1.Conds
	1,  // 13: ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyResponse.Info:type_name -> ledger.manager.mining.profit.unsold.v1.Unsold
	2,  // 14: ledger.manager.mining.profit.unsold.v1.ExistUnsoldCondsRequest.Conds:type_name -> ledger.manager.mining.profit.unsold.v1.Conds
	2,  // 15: ledger.manager.mining.profit.unsold.v1.CountUnsoldsRequest.Conds:type_name -> ledger.manager.mining.profit.unsold.v1.Conds
	21, // 16: ledger.manager.mining.profit.unsold.v1.Manager.Version:input_type -> google.protobuf.Empty
	3,  // 17: ledger.manager.mining.profit.unsold.v1.Manager.CreateUnsold:input_type -> ledger.manager.mining.profit.unsold.v1.CreateUnsoldRequest
	5,  // 18: ledger.manager.mining.profit.unsold.v1.Manager.CreateUnsolds:input_type -> ledger.manager.mining.profit.unsold.v1.CreateUnsoldsRequest
	7,  // 19: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsold:input_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldRequest
	11, // 20: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsoldOnly:input_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyRequest
	9,  // 21: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsolds:input_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldsRequest
	13, // 22: ledger.manager.mining.profit.unsold.v1.Manager.ExistUnsold:input_type -> ledger.manager.mining.profit.unsold.v1.ExistUnsoldRequest
	15, // 23: ledger.manager.mining.profit.unsold.v1.Manager.ExistUnsoldConds:input_type -> ledger.manager.mining.profit.unsold.v1.ExistUnsoldCondsRequest
	17, // 24: ledger.manager.mining.profit.unsold.v1.Manager.CountUnsolds:input_type -> ledger.manager.mining.profit.unsold.v1.CountUnsoldsRequest
	22, // 25: ledger.manager.mining.profit.unsold.v1.Manager.Version:output_type -> npool.v1.VersionResponse
	4,  // 26: ledger.manager.mining.profit.unsold.v1.Manager.CreateUnsold:output_type -> ledger.manager.mining.profit.unsold.v1.CreateUnsoldResponse
	6,  // 27: ledger.manager.mining.profit.unsold.v1.Manager.CreateUnsolds:output_type -> ledger.manager.mining.profit.unsold.v1.CreateUnsoldsResponse
	8,  // 28: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsold:output_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldResponse
	12, // 29: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsoldOnly:output_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldOnlyResponse
	10, // 30: ledger.manager.mining.profit.unsold.v1.Manager.GetUnsolds:output_type -> ledger.manager.mining.profit.unsold.v1.GetUnsoldsResponse
	14, // 31: ledger.manager.mining.profit.unsold.v1.Manager.ExistUnsold:output_type -> ledger.manager.mining.profit.unsold.v1.ExistUnsoldResponse
	16, // 32: ledger.manager.mining.profit.unsold.v1.Manager.ExistUnsoldConds:output_type -> ledger.manager.mining.profit.unsold.v1.ExistUnsoldCondsResponse
	18, // 33: ledger.manager.mining.profit.unsold.v1.Manager.CountUnsolds:output_type -> ledger.manager.mining.profit.unsold.v1.CountUnsoldsResponse
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_init() }
func file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_init() {
	if File_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsoldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUnsoldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUnsoldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUnsoldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUnsoldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnsoldOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUnsoldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUnsoldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUnsoldCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUnsoldCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUnsoldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUnsoldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_goTypes,
		DependencyIndexes: file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_depIdxs,
		MessageInfos:      file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_msgTypes,
	}.Build()
	File_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto = out.File
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_rawDesc = nil
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_goTypes = nil
	file_npool_ledger_mgr_v1_mining_profit_unsold_unsold_proto_depIdxs = nil
}
