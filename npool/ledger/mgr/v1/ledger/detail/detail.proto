syntax = "proto3";

package ledger.manager.ledger.detail.v1;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mgr/v1/ledger/detail";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateDetail     (CreateDetailRequest)     returns (CreateDetailResponse)     {}
    rpc CreateDetails    (CreateDetailsRequest)    returns (CreateDetailsResponse)    {}
    rpc GetDetail        (GetDetailRequest)        returns (GetDetailResponse)        {}
    rpc GetDetailOnly    (GetDetailOnlyRequest)    returns (GetDetailOnlyResponse)    {}
    rpc GetDetails       (GetDetailsRequest)       returns (GetDetailsResponse)       {}
    rpc ExistDetail      (ExistDetailRequest)      returns (ExistDetailResponse)      {}
    rpc ExistDetailConds (ExistDetailCondsRequest) returns (ExistDetailCondsResponse) {}
    rpc CountDetails     (CountDetailsRequest)     returns (CountDetailsResponse)     {}
}

enum IOType {
    DefaultType        = 0;
    Incoming           = 10;
    Outcoming          = 11;
}

enum IOSubType {
    DefaultSubType            = 0;
    // I/O
    // I: record tids in extra
    // O: record order id in extra
    Payment                   = 100;
    // I: record good id in extra
    MiningBenefit             = 101;
    // I: record user id, order id in extra
    Commission                = 102;
    // I: record good id in extra
    TechniqueFeeCommission    = 103;
    // I: record address in extra
    Deposit                   = 104;
    // I: record from user in extra
    // O: record target user in extra
    Transfer                  = 105;
    // I: record admin user deposit user in extra
    AdminDeposit              = 106;
    // O
    Withdrawal                = 200;
}

message DetailReq {
    optional string     ID               = 10;
    optional string     AppID            = 20;
    optional string     UserID           = 30;
    optional string     CoinTypeID       = 40;
    optional IOType     IOType           = 50;
    optional IOSubType  IOSubType        = 60;
    optional string     Amount           = 70;
    // E.g. when pay with non-USDT coin
    optional string     FromCoinTypeID   = 80;
    optional string     CoinUSDCurrency  = 90;
    optional string     IOExtra          = 100;
    optional uint32     CreatedAt        = 110;
}

message Detail {
    string      ID                = 10;
    string      AppID             = 20;
    string      UserID            = 30;
    string      CoinTypeID        = 40;
    IOType      IOType            = 50;
    IOSubType   IOSubType         = 60;
    string      Amount            = 70;
    string      FromCoinTypeID    = 80;
    string      CoinUSDCurrency   = 90;
    string      IOExtra           = 100;
    uint32      CreatedAt         = 110;
}

message Conds {
    optional npool.v1.StringVal ID               = 10;
    optional npool.v1.StringVal AppID            = 20;
    optional npool.v1.StringVal UserID           = 30;
    optional npool.v1.StringVal CoinTypeID       = 40;
    optional npool.v1.Int32Val  IOType           = 50;
    optional npool.v1.Int32Val  IOSubType        = 60;
    optional npool.v1.StringVal Amount           = 70;
    optional npool.v1.StringVal FromCoinTypeID   = 80;
    optional npool.v1.StringVal CoinUSDCurrency  = 90;
    optional npool.v1.StringVal IOExtra          = 100;
}


message CreateDetailRequest {
    DetailReq Info = 10;
}

message CreateDetailResponse {
    Detail Info = 10;
}

message CreateDetailsRequest {
    repeated DetailReq Infos = 10;
}

message CreateDetailsResponse {
    repeated Detail Infos = 10;
}

message GetDetailRequest {
    string ID = 10;
}

message GetDetailResponse {
    Detail Info = 10;
}

message GetDetailsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetDetailsResponse {
    repeated Detail Infos = 10;
    uint32 Total          = 20;
}

message GetDetailOnlyRequest {
    Conds Conds = 10;
}

message GetDetailOnlyResponse {
    Detail Info = 10;
}

message ExistDetailRequest {
    string ID = 10;
}

message ExistDetailResponse {
    bool Info = 10;
}

message ExistDetailCondsRequest {
    Conds Conds = 10;
}

message ExistDetailCondsResponse {
    bool Info = 10;
}

message CountDetailsRequest {
    Conds Conds = 10;
}

message CountDetailsResponse {
    uint32 Info = 10;
}

