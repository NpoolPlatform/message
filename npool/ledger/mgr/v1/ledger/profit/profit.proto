syntax = "proto3";

package ledger.manager.ledger.profit.v1;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mgr/v1/ledger/profit";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateProfit     (CreateProfitRequest)     returns (CreateProfitResponse)     {}
    rpc CreateProfits    (CreateProfitsRequest)    returns (CreateProfitsResponse)    {}
    rpc AddProfit        (AddProfitRequest)        returns (AddProfitResponse)        {}
    rpc GetProfit        (GetProfitRequest)        returns (GetProfitResponse)        {}
    rpc GetProfitOnly    (GetProfitOnlyRequest)    returns (GetProfitOnlyResponse)    {}
    rpc GetProfits       (GetProfitsRequest)       returns (GetProfitsResponse)       {}
    rpc ExistProfit      (ExistProfitRequest)      returns (ExistProfitResponse)      {}
    rpc ExistProfitConds (ExistProfitCondsRequest) returns (ExistProfitCondsResponse) {}
    rpc CountProfits     (CountProfitsRequest)     returns (CountProfitsResponse)     {}
    rpc DeleteProfit     (DeleteProfitRequest)     returns (DeleteProfitResponse)     {}
}

message ProfitReq {
    optional string ID         = 10;
    optional string AppID      = 20;
    optional string UserID     = 30;
    optional string CoinTypeID = 40;
    optional string Incoming   = 50;
}

message Profit {
    string ID         = 10;
    string AppID      = 20;
    string UserID     = 30;
    string CoinTypeID = 40;
    string Incoming   = 50;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal AppID      = 20;
    optional npool.v1.StringVal UserID     = 30;
    optional npool.v1.StringVal CoinTypeID = 40;
    optional npool.v1.StringVal Incoming   = 50;
}


message CreateProfitRequest {
    ProfitReq Info = 10;
}

message CreateProfitResponse {
    Profit Info = 10;
}

message CreateProfitsRequest {
    repeated ProfitReq Infos = 10;
}

message CreateProfitsResponse {
    repeated Profit Infos = 10;
}

message AddProfitRequest {
    ProfitReq Info = 10;
}

message AddProfitResponse {
    Profit Info = 10;
}

message GetProfitRequest {
    string ID = 10;
}

message GetProfitResponse {
    Profit Info = 10;
}

message GetProfitsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetProfitsResponse {
    repeated Profit Infos = 10;
    uint32 Total = 20;
}

message GetProfitOnlyRequest {
    Conds Conds = 10;
}

message GetProfitOnlyResponse {
    Profit Info = 10;
}

message ExistProfitRequest {
    string ID = 10;
}

message ExistProfitResponse {
    bool Info = 10;
}

message ExistProfitCondsRequest {
    Conds Conds = 10;
}

message ExistProfitCondsResponse {
    bool Info = 10;
}

message CountProfitsRequest {
    Conds Conds = 10;
}

message CountProfitsResponse {
    uint32 Info = 10;
}

message DeleteProfitRequest {
    string ID = 10;
}

message DeleteProfitResponse {
    Profit Info = 10;
}

