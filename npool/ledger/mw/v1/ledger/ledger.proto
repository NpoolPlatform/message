syntax = "proto3";

package ledger.middleware.ledger1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mw/v1/ledger";

import "npool/ledger/mw/v2/ledger/general/general.proto";
import "npool/ledger/mw/v2/ledger/detail/detail.proto";
import "npool/ledger/mw/v2/ledger/withdraw/withdraw.proto";

// Service Name
service Middleware {
    rpc GetIntervalGenerals       (GetIntervalGeneralsRequest)       returns (GetIntervalGeneralsResponse)  {}
    rpc GetIntervalDetails        (GetIntervalDetailsRequest)        returns (GetIntervalDetailsResponse)   {}
    rpc GetIntervalProfits        (GetIntervalProfitsRequest)        returns (GetIntervalProfitsResponse)   {}

    rpc BookKeeping               (BookKeepingRequest)               returns (BookKeepingResponse)          {}
    rpc LockBalance               (LockBalanceRequest)               returns (LockBalanceResponse)          {}
    rpc UnlockBalance             (UnlockBalanceRequest)             returns (UnlockBalanceResponse)        {}

    rpc FinalPayment              (FinalPaymentRequest)              returns (FinalPaymentResponse)         {}
    rpc UpdateWithdraw            (UpdateWithdrawRequest)            returns (UpdateWithdrawResponse)       {}
}

message GetIntervalGeneralsRequest {
    string AppID   = 10;
    string UserID  = 20;
    uint32 Start   = 30;
    uint32 End     = 40;
    int32  Offset  = 50;
    int32  Limit   = 60;
}

message GetIntervalGeneralsResponse {
    repeated .ledger.middleware.ledger.general.v2.General Infos = 10;
    uint32                                                Total = 20;
}

message GetIntervalDetailsRequest {
    string AppID   = 10;
    string UserID  = 20;
    uint32 Start   = 30;
    uint32 End     = 40;
    int32  Offset  = 50;
    int32  Limit   = 60;
}

message GetIntervalDetailsResponse {
    repeated .ledger.middleware.ledger.detail.v2.Detail Infos = 10;
    uint32                                              Total = 20;
}

message GetIntervalProfitsRequest {
    string AppID   = 10;
    string UserID  = 20;
    uint32 Start   = 30;
    uint32 End     = 40;
    int32  Offset  = 50;
    int32  Limit   = 60;
}

message GetIntervalProfitsResponse {
    repeated .ledger.middleware.ledger.detail.v2.Detail Infos = 10;
    uint32                                              Total = 20;
}

message BookKeepingRequest {
    .ledger.middleware.ledger.detail.v2.DetailReq Info = 10;
}

message BookKeepingResponse {
}

message LockBalanceRequest {
    string AppID       = 10;
    string UserID      = 20;
    string CoinTypeID  = 30;
    string Amount      = 40;
}

message LockBalanceResponse {
}

message UnlockBalanceRequest {
    string AppID                                        = 10;
    string UserID                                       = 20;
    string CoinTypeID                                   = 30;
    string Unlocked                                     = 40;
    string Outcoming                                    = 50;
    // Only Payment or Withdrawal
    .ledger.middleware.ledger.detail.v2.IOSubType IOSubType    = 60;
    string IOExtra                                      = 70;
}

message UnlockBalanceResponse {
}

message FinalPaymentRequest {
    repeated .ledger.middleware.ledger.detail.v2.DetailReq Infos = 10;
}

message FinalPaymentResponse {
    
}

message UpdateWithdrawRequest {
    .ledger.middleware.ledger.withdraw.v2.WithdrawReq Info = 10;
}

message UpdateWithdrawResponse {
    .ledger.middleware.ledger.withdraw.v2.Withdraw Info = 10;
}


