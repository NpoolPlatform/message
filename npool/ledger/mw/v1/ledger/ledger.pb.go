// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/ledger/mw/v1/ledger/ledger.proto

package ledger

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/ledger/v1"
	ledger "github.com/NpoolPlatform/message/npool/ledger/mw/v2/ledger"
	statement "github.com/NpoolPlatform/message/npool/ledger/mw/v2/statement"
	withdraw "github.com/NpoolPlatform/message/npool/ledger/mw/v2/withdraw"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetIntervalLedgersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Start  uint32 `protobuf:"varint,30,opt,name=Start,proto3" json:"Start,omitempty"`
	End    uint32 `protobuf:"varint,40,opt,name=End,proto3" json:"End,omitempty"`
	Offset int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalLedgersRequest) Reset() {
	*x = GetIntervalLedgersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalLedgersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalLedgersRequest) ProtoMessage() {}

func (x *GetIntervalLedgersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalLedgersRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalLedgersRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *GetIntervalLedgersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalLedgersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalLedgersRequest) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalLedgersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*ledger.Ledger `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32           `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalLedgersResponse) Reset() {
	*x = GetIntervalLedgersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalLedgersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalLedgersResponse) ProtoMessage() {}

func (x *GetIntervalLedgersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalLedgersResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalLedgersResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *GetIntervalLedgersResponse) GetInfos() []*ledger.Ledger {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalLedgersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetIntervalStatementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Start  uint32 `protobuf:"varint,30,opt,name=Start,proto3" json:"Start,omitempty"`
	End    uint32 `protobuf:"varint,40,opt,name=End,proto3" json:"End,omitempty"`
	Offset int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalStatementsRequest) Reset() {
	*x = GetIntervalStatementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalStatementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalStatementsRequest) ProtoMessage() {}

func (x *GetIntervalStatementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalStatementsRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalStatementsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *GetIntervalStatementsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalStatementsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalStatementsRequest) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetIntervalStatementsRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetIntervalStatementsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalStatementsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalStatementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*statement.Statement `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                 `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalStatementsResponse) Reset() {
	*x = GetIntervalStatementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalStatementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalStatementsResponse) ProtoMessage() {}

func (x *GetIntervalStatementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalStatementsResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalStatementsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *GetIntervalStatementsResponse) GetInfos() []*statement.Statement {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalStatementsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetIntervalProfitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Start  uint32 `protobuf:"varint,30,opt,name=Start,proto3" json:"Start,omitempty"`
	End    uint32 `protobuf:"varint,40,opt,name=End,proto3" json:"End,omitempty"`
	Offset int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalProfitsRequest) Reset() {
	*x = GetIntervalProfitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalProfitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalProfitsRequest) ProtoMessage() {}

func (x *GetIntervalProfitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalProfitsRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalProfitsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *GetIntervalProfitsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalProfitsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalProfitsRequest) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalProfitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*statement.Statement `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                 `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalProfitsResponse) Reset() {
	*x = GetIntervalProfitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalProfitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalProfitsResponse) ProtoMessage() {}

func (x *GetIntervalProfitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalProfitsResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalProfitsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{5}
}

func (x *GetIntervalProfitsResponse) GetInfos() []*statement.Statement {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalProfitsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BookKeepingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *statement.StatementReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *BookKeepingRequest) Reset() {
	*x = BookKeepingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookKeepingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookKeepingRequest) ProtoMessage() {}

func (x *BookKeepingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookKeepingRequest.ProtoReflect.Descriptor instead.
func (*BookKeepingRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{6}
}

func (x *BookKeepingRequest) GetInfo() *statement.StatementReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type BookKeepingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BookKeepingResponse) Reset() {
	*x = BookKeepingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookKeepingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookKeepingResponse) ProtoMessage() {}

func (x *BookKeepingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookKeepingResponse.ProtoReflect.Descriptor instead.
func (*BookKeepingResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{7}
}

type LockBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Amount     string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *LockBalanceRequest) Reset() {
	*x = LockBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockBalanceRequest) ProtoMessage() {}

func (x *LockBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockBalanceRequest.ProtoReflect.Descriptor instead.
func (*LockBalanceRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{8}
}

func (x *LockBalanceRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *LockBalanceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LockBalanceRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *LockBalanceRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type LockBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockBalanceResponse) Reset() {
	*x = LockBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockBalanceResponse) ProtoMessage() {}

func (x *LockBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockBalanceResponse.ProtoReflect.Descriptor instead.
func (*LockBalanceResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{9}
}

type UnlockBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Unlocked   string `protobuf:"bytes,40,opt,name=Unlocked,proto3" json:"Unlocked,omitempty"`
	Outcoming  string `protobuf:"bytes,50,opt,name=Outcoming,proto3" json:"Outcoming,omitempty"`
	// Only Payment or Withdrawal
	IOSubType v1.IOSubType `protobuf:"varint,60,opt,name=IOSubType,proto3,enum=basetypes.ledger.v1.IOSubType" json:"IOSubType,omitempty"`
	IOExtra   string       `protobuf:"bytes,70,opt,name=IOExtra,proto3" json:"IOExtra,omitempty"`
}

func (x *UnlockBalanceRequest) Reset() {
	*x = UnlockBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockBalanceRequest) ProtoMessage() {}

func (x *UnlockBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockBalanceRequest.ProtoReflect.Descriptor instead.
func (*UnlockBalanceRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{10}
}

func (x *UnlockBalanceRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UnlockBalanceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UnlockBalanceRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *UnlockBalanceRequest) GetUnlocked() string {
	if x != nil {
		return x.Unlocked
	}
	return ""
}

func (x *UnlockBalanceRequest) GetOutcoming() string {
	if x != nil {
		return x.Outcoming
	}
	return ""
}

func (x *UnlockBalanceRequest) GetIOSubType() v1.IOSubType {
	if x != nil {
		return x.IOSubType
	}
	return v1.IOSubType(0)
}

func (x *UnlockBalanceRequest) GetIOExtra() string {
	if x != nil {
		return x.IOExtra
	}
	return ""
}

type UnlockBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockBalanceResponse) Reset() {
	*x = UnlockBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockBalanceResponse) ProtoMessage() {}

func (x *UnlockBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockBalanceResponse.ProtoReflect.Descriptor instead.
func (*UnlockBalanceResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{11}
}

type FinalPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*statement.StatementReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *FinalPaymentRequest) Reset() {
	*x = FinalPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalPaymentRequest) ProtoMessage() {}

func (x *FinalPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalPaymentRequest.ProtoReflect.Descriptor instead.
func (*FinalPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{12}
}

func (x *FinalPaymentRequest) GetInfos() []*statement.StatementReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type FinalPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalPaymentResponse) Reset() {
	*x = FinalPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalPaymentResponse) ProtoMessage() {}

func (x *FinalPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalPaymentResponse.ProtoReflect.Descriptor instead.
func (*FinalPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{13}
}

type UpdateWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *withdraw.WithdrawReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateWithdrawRequest) Reset() {
	*x = UpdateWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWithdrawRequest) ProtoMessage() {}

func (x *UpdateWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWithdrawRequest.ProtoReflect.Descriptor instead.
func (*UpdateWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateWithdrawRequest) GetInfo() *withdraw.WithdrawReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *withdraw.Withdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateWithdrawResponse) Reset() {
	*x = UpdateWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWithdrawResponse) ProtoMessage() {}

func (x *UpdateWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWithdrawResponse.ProtoReflect.Descriptor instead.
func (*UpdateWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateWithdrawResponse) GetInfo() *withdraw.Withdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_ledger_mw_v1_ledger_ledger_proto protoreflect.FileDescriptor

var file_npool_ledger_mw_v1_ledger_ledger_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x32,
	0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9f, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xa2, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x76, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x45, 0x6e,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x73, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13,
	0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x49, 0x4f, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e,
	0x76, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x99, 0x08, 0x0a, 0x0a,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x73, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x3a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x73, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x4b,
	0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4b, 0x65, 0x65, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a,
	0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x77, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescOnce sync.Once
	file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescData = file_npool_ledger_mw_v1_ledger_ledger_proto_rawDesc
)

func file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescGZIP() []byte {
	file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescOnce.Do(func() {
		file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescData)
	})
	return file_npool_ledger_mw_v1_ledger_ledger_proto_rawDescData
}

var file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_npool_ledger_mw_v1_ledger_ledger_proto_goTypes = []interface{}{
	(*GetIntervalLedgersRequest)(nil),     // 0: ledger.middleware.ledger1.v1.GetIntervalLedgersRequest
	(*GetIntervalLedgersResponse)(nil),    // 1: ledger.middleware.ledger1.v1.GetIntervalLedgersResponse
	(*GetIntervalStatementsRequest)(nil),  // 2: ledger.middleware.ledger1.v1.GetIntervalStatementsRequest
	(*GetIntervalStatementsResponse)(nil), // 3: ledger.middleware.ledger1.v1.GetIntervalStatementsResponse
	(*GetIntervalProfitsRequest)(nil),     // 4: ledger.middleware.ledger1.v1.GetIntervalProfitsRequest
	(*GetIntervalProfitsResponse)(nil),    // 5: ledger.middleware.ledger1.v1.GetIntervalProfitsResponse
	(*BookKeepingRequest)(nil),            // 6: ledger.middleware.ledger1.v1.BookKeepingRequest
	(*BookKeepingResponse)(nil),           // 7: ledger.middleware.ledger1.v1.BookKeepingResponse
	(*LockBalanceRequest)(nil),            // 8: ledger.middleware.ledger1.v1.LockBalanceRequest
	(*LockBalanceResponse)(nil),           // 9: ledger.middleware.ledger1.v1.LockBalanceResponse
	(*UnlockBalanceRequest)(nil),          // 10: ledger.middleware.ledger1.v1.UnlockBalanceRequest
	(*UnlockBalanceResponse)(nil),         // 11: ledger.middleware.ledger1.v1.UnlockBalanceResponse
	(*FinalPaymentRequest)(nil),           // 12: ledger.middleware.ledger1.v1.FinalPaymentRequest
	(*FinalPaymentResponse)(nil),          // 13: ledger.middleware.ledger1.v1.FinalPaymentResponse
	(*UpdateWithdrawRequest)(nil),         // 14: ledger.middleware.ledger1.v1.UpdateWithdrawRequest
	(*UpdateWithdrawResponse)(nil),        // 15: ledger.middleware.ledger1.v1.UpdateWithdrawResponse
	(*ledger.Ledger)(nil),                 // 16: ledger.middleware.ledger.v2.Ledger
	(*statement.Statement)(nil),           // 17: ledger.middleware.statement.v2.Statement
	(*statement.StatementReq)(nil),        // 18: ledger.middleware.statement.v2.StatementReq
	(v1.IOSubType)(0),                     // 19: basetypes.ledger.v1.IOSubType
	(*withdraw.WithdrawReq)(nil),          // 20: ledger.middleware.withdraw.v2.WithdrawReq
	(*withdraw.Withdraw)(nil),             // 21: ledger.middleware.withdraw.v2.Withdraw
}
var file_npool_ledger_mw_v1_ledger_ledger_proto_depIdxs = []int32{
	16, // 0: ledger.middleware.ledger1.v1.GetIntervalLedgersResponse.Infos:type_name -> ledger.middleware.ledger.v2.Ledger
	17, // 1: ledger.middleware.ledger1.v1.GetIntervalStatementsResponse.Infos:type_name -> ledger.middleware.statement.v2.Statement
	17, // 2: ledger.middleware.ledger1.v1.GetIntervalProfitsResponse.Infos:type_name -> ledger.middleware.statement.v2.Statement
	18, // 3: ledger.middleware.ledger1.v1.BookKeepingRequest.Info:type_name -> ledger.middleware.statement.v2.StatementReq
	19, // 4: ledger.middleware.ledger1.v1.UnlockBalanceRequest.IOSubType:type_name -> basetypes.ledger.v1.IOSubType
	18, // 5: ledger.middleware.ledger1.v1.FinalPaymentRequest.Infos:type_name -> ledger.middleware.statement.v2.StatementReq
	20, // 6: ledger.middleware.ledger1.v1.UpdateWithdrawRequest.Info:type_name -> ledger.middleware.withdraw.v2.WithdrawReq
	21, // 7: ledger.middleware.ledger1.v1.UpdateWithdrawResponse.Info:type_name -> ledger.middleware.withdraw.v2.Withdraw
	0,  // 8: ledger.middleware.ledger1.v1.Middleware.GetIntervalLedgers:input_type -> ledger.middleware.ledger1.v1.GetIntervalLedgersRequest
	2,  // 9: ledger.middleware.ledger1.v1.Middleware.GetIntervalStatements:input_type -> ledger.middleware.ledger1.v1.GetIntervalStatementsRequest
	4,  // 10: ledger.middleware.ledger1.v1.Middleware.GetIntervalProfits:input_type -> ledger.middleware.ledger1.v1.GetIntervalProfitsRequest
	6,  // 11: ledger.middleware.ledger1.v1.Middleware.BookKeeping:input_type -> ledger.middleware.ledger1.v1.BookKeepingRequest
	8,  // 12: ledger.middleware.ledger1.v1.Middleware.LockBalance:input_type -> ledger.middleware.ledger1.v1.LockBalanceRequest
	10, // 13: ledger.middleware.ledger1.v1.Middleware.UnlockBalance:input_type -> ledger.middleware.ledger1.v1.UnlockBalanceRequest
	12, // 14: ledger.middleware.ledger1.v1.Middleware.FinalPayment:input_type -> ledger.middleware.ledger1.v1.FinalPaymentRequest
	14, // 15: ledger.middleware.ledger1.v1.Middleware.UpdateWithdraw:input_type -> ledger.middleware.ledger1.v1.UpdateWithdrawRequest
	1,  // 16: ledger.middleware.ledger1.v1.Middleware.GetIntervalLedgers:output_type -> ledger.middleware.ledger1.v1.GetIntervalLedgersResponse
	3,  // 17: ledger.middleware.ledger1.v1.Middleware.GetIntervalStatements:output_type -> ledger.middleware.ledger1.v1.GetIntervalStatementsResponse
	5,  // 18: ledger.middleware.ledger1.v1.Middleware.GetIntervalProfits:output_type -> ledger.middleware.ledger1.v1.GetIntervalProfitsResponse
	7,  // 19: ledger.middleware.ledger1.v1.Middleware.BookKeeping:output_type -> ledger.middleware.ledger1.v1.BookKeepingResponse
	9,  // 20: ledger.middleware.ledger1.v1.Middleware.LockBalance:output_type -> ledger.middleware.ledger1.v1.LockBalanceResponse
	11, // 21: ledger.middleware.ledger1.v1.Middleware.UnlockBalance:output_type -> ledger.middleware.ledger1.v1.UnlockBalanceResponse
	13, // 22: ledger.middleware.ledger1.v1.Middleware.FinalPayment:output_type -> ledger.middleware.ledger1.v1.FinalPaymentResponse
	15, // 23: ledger.middleware.ledger1.v1.Middleware.UpdateWithdraw:output_type -> ledger.middleware.ledger1.v1.UpdateWithdrawResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_npool_ledger_mw_v1_ledger_ledger_proto_init() }
func file_npool_ledger_mw_v1_ledger_ledger_proto_init() {
	if File_npool_ledger_mw_v1_ledger_ledger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalLedgersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalLedgersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalStatementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalStatementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalProfitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalProfitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookKeepingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookKeepingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_ledger_mw_v1_ledger_ledger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_ledger_mw_v1_ledger_ledger_proto_goTypes,
		DependencyIndexes: file_npool_ledger_mw_v1_ledger_ledger_proto_depIdxs,
		MessageInfos:      file_npool_ledger_mw_v1_ledger_ledger_proto_msgTypes,
	}.Build()
	File_npool_ledger_mw_v1_ledger_ledger_proto = out.File
	file_npool_ledger_mw_v1_ledger_ledger_proto_rawDesc = nil
	file_npool_ledger_mw_v1_ledger_ledger_proto_goTypes = nil
	file_npool_ledger_mw_v1_ledger_ledger_proto_depIdxs = nil
}
