{
  "swagger": "2.0",
  "info": {
    "title": "npool/ledger/mw/v2/withdraw/withdraw.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Middleware"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/withdraw_CreateWithdraw": {
      "post": {
        "operationId": "Middleware_CreateWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateWithdrawRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/withdraw_DeleteWithdraw": {
      "post": {
        "operationId": "Middleware_DeleteWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteWithdrawRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/withdraw_GetWithdraw": {
      "post": {
        "operationId": "Middleware_GetWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetWithdrawRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/withdraw_GetWithdraws": {
      "post": {
        "operationId": "Middleware_GetWithdraws",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetWithdrawsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetWithdrawsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/withdraw_UpdateWithdraw": {
      "post": {
        "operationId": "Middleware_UpdateWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2UpdateWithdrawRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1StringVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "v1Uint32Val": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1WithdrawState": {
      "type": "string",
      "enum": [
        "DefaultWithdrawState",
        "Created",
        "Reviewing",
        "Approved",
        "Transferring",
        "PreRejected",
        "ReturnRejectedBalance",
        "Rejected",
        "PreFail",
        "ReturnFailBalance",
        "TransactionFail",
        "PreSuccessful",
        "SpendSuccessfulBalance",
        "Successful"
      ],
      "default": "DefaultWithdrawState",
      "title": "- ReturnRejectedBalance: -\u003e Rejected\n - Rejected: ReturnRejectedBalance \u003c- (rollback)\n - ReturnFailBalance: -\u003e TransactionFail\n - TransactionFail: ReturnFailBalance \u003c-\n - SpendSuccessfulBalance: -\u003e Successful\n - Successful: SpendSuccessfulBalance \u003c-"
    },
    "v2Conds": {
      "type": "object",
      "properties": {
        "EntID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "AppID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "UserID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "CoinTypeID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "AccountID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "CreatedAt": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "State": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "ReviewID": {
          "$ref": "#/definitions/v1StringVal"
        }
      }
    },
    "v2CreateWithdrawRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2WithdrawReq"
        }
      }
    },
    "v2CreateWithdrawResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Withdraw"
        }
      }
    },
    "v2DeleteWithdrawRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2WithdrawReq"
        }
      }
    },
    "v2DeleteWithdrawResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Withdraw"
        }
      }
    },
    "v2GetWithdrawRequest": {
      "type": "object",
      "properties": {
        "EntID": {
          "type": "string"
        }
      }
    },
    "v2GetWithdrawResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Withdraw"
        }
      }
    },
    "v2GetWithdrawsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v2Conds"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v2GetWithdrawsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Withdraw"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v2UpdateWithdrawRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2WithdrawReq"
        }
      }
    },
    "v2UpdateWithdrawResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Withdraw"
        }
      }
    },
    "v2Withdraw": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"id\""
        },
        "EntID": {
          "type": "string",
          "title": "@inject_tag: sql:\"ent_id\""
        },
        "AppID": {
          "type": "string",
          "title": "@inject_tag: sql:\"app_id\""
        },
        "UserID": {
          "type": "string",
          "title": "@inject_tag: sql:\"user_id\""
        },
        "CoinTypeID": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_type_id\""
        },
        "AccountID": {
          "type": "string",
          "title": "@inject_tag: sql:\"account_id\""
        },
        "Address": {
          "type": "string",
          "title": "@inject_tag: sql:\"address\""
        },
        "Amount": {
          "type": "string",
          "title": "@inject_tag: sql:\"amount\""
        },
        "PlatformTransactionID": {
          "type": "string",
          "title": "@inject_tag: sql:\"platform_transaction_id\""
        },
        "ChainTransactionID": {
          "type": "string",
          "title": "@inject_tag: sql:\"chain_transaction_id\""
        },
        "StateStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"state\""
        },
        "State": {
          "$ref": "#/definitions/v1WithdrawState"
        },
        "ReviewID": {
          "type": "string",
          "title": "@inject_tag: sql:\"review_id\""
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"created_at\""
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"updated_at\""
        }
      }
    },
    "v2WithdrawReq": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "EntID": {
          "type": "string"
        },
        "AppID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "CoinTypeID": {
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Amount": {
          "type": "string"
        },
        "PlatformTransactionID": {
          "type": "string"
        },
        "ChainTransactionID": {
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/v1WithdrawState"
        },
        "FeeAmount": {
          "type": "string",
          "title": "only Update Withdraw \u0026 Withdraw Success"
        },
        "ReviewID": {
          "type": "string"
        },
        "Rollback": {
          "type": "boolean"
        }
      }
    }
  }
}
