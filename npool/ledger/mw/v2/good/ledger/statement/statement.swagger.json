{
  "swagger": "2.0",
  "info": {
    "title": "npool/ledger/mw/v2/good/ledger/statement/statement.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Middleware"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/goodstatement_CreateGoodStatement": {
      "post": {
        "operationId": "Middleware_CreateGoodStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateGoodStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateGoodStatementRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/goodstatement_CreateGoodStatements": {
      "post": {
        "operationId": "Middleware_CreateGoodStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateGoodStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateGoodStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/goodstatement_DeleteGoodStatement": {
      "post": {
        "operationId": "Middleware_DeleteGoodStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteGoodStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteGoodStatementRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/goodstatement_DeleteGoodStatements": {
      "post": {
        "operationId": "Middleware_DeleteGoodStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteGoodStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteGoodStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/goodstatement_ExistGoodStatementConds": {
      "post": {
        "operationId": "Middleware_ExistGoodStatementConds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ExistGoodStatementCondsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ExistGoodStatementCondsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/goodstatement_GetGoodStatements": {
      "post": {
        "operationId": "Middleware_GetGoodStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetGoodStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetGoodStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1StringVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "v1Uint32Val": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v2Conds": {
      "type": "object",
      "properties": {
        "EntID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "GoodID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "CoinTypeID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "Amount": {
          "$ref": "#/definitions/v1StringVal"
        },
        "BenefitDate": {
          "$ref": "#/definitions/v1Uint32Val"
        }
      }
    },
    "v2CreateGoodStatementRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2GoodStatementReq"
        }
      }
    },
    "v2CreateGoodStatementResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2GoodStatement"
        }
      }
    },
    "v2CreateGoodStatementsRequest": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2GoodStatementReq"
          }
        }
      }
    },
    "v2CreateGoodStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2GoodStatement"
          }
        }
      }
    },
    "v2DeleteGoodStatementRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2GoodStatementReq"
        }
      }
    },
    "v2DeleteGoodStatementResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2GoodStatement"
        }
      }
    },
    "v2DeleteGoodStatementsRequest": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2GoodStatementReq"
          }
        }
      }
    },
    "v2DeleteGoodStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2GoodStatement"
          }
        }
      }
    },
    "v2ExistGoodStatementCondsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v2Conds"
        }
      }
    },
    "v2ExistGoodStatementCondsResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "type": "boolean"
        }
      }
    },
    "v2GetGoodStatementsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v2Conds"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v2GetGoodStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2GoodStatement"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v2GoodStatement": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"id\""
        },
        "EntID": {
          "type": "string",
          "title": "@inject_tag: sql:\"ent_id\""
        },
        "GoodID": {
          "type": "string",
          "title": "@inject_tag: sql:\"good_id\""
        },
        "CoinTypeID": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_type_id\""
        },
        "Amount": {
          "type": "string",
          "title": "@inject_tag: sql:\"amount\""
        },
        "TechniqueServiceFeeAmount": {
          "type": "string",
          "title": "@inject_tag: sql:\"technique_service_fee_amount\""
        },
        "ToPlatform": {
          "type": "string",
          "title": "@inject_tag: sql:\"to_platform\""
        },
        "ToUser": {
          "type": "string",
          "title": "@inject_tag: sql:\"to_user\""
        },
        "BenefitDate": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"benefit_date\""
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"created_at\""
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"updated_at\""
        }
      }
    },
    "v2GoodStatementReq": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "EntID": {
          "type": "string"
        },
        "GoodID": {
          "type": "string"
        },
        "CoinTypeID": {
          "type": "string"
        },
        "BenefitDate": {
          "type": "integer",
          "format": "int64"
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "TotalAmount": {
          "type": "string"
        },
        "UnsoldAmount": {
          "type": "string"
        },
        "TechniqueServiceFeeAmount": {
          "type": "string"
        },
        "Rollback": {
          "type": "boolean"
        }
      }
    }
  }
}
