// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/ledger/mw/v2/good/ledger/ledger.proto

package ledger

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GoodLedger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"good_id"
	GoodID string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty" sql:"good_id"`
	// @inject_tag: sql:"coin_type_id"
	CoinTypeID string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty" sql:"coin_type_id"`
	// @inject_tag: sql:"amount"
	Amount string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty" sql:"amount"`
	// @inject_tag: sql:"to_platform"
	ToPlatform string `protobuf:"bytes,50,opt,name=ToPlatform,proto3" json:"ToPlatform,omitempty" sql:"to_platform"`
	// @inject_tag: sql:"to_user"
	ToUser string `protobuf:"bytes,60,opt,name=ToUser,proto3" json:"ToUser,omitempty" sql:"to_user"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,70,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,80,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *GoodLedger) Reset() {
	*x = GoodLedger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_good_ledger_ledger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodLedger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodLedger) ProtoMessage() {}

func (x *GoodLedger) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_good_ledger_ledger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodLedger.ProtoReflect.Descriptor instead.
func (*GoodLedger) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *GoodLedger) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GoodLedger) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *GoodLedger) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GoodLedger) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *GoodLedger) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GoodLedger) GetToPlatform() string {
	if x != nil {
		return x.ToPlatform
	}
	return ""
}

func (x *GoodLedger) GetToUser() string {
	if x != nil {
		return x.ToUser
	}
	return ""
}

func (x *GoodLedger) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GoodLedger) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_npool_ledger_mw_v2_good_ledger_ledger_proto protoreflect.FileDescriptor

var file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d,
	0x77, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x22,
	0xf6, 0x01, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x0c, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescOnce sync.Once
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescData = file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDesc
)

func file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescGZIP() []byte {
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescOnce.Do(func() {
		file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescData)
	})
	return file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDescData
}

var file_npool_ledger_mw_v2_good_ledger_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_npool_ledger_mw_v2_good_ledger_ledger_proto_goTypes = []interface{}{
	(*GoodLedger)(nil), // 0: ledger.middleware.good.ledger.v2.GoodLedger
}
var file_npool_ledger_mw_v2_good_ledger_ledger_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_npool_ledger_mw_v2_good_ledger_ledger_proto_init() }
func file_npool_ledger_mw_v2_good_ledger_ledger_proto_init() {
	if File_npool_ledger_mw_v2_good_ledger_ledger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_ledger_mw_v2_good_ledger_ledger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodLedger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_ledger_mw_v2_good_ledger_ledger_proto_goTypes,
		DependencyIndexes: file_npool_ledger_mw_v2_good_ledger_ledger_proto_depIdxs,
		MessageInfos:      file_npool_ledger_mw_v2_good_ledger_ledger_proto_msgTypes,
	}.Build()
	File_npool_ledger_mw_v2_good_ledger_ledger_proto = out.File
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_rawDesc = nil
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_goTypes = nil
	file_npool_ledger_mw_v2_good_ledger_ledger_proto_depIdxs = nil
}
