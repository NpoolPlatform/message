syntax = "proto3";

package ledger.middleware.bookkeeping.v2;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mw/v2/bookkeeping";
import "npool/ledger/mw/v2/statement/statement.proto";
import "npool/basetypes/ledger/v1/enums.proto";

// Service Name
service Middleware {
    rpc BookKeeping               (BookKeepingRequest)               returns (BookKeepingResponse)          {}
    rpc BookKeepingOut            (BookKeepingRequest)               returns (BookKeepingResponse)          {}
    rpc LockBalance               (LockBalanceRequest)               returns (LockBalanceResponse)          {}
    rpc LockBalanceOut            (LockBalanceRequest)               returns (LockBalanceResponse)          {}
    rpc UnlockBalance             (UnlockBalanceRequest)             returns (UnlockBalanceResponse)        {}
    rpc UnlockBalanceOut          (UnlockBalanceRequest)             returns (UnlockBalanceResponse)        {}
    rpc FinalPayment              (FinalPaymentRequest)              returns (FinalPaymentResponse)         {}
}

message BookKeepingRequest {
    repeated .ledger.middleware.statement.v2.StatementReq Infos = 10;
}

message BookKeepingResponse {}

message LockBalanceRequest {
    string AppID       = 10;
    string UserID      = 20;
    string CoinTypeID  = 30;
    string Amount      = 40;
}

message LockBalanceResponse {}

message UnlockBalanceRequest {
    string AppID                                        = 10;
    string UserID                                       = 20;
    string CoinTypeID                                   = 30;
    string Unlocked                                     = 40;
    string Outcoming                                    = 50;
    // Only Payment or Withdrawal
    basetypes.ledger.v1.IOSubType IOSubType             = 60;
    string IOExtra                                      = 70;
}

message UnlockBalanceResponse {
}

message FinalPaymentRequest {
    repeated .ledger.middleware.statement.v2.StatementReq Infos = 10;
}

message FinalPaymentResponse {}

