syntax = "proto3";

package ledger.middleware.ledger.detail.v2;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mw/v2/ledger/detail";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateDetail     (CreateDetailRequest)     returns (CreateDetailResponse)     {}
    rpc GetDetailOnly    (GetDetailOnlyRequest)    returns (GetDetailOnlyResponse)    {}
    rpc GetDetails       (GetDetailsRequest)       returns (GetDetailsResponse)       {}
}


enum IOType {
    DefaultType        = 0;
    Incoming           = 10;
    Outcoming          = 11;
}
  
enum IOSubType {
    DefaultSubType            = 0;
    // I/O
    // I: record tids in extra
    // O: record order id in extra
    Payment                   = 100;
    // I: record good id in extra
    MiningBenefit             = 101;
    // I: record user id, order id in extra
    Commission                = 102;
    // I: record good id in extra
    TechniqueFeeCommission    = 103;
    // I: record address in extra
    Deposit                   = 104;
    // I: record from user in extra
    // O: record target user in extra
    Transfer                  = 105;
    // O
    Withdrawal                = 200;
    // I: record user id, order id in extra
    OrderRevoke               = 210;
    // I: record user id,order id, archivement details id in extra
    CommissionRevoke          = 220;
}
  
message DetailReq {
    optional string     ID               = 10;
    optional string     AppID            = 20;
    optional string     UserID           = 30;
    optional string     CoinTypeID       = 40;
    optional IOType     IOType           = 50;
    optional IOSubType  IOSubType        = 60;
    optional string     Amount           = 70;
    // E.g. when pay with non-USDT coin
    optional string     FromCoinTypeID   = 80;
    optional string     CoinUSDCurrency  = 90;
    optional string     IOExtra          = 100;
    optional uint32     CreatedAt        = 110;
}

message Detail {
    // @inject_tag: sql:"id"
    string      ID                             = 10;
    // @inject_tag: sql:"app_id"
    string      AppID                          = 20;
    // @inject_tag: sql:"user_id"
    string      UserID                         = 30;
    // @inject_tag: sql:"coin_type_id"
    string      CoinTypeID                     = 40;
    // @inject_tag: sql:"io_type"
    string      IOTypeStr                      = 41;
    IOType      IOType                         = 50;
    // @inject_tag: sql:"io_sub_type"
    string      IOSubTypeStr                   = 51;
    IOSubType   IOSubType                      = 60;
    // @inject_tag: sql:"amount"
    string      Amount                         = 70;
    // @inject_tag: sql:"from_coin_type_id"
    string      FromCoinTypeID                 = 80;
    // @inject_tag: sql:"coin_usd_currency"
    string      CoinUSDCurrency                = 90;
    // @inject_tag: sql:"io_extra"
    string      IOExtra                        = 100;
    // @inject_tag: sql:"created_at"
    uint32      CreatedAt                      = 110;
    // @inject_tag: sql:"updated_at"
    uint32      UpdatedAt                      = 120;
}

message Conds {
    optional basetypes.v1.StringVal ID               = 10;
    optional basetypes.v1.StringVal AppID            = 20;
    optional basetypes.v1.StringVal UserID           = 30;
    optional basetypes.v1.StringVal CoinTypeID       = 40;
    optional basetypes.v1.Uint32Val IOType           = 50;
    optional basetypes.v1.Uint32Val IOSubType        = 60;
    optional basetypes.v1.StringVal Amount           = 70;
    optional basetypes.v1.StringVal FromCoinTypeID   = 80;
    optional basetypes.v1.StringVal CoinUSDCurrency  = 90;
    optional basetypes.v1.StringVal IOExtra          = 100;
}

message CreateDetailRequest {
    DetailReq Info = 10;
}

message CreateDetailResponse {
    Detail Info = 10;
}

message GetDetailOnlyRequest {
    Conds Conds = 10;
}

message GetDetailOnlyResponse {
    Detail Info = 10;
}

message GetDetailsRequest {
    Conds  Conds  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetDetailsResponse {
    repeated Detail Infos = 10;
    uint32          Total = 20;
}

message DeleteDetailRequest {
    DetailReq Info = 10;
}

message DetailDetailResponse {
    Detail    Info = 10;
}