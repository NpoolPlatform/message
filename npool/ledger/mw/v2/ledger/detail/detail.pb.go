// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/ledger/mw/v2/ledger/detail/detail.proto

package detail

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IOType int32

const (
	IOType_DefaultType IOType = 0
	IOType_Incoming    IOType = 10
	IOType_Outcoming   IOType = 11
)

// Enum value maps for IOType.
var (
	IOType_name = map[int32]string{
		0:  "DefaultType",
		10: "Incoming",
		11: "Outcoming",
	}
	IOType_value = map[string]int32{
		"DefaultType": 0,
		"Incoming":    10,
		"Outcoming":   11,
	}
)

func (x IOType) Enum() *IOType {
	p := new(IOType)
	*p = x
	return p
}

func (x IOType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IOType) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes[0].Descriptor()
}

func (IOType) Type() protoreflect.EnumType {
	return &file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes[0]
}

func (x IOType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IOType.Descriptor instead.
func (IOType) EnumDescriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{0}
}

type IOSubType int32

const (
	IOSubType_DefaultSubType IOSubType = 0
	// I/O
	// I: record tids in extra
	// O: record order id in extra
	IOSubType_Payment IOSubType = 100
	// I: record good id in extra
	IOSubType_MiningBenefit IOSubType = 101
	// I: record user id, order id in extra
	IOSubType_Commission IOSubType = 102
	// I: record good id in extra
	IOSubType_TechniqueFeeCommission IOSubType = 103
	// I: record address in extra
	IOSubType_Deposit IOSubType = 104
	// I: record from user in extra
	// O: record target user in extra
	IOSubType_Transfer IOSubType = 105
	// O
	IOSubType_Withdrawal IOSubType = 200
	// I: record user id, order id in extra
	IOSubType_OrderRevoke IOSubType = 210
	// I: record user id,order id, archivement details id in extra
	IOSubType_CommissionRevoke IOSubType = 220
)

// Enum value maps for IOSubType.
var (
	IOSubType_name = map[int32]string{
		0:   "DefaultSubType",
		100: "Payment",
		101: "MiningBenefit",
		102: "Commission",
		103: "TechniqueFeeCommission",
		104: "Deposit",
		105: "Transfer",
		200: "Withdrawal",
		210: "OrderRevoke",
		220: "CommissionRevoke",
	}
	IOSubType_value = map[string]int32{
		"DefaultSubType":         0,
		"Payment":                100,
		"MiningBenefit":          101,
		"Commission":             102,
		"TechniqueFeeCommission": 103,
		"Deposit":                104,
		"Transfer":               105,
		"Withdrawal":             200,
		"OrderRevoke":            210,
		"CommissionRevoke":       220,
	}
)

func (x IOSubType) Enum() *IOSubType {
	p := new(IOSubType)
	*p = x
	return p
}

func (x IOSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IOSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes[1].Descriptor()
}

func (IOSubType) Type() protoreflect.EnumType {
	return &file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes[1]
}

func (x IOSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IOSubType.Descriptor instead.
func (IOSubType) EnumDescriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{1}
}

type DetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string    `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *string    `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID     *string    `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	CoinTypeID *string    `protobuf:"bytes,40,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	IOType     *IOType    `protobuf:"varint,50,opt,name=IOType,proto3,enum=ledger.middleware.ledger.detail.v2.IOType,oneof" json:"IOType,omitempty"`
	IOSubType  *IOSubType `protobuf:"varint,60,opt,name=IOSubType,proto3,enum=ledger.middleware.ledger.detail.v2.IOSubType,oneof" json:"IOSubType,omitempty"`
	Amount     *string    `protobuf:"bytes,70,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	// E.g. when pay with non-USDT coin
	FromCoinTypeID  *string `protobuf:"bytes,80,opt,name=FromCoinTypeID,proto3,oneof" json:"FromCoinTypeID,omitempty"`
	CoinUSDCurrency *string `protobuf:"bytes,90,opt,name=CoinUSDCurrency,proto3,oneof" json:"CoinUSDCurrency,omitempty"`
	IOExtra         *string `protobuf:"bytes,100,opt,name=IOExtra,proto3,oneof" json:"IOExtra,omitempty"`
	CreatedAt       *uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
}

func (x *DetailReq) Reset() {
	*x = DetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailReq) ProtoMessage() {}

func (x *DetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailReq.ProtoReflect.Descriptor instead.
func (*DetailReq) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{0}
}

func (x *DetailReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *DetailReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *DetailReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *DetailReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

func (x *DetailReq) GetIOType() IOType {
	if x != nil && x.IOType != nil {
		return *x.IOType
	}
	return IOType_DefaultType
}

func (x *DetailReq) GetIOSubType() IOSubType {
	if x != nil && x.IOSubType != nil {
		return *x.IOSubType
	}
	return IOSubType_DefaultSubType
}

func (x *DetailReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *DetailReq) GetFromCoinTypeID() string {
	if x != nil && x.FromCoinTypeID != nil {
		return *x.FromCoinTypeID
	}
	return ""
}

func (x *DetailReq) GetCoinUSDCurrency() string {
	if x != nil && x.CoinUSDCurrency != nil {
		return *x.CoinUSDCurrency
	}
	return ""
}

func (x *DetailReq) GetIOExtra() string {
	if x != nil && x.IOExtra != nil {
		return *x.IOExtra
	}
	return ""
}

func (x *DetailReq) GetCreatedAt() uint32 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

type Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"user_id"
	UserID string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty" sql:"user_id"`
	// @inject_tag: sql:"coin_type_id"
	CoinTypeID string `protobuf:"bytes,40,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty" sql:"coin_type_id"`
	// @inject_tag: sql:"io_type"
	IOTypeStr string `protobuf:"bytes,41,opt,name=IOTypeStr,proto3" json:"IOTypeStr,omitempty" sql:"io_type"`
	IOType    IOType `protobuf:"varint,50,opt,name=IOType,proto3,enum=ledger.middleware.ledger.detail.v2.IOType" json:"IOType,omitempty"`
	// @inject_tag: sql:"io_sub_type"
	IOSubTypeStr string    `protobuf:"bytes,51,opt,name=IOSubTypeStr,proto3" json:"IOSubTypeStr,omitempty" sql:"io_sub_type"`
	IOSubType    IOSubType `protobuf:"varint,60,opt,name=IOSubType,proto3,enum=ledger.middleware.ledger.detail.v2.IOSubType" json:"IOSubType,omitempty"`
	// @inject_tag: sql:"amount"
	Amount string `protobuf:"bytes,70,opt,name=Amount,proto3" json:"Amount,omitempty" sql:"amount"`
	// @inject_tag: sql:"from_coin_type_id"
	FromCoinTypeID string `protobuf:"bytes,80,opt,name=FromCoinTypeID,proto3" json:"FromCoinTypeID,omitempty" sql:"from_coin_type_id"`
	// @inject_tag: sql:"coin_usd_currency"
	CoinUSDCurrency string `protobuf:"bytes,90,opt,name=CoinUSDCurrency,proto3" json:"CoinUSDCurrency,omitempty" sql:"coin_usd_currency"`
	// @inject_tag: sql:"io_extra"
	IOExtra string `protobuf:"bytes,100,opt,name=IOExtra,proto3" json:"IOExtra,omitempty" sql:"io_extra"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,120,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Detail) Reset() {
	*x = Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detail) ProtoMessage() {}

func (x *Detail) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detail.ProtoReflect.Descriptor instead.
func (*Detail) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{1}
}

func (x *Detail) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Detail) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Detail) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Detail) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Detail) GetIOTypeStr() string {
	if x != nil {
		return x.IOTypeStr
	}
	return ""
}

func (x *Detail) GetIOType() IOType {
	if x != nil {
		return x.IOType
	}
	return IOType_DefaultType
}

func (x *Detail) GetIOSubTypeStr() string {
	if x != nil {
		return x.IOSubTypeStr
	}
	return ""
}

func (x *Detail) GetIOSubType() IOSubType {
	if x != nil {
		return x.IOSubType
	}
	return IOSubType_DefaultSubType
}

func (x *Detail) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Detail) GetFromCoinTypeID() string {
	if x != nil {
		return x.FromCoinTypeID
	}
	return ""
}

func (x *Detail) GetCoinUSDCurrency() string {
	if x != nil {
		return x.CoinUSDCurrency
	}
	return ""
}

func (x *Detail) GetIOExtra() string {
	if x != nil {
		return x.IOExtra
	}
	return ""
}

func (x *Detail) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Detail) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *v1.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID           *v1.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID          *v1.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	CoinTypeID      *v1.StringVal `protobuf:"bytes,40,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	IOType          *v1.Uint32Val `protobuf:"bytes,50,opt,name=IOType,proto3,oneof" json:"IOType,omitempty"`
	IOSubType       *v1.Uint32Val `protobuf:"bytes,60,opt,name=IOSubType,proto3,oneof" json:"IOSubType,omitempty"`
	Amount          *v1.StringVal `protobuf:"bytes,70,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	FromCoinTypeID  *v1.StringVal `protobuf:"bytes,80,opt,name=FromCoinTypeID,proto3,oneof" json:"FromCoinTypeID,omitempty"`
	CoinUSDCurrency *v1.StringVal `protobuf:"bytes,90,opt,name=CoinUSDCurrency,proto3,oneof" json:"CoinUSDCurrency,omitempty"`
	IOExtra         *v1.StringVal `protobuf:"bytes,100,opt,name=IOExtra,proto3,oneof" json:"IOExtra,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *v1.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *v1.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

func (x *Conds) GetIOType() *v1.Uint32Val {
	if x != nil {
		return x.IOType
	}
	return nil
}

func (x *Conds) GetIOSubType() *v1.Uint32Val {
	if x != nil {
		return x.IOSubType
	}
	return nil
}

func (x *Conds) GetAmount() *v1.StringVal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Conds) GetFromCoinTypeID() *v1.StringVal {
	if x != nil {
		return x.FromCoinTypeID
	}
	return nil
}

func (x *Conds) GetCoinUSDCurrency() *v1.StringVal {
	if x != nil {
		return x.CoinUSDCurrency
	}
	return nil
}

func (x *Conds) GetIOExtra() *v1.StringVal {
	if x != nil {
		return x.IOExtra
	}
	return nil
}

type CreateDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DetailReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDetailRequest) Reset() {
	*x = CreateDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDetailRequest) ProtoMessage() {}

func (x *CreateDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDetailRequest.ProtoReflect.Descriptor instead.
func (*CreateDetailRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDetailRequest) GetInfo() *DetailReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Detail `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDetailResponse) Reset() {
	*x = CreateDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDetailResponse) ProtoMessage() {}

func (x *CreateDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDetailResponse.ProtoReflect.Descriptor instead.
func (*CreateDetailResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDetailResponse) GetInfo() *Detail {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDetailOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetDetailOnlyRequest) Reset() {
	*x = GetDetailOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailOnlyRequest) ProtoMessage() {}

func (x *GetDetailOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetDetailOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{5}
}

func (x *GetDetailOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetDetailOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Detail `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetDetailOnlyResponse) Reset() {
	*x = GetDetailOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailOnlyResponse) ProtoMessage() {}

func (x *GetDetailOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetDetailOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailOnlyResponse) GetInfo() *Detail {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetDetailsRequest) Reset() {
	*x = GetDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailsRequest) ProtoMessage() {}

func (x *GetDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetDetailsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{7}
}

func (x *GetDetailsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetDetailsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDetailsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Detail `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetDetailsResponse) Reset() {
	*x = GetDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailsResponse) ProtoMessage() {}

func (x *GetDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetDetailsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{8}
}

func (x *GetDetailsResponse) GetInfos() []*Detail {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetDetailsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DetailReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteDetailRequest) Reset() {
	*x = DeleteDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDetailRequest) ProtoMessage() {}

func (x *DeleteDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDetailRequest.ProtoReflect.Descriptor instead.
func (*DeleteDetailRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDetailRequest) GetInfo() *DetailReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DetailDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Detail `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DetailDetailResponse) Reset() {
	*x = DetailDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailDetailResponse) ProtoMessage() {}

func (x *DetailDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailDetailResponse.ProtoReflect.Descriptor instead.
func (*DetailDetailResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP(), []int{10}
}

func (x *DetailDetailResponse) GetInfo() *Detail {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_ledger_mw_v2_ledger_detail_detail_proto protoreflect.FileDescriptor

var file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d,
	0x77, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x32, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x04, 0x0a, 0x09, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x04, 0x52, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x09,
	0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x05,
	0x52, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e,
	0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x08, 0x52, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x49, 0x4f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x0a, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf9, 0x03, 0x0a, 0x06, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72,
	0x12, 0x42, 0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x49, 0x4f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x74, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x4f, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x4b, 0x0a, 0x09, 0x49, 0x4f, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x49, 0x4f, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcd, 0x05, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x34, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x04,
	0x52, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x49,
	0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x48, 0x06, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a,
	0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x07,
	0x52, 0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x08, 0x52, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x49,
	0x4f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x09, 0x52, 0x07, 0x49, 0x4f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x49, 0x4f,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53,
	0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x4f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0x58, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x56, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x58, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x36,
	0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x10, 0x0b, 0x2a, 0xc0, 0x01, 0x0a, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x10, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x66, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x46, 0x65, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x10, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10,
	0x68, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x69, 0x12,
	0x0f, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x10, 0xc8, 0x01,
	0x12, 0x10, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x10,
	0xd2, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x10, 0xdc, 0x01, 0x32, 0x9a, 0x03, 0x0a, 0x0a, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x38, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x35, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescOnce sync.Once
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescData = file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDesc
)

func file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescGZIP() []byte {
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescOnce.Do(func() {
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescData)
	})
	return file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDescData
}

var file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_npool_ledger_mw_v2_ledger_detail_detail_proto_goTypes = []interface{}{
	(IOType)(0),                   // 0: ledger.middleware.ledger.detail.v2.IOType
	(IOSubType)(0),                // 1: ledger.middleware.ledger.detail.v2.IOSubType
	(*DetailReq)(nil),             // 2: ledger.middleware.ledger.detail.v2.DetailReq
	(*Detail)(nil),                // 3: ledger.middleware.ledger.detail.v2.Detail
	(*Conds)(nil),                 // 4: ledger.middleware.ledger.detail.v2.Conds
	(*CreateDetailRequest)(nil),   // 5: ledger.middleware.ledger.detail.v2.CreateDetailRequest
	(*CreateDetailResponse)(nil),  // 6: ledger.middleware.ledger.detail.v2.CreateDetailResponse
	(*GetDetailOnlyRequest)(nil),  // 7: ledger.middleware.ledger.detail.v2.GetDetailOnlyRequest
	(*GetDetailOnlyResponse)(nil), // 8: ledger.middleware.ledger.detail.v2.GetDetailOnlyResponse
	(*GetDetailsRequest)(nil),     // 9: ledger.middleware.ledger.detail.v2.GetDetailsRequest
	(*GetDetailsResponse)(nil),    // 10: ledger.middleware.ledger.detail.v2.GetDetailsResponse
	(*DeleteDetailRequest)(nil),   // 11: ledger.middleware.ledger.detail.v2.DeleteDetailRequest
	(*DetailDetailResponse)(nil),  // 12: ledger.middleware.ledger.detail.v2.DetailDetailResponse
	(*v1.StringVal)(nil),          // 13: basetypes.v1.StringVal
	(*v1.Uint32Val)(nil),          // 14: basetypes.v1.Uint32Val
}
var file_npool_ledger_mw_v2_ledger_detail_detail_proto_depIdxs = []int32{
	0,  // 0: ledger.middleware.ledger.detail.v2.DetailReq.IOType:type_name -> ledger.middleware.ledger.detail.v2.IOType
	1,  // 1: ledger.middleware.ledger.detail.v2.DetailReq.IOSubType:type_name -> ledger.middleware.ledger.detail.v2.IOSubType
	0,  // 2: ledger.middleware.ledger.detail.v2.Detail.IOType:type_name -> ledger.middleware.ledger.detail.v2.IOType
	1,  // 3: ledger.middleware.ledger.detail.v2.Detail.IOSubType:type_name -> ledger.middleware.ledger.detail.v2.IOSubType
	13, // 4: ledger.middleware.ledger.detail.v2.Conds.ID:type_name -> basetypes.v1.StringVal
	13, // 5: ledger.middleware.ledger.detail.v2.Conds.AppID:type_name -> basetypes.v1.StringVal
	13, // 6: ledger.middleware.ledger.detail.v2.Conds.UserID:type_name -> basetypes.v1.StringVal
	13, // 7: ledger.middleware.ledger.detail.v2.Conds.CoinTypeID:type_name -> basetypes.v1.StringVal
	14, // 8: ledger.middleware.ledger.detail.v2.Conds.IOType:type_name -> basetypes.v1.Uint32Val
	14, // 9: ledger.middleware.ledger.detail.v2.Conds.IOSubType:type_name -> basetypes.v1.Uint32Val
	13, // 10: ledger.middleware.ledger.detail.v2.Conds.Amount:type_name -> basetypes.v1.StringVal
	13, // 11: ledger.middleware.ledger.detail.v2.Conds.FromCoinTypeID:type_name -> basetypes.v1.StringVal
	13, // 12: ledger.middleware.ledger.detail.v2.Conds.CoinUSDCurrency:type_name -> basetypes.v1.StringVal
	13, // 13: ledger.middleware.ledger.detail.v2.Conds.IOExtra:type_name -> basetypes.v1.StringVal
	2,  // 14: ledger.middleware.ledger.detail.v2.CreateDetailRequest.Info:type_name -> ledger.middleware.ledger.detail.v2.DetailReq
	3,  // 15: ledger.middleware.ledger.detail.v2.CreateDetailResponse.Info:type_name -> ledger.middleware.ledger.detail.v2.Detail
	4,  // 16: ledger.middleware.ledger.detail.v2.GetDetailOnlyRequest.Conds:type_name -> ledger.middleware.ledger.detail.v2.Conds
	3,  // 17: ledger.middleware.ledger.detail.v2.GetDetailOnlyResponse.Info:type_name -> ledger.middleware.ledger.detail.v2.Detail
	4,  // 18: ledger.middleware.ledger.detail.v2.GetDetailsRequest.Conds:type_name -> ledger.middleware.ledger.detail.v2.Conds
	3,  // 19: ledger.middleware.ledger.detail.v2.GetDetailsResponse.Infos:type_name -> ledger.middleware.ledger.detail.v2.Detail
	2,  // 20: ledger.middleware.ledger.detail.v2.DeleteDetailRequest.Info:type_name -> ledger.middleware.ledger.detail.v2.DetailReq
	3,  // 21: ledger.middleware.ledger.detail.v2.DetailDetailResponse.Info:type_name -> ledger.middleware.ledger.detail.v2.Detail
	5,  // 22: ledger.middleware.ledger.detail.v2.Middleware.CreateDetail:input_type -> ledger.middleware.ledger.detail.v2.CreateDetailRequest
	7,  // 23: ledger.middleware.ledger.detail.v2.Middleware.GetDetailOnly:input_type -> ledger.middleware.ledger.detail.v2.GetDetailOnlyRequest
	9,  // 24: ledger.middleware.ledger.detail.v2.Middleware.GetDetails:input_type -> ledger.middleware.ledger.detail.v2.GetDetailsRequest
	6,  // 25: ledger.middleware.ledger.detail.v2.Middleware.CreateDetail:output_type -> ledger.middleware.ledger.detail.v2.CreateDetailResponse
	8,  // 26: ledger.middleware.ledger.detail.v2.Middleware.GetDetailOnly:output_type -> ledger.middleware.ledger.detail.v2.GetDetailOnlyResponse
	10, // 27: ledger.middleware.ledger.detail.v2.Middleware.GetDetails:output_type -> ledger.middleware.ledger.detail.v2.GetDetailsResponse
	25, // [25:28] is the sub-list for method output_type
	22, // [22:25] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_npool_ledger_mw_v2_ledger_detail_detail_proto_init() }
func file_npool_ledger_mw_v2_ledger_detail_detail_proto_init() {
	if File_npool_ledger_mw_v2_ledger_detail_detail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_ledger_mw_v2_ledger_detail_detail_proto_goTypes,
		DependencyIndexes: file_npool_ledger_mw_v2_ledger_detail_detail_proto_depIdxs,
		EnumInfos:         file_npool_ledger_mw_v2_ledger_detail_detail_proto_enumTypes,
		MessageInfos:      file_npool_ledger_mw_v2_ledger_detail_detail_proto_msgTypes,
	}.Build()
	File_npool_ledger_mw_v2_ledger_detail_detail_proto = out.File
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_rawDesc = nil
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_goTypes = nil
	file_npool_ledger_mw_v2_ledger_detail_detail_proto_depIdxs = nil
}
