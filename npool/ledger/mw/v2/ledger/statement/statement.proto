syntax = "proto3";

package ledger.middleware.ledger.statement.v2;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mw/v2/ledger/statement";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/ledger/v1/enums.proto";

// Service Name
service Middleware {
    rpc GetStatements       (GetStatementsRequest)       returns (GetStatementsResponse)       {}
    rpc GetStatement        (GetStatementRequest)        returns (GetStatementResponse)        {}
    rpc ExistStatementConds (ExistStatementCondsRequest) returns (ExistStatementCondsResponse) {}
    rpc CreateStatements    (CreateStatementsRequest)    returns (CreateStatementsResponse)    {}
    rpc DeleteStatements    (DeleteStatementsRequest)    returns (DeleteStatementsResponse)    {}
    rpc CreateStatement     (CreateStatementRequest)     returns (CreateStatementResponse)     {}
    rpc DeleteStatement     (DeleteStatementRequest)     returns (DeleteStatementResponse)     {}
}

message StatementReq {
    optional uint32     ID               = 9;
    optional string     EntID            = 10;
    optional string     AppID            = 20;
    optional string     UserID           = 30;
    optional string     CoinTypeID       = 40;
    optional basetypes.ledger.v1.IOType     IOType           = 50;
    optional basetypes.ledger.v1.IOSubType  IOSubType        = 60;
    optional string     Amount           = 70;
    optional string     IOExtra          = 100;
    optional uint32     CreatedAt        = 110;
    optional bool       Rollback         = 1000;
}

message Statement {
    // @inject_tag: sql:"id"
    uint32      ID                             = 9;
    // @inject_tag: sql:"ent_id"
    string      EntID                          = 10;
    // @inject_tag: sql:"app_id"
    string      AppID                          = 20;
    // @inject_tag: sql:"user_id"
    string      UserID                         = 30;
    // @inject_tag: sql:"coin_type_id"
    string      CoinTypeID                     = 40;
    // @inject_tag: sql:"io_type"
    string      IOTypeStr                      = 41;
    basetypes.ledger.v1.IOType      IOType                         = 50;
    // @inject_tag: sql:"io_sub_type"
    string      IOSubTypeStr                   = 51;
    basetypes.ledger.v1.IOSubType   IOSubType                      = 60;
    // @inject_tag: sql:"amount"
    string      Amount                         = 70;
    // @inject_tag: sql:"io_extra_v1"
    string      IOExtra                        = 100;
    // @inject_tag: sql:"created_at"
    uint32      CreatedAt                      = 110;
    // @inject_tag: sql:"updated_at"
    uint32      UpdatedAt                      = 120;
}

message Conds {
    optional basetypes.v1.StringVal EntID            = 10;
    optional basetypes.v1.StringVal AppID            = 20;
    optional basetypes.v1.StringVal UserID           = 30;
    optional basetypes.v1.StringVal CoinTypeID       = 40;
    optional basetypes.v1.Uint32Val IOType           = 50;
    optional basetypes.v1.Uint32Val IOSubType        = 60;
    optional basetypes.v1.StringVal IOExtra          = 100;
    optional basetypes.v1.Uint32Val StartAt          = 110;
    optional basetypes.v1.Uint32Val EndAt            = 120;
    optional basetypes.v1.Uint32SliceVal IOSubTypes  = 130;
    optional basetypes.v1.StringSliceVal CoinTypeIDs = 140;
    optional basetypes.v1.StringSliceVal UserIDs     = 150;
}

message GetStatementsRequest {
    Conds  Conds  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetStatementsResponse {
    repeated Statement Infos = 10;
    uint32             Total = 20;
}

message GetStatementRequest {
    string ID = 10;
}

message GetStatementResponse {
    Statement Info = 10;
}

message ExistStatementCondsRequest {
    Conds  Conds  = 10;
}

message ExistStatementCondsResponse {
    bool   Info = 10;
}

message CreateStatementsRequest {
    repeated StatementReq Infos = 10;
}

message CreateStatementsResponse {
    repeated Statement Infos = 10;
}

message DeleteStatementsRequest {
    repeated StatementReq Infos = 10;
}

message DeleteStatementsResponse {
    repeated Statement Infos = 10;
}

message CreateStatementRequest {
    StatementReq Info = 10;
}

message CreateStatementResponse {
    Statement Info = 10;
}

message DeleteStatementRequest {
    StatementReq Info = 10;
}

message DeleteStatementResponse {
    Statement Info = 10;
}
