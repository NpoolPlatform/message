{
  "swagger": "2.0",
  "info": {
    "title": "npool/ledger/mw/v2/simulate/ledger/statement/statement.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Middleware"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/simulate/ledgerstatement_CreateStatement": {
      "post": {
        "operationId": "Middleware_CreateStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateStatementRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_CreateStatements": {
      "post": {
        "operationId": "Middleware_CreateStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_DeleteStatement": {
      "post": {
        "operationId": "Middleware_DeleteStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteStatementRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_DeleteStatements": {
      "post": {
        "operationId": "Middleware_DeleteStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2DeleteStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_ExistStatementConds": {
      "post": {
        "operationId": "Middleware_ExistStatementConds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ExistStatementCondsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ExistStatementCondsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_GetStatement": {
      "post": {
        "operationId": "Middleware_GetStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetStatementRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    },
    "/v1/simulate/ledgerstatement_GetStatements": {
      "post": {
        "operationId": "Middleware_GetStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2GetStatementsRequest"
            }
          }
        ],
        "tags": [
          "Middleware"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BoolVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "boolean"
        }
      }
    },
    "v1IOSubType": {
      "type": "string",
      "enum": [
        "DefaultSubType",
        "Payment",
        "MiningBenefit",
        "Commission",
        "TechniqueFeeCommission",
        "Deposit",
        "Transfer",
        "Withdrawal",
        "OrderRevoke",
        "CommissionRevoke",
        "RandomCouponCash"
      ],
      "default": "DefaultSubType",
      "title": "- Payment: I/O\nI: record tids in extra\nO: record order id in extra\n - MiningBenefit: I: record good id in extra\n - Commission: I: record user id, order id in extra\n - TechniqueFeeCommission: I: record good id in extra\n - Deposit: I: record address in extra\n - Transfer: I: record from user in extra\nO: record target user in extra\n - Withdrawal: O\n - OrderRevoke: I: record user id, order id in extra\n - CommissionRevoke: I: record user id,order id, archivement details id in extra"
    },
    "v1IOType": {
      "type": "string",
      "enum": [
        "DefaultType",
        "Incoming",
        "Outcoming"
      ],
      "default": "DefaultType"
    },
    "v1StringSliceVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StringVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "v1Uint32SliceVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "v1Uint32Val": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v2Conds": {
      "type": "object",
      "properties": {
        "EntID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "AppID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "UserID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "CoinTypeID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "IOType": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "IOSubType": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "IOExtra": {
          "$ref": "#/definitions/v1StringVal"
        },
        "StartAt": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "EndAt": {
          "$ref": "#/definitions/v1Uint32Val"
        },
        "IOSubTypes": {
          "$ref": "#/definitions/v1Uint32SliceVal"
        },
        "CoinTypeIDs": {
          "$ref": "#/definitions/v1StringSliceVal"
        },
        "UserIDs": {
          "$ref": "#/definitions/v1StringSliceVal"
        },
        "SendCoupon": {
          "$ref": "#/definitions/v1BoolVal"
        }
      }
    },
    "v2CreateStatementRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2StatementReq"
        }
      }
    },
    "v2CreateStatementResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Statement"
        }
      }
    },
    "v2CreateStatementsRequest": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatementReq"
          }
        }
      }
    },
    "v2CreateStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Statement"
          }
        }
      }
    },
    "v2DeleteStatementRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2StatementReq"
        }
      }
    },
    "v2DeleteStatementResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Statement"
        }
      }
    },
    "v2DeleteStatementsRequest": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2StatementReq"
          }
        }
      }
    },
    "v2DeleteStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Statement"
          }
        }
      }
    },
    "v2ExistStatementCondsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v2Conds"
        }
      }
    },
    "v2ExistStatementCondsResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "type": "boolean"
        }
      }
    },
    "v2GetStatementRequest": {
      "type": "object",
      "properties": {
        "EntID": {
          "type": "string"
        }
      }
    },
    "v2GetStatementResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v2Statement"
        }
      }
    },
    "v2GetStatementsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v2Conds"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v2GetStatementsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Statement"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v2Statement": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"id\""
        },
        "EntID": {
          "type": "string",
          "title": "@inject_tag: sql:\"ent_id\""
        },
        "AppID": {
          "type": "string",
          "title": "@inject_tag: sql:\"app_id\""
        },
        "UserID": {
          "type": "string",
          "title": "@inject_tag: sql:\"user_id\""
        },
        "CoinTypeID": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_type_id\""
        },
        "IOTypeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"io_type\""
        },
        "IOType": {
          "$ref": "#/definitions/v1IOType"
        },
        "IOSubTypeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"io_sub_type\""
        },
        "IOSubType": {
          "$ref": "#/definitions/v1IOSubType"
        },
        "Amount": {
          "type": "string",
          "title": "@inject_tag: sql:\"amount\""
        },
        "IOExtra": {
          "type": "string",
          "title": "@inject_tag: sql:\"io_extra\""
        },
        "SendCoupon": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"send_coupon\""
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"created_at\""
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"updated_at\""
        }
      }
    },
    "v2StatementReq": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "EntID": {
          "type": "string"
        },
        "AppID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "CoinTypeID": {
          "type": "string"
        },
        "IOType": {
          "$ref": "#/definitions/v1IOType"
        },
        "IOSubType": {
          "$ref": "#/definitions/v1IOSubType"
        },
        "Amount": {
          "type": "string"
        },
        "IOExtra": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "SendCoupon": {
          "type": "boolean"
        },
        "Rollback": {
          "type": "boolean"
        }
      }
    }
  }
}
