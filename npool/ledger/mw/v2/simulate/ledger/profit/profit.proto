syntax = "proto3";

package ledger.middleware.simulate.ledger.profit.v2;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/mw/v2/simulate/ledger/profit";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc GetProfit        (GetProfitRequest)        returns (GetProfitResponse)   {
        option (google.api.http) = {
            post: "/v1/simulate/profit_GetProfit"
            body: "*"
        };
    }
    rpc GetProfits       (GetProfitsRequest)       returns (GetProfitsResponse)   {
        option (google.api.http) = {
            post: "/v1/simulate/profit_GetProfits"
            body: "*"
        };
    }
}

message ProfitReq {
    optional uint32 ID         = 9;
    optional string EntID      = 10;
    optional string AppID      = 20;
    optional string UserID     = 30;
    optional string CoinTypeID = 40;
    optional string Incoming   = 50;
    optional bool   SendCoupon = 60;
}

message Profit {
    // @inject_tag: sql:"id"
    uint32      ID                             = 9;
    // @inject_tag: sql:"ent_id"
    string      EntID                          = 10;
    // @inject_tag: sql:"app_id"
    string      AppID                          = 20;
    // @inject_tag: sql:"user_id"
    string      UserID                         = 30;
    // @inject_tag: sql:"coin_type_id"
    string      CoinTypeID                     = 40;
    // @inject_tag: sql:"incoming"
    string      Incoming                       = 50;
    // @inject_tag: sql:"send_coupon"
    bool        SendCoupon                     = 60;
    // @inject_tag: sql:"created_at"
    uint32      CreatedAt                      = 1000;
    // @inject_tag: sql:"updated_at"
    uint32      UpdatedAt                      = 1010;
}

message Conds {
    optional basetypes.v1.StringVal EntID       = 10;
    optional basetypes.v1.StringVal AppID       = 20;
    optional basetypes.v1.StringVal UserID      = 30;
    optional basetypes.v1.StringVal CoinTypeID  = 40;
    optional basetypes.v1.StringVal Incoming    = 50;
    optional basetypes.v1.BoolVal   SendCoupon  = 60;
}

message GetProfitRequest {
    string EntID = 10;
}

message GetProfitResponse {
    Profit Info = 10;
}

message GetProfitsRequest {
    Conds Conds     = 10;
    int32 Offset    = 20;
    int32 Limit     = 30;
}

message GetProfitsResponse {
    repeated Profit Infos = 10;
    uint32          Total = 20;
}
