// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/ledger/gw/v1/ledger/ledger.proto

package ledger

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/ledger/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ledger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID   string   `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName     string   `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames []string `protobuf:"bytes,21,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo     string   `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit     string   `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	CoinDisabled bool     `protobuf:"varint,41,opt,name=CoinDisabled,proto3" json:"CoinDisabled,omitempty"`
	CoinDisplay  bool     `protobuf:"varint,42,opt,name=CoinDisplay,proto3" json:"CoinDisplay,omitempty"`
	Incoming     string   `protobuf:"bytes,50,opt,name=Incoming,proto3" json:"Incoming,omitempty"`
	Locked       string   `protobuf:"bytes,60,opt,name=Locked,proto3" json:"Locked,omitempty"`
	Outcoming    string   `protobuf:"bytes,70,opt,name=Outcoming,proto3" json:"Outcoming,omitempty"`
	Spendable    string   `protobuf:"bytes,80,opt,name=Spendable,proto3" json:"Spendable,omitempty"`
	UserID       string   `protobuf:"bytes,90,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PhoneNO      string   `protobuf:"bytes,100,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	EmailAddress string   `protobuf:"bytes,110,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
}

func (x *Ledger) Reset() {
	*x = Ledger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ledger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ledger) ProtoMessage() {}

func (x *Ledger) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ledger.ProtoReflect.Descriptor instead.
func (*Ledger) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *Ledger) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Ledger) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Ledger) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *Ledger) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Ledger) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Ledger) GetCoinDisabled() bool {
	if x != nil {
		return x.CoinDisabled
	}
	return false
}

func (x *Ledger) GetCoinDisplay() bool {
	if x != nil {
		return x.CoinDisplay
	}
	return false
}

func (x *Ledger) GetIncoming() string {
	if x != nil {
		return x.Incoming
	}
	return ""
}

func (x *Ledger) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *Ledger) GetOutcoming() string {
	if x != nil {
		return x.Outcoming
	}
	return ""
}

func (x *Ledger) GetSpendable() string {
	if x != nil {
		return x.Spendable
	}
	return ""
}

func (x *Ledger) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Ledger) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Ledger) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

type GetLedgersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetLedgersRequest) Reset() {
	*x = GetLedgersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgersRequest) ProtoMessage() {}

func (x *GetLedgersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgersRequest.ProtoReflect.Descriptor instead.
func (*GetLedgersRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *GetLedgersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetLedgersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetLedgersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLedgersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLedgersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Ledger `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetLedgersResponse) Reset() {
	*x = GetLedgersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgersResponse) ProtoMessage() {}

func (x *GetLedgersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgersResponse.ProtoReflect.Descriptor instead.
func (*GetLedgersResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *GetLedgersResponse) GetInfos() []*Ledger {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetLedgersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetIntervalLedgersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalLedgersRequest) Reset() {
	*x = GetIntervalLedgersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalLedgersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalLedgersRequest) ProtoMessage() {}

func (x *GetIntervalLedgersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalLedgersRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalLedgersRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *GetIntervalLedgersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalLedgersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalLedgersRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalLedgersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalLedgersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Ledger `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalLedgersResponse) Reset() {
	*x = GetIntervalLedgersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalLedgersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalLedgersResponse) ProtoMessage() {}

func (x *GetIntervalLedgersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalLedgersResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalLedgersResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *GetIntervalLedgersResponse) GetInfos() []*Ledger {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalLedgersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppLedgersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppLedgersRequest) Reset() {
	*x = GetAppLedgersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLedgersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLedgersRequest) ProtoMessage() {}

func (x *GetAppLedgersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLedgersRequest.ProtoReflect.Descriptor instead.
func (*GetAppLedgersRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppLedgersRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppLedgersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppLedgersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppLedgersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Ledger `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppLedgersResponse) Reset() {
	*x = GetAppLedgersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppLedgersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppLedgersResponse) ProtoMessage() {}

func (x *GetAppLedgersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppLedgersResponse.ProtoReflect.Descriptor instead.
func (*GetAppLedgersResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppLedgersResponse) GetInfos() []*Ledger {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppLedgersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID   string       `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName     string       `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames []string     `protobuf:"bytes,21,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo     string       `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit     string       `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	IOType       v1.IOType    `protobuf:"varint,50,opt,name=IOType,proto3,enum=basetypes.ledger.v1.IOType" json:"IOType,omitempty"`
	IOSubType    v1.IOSubType `protobuf:"varint,60,opt,name=IOSubType,proto3,enum=basetypes.ledger.v1.IOSubType" json:"IOSubType,omitempty"`
	Amount       string       `protobuf:"bytes,70,opt,name=Amount,proto3" json:"Amount,omitempty"`
	IOExtra      string       `protobuf:"bytes,80,opt,name=IOExtra,proto3" json:"IOExtra,omitempty"`
	CreatedAt    uint32       `protobuf:"varint,90,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UserID       string       `protobuf:"bytes,100,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PhoneNO      string       `protobuf:"bytes,110,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	EmailAddress string       `protobuf:"bytes,120,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{7}
}

func (x *Statement) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Statement) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Statement) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *Statement) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Statement) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Statement) GetIOType() v1.IOType {
	if x != nil {
		return x.IOType
	}
	return v1.IOType(0)
}

func (x *Statement) GetIOSubType() v1.IOSubType {
	if x != nil {
		return x.IOSubType
	}
	return v1.IOSubType(0)
}

func (x *Statement) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Statement) GetIOExtra() string {
	if x != nil {
		return x.IOExtra
	}
	return ""
}

func (x *Statement) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Statement) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Statement) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Statement) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

type GetStatementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetStatementsRequest) Reset() {
	*x = GetStatementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatementsRequest) ProtoMessage() {}

func (x *GetStatementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatementsRequest.ProtoReflect.Descriptor instead.
func (*GetStatementsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{8}
}

func (x *GetStatementsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetStatementsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetStatementsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetStatementsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetStatementsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetStatementsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetStatementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Statement `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetStatementsResponse) Reset() {
	*x = GetStatementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatementsResponse) ProtoMessage() {}

func (x *GetStatementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatementsResponse.ProtoReflect.Descriptor instead.
func (*GetStatementsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{9}
}

func (x *GetStatementsResponse) GetInfos() []*Statement {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetStatementsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppStatementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppStatementsRequest) Reset() {
	*x = GetAppStatementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppStatementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppStatementsRequest) ProtoMessage() {}

func (x *GetAppStatementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppStatementsRequest.ProtoReflect.Descriptor instead.
func (*GetAppStatementsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppStatementsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppStatementsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppStatementsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppStatementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Statement `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppStatementsResponse) Reset() {
	*x = GetAppStatementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppStatementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppStatementsResponse) ProtoMessage() {}

func (x *GetAppStatementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppStatementsResponse.ProtoReflect.Descriptor instead.
func (*GetAppStatementsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppStatementsResponse) GetInfos() []*Statement {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppStatementsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MiningReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID          string       `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName            string       `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	CoinLogo            string       `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit            string       `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	IOType              v1.IOType    `protobuf:"varint,50,opt,name=IOType,proto3,enum=basetypes.ledger.v1.IOType" json:"IOType,omitempty"`
	IOSubType           v1.IOSubType `protobuf:"varint,60,opt,name=IOSubType,proto3,enum=basetypes.ledger.v1.IOSubType" json:"IOSubType,omitempty"`
	RewardAmount        string       `protobuf:"bytes,70,opt,name=RewardAmount,proto3" json:"RewardAmount,omitempty"`
	RewardAmountPerUnit string       `protobuf:"bytes,80,opt,name=RewardAmountPerUnit,proto3" json:"RewardAmountPerUnit,omitempty"`
	Units               string       `protobuf:"bytes,90,opt,name=Units,proto3" json:"Units,omitempty"`
	Extra               string       `protobuf:"bytes,100,opt,name=Extra,proto3" json:"Extra,omitempty"`
	GoodID              string       `protobuf:"bytes,110,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	OrderID             string       `protobuf:"bytes,120,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	CreatedAt           uint32       `protobuf:"varint,130,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *MiningReward) Reset() {
	*x = MiningReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningReward) ProtoMessage() {}

func (x *MiningReward) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningReward.ProtoReflect.Descriptor instead.
func (*MiningReward) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{12}
}

func (x *MiningReward) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *MiningReward) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *MiningReward) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *MiningReward) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *MiningReward) GetIOType() v1.IOType {
	if x != nil {
		return x.IOType
	}
	return v1.IOType(0)
}

func (x *MiningReward) GetIOSubType() v1.IOSubType {
	if x != nil {
		return x.IOSubType
	}
	return v1.IOSubType(0)
}

func (x *MiningReward) GetRewardAmount() string {
	if x != nil {
		return x.RewardAmount
	}
	return ""
}

func (x *MiningReward) GetRewardAmountPerUnit() string {
	if x != nil {
		return x.RewardAmountPerUnit
	}
	return ""
}

func (x *MiningReward) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *MiningReward) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *MiningReward) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *MiningReward) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *MiningReward) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetMiningRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMiningRewardsRequest) Reset() {
	*x = GetMiningRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningRewardsRequest) ProtoMessage() {}

func (x *GetMiningRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningRewardsRequest.ProtoReflect.Descriptor instead.
func (*GetMiningRewardsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{13}
}

func (x *GetMiningRewardsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMiningRewardsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMiningRewardsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetMiningRewardsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetMiningRewardsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMiningRewardsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMiningRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*MiningReward `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32          `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetMiningRewardsResponse) Reset() {
	*x = GetMiningRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningRewardsResponse) ProtoMessage() {}

func (x *GetMiningRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetMiningRewardsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{14}
}

func (x *GetMiningRewardsResponse) GetInfos() []*MiningReward {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetMiningRewardsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Profit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID   string   `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName     string   `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames []string `protobuf:"bytes,21,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo     string   `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit     string   `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	Incoming     string   `protobuf:"bytes,50,opt,name=Incoming,proto3" json:"Incoming,omitempty"`
}

func (x *Profit) Reset() {
	*x = Profit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profit) ProtoMessage() {}

func (x *Profit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profit.ProtoReflect.Descriptor instead.
func (*Profit) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{15}
}

func (x *Profit) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Profit) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Profit) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *Profit) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Profit) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Profit) GetIncoming() string {
	if x != nil {
		return x.Incoming
	}
	return ""
}

type GetProfitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetProfitsRequest) Reset() {
	*x = GetProfitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfitsRequest) ProtoMessage() {}

func (x *GetProfitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfitsRequest.ProtoReflect.Descriptor instead.
func (*GetProfitsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{16}
}

func (x *GetProfitsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetProfitsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetProfitsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetProfitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetProfitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Profit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetProfitsResponse) Reset() {
	*x = GetProfitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfitsResponse) ProtoMessage() {}

func (x *GetProfitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfitsResponse.ProtoReflect.Descriptor instead.
func (*GetProfitsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{17}
}

func (x *GetProfitsResponse) GetInfos() []*Profit {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetProfitsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetIntervalProfitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalProfitsRequest) Reset() {
	*x = GetIntervalProfitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalProfitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalProfitsRequest) ProtoMessage() {}

func (x *GetIntervalProfitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalProfitsRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalProfitsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{18}
}

func (x *GetIntervalProfitsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalProfitsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalProfitsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalProfitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalProfitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Profit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalProfitsResponse) Reset() {
	*x = GetIntervalProfitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalProfitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalProfitsResponse) ProtoMessage() {}

func (x *GetIntervalProfitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalProfitsResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalProfitsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{19}
}

func (x *GetIntervalProfitsResponse) GetInfos() []*Profit {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalProfitsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GoodProfit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID                string   `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodName              string   `protobuf:"bytes,20,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	GoodUnit              string   `protobuf:"bytes,30,opt,name=GoodUnit,proto3" json:"GoodUnit,omitempty"`
	GoodServicePeriodDays uint32   `protobuf:"varint,31,opt,name=GoodServicePeriodDays,proto3" json:"GoodServicePeriodDays,omitempty"`
	Units                 string   `protobuf:"bytes,40,opt,name=Units,proto3" json:"Units,omitempty"`
	CoinTypeID            string   `protobuf:"bytes,50,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName              string   `protobuf:"bytes,60,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames          []string `protobuf:"bytes,61,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo              string   `protobuf:"bytes,70,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit              string   `protobuf:"bytes,80,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	Incoming              string   `protobuf:"bytes,90,opt,name=Incoming,proto3" json:"Incoming,omitempty"`
}

func (x *GoodProfit) Reset() {
	*x = GoodProfit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodProfit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodProfit) ProtoMessage() {}

func (x *GoodProfit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodProfit.ProtoReflect.Descriptor instead.
func (*GoodProfit) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{20}
}

func (x *GoodProfit) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *GoodProfit) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *GoodProfit) GetGoodUnit() string {
	if x != nil {
		return x.GoodUnit
	}
	return ""
}

func (x *GoodProfit) GetGoodServicePeriodDays() uint32 {
	if x != nil {
		return x.GoodServicePeriodDays
	}
	return 0
}

func (x *GoodProfit) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *GoodProfit) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *GoodProfit) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *GoodProfit) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *GoodProfit) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *GoodProfit) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *GoodProfit) GetIncoming() string {
	if x != nil {
		return x.Incoming
	}
	return ""
}

type GetGoodProfitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetGoodProfitsRequest) Reset() {
	*x = GetGoodProfitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodProfitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodProfitsRequest) ProtoMessage() {}

func (x *GetGoodProfitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodProfitsRequest.ProtoReflect.Descriptor instead.
func (*GetGoodProfitsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{21}
}

func (x *GetGoodProfitsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetGoodProfitsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetGoodProfitsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetGoodProfitsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetGoodProfitsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGoodProfitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetGoodProfitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodProfit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetGoodProfitsResponse) Reset() {
	*x = GetGoodProfitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodProfitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodProfitsResponse) ProtoMessage() {}

func (x *GetGoodProfitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodProfitsResponse.ProtoReflect.Descriptor instead.
func (*GetGoodProfitsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{22}
}

func (x *GetGoodProfitsResponse) GetInfos() []*GoodProfit {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetGoodProfitsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID    string           `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName      string           `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames  []string         `protobuf:"bytes,21,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo      string           `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit      string           `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	Amount        string           `protobuf:"bytes,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreatedAt     uint32           `protobuf:"varint,60,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Address       string           `protobuf:"bytes,70,opt,name=Address,proto3" json:"Address,omitempty"`
	AddressLabels []string         `protobuf:"bytes,80,rep,name=AddressLabels,proto3" json:"AddressLabels,omitempty"`
	State         v1.WithdrawState `protobuf:"varint,90,opt,name=State,proto3,enum=basetypes.ledger.v1.WithdrawState" json:"State,omitempty"`
	Message       string           `protobuf:"bytes,100,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Withdraw) Reset() {
	*x = Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdraw) ProtoMessage() {}

func (x *Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdraw.ProtoReflect.Descriptor instead.
func (*Withdraw) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{23}
}

func (x *Withdraw) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Withdraw) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Withdraw) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *Withdraw) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Withdraw) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Withdraw) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Withdraw) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Withdraw) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Withdraw) GetAddressLabels() []string {
	if x != nil {
		return x.AddressLabels
	}
	return nil
}

func (x *Withdraw) GetState() v1.WithdrawState {
	if x != nil {
		return x.State
	}
	return v1.WithdrawState(0)
}

func (x *Withdraw) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID            string         `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID           string         `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LangID           string         `protobuf:"bytes,21,opt,name=LangID,proto3" json:"LangID,omitempty"`
	CoinTypeID       string         `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	AccountID        string         `protobuf:"bytes,40,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Amount           string         `protobuf:"bytes,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	AccountType      v11.SignMethod `protobuf:"varint,60,opt,name=AccountType,proto3,enum=basetypes.v1.SignMethod" json:"AccountType,omitempty"`
	Account          string         `protobuf:"bytes,70,opt,name=Account,proto3" json:"Account,omitempty"`
	VerificationCode string         `protobuf:"bytes,80,opt,name=VerificationCode,proto3" json:"VerificationCode,omitempty"`
}

func (x *CreateWithdrawRequest) Reset() {
	*x = CreateWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawRequest) ProtoMessage() {}

func (x *CreateWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawRequest.ProtoReflect.Descriptor instead.
func (*CreateWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{24}
}

func (x *CreateWithdrawRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateWithdrawRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateWithdrawRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *CreateWithdrawRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CreateWithdrawRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *CreateWithdrawRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateWithdrawRequest) GetAccountType() v11.SignMethod {
	if x != nil {
		return x.AccountType
	}
	return v11.SignMethod(0)
}

func (x *CreateWithdrawRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateWithdrawRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

type CreateWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Withdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateWithdrawResponse) Reset() {
	*x = CreateWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawResponse) ProtoMessage() {}

func (x *CreateWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawResponse.ProtoReflect.Descriptor instead.
func (*CreateWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{25}
}

func (x *CreateWithdrawResponse) GetInfo() *Withdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetWithdrawsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetWithdrawsRequest) Reset() {
	*x = GetWithdrawsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawsRequest) ProtoMessage() {}

func (x *GetWithdrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawsRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{26}
}

func (x *GetWithdrawsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetWithdrawsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetWithdrawsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetWithdrawsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetWithdrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Withdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetWithdrawsResponse) Reset() {
	*x = GetWithdrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawsResponse) ProtoMessage() {}

func (x *GetWithdrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawsResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{27}
}

func (x *GetWithdrawsResponse) GetInfos() []*Withdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetWithdrawsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetIntervalWithdrawsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	StartAt uint32 `protobuf:"varint,30,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,40,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,50,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,60,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetIntervalWithdrawsRequest) Reset() {
	*x = GetIntervalWithdrawsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalWithdrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalWithdrawsRequest) ProtoMessage() {}

func (x *GetIntervalWithdrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalWithdrawsRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalWithdrawsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{28}
}

func (x *GetIntervalWithdrawsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetIntervalWithdrawsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIntervalWithdrawsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetIntervalWithdrawsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetIntervalWithdrawsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIntervalWithdrawsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetIntervalWithdrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Withdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetIntervalWithdrawsResponse) Reset() {
	*x = GetIntervalWithdrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalWithdrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalWithdrawsResponse) ProtoMessage() {}

func (x *GetIntervalWithdrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalWithdrawsResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalWithdrawsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{29}
}

func (x *GetIntervalWithdrawsResponse) GetInfos() []*Withdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetIntervalWithdrawsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppWithdrawsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppWithdrawsRequest) Reset() {
	*x = GetAppWithdrawsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawsRequest) ProtoMessage() {}

func (x *GetAppWithdrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawsRequest.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{30}
}

func (x *GetAppWithdrawsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppWithdrawsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppWithdrawsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppWithdrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Withdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppWithdrawsResponse) Reset() {
	*x = GetAppWithdrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppWithdrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppWithdrawsResponse) ProtoMessage() {}

func (x *GetAppWithdrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppWithdrawsResponse.ProtoReflect.Descriptor instead.
func (*GetAppWithdrawsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{31}
}

func (x *GetAppWithdrawsResponse) GetInfos() []*Withdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppWithdrawsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNAppWithdrawsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNAppWithdrawsRequest) Reset() {
	*x = GetNAppWithdrawsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppWithdrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppWithdrawsRequest) ProtoMessage() {}

func (x *GetNAppWithdrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppWithdrawsRequest.ProtoReflect.Descriptor instead.
func (*GetNAppWithdrawsRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{32}
}

func (x *GetNAppWithdrawsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetNAppWithdrawsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNAppWithdrawsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNAppWithdrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Withdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNAppWithdrawsResponse) Reset() {
	*x = GetNAppWithdrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppWithdrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppWithdrawsResponse) ProtoMessage() {}

func (x *GetNAppWithdrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppWithdrawsResponse.ProtoReflect.Descriptor instead.
func (*GetNAppWithdrawsResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{33}
}

func (x *GetNAppWithdrawsResponse) GetInfos() []*Withdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNAppWithdrawsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID         string   `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName           string   `protobuf:"bytes,20,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	DisplayNames       []string `protobuf:"bytes,21,rep,name=DisplayNames,proto3" json:"DisplayNames,omitempty"`
	CoinLogo           string   `protobuf:"bytes,30,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit           string   `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	Amount             string   `protobuf:"bytes,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreatedAt          uint32   `protobuf:"varint,60,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	TargetUserID       string   `protobuf:"bytes,70,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	TargetEmailAddress string   `protobuf:"bytes,80,opt,name=TargetEmailAddress,proto3" json:"TargetEmailAddress,omitempty"`
	TargetPhoneNO      string   `protobuf:"bytes,90,opt,name=TargetPhoneNO,proto3" json:"TargetPhoneNO,omitempty"`
	TargetUsername     string   `protobuf:"bytes,100,opt,name=TargetUsername,proto3" json:"TargetUsername,omitempty"`
	TargetFirstName    string   `protobuf:"bytes,110,opt,name=TargetFirstName,proto3" json:"TargetFirstName,omitempty"`
	TargetLastName     string   `protobuf:"bytes,120,opt,name=TargetLastName,proto3" json:"TargetLastName,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{34}
}

func (x *Transfer) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Transfer) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Transfer) GetDisplayNames() []string {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *Transfer) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Transfer) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Transfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transfer) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Transfer) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *Transfer) GetTargetEmailAddress() string {
	if x != nil {
		return x.TargetEmailAddress
	}
	return ""
}

func (x *Transfer) GetTargetPhoneNO() string {
	if x != nil {
		return x.TargetPhoneNO
	}
	return ""
}

func (x *Transfer) GetTargetUsername() string {
	if x != nil {
		return x.TargetUsername
	}
	return ""
}

func (x *Transfer) GetTargetFirstName() string {
	if x != nil {
		return x.TargetFirstName
	}
	return ""
}

func (x *Transfer) GetTargetLastName() string {
	if x != nil {
		return x.TargetLastName
	}
	return ""
}

type CreateTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID            string         `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID           string         `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Account          string         `protobuf:"bytes,30,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountType      v11.SignMethod `protobuf:"varint,40,opt,name=AccountType,proto3,enum=basetypes.v1.SignMethod" json:"AccountType,omitempty"`
	VerificationCode string         `protobuf:"bytes,50,opt,name=VerificationCode,proto3" json:"VerificationCode,omitempty"`
	TargetUserID     string         `protobuf:"bytes,60,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Amount           string         `protobuf:"bytes,70,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CoinTypeID       string         `protobuf:"bytes,80,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *CreateTransferRequest) Reset() {
	*x = CreateTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransferRequest) ProtoMessage() {}

func (x *CreateTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransferRequest.ProtoReflect.Descriptor instead.
func (*CreateTransferRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{35}
}

func (x *CreateTransferRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateTransferRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateTransferRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateTransferRequest) GetAccountType() v11.SignMethod {
	if x != nil {
		return x.AccountType
	}
	return v11.SignMethod(0)
}

func (x *CreateTransferRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *CreateTransferRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateTransferRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateTransferRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type CreateTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Transfer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTransferResponse) Reset() {
	*x = CreateTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransferResponse) ProtoMessage() {}

func (x *CreateTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransferResponse.ProtoReflect.Descriptor instead.
func (*CreateTransferResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{36}
}

func (x *CreateTransferResponse) GetInfo() *Transfer {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID       string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LangID       string `protobuf:"bytes,21,opt,name=LangID,proto3" json:"LangID,omitempty"`
	CoinTypeID   string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Amount       string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TargetAppID  string `protobuf:"bytes,50,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,60,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
}

func (x *CreateAppUserDepositRequest) Reset() {
	*x = CreateAppUserDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserDepositRequest) ProtoMessage() {}

func (x *CreateAppUserDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserDepositRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{37}
}

func (x *CreateAppUserDepositRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppUserDepositRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

type CreateAppUserDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Statement `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserDepositResponse) Reset() {
	*x = CreateAppUserDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserDepositResponse) ProtoMessage() {}

func (x *CreateAppUserDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserDepositResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP(), []int{38}
}

func (x *CreateAppUserDepositResponse) GetInfo() *Statement {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_ledger_gw_v1_ledger_ledger_proto protoreflect.FileDescriptor

var file_npool_ledger_gw_v1_ledger_ledger_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x67,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x03,
	0x0a, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x65,
	0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbc, 0x03, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x33, 0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x49, 0x4f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x4f,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x4f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x4f, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x69, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x6c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xc8, 0x03, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x4f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x49, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x49,
	0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x49, 0x4f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xdc, 0x02, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x34, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x3d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x22, 0xa3, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xec, 0x02, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x50, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x38,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xcc, 0x03, 0x0a, 0x08, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x26, 0x0a,
	0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x51, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xe1, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc9,
	0x13, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x86, 0x01, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01,
	0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x93, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x12, 0x2f,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a,
	0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x9d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x85, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73,
	0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73,
	0x12, 0x34, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x73, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x30, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x73, 0x12, 0x2e, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x73, 0x12, 0xad, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x36, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x73, 0x12, 0x9a, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x9f,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x73, 0x12, 0x32, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x12, 0x95, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0xaf, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x12, 0x36, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescOnce sync.Once
	file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescData = file_npool_ledger_gw_v1_ledger_ledger_proto_rawDesc
)

func file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescGZIP() []byte {
	file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescOnce.Do(func() {
		file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescData)
	})
	return file_npool_ledger_gw_v1_ledger_ledger_proto_rawDescData
}

var file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_npool_ledger_gw_v1_ledger_ledger_proto_goTypes = []interface{}{
	(*Ledger)(nil),                       // 0: ledger.gateway.ledger1.v1.Ledger
	(*GetLedgersRequest)(nil),            // 1: ledger.gateway.ledger1.v1.GetLedgersRequest
	(*GetLedgersResponse)(nil),           // 2: ledger.gateway.ledger1.v1.GetLedgersResponse
	(*GetIntervalLedgersRequest)(nil),    // 3: ledger.gateway.ledger1.v1.GetIntervalLedgersRequest
	(*GetIntervalLedgersResponse)(nil),   // 4: ledger.gateway.ledger1.v1.GetIntervalLedgersResponse
	(*GetAppLedgersRequest)(nil),         // 5: ledger.gateway.ledger1.v1.GetAppLedgersRequest
	(*GetAppLedgersResponse)(nil),        // 6: ledger.gateway.ledger1.v1.GetAppLedgersResponse
	(*Statement)(nil),                    // 7: ledger.gateway.ledger1.v1.Statement
	(*GetStatementsRequest)(nil),         // 8: ledger.gateway.ledger1.v1.GetStatementsRequest
	(*GetStatementsResponse)(nil),        // 9: ledger.gateway.ledger1.v1.GetStatementsResponse
	(*GetAppStatementsRequest)(nil),      // 10: ledger.gateway.ledger1.v1.GetAppStatementsRequest
	(*GetAppStatementsResponse)(nil),     // 11: ledger.gateway.ledger1.v1.GetAppStatementsResponse
	(*MiningReward)(nil),                 // 12: ledger.gateway.ledger1.v1.MiningReward
	(*GetMiningRewardsRequest)(nil),      // 13: ledger.gateway.ledger1.v1.GetMiningRewardsRequest
	(*GetMiningRewardsResponse)(nil),     // 14: ledger.gateway.ledger1.v1.GetMiningRewardsResponse
	(*Profit)(nil),                       // 15: ledger.gateway.ledger1.v1.Profit
	(*GetProfitsRequest)(nil),            // 16: ledger.gateway.ledger1.v1.GetProfitsRequest
	(*GetProfitsResponse)(nil),           // 17: ledger.gateway.ledger1.v1.GetProfitsResponse
	(*GetIntervalProfitsRequest)(nil),    // 18: ledger.gateway.ledger1.v1.GetIntervalProfitsRequest
	(*GetIntervalProfitsResponse)(nil),   // 19: ledger.gateway.ledger1.v1.GetIntervalProfitsResponse
	(*GoodProfit)(nil),                   // 20: ledger.gateway.ledger1.v1.GoodProfit
	(*GetGoodProfitsRequest)(nil),        // 21: ledger.gateway.ledger1.v1.GetGoodProfitsRequest
	(*GetGoodProfitsResponse)(nil),       // 22: ledger.gateway.ledger1.v1.GetGoodProfitsResponse
	(*Withdraw)(nil),                     // 23: ledger.gateway.ledger1.v1.Withdraw
	(*CreateWithdrawRequest)(nil),        // 24: ledger.gateway.ledger1.v1.CreateWithdrawRequest
	(*CreateWithdrawResponse)(nil),       // 25: ledger.gateway.ledger1.v1.CreateWithdrawResponse
	(*GetWithdrawsRequest)(nil),          // 26: ledger.gateway.ledger1.v1.GetWithdrawsRequest
	(*GetWithdrawsResponse)(nil),         // 27: ledger.gateway.ledger1.v1.GetWithdrawsResponse
	(*GetIntervalWithdrawsRequest)(nil),  // 28: ledger.gateway.ledger1.v1.GetIntervalWithdrawsRequest
	(*GetIntervalWithdrawsResponse)(nil), // 29: ledger.gateway.ledger1.v1.GetIntervalWithdrawsResponse
	(*GetAppWithdrawsRequest)(nil),       // 30: ledger.gateway.ledger1.v1.GetAppWithdrawsRequest
	(*GetAppWithdrawsResponse)(nil),      // 31: ledger.gateway.ledger1.v1.GetAppWithdrawsResponse
	(*GetNAppWithdrawsRequest)(nil),      // 32: ledger.gateway.ledger1.v1.GetNAppWithdrawsRequest
	(*GetNAppWithdrawsResponse)(nil),     // 33: ledger.gateway.ledger1.v1.GetNAppWithdrawsResponse
	(*Transfer)(nil),                     // 34: ledger.gateway.ledger1.v1.Transfer
	(*CreateTransferRequest)(nil),        // 35: ledger.gateway.ledger1.v1.CreateTransferRequest
	(*CreateTransferResponse)(nil),       // 36: ledger.gateway.ledger1.v1.CreateTransferResponse
	(*CreateAppUserDepositRequest)(nil),  // 37: ledger.gateway.ledger1.v1.CreateAppUserDepositRequest
	(*CreateAppUserDepositResponse)(nil), // 38: ledger.gateway.ledger1.v1.CreateAppUserDepositResponse
	(v1.IOType)(0),                       // 39: basetypes.ledger.v1.IOType
	(v1.IOSubType)(0),                    // 40: basetypes.ledger.v1.IOSubType
	(v1.WithdrawState)(0),                // 41: basetypes.ledger.v1.WithdrawState
	(v11.SignMethod)(0),                  // 42: basetypes.v1.SignMethod
}
var file_npool_ledger_gw_v1_ledger_ledger_proto_depIdxs = []int32{
	0,  // 0: ledger.gateway.ledger1.v1.GetLedgersResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Ledger
	0,  // 1: ledger.gateway.ledger1.v1.GetIntervalLedgersResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Ledger
	0,  // 2: ledger.gateway.ledger1.v1.GetAppLedgersResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Ledger
	39, // 3: ledger.gateway.ledger1.v1.Statement.IOType:type_name -> basetypes.ledger.v1.IOType
	40, // 4: ledger.gateway.ledger1.v1.Statement.IOSubType:type_name -> basetypes.ledger.v1.IOSubType
	7,  // 5: ledger.gateway.ledger1.v1.GetStatementsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Statement
	7,  // 6: ledger.gateway.ledger1.v1.GetAppStatementsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Statement
	39, // 7: ledger.gateway.ledger1.v1.MiningReward.IOType:type_name -> basetypes.ledger.v1.IOType
	40, // 8: ledger.gateway.ledger1.v1.MiningReward.IOSubType:type_name -> basetypes.ledger.v1.IOSubType
	12, // 9: ledger.gateway.ledger1.v1.GetMiningRewardsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.MiningReward
	15, // 10: ledger.gateway.ledger1.v1.GetProfitsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Profit
	15, // 11: ledger.gateway.ledger1.v1.GetIntervalProfitsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Profit
	20, // 12: ledger.gateway.ledger1.v1.GetGoodProfitsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.GoodProfit
	41, // 13: ledger.gateway.ledger1.v1.Withdraw.State:type_name -> basetypes.ledger.v1.WithdrawState
	42, // 14: ledger.gateway.ledger1.v1.CreateWithdrawRequest.AccountType:type_name -> basetypes.v1.SignMethod
	23, // 15: ledger.gateway.ledger1.v1.CreateWithdrawResponse.Info:type_name -> ledger.gateway.ledger1.v1.Withdraw
	23, // 16: ledger.gateway.ledger1.v1.GetWithdrawsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Withdraw
	23, // 17: ledger.gateway.ledger1.v1.GetIntervalWithdrawsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Withdraw
	23, // 18: ledger.gateway.ledger1.v1.GetAppWithdrawsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Withdraw
	23, // 19: ledger.gateway.ledger1.v1.GetNAppWithdrawsResponse.Infos:type_name -> ledger.gateway.ledger1.v1.Withdraw
	42, // 20: ledger.gateway.ledger1.v1.CreateTransferRequest.AccountType:type_name -> basetypes.v1.SignMethod
	34, // 21: ledger.gateway.ledger1.v1.CreateTransferResponse.Info:type_name -> ledger.gateway.ledger1.v1.Transfer
	7,  // 22: ledger.gateway.ledger1.v1.CreateAppUserDepositResponse.Info:type_name -> ledger.gateway.ledger1.v1.Statement
	1,  // 23: ledger.gateway.ledger1.v1.Gateway.GetLedgers:input_type -> ledger.gateway.ledger1.v1.GetLedgersRequest
	3,  // 24: ledger.gateway.ledger1.v1.Gateway.GetIntervalLedgers:input_type -> ledger.gateway.ledger1.v1.GetIntervalLedgersRequest
	5,  // 25: ledger.gateway.ledger1.v1.Gateway.GetAppLedgers:input_type -> ledger.gateway.ledger1.v1.GetAppLedgersRequest
	8,  // 26: ledger.gateway.ledger1.v1.Gateway.GetStatements:input_type -> ledger.gateway.ledger1.v1.GetStatementsRequest
	10, // 27: ledger.gateway.ledger1.v1.Gateway.GetAppStatements:input_type -> ledger.gateway.ledger1.v1.GetAppStatementsRequest
	13, // 28: ledger.gateway.ledger1.v1.Gateway.GetMiningRewards:input_type -> ledger.gateway.ledger1.v1.GetMiningRewardsRequest
	16, // 29: ledger.gateway.ledger1.v1.Gateway.GetProfits:input_type -> ledger.gateway.ledger1.v1.GetProfitsRequest
	18, // 30: ledger.gateway.ledger1.v1.Gateway.GetIntervalProfits:input_type -> ledger.gateway.ledger1.v1.GetIntervalProfitsRequest
	21, // 31: ledger.gateway.ledger1.v1.Gateway.GetGoodProfits:input_type -> ledger.gateway.ledger1.v1.GetGoodProfitsRequest
	24, // 32: ledger.gateway.ledger1.v1.Gateway.CreateWithdraw:input_type -> ledger.gateway.ledger1.v1.CreateWithdrawRequest
	26, // 33: ledger.gateway.ledger1.v1.Gateway.GetWithdraws:input_type -> ledger.gateway.ledger1.v1.GetWithdrawsRequest
	28, // 34: ledger.gateway.ledger1.v1.Gateway.GetIntervalWithdraws:input_type -> ledger.gateway.ledger1.v1.GetIntervalWithdrawsRequest
	30, // 35: ledger.gateway.ledger1.v1.Gateway.GetAppWithdraws:input_type -> ledger.gateway.ledger1.v1.GetAppWithdrawsRequest
	32, // 36: ledger.gateway.ledger1.v1.Gateway.GetNAppWithdraws:input_type -> ledger.gateway.ledger1.v1.GetNAppWithdrawsRequest
	35, // 37: ledger.gateway.ledger1.v1.Gateway.CreateTransfer:input_type -> ledger.gateway.ledger1.v1.CreateTransferRequest
	37, // 38: ledger.gateway.ledger1.v1.Gateway.CreateAppUserDeposit:input_type -> ledger.gateway.ledger1.v1.CreateAppUserDepositRequest
	2,  // 39: ledger.gateway.ledger1.v1.Gateway.GetLedgers:output_type -> ledger.gateway.ledger1.v1.GetLedgersResponse
	4,  // 40: ledger.gateway.ledger1.v1.Gateway.GetIntervalLedgers:output_type -> ledger.gateway.ledger1.v1.GetIntervalLedgersResponse
	6,  // 41: ledger.gateway.ledger1.v1.Gateway.GetAppLedgers:output_type -> ledger.gateway.ledger1.v1.GetAppLedgersResponse
	9,  // 42: ledger.gateway.ledger1.v1.Gateway.GetStatements:output_type -> ledger.gateway.ledger1.v1.GetStatementsResponse
	11, // 43: ledger.gateway.ledger1.v1.Gateway.GetAppStatements:output_type -> ledger.gateway.ledger1.v1.GetAppStatementsResponse
	14, // 44: ledger.gateway.ledger1.v1.Gateway.GetMiningRewards:output_type -> ledger.gateway.ledger1.v1.GetMiningRewardsResponse
	17, // 45: ledger.gateway.ledger1.v1.Gateway.GetProfits:output_type -> ledger.gateway.ledger1.v1.GetProfitsResponse
	19, // 46: ledger.gateway.ledger1.v1.Gateway.GetIntervalProfits:output_type -> ledger.gateway.ledger1.v1.GetIntervalProfitsResponse
	22, // 47: ledger.gateway.ledger1.v1.Gateway.GetGoodProfits:output_type -> ledger.gateway.ledger1.v1.GetGoodProfitsResponse
	25, // 48: ledger.gateway.ledger1.v1.Gateway.CreateWithdraw:output_type -> ledger.gateway.ledger1.v1.CreateWithdrawResponse
	27, // 49: ledger.gateway.ledger1.v1.Gateway.GetWithdraws:output_type -> ledger.gateway.ledger1.v1.GetWithdrawsResponse
	29, // 50: ledger.gateway.ledger1.v1.Gateway.GetIntervalWithdraws:output_type -> ledger.gateway.ledger1.v1.GetIntervalWithdrawsResponse
	31, // 51: ledger.gateway.ledger1.v1.Gateway.GetAppWithdraws:output_type -> ledger.gateway.ledger1.v1.GetAppWithdrawsResponse
	33, // 52: ledger.gateway.ledger1.v1.Gateway.GetNAppWithdraws:output_type -> ledger.gateway.ledger1.v1.GetNAppWithdrawsResponse
	36, // 53: ledger.gateway.ledger1.v1.Gateway.CreateTransfer:output_type -> ledger.gateway.ledger1.v1.CreateTransferResponse
	38, // 54: ledger.gateway.ledger1.v1.Gateway.CreateAppUserDeposit:output_type -> ledger.gateway.ledger1.v1.CreateAppUserDepositResponse
	39, // [39:55] is the sub-list for method output_type
	23, // [23:39] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_npool_ledger_gw_v1_ledger_ledger_proto_init() }
func file_npool_ledger_gw_v1_ledger_ledger_proto_init() {
	if File_npool_ledger_gw_v1_ledger_ledger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ledger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalLedgersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalLedgersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLedgersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppLedgersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppStatementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppStatementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalProfitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalProfitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodProfit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodProfitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodProfitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalWithdrawsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalWithdrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppWithdrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppWithdrawsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppWithdrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_ledger_gw_v1_ledger_ledger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_ledger_gw_v1_ledger_ledger_proto_goTypes,
		DependencyIndexes: file_npool_ledger_gw_v1_ledger_ledger_proto_depIdxs,
		MessageInfos:      file_npool_ledger_gw_v1_ledger_ledger_proto_msgTypes,
	}.Build()
	File_npool_ledger_gw_v1_ledger_ledger_proto = out.File
	file_npool_ledger_gw_v1_ledger_ledger_proto_rawDesc = nil
	file_npool_ledger_gw_v1_ledger_ledger_proto_goTypes = nil
	file_npool_ledger_gw_v1_ledger_ledger_proto_depIdxs = nil
}
