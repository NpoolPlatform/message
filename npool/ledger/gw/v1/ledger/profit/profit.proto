syntax = "proto3";

package ledger.gateway.ledger.profit.v1;

option go_package = "github.com/NpoolPlatform/message/npool/ledger/gw/v1/ledger/profit";

import "google/api/annotations.proto";
import "npool/basetypes/ledger/v1/enums.proto";

// Service Name
service Gateway {
    rpc GetMiningRewards (GetMiningRewardsRequest) returns (GetMiningRewardsResponse) {
        option (google.api.http) = {
            post: "/v1/get/miningrewards"
            body: "*"
        };
    }

    rpc GetProfits (GetProfitsRequest) returns (GetProfitsResponse) {
        option (google.api.http) = {
            post: "/v1/get/profits"
            body: "*"
        };
    }

    rpc GetIntervalProfits (GetIntervalProfitsRequest) returns (GetIntervalProfitsResponse) {
        option (google.api.http) = {
            post: "/v1/get/intervalprofits"
            body: "*"
        };
    }

    rpc GetGoodProfits (GetGoodProfitsRequest) returns (GetGoodProfitsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goodprofits"
            body: "*"
        };
    }
}

message MiningReward {
    string CoinTypeID   = 10;
    string CoinName     = 20;
    string CoinLogo     = 30;
    string CoinUnit     = 40;
    basetypes.ledger.v1.IOType    IOType    = 50;
    basetypes.ledger.v1.IOSubType IOSubType = 60;
    string RewardAmount = 70;
    string RewardAmountPerUnit = 80;
    string Units        = 90;
    string Extra        = 100;
    string AppGoodID    = 110;
    string OrderID      = 120;
    uint32 CreatedAt    = 130;
    string UserID       = 140;
    string AppID        = 150;
}

message GetMiningRewardsRequest {
    string AppID    = 10;
    string UserID   = 20;
    uint32 StartAt  = 30;
    uint32 EndAt    = 40;
    int32  Offset   = 50;
    int32  Limit    = 60;
}

message GetMiningRewardsResponse {
    repeated MiningReward Infos = 10;
    uint32  Total = 20;
}

message Profit {
    string AppID      = 8;
    string UserID     = 9;
    string CoinTypeID = 10;
    string CoinName   = 20;
    repeated string DisplayNames = 21;
    string CoinLogo   = 30;
    string CoinUnit   = 40;
    string Incoming   = 50;
}

message GetProfitsRequest {
    string AppID   = 10;
    string UserID  = 20;
    int32  Offset  = 30;
    int32  Limit   = 40;
}

message GetProfitsResponse {
    repeated Profit Infos = 10;
    uint32          Total = 20;
}

message GetIntervalProfitsRequest {
    string AppID   = 10;
    string UserID  = 20;
    uint32 StartAt = 30;
    uint32 EndAt   = 40;
    int32  Offset  = 50;
    int32  Limit   = 60;
}

message GetIntervalProfitsResponse {
    repeated Profit Infos = 10;
    uint32          Total = 20;
}

message GoodProfit {
    string AppID      = 8;
    string UserID     = 9;
    string AppGoodID  = 10;
    string GoodName   = 20;
    string GoodUnit   = 30;
    uint32 GoodServicePeriodDays = 31;
    string Units      = 40;
    string CoinTypeID = 50;
    string CoinName   = 60;
    repeated string DisplayNames = 61;
    string CoinLogo   = 70;
    string CoinUnit   = 80;
    string Incoming   = 90;
}

message GetGoodProfitsRequest {
    string AppID   = 10;
    string UserID  = 20;
    uint32 StartAt = 30;
    uint32 EndAt   = 40;
    int32  Offset  = 50;
    int32  Limit   = 60;
}

message GetGoodProfitsResponse {
    repeated GoodProfit Infos = 10;
    uint32              Total = 20;
}
