syntax = "proto3";

package mining.manager.profit.detail.v1;

option go_package = "github.com/NpoolPlatform/message/npool/mining/mgr/v1/profit/detail";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service ProfitDetail {
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse) {}

    rpc CreateDetail (CreateDetailRequest) returns (CreateDetailResponse) {}

    rpc CreateDetails (CreateDetailsRequest) returns (CreateDetailsResponse) {}

    rpc GetDetail (GetDetailRequest) returns (GetDetailResponse) {}

    rpc GetDetailOnly (GetDetailOnlyRequest) returns (GetDetailOnlyResponse) {}

    rpc GetDetails (GetDetailsRequest) returns (GetDetailsResponse) {}

    rpc ExistDetail (ExistDetailRequest) returns (ExistDetailResponse) {}

    rpc ExistDetailConds (ExistDetailCondsRequest) returns (ExistDetailCondsResponse) {}

    rpc CountDetails (CountDetailsRequest) returns (CountDetailsResponse) {}
}

message DetailReq {
    optional string     ID               = 10;
    optional string     GoodID           = 20;
    optional string     CoinTypeID       = 30;
    optional string     Amount           = 40;
    // E.g. when pay with non-USDT coin
    optional uint32     BenefitDate      = 50;
    optional uint32     CreatedAt        = 60;
}

message Detail {
    string      ID                = 10;
    string      GoodID            = 20;
    string      CoinTypeID        = 30;
    string      Amount            = 40;
    uint32      BenefitDate       = 50;
    uint32      CreatedAt         = 60;
}

message Conds {
    optional npool.v1.StringVal ID               = 10;
    optional npool.v1.StringVal GoodID           = 20;
    optional npool.v1.StringVal CoinTypeID       = 30;
    optional npool.v1.StringVal Amount           = 40;
    optional npool.v1.Uint32Val BenefitDate      = 50;
}


message CreateDetailRequest {
    DetailReq Info = 10;
}

message CreateDetailResponse {
    Detail Info = 10;
}

message CreateDetailsRequest {
    repeated DetailReq Infos = 10;
}

message CreateDetailsResponse {
    repeated Detail Infos = 10;
}

message GetDetailRequest {
    string ID = 10;
}

message GetDetailResponse {
    Detail Info = 10;
}

message GetDetailsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetDetailsResponse {
    repeated Detail Infos = 10;
    uint32 Total          = 20;
}

message GetDetailOnlyRequest {
    Conds Conds = 10;
}

message GetDetailOnlyResponse {
    Detail Info = 10;
}

message ExistDetailRequest {
    string ID = 10;
}

message ExistDetailResponse {
    bool Info = 10;
}

message ExistDetailCondsRequest {
    Conds Conds = 10;
}

message ExistDetailCondsResponse {
    bool Info = 10;
}

message CountDetailsRequest {
    Conds Conds = 10;
}

message CountDetailsResponse {
    uint32 Info = 10;
}

