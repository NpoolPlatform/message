syntax = "proto3";

package inspire.middleware.coin.allocated.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/coin/allocated";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateCoinAllocated     (CreateCoinAllocatedRequest)     returns (CreateCoinAllocatedResponse)      {}
    rpc UpdateCoinAllocated     (UpdateCoinAllocatedRequest)     returns (UpdateCoinAllocatedResponse)      {}
    rpc GetCoinAllocated        (GetCoinAllocatedRequest)        returns (GetCoinAllocatedResponse)         {}
    rpc GetCoinAllocateds       (GetCoinAllocatedsRequest)       returns (GetCoinAllocatedsResponse)        {}
    rpc ExistCoinAllocatedConds (ExistCoinAllocatedCondsRequest) returns (ExistCoinAllocatedCondsResponse)  {}
    rpc DeleteCoinAllocated     (DeleteCoinAllocatedRequest)     returns (DeleteCoinAllocatedResponse)   {
        option (google.api.http) = {
            post: "/v1/coinallocated_DeleteCoinAllocated"
            body: "*"
        };
    }
}

message CoinAllocatedReq {
    optional uint32 ID           = 10;
    optional string EntID        = 20;
    optional string AppID        = 30;
    optional string CoinConfigID = 40;
    optional string CoinTypeID   = 50;
    optional string UserID       = 60;
    optional string Value        = 70;
}

message CoinAllocated {
    // @inject_tag: sql:"id"
    uint32          ID              = 10;
    // @inject_tag: sql:"ent_id"
    string          EntID           = 20;
    // @inject_tag: sql:"app_id"
    string          AppID           = 30;
    // @inject_tag: sql:"coin_config_id"
    string          CoinConfigID    = 40;
    // @inject_tag: sql:"coin_type_id"
    string          CoinTypeID      = 50;
    // @inject_tag: sql:"user_id"
    string          UserID          = 60;
    // @inject_tag: sql:"value"
    string          Value           = 70;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 1010;
}

message Conds {
    optional basetypes.v1.StringVal  EntID         = 10;
    optional basetypes.v1.StringVal  AppID         = 20;
    optional basetypes.v1.StringSliceVal EntIDs    = 30;
    optional basetypes.v1.StringVal  CoinConfigID  = 40;
    optional basetypes.v1.StringVal  CoinTypeID    = 50;
    optional basetypes.v1.StringVal  UserID        = 60;
    optional basetypes.v1.Uint32Val  ID            = 70;
}

message GetCoinAllocatedsRequest {
    Conds  Conds     = 10;
    int32  Offset    = 20;
    int32  Limit     = 30;
}

message GetCoinAllocatedsResponse {
    repeated CoinAllocated Infos = 10;
    uint32          Total = 20;
}

message CreateCoinAllocatedRequest {
    CoinAllocatedReq Info = 10;
}

message CreateCoinAllocatedResponse {
    CoinAllocated Info = 10;
}

message UpdateCoinAllocatedRequest {
    CoinAllocatedReq Info = 10;
}

message UpdateCoinAllocatedResponse {
    CoinAllocated Info = 10;
}

message GetCoinAllocatedRequest {
    string EntID  = 10;
}

message GetCoinAllocatedResponse {
    CoinAllocated Info = 10;
}

message ExistCoinAllocatedCondsRequest {
  Conds Conds  = 10;
}

message ExistCoinAllocatedCondsResponse {
  bool Info = 10;
}

message DeleteCoinAllocatedRequest {
    CoinAllocatedReq Info = 10;
}

message DeleteCoinAllocatedResponse {
    CoinAllocated Info = 10;
}
