syntax = "proto3";

package inspire.middleware.coin.config.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/coin/config";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateCoinConfig     (CreateCoinConfigRequest)     returns (CreateCoinConfigResponse)      {}
    rpc UpdateCoinConfig     (UpdateCoinConfigRequest)     returns (UpdateCoinConfigResponse)      {}
    rpc GetCoinConfig        (GetCoinConfigRequest)        returns (GetCoinConfigResponse)         {}
    rpc GetCoinConfigs       (GetCoinConfigsRequest)       returns (GetCoinConfigsResponse)        {}
    rpc ExistCoinConfigConds (ExistCoinConfigCondsRequest) returns (ExistCoinConfigCondsResponse)  {}
    rpc DeleteCoinConfig     (DeleteCoinConfigRequest)     returns (DeleteCoinConfigResponse)   {
        option (google.api.http) = {
            post: "/v1/coinconfig_DeleteCoinConfig"
            body: "*"
        };
    }
}

message CoinConfigReq {
    optional uint32 ID           = 10;
    optional string EntID        = 20;
    optional string AppID        = 30;
    optional string CoinTypeID   = 40;
    optional string MaxValue     = 50;
    optional string Allocated    = 60;
}

message CoinConfig {
    // @inject_tag: sql:"id"
    uint32          ID              = 10;
    // @inject_tag: sql:"ent_id"
    string          EntID           = 20;
    // @inject_tag: sql:"app_id"
    string          AppID           = 30;
    // @inject_tag: sql:"coin_type_id"
    string          CoinTypeID      = 40;
    // @inject_tag: sql:"max_value"
    string          MaxValue        = 50;
    // @inject_tag: sql:"allocated"
    string          Allocated       = 60;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 1010;
}

message Conds {
    optional basetypes.v1.StringVal  EntID         = 10;
    optional basetypes.v1.StringVal  AppID         = 20;
    optional basetypes.v1.StringVal  CoinTypeID    = 30;
    optional basetypes.v1.StringSliceVal EntIDs    = 40;
    optional basetypes.v1.Uint32Val  ID            = 50;
}

message GetCoinConfigsRequest {
    Conds  Conds     = 10;
    int32  Offset    = 20;
    int32  Limit     = 30;
}

message GetCoinConfigsResponse {
    repeated CoinConfig Infos = 10;
    uint32          Total = 20;
}

message CreateCoinConfigRequest {
    CoinConfigReq Info = 10;
}

message CreateCoinConfigResponse {
    CoinConfig Info = 10;
}

message UpdateCoinConfigRequest {
    CoinConfigReq Info = 10;
}

message UpdateCoinConfigResponse {
    CoinConfig Info = 10;
}

message GetCoinConfigRequest {
    string EntID  = 10;
}

message GetCoinConfigResponse {
    CoinConfig Info = 10;
}

message ExistCoinConfigCondsRequest {
  Conds Conds  = 10;
}

message ExistCoinConfigCondsResponse {
  bool Info = 10;
}

message DeleteCoinConfigRequest {
    CoinConfigReq Info = 10;
}

message DeleteCoinConfigResponse {
    CoinConfig Info = 10;
}
