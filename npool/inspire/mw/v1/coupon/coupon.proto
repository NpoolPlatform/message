syntax = "proto3";

package inspire.middleware.coupon.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/coupon";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/inspire/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateCoupon   (CreateCouponRequest)   returns (CreateCouponResponse)   {}
    rpc UpdateCoupon   (UpdateCouponRequest)   returns (UpdateCouponResponse)   {}
    rpc GetCoupon      (GetCouponRequest)      returns (GetCouponResponse)      {}
    rpc GetCoupons     (GetCouponsRequest)     returns (GetCouponsResponse)     {}
    rpc DeleteCoupon   (DeleteCouponRequest)   returns (DeleteCouponResponse)   {
        option (google.api.http) = {
            post: "/v1/coupon_DeleteCoupon"
            body: "*"
        };
    }
}

message CouponReq {
    optional uint32 ID           = 9;
    optional string EntID        = 10;
    optional basetypes.inspire.v1.CouponType CouponType = 20;
    optional string AppID        = 30;
    optional string Denomination = 40;
    optional string Circulation  = 50;
    optional string IssuedBy     = 60;
    optional uint32 StartAt      = 70;
    optional uint32 DurationDays = 80;
    optional string Message      = 90;
    optional string Name         = 100;
    // For special offer
    optional string UserID       = 110;
    // For threshold coupon
    optional string Threshold    = 130;
    // We may have random amount coupon
    optional string Allocated    = 140;
    optional basetypes.inspire.v1.CouponConstraint CouponConstraint = 150;
    optional bool   Random       = 160;
    optional basetypes.inspire.v1.CouponScope CouponScope           = 170;
}

message Coupon {
    // @inject_tag: sql:"id"
    uint32          ID              = 10;
    // @inject_tag: sql:"ent_id"
    string          EntID           = 11;
    // @inject_tag: sql:"coupon_type"
    string          CouponTypeStr   = 20;
    basetypes.inspire.v1.CouponType CouponType = 30;
    // @inject_tag: sql:"app_id"
    string          AppID           = 40;
    // @inject_tag: sql:"denomination"
    string          Denomination    = 50;
    // @inject_tag: sql:"circulation"
    string          Circulation     = 60;
    // @inject_tag: sql:"issued_by"
    string          IssuedBy        = 70;
    // @inject_tag: sql:"start_at"
    uint32          StartAt         = 80;
    // @inject_tag: sql:"duration_days"
    uint32          DurationDays    = 90;
    // @inject_tag: sql:"message"
    string          Message         = 100;
    // @inject_tag: sql:"name"
    string          Name            = 110;
    // @inject_tag: sql:"user_id"
    optional string UserID          = 120;
    // @inject_tag: sql:"threshold"
    optional string Threshold       = 140;
    // @inject_tag: sql:"allocated"
    string          Allocated       = 150;
    // @inject_tag: sql:"coupon_constraint"
    string          CouponConstraintStr = 160;
    basetypes.inspire.v1.CouponConstraint CouponConstraint = 170;
    // @inject_tag: sql:"random"
    bool            Random          = 180;
    // @inject_tag: sql:"coupon_scope"
    string          CouponScopeStr  = 190;
    basetypes.inspire.v1.CouponScope      CouponScope      = 200;
    // @inject_tag: sql:"condition"
    uint32          Condition      = 210; // 满减券,实付款达到Condition才能使用
    // @inject_tag: sql:"issue_type"
    string          IssueTypeStr             = 220;
    basetypes.inspire.v1.IssueType IssueType = 221; // 用户领取 | 管理员发放 | 系统发放(触发了特定条件,加一张表用来配置触发某个条件时发什么券)| 可用户领取也可以管理员发放
    // @inject_tag: sql:"promotion_type"
    string          PromotionTypeStr         = 230;
    basetypes.inspire.v1.PromotionType PromotionType = 231; // 免费领取 | 积分兑换
    // @inject_tag: sql:"limit_rule"
    uint32          LimitRule      = 240; // 限领的张数
    // @inject_tag: sql:"timeliness"
    string          TimelinessStr  = 250; 
    basetypes.inspire.v1.Timeliness Timeliness = 251; // 时效性, Absolute | Relative
    bool            Cashable       = 260; // 是否可提现
    uint32          CashRate           = 270;  // 生成可提现代金券的概率
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt      = 1000;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt      = 1010;
}

message Conds {
    optional basetypes.v1.StringVal  EntID         = 10;
    optional basetypes.v1.Uint32Val  CouponType    = 20;
    optional basetypes.v1.StringVal  AppID         = 30;
    optional basetypes.v1.StringSliceVal EntIDs    = 50;
}

message GetCouponsRequest {
    Conds  Conds     = 10;
    int32  Offset    = 20;
    int32  Limit     = 30;
}

message GetCouponsResponse {
    repeated Coupon Infos = 10;
    uint32          Total = 20;
}

message CreateCouponRequest {
    CouponReq Info = 10;
}

message CreateCouponResponse {
    Coupon Info = 10;
}

message UpdateCouponRequest {
    CouponReq Info = 10;
}

message UpdateCouponResponse {
    Coupon Info = 10;
}

message GetCouponRequest {
    string EntID  = 10;
}

message GetCouponResponse {
    Coupon Info = 10;
}

message DeleteCouponRequest {
    CouponReq Info = 10;
}

message DeleteCouponResponse {
    Coupon Info = 10;
}

