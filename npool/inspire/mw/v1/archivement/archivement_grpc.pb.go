// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/inspire/mw/v1/archivement/archivement.proto

package archivement

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ArchivementMwClient is the client API for ArchivementMw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ArchivementMwClient interface {
	CalculateOrderArchivement(ctx context.Context, in *CalculateOrderArchivementRequest, opts ...grpc.CallOption) (*CalculateOrderArchivementResponse, error)
}

type archivementMwClient struct {
	cc grpc.ClientConnInterface
}

func NewArchivementMwClient(cc grpc.ClientConnInterface) ArchivementMwClient {
	return &archivementMwClient{cc}
}

func (c *archivementMwClient) CalculateOrderArchivement(ctx context.Context, in *CalculateOrderArchivementRequest, opts ...grpc.CallOption) (*CalculateOrderArchivementResponse, error) {
	out := new(CalculateOrderArchivementResponse)
	err := c.cc.Invoke(ctx, "/inspire.middleware.archivement.v1.ArchivementMw/CalculateOrderArchivement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArchivementMwServer is the server API for ArchivementMw service.
// All implementations must embed UnimplementedArchivementMwServer
// for forward compatibility
type ArchivementMwServer interface {
	CalculateOrderArchivement(context.Context, *CalculateOrderArchivementRequest) (*CalculateOrderArchivementResponse, error)
	mustEmbedUnimplementedArchivementMwServer()
}

// UnimplementedArchivementMwServer must be embedded to have forward compatible implementations.
type UnimplementedArchivementMwServer struct {
}

func (UnimplementedArchivementMwServer) CalculateOrderArchivement(context.Context, *CalculateOrderArchivementRequest) (*CalculateOrderArchivementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateOrderArchivement not implemented")
}
func (UnimplementedArchivementMwServer) mustEmbedUnimplementedArchivementMwServer() {}

// UnsafeArchivementMwServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ArchivementMwServer will
// result in compilation errors.
type UnsafeArchivementMwServer interface {
	mustEmbedUnimplementedArchivementMwServer()
}

func RegisterArchivementMwServer(s grpc.ServiceRegistrar, srv ArchivementMwServer) {
	s.RegisterService(&ArchivementMw_ServiceDesc, srv)
}

func _ArchivementMw_CalculateOrderArchivement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateOrderArchivementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivementMwServer).CalculateOrderArchivement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.middleware.archivement.v1.ArchivementMw/CalculateOrderArchivement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivementMwServer).CalculateOrderArchivement(ctx, req.(*CalculateOrderArchivementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ArchivementMw_ServiceDesc is the grpc.ServiceDesc for ArchivementMw service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ArchivementMw_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "inspire.middleware.archivement.v1.ArchivementMw",
	HandlerType: (*ArchivementMwServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateOrderArchivement",
			Handler:    _ArchivementMw_CalculateOrderArchivement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/inspire/mw/v1/archivement/archivement.proto",
}
