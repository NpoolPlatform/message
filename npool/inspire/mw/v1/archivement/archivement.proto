syntax = "proto3";

package inspire.middleware.archivement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/archivement";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc ExpropriateArchivement (ExpropriateArchivementRequest) returns (ExpropriateArchivementResponse) {}
    rpc GetArchivements        (GetArchivementsRequest)        returns (GetArchivementsResponse)        {}
}

message ArchivementReq {
    optional string ID              = 10;
    optional string AppID           = 20;
    optional string UserID          = 30;
    optional string GoodID          = 40;
    optional string CoinTypeID      = 50;
    optional string TotalAmount     = 60;
    optional string SelfAmount      = 70;
    optional string TotalUnits      = 80;
    optional string SelfUnits       = 90;
    optional string TotalCommission = 100;
    optional string SelfCommission  = 110;
}

message Archivement {
    string ID                 = 10;
    string AppID              = 20;
    string UserID             = 30;
    string GoodID             = 40;
    // CoinTypeID of the good
    string CoinTypeID         = 50;
    // Payment amount in USD
    string TotalAmount        = 60;
    string SelfAmount         = 70;
    string TotalUnits         = 80;
    string SelfUnits          = 90;
    // Commission amount in USD
    string TotalCommission    = 100;
    string SelfCommission     = 110;
}

message Conds {
    optional basetypes.v1.StringVal ID           = 10;
    optional basetypes.v1.StringVal AppID        = 20;
    optional basetypes.v1.StringVal UserID       = 30;
    optional basetypes.v1.StringVal GoodID       = 40;
    optional basetypes.v1.StringVal CoinTypeID   = 50;
    optional basetypes.v1.StringSliceVal UserIDs = 120;
}

message ExpropriateArchivementRequest {
    string OrderID = 10;
}

message ExpropriateArchivementResponse {
}

message GetArchivementsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetArchivementsResponse {
    repeated Archivement Infos = 10;
    uint32               Total = 20;
}

