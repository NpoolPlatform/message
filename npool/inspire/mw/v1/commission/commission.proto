syntax = "proto3";

package inspire.middleware.commission.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/commission";

import "npool/inspire/mgr/v1/commission/commission.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc CreateCommission   (CreateCommissionRequest)   returns (CreateCommissionResponse)   {}
    rpc CreateCommissions  (CreateCommissionsRequest)   returns (CreateCommissionsResponse)   {}
    rpc UpdateCommission   (UpdateCommissionRequest)   returns (UpdateCommissionResponse)   {}
    rpc GetCommission      (GetCommissionRequest)      returns (GetCommissionResponse)      {}
    rpc GetCommissionOnly  (GetCommissionOnlyRequest)  returns (GetCommissionOnlyResponse)  {}
    rpc GetCommissions     (GetCommissionsRequest)     returns (GetCommissionsResponse)     {}
}

message CommissionReq {
    optional string ID       = 10;
    optional string AppID    = 20;
    optional string UserID   = 30;
    optional string GoodID   = 40;
    optional inspire.manager.commission.v1.SettleType SettleType = 50;
    optional inspire.manager.commission.v1.SettleMode SettleMode = 60;
    optional inspire.manager.commission.v1.SettleInterval SettleInterval = 70;
    optional string Amount   = 80;
    optional string Percent  = 90;
    optional uint32 StartAt  = 100;
    optional string Threshold = 110;
}

// If good commission exist, use good commission
// Else if user commission exist, use user commission
// Else no commission

message Commission {
    string     ID              = 10;
    string     AppID           = 20;
    string     UserID          = 30;
    // For good specific commission
    optional string GoodID     = 40;
    inspire.manager.commission.v1.SettleType SettleType = 50;
    inspire.manager.commission.v1.SettleMode SettleMode = 60;
    inspire.manager.commission.v1.SettleInterval SettleInterval = 70;
    // For fix amount commission
    optional string Amount     = 80;
    // For percent commission
    optional string Percent    = 90;
    // For commission threshold
    optional string Threshold  = 100;
    uint32     StartAt         = 110;
    // EndAt == 0 means active commission
    uint32     EndAt           = 120;
    uint32     CreatedAt       = 130;
    uint32     UpdatedAt       = 140;
}

message Conds {
    optional npool.v1.StringVal ID     = 10;
    optional npool.v1.StringVal AppID  = 20;
    optional npool.v1.StringVal UserID = 30;
    optional npool.v1.StringVal GoodID = 40;
    optional npool.v1.Int32Val  SettleType = 50;
    optional npool.v1.Uint32Val EndAt  = 60;
    optional npool.v1.StringSliceVal UserIDs = 70;
    optional npool.v1.StringSliceVal GoodIDs = 80;
}

message CreateCommissionRequest {
    CommissionReq Info = 10;
}

message CreateCommissionResponse {
    Commission Info = 10;
}

message CreateCommissionsRequest {
    repeated CommissionReq Infos = 10;
}

message CreateCommissionsResponse {
    repeated Commission Infos = 10;
}

message UpdateCommissionRequest {
    CommissionReq Info = 10;
}

message UpdateCommissionResponse {
    Commission Info = 10;
}

message GetCommissionRequest {
    string ID = 10;
    inspire.manager.commission.v1.SettleType SettleType = 20;
}

message GetCommissionResponse {
    Commission Info = 10;
}

message GetCommissionOnlyRequest {
    Conds Conds = 10;
}

message GetCommissionOnlyResponse {
    Commission Info = 10;
}

message GetCommissionsRequest {
    Conds  Conds  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetCommissionsResponse {
    repeated Commission Infos = 10;
    uint32              Total = 20;
}

