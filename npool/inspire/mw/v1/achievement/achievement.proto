syntax = "proto3";

package inspire.middleware.achievement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/achievement";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc ExpropriateAchievement (ExpropriateAchievementRequest) returns (ExpropriateAchievementResponse) {}
    rpc GetAchievements        (GetAchievementsRequest)        returns (GetAchievementsResponse)        {}
    rpc DeleteAchievement      (DeleteAchievementRequest)      returns (DeleteAchievementResponse)      {}
}

message AchievementReq {
    optional string ID              = 10;
    optional string AppID           = 20;
    optional string UserID          = 30;
    optional string GoodID          = 40;
    optional string CoinTypeID      = 50;
    optional string TotalAmount     = 60;
    optional string SelfAmount      = 70;
    optional string TotalUnits      = 80;
    optional string SelfUnits       = 90;
    optional string TotalCommission = 100;
    optional string SelfCommission  = 110;
}

message Achievement {
    // @inject_tag: sql:"id"
    string ID                 = 10;
    // @inject_tag: sql:"app_id"
    string AppID              = 20;
    // @inject_tag: sql:"user_id"
    string UserID             = 30;
    // @inject_tag: sql:"good_id"
    string GoodID             = 40;
    // CoinTypeID of the good
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID         = 50;
    // Payment amount in USD
    // @inject_tag: sql:"total_amount"
    string TotalAmount        = 60;
    // @inject_tag: sql:"self_amount"
    string SelfAmount         = 70;
    // @inject_tag: sql:"total_units_v1"
    string TotalUnits         = 80;
    // @inject_tag: sql:"self_units_v1"
    string SelfUnits          = 90;
    // Commission amount in USD
    // @inject_tag: sql:"total_commission"
    string TotalCommission    = 100;
    // @inject_tag: sql:"self_commission"
    string SelfCommission     = 110;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt          = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt          = 1010;
    // @inject_tag: sql:"deleted_at"
    uint32 DeletedAt          = 1020;
}

message Conds {
    optional basetypes.v1.StringVal ID           = 10;
    optional basetypes.v1.StringVal AppID        = 20;
    optional basetypes.v1.StringVal UserID       = 30;
    optional basetypes.v1.StringVal GoodID       = 40;
    optional basetypes.v1.StringVal AppGoodID    = 41;
    optional basetypes.v1.StringVal CoinTypeID   = 50;
    optional basetypes.v1.StringSliceVal UserIDs = 120;
}

message ExpropriateAchievementRequest {
    string OrderID = 10;
}

message ExpropriateAchievementResponse {
}

message GetAchievementsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetAchievementsResponse {
    repeated Achievement Infos = 10;
    uint32               Total = 20;
}

message DeleteAchievementRequest {
    AchievementReq Info = 10;
}

message DeleteAchievementResponse {
    Achievement Info = 10;
}
