syntax = "proto3";

package inspire.middleware.achievement.user.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/achievement/user";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc GetAchievementUsers        (GetAchievementUsersRequest)        returns (GetAchievementUsersResponse)        {
        option (google.api.http) = {
            post: "/v1/achievement_GetAchievementUsers"
            body: "*"
        };
    }
    rpc DeleteAchievementUser      (DeleteAchievementUserRequest)      returns (DeleteAchievementUserResponse)      {
        option (google.api.http) = {
            post: "/v1/achievement_DeleteAchievementUser"
            body: "*"
        };
    }
}

message AchievementUserReq {
    optional uint32 ID              = 10;
    optional string EntID           = 11;
}

message AchievementUser {
    // @inject_tag: sql:"id"
    uint32 ID                   = 10;
    // @inject_tag: sql:"ent_id"
    string EntID                = 20;
    // @inject_tag: sql:"app_id"
    string AppID                = 30;
    // @inject_tag: sql:"user_id"
    string UserID               = 40;
    // Commission amount in USD
    // @inject_tag: sql:"total_commission"
    string TotalCommission      = 50;
    // @inject_tag: sql:"self_commission"
    string SelfCommission       = 60;
    // @inject_tag: sql:"direct_invites"
    uint32 DirectInvites        = 70;
    // @inject_tag: sql:"indirect_invites"
    uint32 IndirectInvites      = 80;
    // @inject_tag: sql:"direct_consume_amount"
    string DirectConsumeAmount  = 90;
    // @inject_tag: sql:"invitee_consume_amount"
    string InviteeConsumeAmount = 100;

    // @inject_tag: sql:"created_at"
    uint32 CreatedAt          = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt          = 1010;
    // @inject_tag: sql:"deleted_at"
    uint32 DeletedAt          = 1020;
}

message Conds {
    optional basetypes.v1.StringVal EntID        = 10;
    optional basetypes.v1.StringVal AppID        = 20;
    optional basetypes.v1.StringVal UserID       = 30;
    optional basetypes.v1.StringSliceVal UserIDs = 40;
}

message GetAchievementUsersRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetAchievementUsersResponse {
    repeated AchievementUser Infos = 10;
    uint32               Total = 20;
}

message DeleteAchievementUserRequest {
    AchievementUserReq Info = 10;
}

message DeleteAchievementUserResponse {
    AchievementUser Info = 10;
}
