syntax = "proto3";

package inspire.middleware.achievement.good.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/achievement/good/coin";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
  rpc GetAchievements(GetAchievementsRequest)
      returns (GetAchievementsResponse) {
    option (google.api.http) = {
      post : "/v1/good_coin_achievement_GetAchievements"
      body : "*"
    };
  }
  rpc DeleteAchievement(DeleteAchievementRequest)
      returns (DeleteAchievementResponse) {
    option (google.api.http) = {
      post : "/v1/good_coin_achievement_DeleteAchievement"
      body : "*"
    };
  }
}

message AchievementReq {
  optional uint32 ID = 10;
  optional string EntID = 20;
  optional string GoodCoinTypeID = 50;
}

message Achievement {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 11;
  // @inject_tag: sql:"app_id"
  string AppID = 20;
  // @inject_tag: sql:"user_id"
  string UserID = 30;
  // @inject_tag: sql:"good_coin_type_id"
  string GoodCoinTypeID = 40;
  // Payment amount in USD
  // @inject_tag: sql:"total_amount_usd"
  string TotalAmountUSD = 60;
  // @inject_tag: sql:"self_amount_usd"
  string SelfAmountUSD = 70;
  // @inject_tag: sql:"total_units_v1"
  string TotalUnits = 80;
  // @inject_tag: sql:"self_units_v1"
  string SelfUnits = 90;
  // Commission amount in USD
  // @inject_tag: sql:"total_commission_usd"
  string TotalCommissionUSD = 100;
  // @inject_tag: sql:"self_commission_usd"
  string SelfCommissionUSD = 110;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 1000;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 1010;
}

message Conds {
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.StringVal UserID = 30;
  optional basetypes.v1.StringSliceVal UserIDs = 40;
  optional basetypes.v1.StringVal GoodCoinTypeID = 50;
}

message GetAchievementsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetAchievementsResponse {
  repeated Achievement Infos = 10;
  uint32 Total = 20;
}

message DeleteAchievementRequest { AchievementReq Info = 10; }

message DeleteAchievementResponse { Achievement Info = 10; }
