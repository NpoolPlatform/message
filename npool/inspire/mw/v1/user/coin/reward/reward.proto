syntax = "proto3";

package inspire.middleware.user.coin.reward.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/user/coin/reward";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateUserCoinReward     (CreateUserCoinRewardRequest)     returns (CreateUserCoinRewardResponse)      {}
    rpc UpdateUserCoinReward     (UpdateUserCoinRewardRequest)     returns (UpdateUserCoinRewardResponse)      {}
    rpc GetUserCoinReward        (GetUserCoinRewardRequest)        returns (GetUserCoinRewardResponse)         {}
    rpc GetUserCoinRewards       (GetUserCoinRewardsRequest)       returns (GetUserCoinRewardsResponse)        {}
    rpc ExistUserCoinRewardConds (ExistUserCoinRewardCondsRequest) returns (ExistUserCoinRewardCondsResponse)  {}
    rpc DeleteUserCoinReward     (DeleteUserCoinRewardRequest)     returns (DeleteUserCoinRewardResponse)   {
        option (google.api.http) = {
            post: "/v1/usercoinreward_DeleteUserCoinReward"
            body: "*"
        };
    }
}

message UserCoinRewardReq {
    optional uint32 ID            = 10;
    optional string EntID         = 20;
    optional string AppID         = 30;
    optional string UserID        = 40;
    optional string CoinTypeID    = 50;
    optional string CoinRewards   = 60;
}

message UserCoinReward {
    // @inject_tag: sql:"id"
    uint32          ID              = 10;
    // @inject_tag: sql:"ent_id"
    string          EntID           = 20;
    // @inject_tag: sql:"app_id"
    string          AppID           = 30;
    // @inject_tag: sql:"user_id"
    string          UserID          = 40;
    // @inject_tag: sql:"coin_type_id"
    string          CoinTypeID      = 50;
    // @inject_tag: sql:"coin_rewards"
    string          CoinRewards     = 60;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 1010;
}

message Conds {
    optional basetypes.v1.StringVal  EntID         = 10;
    optional basetypes.v1.StringVal  AppID         = 20;
    optional basetypes.v1.StringSliceVal EntIDs    = 30;
    optional basetypes.v1.StringVal  UserID        = 40;
    optional basetypes.v1.Uint32Val  ID            = 50;
    optional basetypes.v1.StringSliceVal  UserIDs  = 60;
    optional basetypes.v1.StringVal  CoinTypeID    = 70;
}

message GetUserCoinRewardsRequest {
    Conds  Conds     = 10;
    int32  Offset    = 20;
    int32  Limit     = 30;
}

message GetUserCoinRewardsResponse {
    repeated UserCoinReward Infos = 10;
    uint32          Total = 20;
}

message CreateUserCoinRewardRequest {
    UserCoinRewardReq Info = 10;
}

message CreateUserCoinRewardResponse {
    UserCoinReward Info = 10;
}

message UpdateUserCoinRewardRequest {
    UserCoinRewardReq Info = 10;
}

message UpdateUserCoinRewardResponse {
    UserCoinReward Info = 10;
}

message GetUserCoinRewardRequest {
    string EntID  = 10;
}

message GetUserCoinRewardResponse {
    UserCoinReward Info = 10;
}

message ExistUserCoinRewardCondsRequest {
  Conds Conds  = 10;
}

message ExistUserCoinRewardCondsResponse {
  bool Info = 10;
}

message DeleteUserCoinRewardRequest {
    UserCoinRewardReq Info = 10;
}

message DeleteUserCoinRewardResponse {
    UserCoinReward Info = 10;
}
