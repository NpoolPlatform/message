syntax = "proto3";

package inspire.middleware.app.commission.config.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/app/commission/config";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/inspire/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateAppCommissionConfig     (CreateAppCommissionConfigRequest)     returns (CreateAppCommissionConfigResponse)     {}
    rpc UpdateAppCommissionConfig     (UpdateAppCommissionConfigRequest)     returns (UpdateAppCommissionConfigResponse)     {}
    rpc GetAppCommissionConfig        (GetAppCommissionConfigRequest)        returns (GetAppCommissionConfigResponse)        {}
    rpc GetAppCommissionConfigs       (GetAppCommissionConfigsRequest)       returns (GetAppCommissionConfigsResponse)       {}
    rpc ExistAppCommissionConfigConds (ExistAppCommissionConfigCondsRequest) returns (ExistAppCommissionConfigCondsResponse) {}
}

message AppCommissionConfigReq {
    optional uint32               ID                                 = 10;
    optional string               EntID                              = 20;
    optional string               AppID                              = 30;
    optional string               ThresholdAmount                    = 40;
    optional string               AmountOrPercent                    = 50;
    optional uint32               StartAt                            = 60;
    optional uint32               Invites                            = 70;
    optional basetypes.inspire.v1.SettleType SettleType              = 80;
    optional bool                 Disabled                           = 90;
    optional uint32               Level                              = 100;
}

message AppCommissionConfig {
    // @inject_tag: sql:"id"
    uint32     ID                              = 10;
    // @inject_tag: sql:"ent_id"
    string     EntID                           = 20;
    // @inject_tag: sql:"app_id"
    string     AppID                           = 30;
    // @inject_tag: sql:"threshold_amount"
    string     ThresholdAmount                 = 40;
    // @inject_tag: sql:"amount_or_percent"
    string     AmountOrPercent                 = 50;
    // @inject_tag: sql:"start_at"
    uint32     StartAt                         = 60;
    // @inject_tag: sql:"end_at"
    uint32     EndAt                           = 70;
    // @inject_tag: sql:"invites"
    uint32     Invites                         = 80;
    // @inject_tag: sql:"settle_type"
    string     SettleTypeStr                   = 90;
    basetypes.inspire.v1.SettleType SettleType = 100;
    // @inject_tag: sql:"disabled"
    bool       Disabled                        = 110;
    // @inject_tag: sql:"level"
    uint32     Level                           = 120;
    
    // @inject_tag: sql:"created_at"
    uint32     CreatedAt                       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32     UpdatedAt                       = 1010;
}

message Conds {
    optional basetypes.v1.StringVal EntID            = 10;
    optional basetypes.v1.StringVal AppID            = 20;
    optional basetypes.v1.Uint32Val SettleType       = 30;
    optional basetypes.v1.Uint32Val StartAt          = 40;
    optional basetypes.v1.Uint32Val EndAt            = 50;
    optional basetypes.v1.StringSliceVal EntIDs      = 60;
    optional basetypes.v1.BoolVal   Disabled         = 70;
    optional basetypes.v1.Uint32Val Level            = 80;
}

message CreateAppCommissionConfigRequest {
    AppCommissionConfigReq Info = 10;
}

message CreateAppCommissionConfigResponse {
    AppCommissionConfig Info = 10;
}

message UpdateAppCommissionConfigRequest {
    AppCommissionConfigReq Info = 10;
}

message UpdateAppCommissionConfigResponse {
    AppCommissionConfig Info = 10;
}

message GetAppCommissionConfigRequest {
    string EntID = 10;
}

message GetAppCommissionConfigResponse {
    AppCommissionConfig Info = 10;
}

message GetAppCommissionConfigsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetAppCommissionConfigsResponse {
    repeated AppCommissionConfig Infos = 10;
    uint32         Total = 20;
}

message ExistAppCommissionConfigCondsRequest {
  Conds  Conds  = 10;
}

message ExistAppCommissionConfigCondsResponse {
  bool   Info = 10;
}
