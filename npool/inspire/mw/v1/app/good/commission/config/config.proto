syntax = "proto3";

package inspire.middleware.app.good.commission.config.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/app/good/commission/config";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/inspire/v1/enums.proto";

// Service Name
service Middleware {
  rpc CreateAppGoodCommissionConfig(CreateAppGoodCommissionConfigRequest)
      returns (CreateAppGoodCommissionConfigResponse) {}
  rpc UpdateAppGoodCommissionConfig(UpdateAppGoodCommissionConfigRequest)
      returns (UpdateAppGoodCommissionConfigResponse) {}
  rpc GetAppGoodCommissionConfig(GetAppGoodCommissionConfigRequest)
      returns (GetAppGoodCommissionConfigResponse) {}
  rpc GetAppGoodCommissionConfigs(GetAppGoodCommissionConfigsRequest)
      returns (GetAppGoodCommissionConfigsResponse) {}
  rpc ExistAppGoodCommissionConfigConds(
      ExistAppGoodCommissionConfigCondsRequest)
      returns (ExistAppGoodCommissionConfigCondsResponse) {}
  rpc DeleteAppGoodCommissionConfig(DeleteAppGoodCommissionConfigRequest)
      returns (DeleteAppGoodCommissionConfigResponse) {
    option (google.api.http) = {
      post : "/v1/appgoodcommissionconfig_DeleteAppGoodCommissionConfig"
      body : "*"
    };
  }
}

message AppGoodCommissionConfigReq {
  optional uint32 ID = 10;
  optional string EntID = 20;
  optional string AppID = 30;
  optional string GoodID = 40;
  optional string AppGoodID = 50;
  optional string ThresholdAmount = 60;
  optional string AmountOrPercent = 70;
  optional uint32 StartAt = 80;
  optional uint32 Invites = 90;
  optional basetypes.inspire.v1.SettleType SettleType = 100;
  optional bool Disabled = 110;
  optional uint32 Level = 120;
}

message AppGoodCommissionConfig {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 20;
  // @inject_tag: sql:"app_id"
  string AppID = 30;
  // @inject_tag: sql:"good_id"
  string GoodID = 40;
  // @inject_tag: sql:"app_good_id"
  string AppGoodID = 50;
  // @inject_tag: sql:"threshold_amount"
  string ThresholdAmount = 60;
  // @inject_tag: sql:"amount_or_percent"
  string AmountOrPercent = 70;
  // @inject_tag: sql:"start_at"
  uint32 StartAt = 80;
  // @inject_tag: sql:"end_at"
  uint32 EndAt = 90;
  // @inject_tag: sql:"invites"
  uint32 Invites = 100;
  // @inject_tag: sql:"settle_type"
  string SettleTypeStr = 110;
  basetypes.inspire.v1.SettleType SettleType = 120;
  // @inject_tag: sql:"disabled"
  bool Disabled = 130;
  // @inject_tag: sql:"level"
  uint32 Level = 140;

  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 1000;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 1010;
}

message Conds {
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.StringVal GoodID = 30;
  optional basetypes.v1.StringVal AppGoodID = 40;
  optional basetypes.v1.Uint32Val SettleType = 50;
  optional basetypes.v1.Uint32Val StartAt = 60;
  optional basetypes.v1.Uint32Val EndAt = 70;
  optional basetypes.v1.StringSliceVal EntIDs = 80;
  optional basetypes.v1.StringSliceVal GoodIDs = 90;
  optional basetypes.v1.StringSliceVal AppGoodIDs = 100;
  optional basetypes.v1.BoolVal Disabled = 110;
  optional basetypes.v1.Uint32Val Level = 120;
}

message CreateAppGoodCommissionConfigRequest {
  AppGoodCommissionConfigReq Info = 10;
}

message CreateAppGoodCommissionConfigResponse {
  AppGoodCommissionConfig Info = 10;
}

message UpdateAppGoodCommissionConfigRequest {
  AppGoodCommissionConfigReq Info = 10;
}

message UpdateAppGoodCommissionConfigResponse {
  AppGoodCommissionConfig Info = 10;
}

message GetAppGoodCommissionConfigRequest { string EntID = 10; }

message GetAppGoodCommissionConfigResponse {
  AppGoodCommissionConfig Info = 10;
}

message GetAppGoodCommissionConfigsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetAppGoodCommissionConfigsResponse {
  repeated AppGoodCommissionConfig Infos = 10;
  uint32 Total = 20;
}

message DeleteAppGoodCommissionConfigRequest {
  AppGoodCommissionConfigReq Info = 10;
}

message DeleteAppGoodCommissionConfigResponse {
  AppGoodCommissionConfig Info = 10;
}

message ExistAppGoodCommissionConfigCondsRequest { Conds Conds = 10; }

message ExistAppGoodCommissionConfigCondsResponse { bool Info = 10; }
