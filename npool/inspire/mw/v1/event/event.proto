syntax = "proto3";

package inspire.middleware.event.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/event";

import "google/api/annotations.proto";
import "npool/basetypes/v1/usedfor.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/inspire/mw/v1/event/coin/coin.proto";

// Service Name
service Middleware {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse) {}
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse) {}
  rpc GetEvent(GetEventRequest) returns (GetEventResponse) {}
  rpc GetEvents(GetEventsRequest) returns (GetEventsResponse) {}
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse) {
    option (google.api.http) = {
      post : "/v1/event_DeleteEvent"
      body : "*"
    };
  }
  rpc RewardEvent(RewardEventRequest) returns (RewardEventResponse) {
    option (google.api.http) = {
      post : "/v1/event_RewardEvent"
      body : "*"
    };
  }
  rpc CalcluateEventRewards(CalcluateEventRewardsRequest) returns (CalcluateEventRewardsResponse) {
    option (google.api.http) = {
      post : "/v1/event_CalcluateEventRewards"
      body : "*"
    };
  }
}

message EventReq {
  optional uint32 ID = 10;
  optional string EntID = 11;
  optional string AppID = 20;
  optional basetypes.v1.UsedFor EventType = 30;
  repeated string CouponIDs = 40;
  optional string Credits = 50;
  optional string CreditsPerUSD = 60;
  optional uint32 MaxConsecutive = 70;
  optional string GoodID = 80;
  optional uint32 InviterLayers = 90;
  optional string AppGoodID = 100;
  optional bool RemoveCouponIDs = 110;
  repeated inspire.middleware.event.coin.v1.EventCoinReq Coins = 120;
  optional bool RemoveCoins = 130;
}

message Event {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 11;
  // @inject_tag: sql:"app_id"
  string AppID = 20;
  // @inject_tag: sql:"event_type"
  string EventTypeStr = 29;
  basetypes.v1.UsedFor EventType = 30;
  // @inject_tag: sql:"coupon_ids"
  string CouponIDsStr = 39;
  repeated string CouponIDs = 40;
  // @inject_tag: sql:"credits"
  string Credits = 50;
  // @inject_tag: sql:"credits_per_usd"
  string CreditsPerUSD = 60;
  // @inject_tag: sql:"max_consecutive"
  uint32 MaxConsecutive = 70;
  // @inject_tag: sql:"good_id"
  optional string GoodID = 80;
  // @inject_tag: sql:"app_good_id"
  optional string AppGoodID = 81;
  // @inject_tag: sql:"inviter_layers"
  uint32 InviterLayers = 90;
  repeated inspire.middleware.event.coin.v1.EventCoin Coins = 100;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 200;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 210;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 9;
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.Uint32Val EventType = 30;
  optional basetypes.v1.StringVal GoodID = 40;
  optional basetypes.v1.StringVal AppGoodID = 41;
  optional basetypes.v1.StringSliceVal EntIDs = 50;
}

message CreateEventRequest { EventReq Info = 10; }

message CreateEventResponse { Event Info = 10; }

message UpdateEventRequest { EventReq Info = 10; }

message UpdateEventResponse { Event Info = 10; }

message GetEventRequest { string EntID = 10; }

message GetEventResponse { Event Info = 10; }

message GetEventsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetEventsResponse {
  repeated Event Infos = 10;
  uint32 Total = 20;
}

message DeleteEventRequest { EventReq Info = 10; }

message DeleteEventResponse { Event Info = 10; }

message Credit {
  string AppID = 10;
  string UserID = 20;
  string Credits = 30;
}
  
message CoinReward {
  string AppID = 10;
  string UserID = 20;
  string CoinTypeID = 30;
  string CoinConfigID = 40;
  string CoinRewards = 50;
}

message CouponReward {
  string AppID = 10;
  string UserID = 20;
  string CouponID = 30;
  string Denomination = 40;
  bool Cashable = 50;
}

message Reward {
  string TaskID = 10;
  string UserID = 20;
  repeated Credit Credits = 30;
  repeated CoinReward CoinRewards = 40;
  repeated CouponReward CouponRewards = 50;
}

message RewardEventRequest {
  string AppID = 10;
  string UserID = 20;
  basetypes.v1.UsedFor EventType = 30;
  optional string GoodID = 40;
  optional string AppGoodID = 41;
  uint32 Consecutive = 50;
  optional string Amount = 60;
}

message RewardEventResponse { repeated Credit Infos = 10; }

message CalcluateEventRewardsRequest {
  string AppID = 10;
  string UserID = 20;
  basetypes.v1.UsedFor EventType = 30;
  optional string GoodID = 40;
  optional string AppGoodID = 41;
  uint32 Consecutive = 50;
  optional string Amount = 60;
}

message CalcluateEventRewardsResponse {
  repeated Reward Info = 10;
}

message RewardReliableRequest {
  string AppID = 10;
  string UserID = 20;
  string TaskID = 30;
  string EventID = 40;
  repeated Credit Credits = 50;
  repeated CoinReward CoinRewards = 60;
  uint32 RetryCount = 70;
}

message RewardReliableResponse {}

message RewardUnReliableRequest {
  string AppID = 10;
  string UserID = 20;
  string TaskID = 30;
  string EventID = 40;
  repeated CouponReward Coupons = 50;
}

message RewardUnReliableResponse {}
