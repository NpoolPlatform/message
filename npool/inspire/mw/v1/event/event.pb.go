// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/inspire/mw/v1/event/event.proto

package event

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	event "github.com/NpoolPlatform/message/npool/inspire/mgr/v1/event"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEventOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *event.Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetEventOnlyRequest) Reset() {
	*x = GetEventOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventOnlyRequest) ProtoMessage() {}

func (x *GetEventOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetEventOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mw_v1_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventOnlyRequest) GetConds() *event.Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetEventOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *event.Event `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetEventOnlyResponse) Reset() {
	*x = GetEventOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventOnlyResponse) ProtoMessage() {}

func (x *GetEventOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetEventOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mw_v1_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventOnlyResponse) GetInfo() *event.Event {
	if x != nil {
		return x.Info
	}
	return nil
}

type RewardEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string     `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID      string     `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EventType   v1.UsedFor `protobuf:"varint,30,opt,name=EventType,proto3,enum=basetypes.v1.UsedFor" json:"EventType,omitempty"`
	GoodID      *string    `protobuf:"bytes,40,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	Consecutive uint32     `protobuf:"varint,50,opt,name=Consecutive,proto3" json:"Consecutive,omitempty"`
	Amount      string     `protobuf:"bytes,60,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *RewardEventRequest) Reset() {
	*x = RewardEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardEventRequest) ProtoMessage() {}

func (x *RewardEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardEventRequest.ProtoReflect.Descriptor instead.
func (*RewardEventRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mw_v1_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *RewardEventRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *RewardEventRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RewardEventRequest) GetEventType() v1.UsedFor {
	if x != nil {
		return x.EventType
	}
	return v1.UsedFor(0)
}

func (x *RewardEventRequest) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *RewardEventRequest) GetConsecutive() uint32 {
	if x != nil {
		return x.Consecutive
	}
	return 0
}

func (x *RewardEventRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type RewardEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credits string `protobuf:"bytes,10,opt,name=Credits,proto3" json:"Credits,omitempty"`
}

func (x *RewardEventResponse) Reset() {
	*x = RewardEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardEventResponse) ProtoMessage() {}

func (x *RewardEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mw_v1_event_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardEventResponse.ProtoReflect.Descriptor instead.
func (*RewardEventResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mw_v1_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *RewardEventResponse) GetCredits() string {
	if x != nil {
		return x.Credits
	}
	return ""
}

var File_npool_inspire_mw_v1_event_event_proto protoreflect.FileDescriptor

var file_npool_inspire_mw_v1_event_event_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x64, 0x66, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x33,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x13, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x32, 0xf7, 0x01, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x75, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_mw_v1_event_event_proto_rawDescOnce sync.Once
	file_npool_inspire_mw_v1_event_event_proto_rawDescData = file_npool_inspire_mw_v1_event_event_proto_rawDesc
)

func file_npool_inspire_mw_v1_event_event_proto_rawDescGZIP() []byte {
	file_npool_inspire_mw_v1_event_event_proto_rawDescOnce.Do(func() {
		file_npool_inspire_mw_v1_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_mw_v1_event_event_proto_rawDescData)
	})
	return file_npool_inspire_mw_v1_event_event_proto_rawDescData
}

var file_npool_inspire_mw_v1_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_npool_inspire_mw_v1_event_event_proto_goTypes = []interface{}{
	(*GetEventOnlyRequest)(nil),  // 0: inspire.middleware.event.v1.GetEventOnlyRequest
	(*GetEventOnlyResponse)(nil), // 1: inspire.middleware.event.v1.GetEventOnlyResponse
	(*RewardEventRequest)(nil),   // 2: inspire.middleware.event.v1.RewardEventRequest
	(*RewardEventResponse)(nil),  // 3: inspire.middleware.event.v1.RewardEventResponse
	(*event.Conds)(nil),          // 4: inspire.manager.event.v1.Conds
	(*event.Event)(nil),          // 5: inspire.manager.event.v1.Event
	(v1.UsedFor)(0),              // 6: basetypes.v1.UsedFor
}
var file_npool_inspire_mw_v1_event_event_proto_depIdxs = []int32{
	4, // 0: inspire.middleware.event.v1.GetEventOnlyRequest.Conds:type_name -> inspire.manager.event.v1.Conds
	5, // 1: inspire.middleware.event.v1.GetEventOnlyResponse.Info:type_name -> inspire.manager.event.v1.Event
	6, // 2: inspire.middleware.event.v1.RewardEventRequest.EventType:type_name -> basetypes.v1.UsedFor
	0, // 3: inspire.middleware.event.v1.Middleware.GetEventOnly:input_type -> inspire.middleware.event.v1.GetEventOnlyRequest
	2, // 4: inspire.middleware.event.v1.Middleware.RewardEvent:input_type -> inspire.middleware.event.v1.RewardEventRequest
	1, // 5: inspire.middleware.event.v1.Middleware.GetEventOnly:output_type -> inspire.middleware.event.v1.GetEventOnlyResponse
	3, // 6: inspire.middleware.event.v1.Middleware.RewardEvent:output_type -> inspire.middleware.event.v1.RewardEventResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_npool_inspire_mw_v1_event_event_proto_init() }
func file_npool_inspire_mw_v1_event_event_proto_init() {
	if File_npool_inspire_mw_v1_event_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_mw_v1_event_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mw_v1_event_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mw_v1_event_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mw_v1_event_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_mw_v1_event_event_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_mw_v1_event_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_mw_v1_event_event_proto_goTypes,
		DependencyIndexes: file_npool_inspire_mw_v1_event_event_proto_depIdxs,
		MessageInfos:      file_npool_inspire_mw_v1_event_event_proto_msgTypes,
	}.Build()
	File_npool_inspire_mw_v1_event_event_proto = out.File
	file_npool_inspire_mw_v1_event_event_proto_rawDesc = nil
	file_npool_inspire_mw_v1_event_event_proto_goTypes = nil
	file_npool_inspire_mw_v1_event_event_proto_depIdxs = nil
}
