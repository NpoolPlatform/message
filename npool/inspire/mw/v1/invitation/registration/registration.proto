syntax = "proto3";

package inspire.middleware.invitation.registration.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/invitation/registration";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/inspire/mgr/v1/invitation/registration/registration.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    // Method Version
    rpc CreateRegistration  (CreateRegistrationRequest)  returns (CreateRegistrationResponse)  {}
    rpc UpdateRegistration  (UpdateRegistrationRequest)  returns (UpdateRegistrationResponse)  {}
    rpc GetRegistrations    (GetRegistrationsRequest)    returns (GetRegistrationsResponse)    {}
    rpc GetRegistrationOnly (GetRegistrationOnlyRequest) returns (GetRegistrationOnlyResponse) {}
    rpc GetInvitees         (GetInviteesRequest)         returns (GetInviteesResponse)         {}
    rpc GetInviters         (GetInvitersRequest)         returns (GetInvitersResponse)         {}
}

message Registration {
    // @inject_tag: sql:"id"
    string ID        = 10;
    // @inject_tag: sql:"app_id"
    string AppID     = 20;
    // @inject_tag: sql:"inviter_id"
    string InviterID = 30;
    // @inject_tag: sql:"invitee_id"
    string InviteeID = 40;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 50;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 60;
}

message CreateRegistrationRequest {
    inspire.manager.invitation.registration.v1.RegistrationReq Info = 10;
}

message CreateRegistrationResponse {
    Registration Info = 10;
}

message UpdateRegistrationRequest {
    inspire.manager.invitation.registration.v1.RegistrationReq Info = 10;
}

message UpdateRegistrationResponse {
    Registration Info = 10;
}

message GetRegistrationsRequest {
    inspire.manager.invitation.registration.v1.Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetRegistrationsResponse {
    repeated Registration Infos = 10;
}

message GetRegistrationOnlyRequest {
    inspire.manager.invitation.registration.v1.Conds Conds = 10;
}

message GetRegistrationOnlyResponse {
    Registration Info = 10;
}

message GetInviteesRequest {
    string          AppID   = 10;
    repeated string UserIDs = 20;
    int32           Offset  = 30;
    int32           Limit   = 40;
}

message GetInviteesResponse {
    repeated Registration Infos = 10;
    uint32                Total = 20;
}

message GetInvitersRequest {
    string          AppID   = 10;
    repeated string UserIDs = 20;
    int32           Offset  = 30;
    int32           Limit   = 40;
}

message GetInvitersResponse {
    repeated Registration Infos = 10;
    uint32                Total = 20;
}


