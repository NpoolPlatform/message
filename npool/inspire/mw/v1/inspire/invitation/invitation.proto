syntax = "proto3";

package inspire.middleware.inspire.invitation.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mw/v1/inspire/invitation";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    // Method Version
    rpc GetInvitees       (GetInviteesRequest)       returns (GetInviteesResponse)       {}
    rpc GetInviters       (GetInvitersRequest)       returns (GetInvitersResponse)       {}
    rpc GetActivePercents (GetActivePercentsRequest) returns (GetActivePercentsResponse) {}
}

message Invitation {
    // @inject_tag: sql:"inviter_id"
    string InviterID = 10;
    // @inject_tag: sql:"invitee_id"
    string InviteeID = 20;
    // @inject_tag: sql:"create_at"
    uint32 CreatedAt = 30;
    bool   Kol       = 40;
}

message GetInviteesRequest {
    string          AppID   = 10;
    repeated string UserIDs = 20;
    int32           Offset  = 30;
    int32           Limit   = 40;
}

message GetInviteesResponse {
    repeated Invitation Infos = 10;
    uint32              Total = 20;
}

message GetInvitersRequest {
    string AppID  = 10;
    string UserID = 20;
    int32  Offset = 30;
    int32  Limit  = 40;
}

message GetInvitersResponse {
    repeated Invitation Infos = 10;
    uint32              Total = 20;
}

message Percent {
    // @inject_tag: sql:"user_id"
    string UserID     = 10;
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID = 20;
    // @inject_tag: sql:"good_id"
    string GoodID     = 30;
    // @inject_tag: sql:"percent"
    uint32 Percent    = 40;
    // @inject_tag: sql:"start"
    uint32 StartAt    = 50;
}

message GetActivePercentsRequest {
    string          AppID   = 10;
    repeated string UserIDs = 20;
    int32           Offset  = 30;
    int32           Limit   = 40;
}

message GetActivePercentsResponse {
    repeated Percent Infos = 10;
    uint32           Total = 20;
}
