// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/mgr/v1/inspire/coupon/userspecialreduction/userspecialreduction.proto

package userspecialreduction

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserSpecialReductionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID           *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID          *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Amount          *string `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	ReleaseByUserID *string `protobuf:"bytes,50,opt,name=ReleaseByUserID,proto3,oneof" json:"ReleaseByUserID,omitempty"`
	Start           *string `protobuf:"bytes,60,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
	DurationDays    *string `protobuf:"bytes,70,opt,name=DurationDays,proto3,oneof" json:"DurationDays,omitempty"`
	Message         *string `protobuf:"bytes,80,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *UserSpecialReductionReq) Reset() {
	*x = UserSpecialReductionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSpecialReductionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSpecialReductionReq) ProtoMessage() {}

func (x *UserSpecialReductionReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSpecialReductionReq.ProtoReflect.Descriptor instead.
func (*UserSpecialReductionReq) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{0}
}

func (x *UserSpecialReductionReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *UserSpecialReductionReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *UserSpecialReductionReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *UserSpecialReductionReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *UserSpecialReductionReq) GetReleaseByUserID() string {
	if x != nil && x.ReleaseByUserID != nil {
		return *x.ReleaseByUserID
	}
	return ""
}

func (x *UserSpecialReductionReq) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

func (x *UserSpecialReductionReq) GetDurationDays() string {
	if x != nil && x.DurationDays != nil {
		return *x.DurationDays
	}
	return ""
}

func (x *UserSpecialReductionReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type UserSpecialReduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID           string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID          string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Amount          string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ReleaseByUserID string `protobuf:"bytes,50,opt,name=ReleaseByUserID,proto3" json:"ReleaseByUserID,omitempty"`
	Start           string `protobuf:"bytes,60,opt,name=Start,proto3" json:"Start,omitempty"`
	DurationDays    string `protobuf:"bytes,70,opt,name=DurationDays,proto3" json:"DurationDays,omitempty"`
	Message         string `protobuf:"bytes,80,opt,name=Message,proto3" json:"Message,omitempty"`
	CreatedAt       string `protobuf:"bytes,100,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt       string `protobuf:"bytes,110,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *UserSpecialReduction) Reset() {
	*x = UserSpecialReduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSpecialReduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSpecialReduction) ProtoMessage() {}

func (x *UserSpecialReduction) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSpecialReduction.ProtoReflect.Descriptor instead.
func (*UserSpecialReduction) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{1}
}

func (x *UserSpecialReduction) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserSpecialReduction) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UserSpecialReduction) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserSpecialReduction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UserSpecialReduction) GetReleaseByUserID() string {
	if x != nil {
		return x.ReleaseByUserID
	}
	return ""
}

func (x *UserSpecialReduction) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *UserSpecialReduction) GetDurationDays() string {
	if x != nil {
		return x.DurationDays
	}
	return ""
}

func (x *UserSpecialReduction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserSpecialReduction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserSpecialReduction) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID  *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID *npool.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Start  *npool.Uint32Val `protobuf:"bytes,40,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *npool.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetStart() *npool.Uint32Val {
	if x != nil {
		return x.Start
	}
	return nil
}

type CreateUserSpecialReductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReductionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserSpecialReductionRequest) Reset() {
	*x = CreateUserSpecialReductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSpecialReductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSpecialReductionRequest) ProtoMessage() {}

func (x *CreateUserSpecialReductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSpecialReductionRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSpecialReductionRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserSpecialReductionRequest) GetInfo() *UserSpecialReductionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserSpecialReductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserSpecialReductionResponse) Reset() {
	*x = CreateUserSpecialReductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSpecialReductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSpecialReductionResponse) ProtoMessage() {}

func (x *CreateUserSpecialReductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSpecialReductionResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSpecialReductionResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserSpecialReductionResponse) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserSpecialReductionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserSpecialReductionReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateUserSpecialReductionsRequest) Reset() {
	*x = CreateUserSpecialReductionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSpecialReductionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSpecialReductionsRequest) ProtoMessage() {}

func (x *CreateUserSpecialReductionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSpecialReductionsRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSpecialReductionsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserSpecialReductionsRequest) GetInfos() []*UserSpecialReductionReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateUserSpecialReductionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserSpecialReduction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateUserSpecialReductionsResponse) Reset() {
	*x = CreateUserSpecialReductionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSpecialReductionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSpecialReductionsResponse) ProtoMessage() {}

func (x *CreateUserSpecialReductionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSpecialReductionsResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSpecialReductionsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserSpecialReductionsResponse) GetInfos() []*UserSpecialReduction {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateUserSpecialReductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReductionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserSpecialReductionRequest) Reset() {
	*x = UpdateUserSpecialReductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserSpecialReductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSpecialReductionRequest) ProtoMessage() {}

func (x *UpdateUserSpecialReductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSpecialReductionRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserSpecialReductionRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserSpecialReductionRequest) GetInfo() *UserSpecialReductionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserSpecialReductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserSpecialReductionResponse) Reset() {
	*x = UpdateUserSpecialReductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserSpecialReductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSpecialReductionResponse) ProtoMessage() {}

func (x *UpdateUserSpecialReductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSpecialReductionResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserSpecialReductionResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserSpecialReductionResponse) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserSpecialReductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetUserSpecialReductionRequest) Reset() {
	*x = GetUserSpecialReductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionRequest) ProtoMessage() {}

func (x *GetUserSpecialReductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionRequest.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserSpecialReductionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetUserSpecialReductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserSpecialReductionResponse) Reset() {
	*x = GetUserSpecialReductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionResponse) ProtoMessage() {}

func (x *GetUserSpecialReductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionResponse.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserSpecialReductionResponse) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserSpecialReductionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUserSpecialReductionsRequest) Reset() {
	*x = GetUserSpecialReductionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionsRequest) ProtoMessage() {}

func (x *GetUserSpecialReductionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserSpecialReductionsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetUserSpecialReductionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserSpecialReductionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUserSpecialReductionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserSpecialReduction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetUserSpecialReductionsResponse) Reset() {
	*x = GetUserSpecialReductionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionsResponse) ProtoMessage() {}

func (x *GetUserSpecialReductionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserSpecialReductionsResponse) GetInfos() []*UserSpecialReduction {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetUserSpecialReductionsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUserSpecialReductionOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetUserSpecialReductionOnlyRequest) Reset() {
	*x = GetUserSpecialReductionOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionOnlyRequest) ProtoMessage() {}

func (x *GetUserSpecialReductionOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserSpecialReductionOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetUserSpecialReductionOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserSpecialReductionOnlyResponse) Reset() {
	*x = GetUserSpecialReductionOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSpecialReductionOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSpecialReductionOnlyResponse) ProtoMessage() {}

func (x *GetUserSpecialReductionOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSpecialReductionOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetUserSpecialReductionOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserSpecialReductionOnlyResponse) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistUserSpecialReductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistUserSpecialReductionRequest) Reset() {
	*x = ExistUserSpecialReductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUserSpecialReductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUserSpecialReductionRequest) ProtoMessage() {}

func (x *ExistUserSpecialReductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUserSpecialReductionRequest.ProtoReflect.Descriptor instead.
func (*ExistUserSpecialReductionRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{15}
}

func (x *ExistUserSpecialReductionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistUserSpecialReductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistUserSpecialReductionResponse) Reset() {
	*x = ExistUserSpecialReductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUserSpecialReductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUserSpecialReductionResponse) ProtoMessage() {}

func (x *ExistUserSpecialReductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUserSpecialReductionResponse.ProtoReflect.Descriptor instead.
func (*ExistUserSpecialReductionResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{16}
}

func (x *ExistUserSpecialReductionResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistUserSpecialReductionCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistUserSpecialReductionCondsRequest) Reset() {
	*x = ExistUserSpecialReductionCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUserSpecialReductionCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUserSpecialReductionCondsRequest) ProtoMessage() {}

func (x *ExistUserSpecialReductionCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUserSpecialReductionCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistUserSpecialReductionCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{17}
}

func (x *ExistUserSpecialReductionCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistUserSpecialReductionCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistUserSpecialReductionCondsResponse) Reset() {
	*x = ExistUserSpecialReductionCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistUserSpecialReductionCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistUserSpecialReductionCondsResponse) ProtoMessage() {}

func (x *ExistUserSpecialReductionCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistUserSpecialReductionCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistUserSpecialReductionCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{18}
}

func (x *ExistUserSpecialReductionCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountUserSpecialReductionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountUserSpecialReductionsRequest) Reset() {
	*x = CountUserSpecialReductionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserSpecialReductionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserSpecialReductionsRequest) ProtoMessage() {}

func (x *CountUserSpecialReductionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserSpecialReductionsRequest.ProtoReflect.Descriptor instead.
func (*CountUserSpecialReductionsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{19}
}

func (x *CountUserSpecialReductionsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountUserSpecialReductionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountUserSpecialReductionsResponse) Reset() {
	*x = CountUserSpecialReductionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserSpecialReductionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserSpecialReductionsResponse) ProtoMessage() {}

func (x *CountUserSpecialReductionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserSpecialReductionsResponse.ProtoReflect.Descriptor instead.
func (*CountUserSpecialReductionsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{20}
}

func (x *CountUserSpecialReductionsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteUserSpecialReductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteUserSpecialReductionRequest) Reset() {
	*x = DeleteUserSpecialReductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserSpecialReductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserSpecialReductionRequest) ProtoMessage() {}

func (x *DeleteUserSpecialReductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserSpecialReductionRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserSpecialReductionRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteUserSpecialReductionRequest) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteUserSpecialReductionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserSpecialReduction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteUserSpecialReductionResponse) Reset() {
	*x = DeleteUserSpecialReductionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserSpecialReductionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserSpecialReductionResponse) ProtoMessage() {}

func (x *DeleteUserSpecialReductionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserSpecialReductionResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserSpecialReductionResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteUserSpecialReductionResponse) GetInfo() *UserSpecialReduction {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto protoreflect.FileDescriptor

var file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDesc = []byte{
	0x0a, 0x53, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf7, 0x02, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22,
	0x88, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x22, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x89, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x88, 0x01,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x30, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x9c, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x79, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x0a, 0x20, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x21, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x7c, 0x0a, 0x25, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x3c, 0x0a, 0x26, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x78, 0x0a,
	0x21, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x22, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x22, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xf9, 0x10, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0xd5,
	0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd8, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x5b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xd5, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xcc, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x57, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd8, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x5b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xcf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x57, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd2, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x59, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xe1, 0x01, 0x0a, 0x1e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x5d, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5e, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd5,
	0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x59, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd5, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5b,
	0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescOnce sync.Once
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescData = file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDesc
)

func file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescGZIP() []byte {
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescOnce.Do(func() {
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescData)
	})
	return file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDescData
}

var file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_goTypes = []interface{}{
	(*UserSpecialReductionReq)(nil),                // 0: inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReductionReq
	(*UserSpecialReduction)(nil),                   // 1: inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	(*Conds)(nil),                                  // 2: inspire.manager.inspire.coupon.userspecialreduction.v1.Conds
	(*CreateUserSpecialReductionRequest)(nil),      // 3: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionRequest
	(*CreateUserSpecialReductionResponse)(nil),     // 4: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionResponse
	(*CreateUserSpecialReductionsRequest)(nil),     // 5: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsRequest
	(*CreateUserSpecialReductionsResponse)(nil),    // 6: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsResponse
	(*UpdateUserSpecialReductionRequest)(nil),      // 7: inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionRequest
	(*UpdateUserSpecialReductionResponse)(nil),     // 8: inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionResponse
	(*GetUserSpecialReductionRequest)(nil),         // 9: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionRequest
	(*GetUserSpecialReductionResponse)(nil),        // 10: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionResponse
	(*GetUserSpecialReductionsRequest)(nil),        // 11: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsRequest
	(*GetUserSpecialReductionsResponse)(nil),       // 12: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsResponse
	(*GetUserSpecialReductionOnlyRequest)(nil),     // 13: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyRequest
	(*GetUserSpecialReductionOnlyResponse)(nil),    // 14: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyResponse
	(*ExistUserSpecialReductionRequest)(nil),       // 15: inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionRequest
	(*ExistUserSpecialReductionResponse)(nil),      // 16: inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionResponse
	(*ExistUserSpecialReductionCondsRequest)(nil),  // 17: inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionCondsRequest
	(*ExistUserSpecialReductionCondsResponse)(nil), // 18: inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionCondsResponse
	(*CountUserSpecialReductionsRequest)(nil),      // 19: inspire.manager.inspire.coupon.userspecialreduction.v1.CountUserSpecialReductionsRequest
	(*CountUserSpecialReductionsResponse)(nil),     // 20: inspire.manager.inspire.coupon.userspecialreduction.v1.CountUserSpecialReductionsResponse
	(*DeleteUserSpecialReductionRequest)(nil),      // 21: inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionRequest
	(*DeleteUserSpecialReductionResponse)(nil),     // 22: inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionResponse
	(*npool.StringVal)(nil),                        // 23: npool.v1.StringVal
	(*npool.Uint32Val)(nil),                        // 24: npool.v1.Uint32Val
}
var file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_depIdxs = []int32{
	23, // 0: inspire.manager.inspire.coupon.userspecialreduction.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: inspire.manager.inspire.coupon.userspecialreduction.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: inspire.manager.inspire.coupon.userspecialreduction.v1.Conds.UserID:type_name -> npool.v1.StringVal
	24, // 3: inspire.manager.inspire.coupon.userspecialreduction.v1.Conds.Start:type_name -> npool.v1.Uint32Val
	0,  // 4: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionRequest.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReductionReq
	1,  // 5: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionResponse.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	0,  // 6: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsRequest.Infos:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReductionReq
	1,  // 7: inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsResponse.Infos:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	0,  // 8: inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionRequest.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReductionReq
	1,  // 9: inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionResponse.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	1,  // 10: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionResponse.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	2,  // 11: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsRequest.Conds:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.Conds
	1,  // 12: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsResponse.Infos:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	2,  // 13: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyRequest.Conds:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.Conds
	1,  // 14: inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyResponse.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	2,  // 15: inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionCondsRequest.Conds:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.Conds
	2,  // 16: inspire.manager.inspire.coupon.userspecialreduction.v1.CountUserSpecialReductionsRequest.Conds:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.Conds
	1,  // 17: inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionRequest.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	1,  // 18: inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionResponse.Info:type_name -> inspire.manager.inspire.coupon.userspecialreduction.v1.UserSpecialReduction
	3,  // 19: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CreateUserSpecialReduction:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionRequest
	5,  // 20: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CreateUserSpecialReductions:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsRequest
	7,  // 21: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.UpdateUserSpecialReduction:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionRequest
	9,  // 22: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReduction:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionRequest
	13, // 23: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReductionOnly:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyRequest
	11, // 24: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReductions:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsRequest
	15, // 25: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.ExistUserSpecialReduction:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionRequest
	17, // 26: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.ExistUserSpecialReductionConds:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionCondsRequest
	19, // 27: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CountUserSpecialReductions:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CountUserSpecialReductionsRequest
	21, // 28: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.DeleteUserSpecialReduction:input_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionRequest
	4,  // 29: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CreateUserSpecialReduction:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionResponse
	6,  // 30: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CreateUserSpecialReductions:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CreateUserSpecialReductionsResponse
	8,  // 31: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.UpdateUserSpecialReduction:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.UpdateUserSpecialReductionResponse
	10, // 32: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReduction:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionResponse
	14, // 33: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReductionOnly:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionOnlyResponse
	12, // 34: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.GetUserSpecialReductions:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.GetUserSpecialReductionsResponse
	16, // 35: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.ExistUserSpecialReduction:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionResponse
	18, // 36: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.ExistUserSpecialReductionConds:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.ExistUserSpecialReductionCondsResponse
	20, // 37: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.CountUserSpecialReductions:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.CountUserSpecialReductionsResponse
	22, // 38: inspire.manager.inspire.coupon.userspecialreduction.v1.Manager.DeleteUserSpecialReduction:output_type -> inspire.manager.inspire.coupon.userspecialreduction.v1.DeleteUserSpecialReductionResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() {
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_init()
}
func file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_init() {
	if File_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSpecialReductionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSpecialReduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSpecialReductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSpecialReductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSpecialReductionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSpecialReductionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserSpecialReductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserSpecialReductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSpecialReductionOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUserSpecialReductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUserSpecialReductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUserSpecialReductionCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistUserSpecialReductionCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserSpecialReductionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserSpecialReductionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserSpecialReductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserSpecialReductionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_goTypes,
		DependencyIndexes: file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_depIdxs,
		MessageInfos:      file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_msgTypes,
	}.Build()
	File_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto = out.File
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_rawDesc = nil
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_goTypes = nil
	file_npool_inspire_mgr_v1_inspire_coupon_userspecialreduction_userspecialreduction_proto_depIdxs = nil
}
