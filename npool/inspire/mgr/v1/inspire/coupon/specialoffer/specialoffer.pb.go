// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/mgr/v1/inspire/coupon/specialoffer/specialoffer.proto

package specialoffer

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecialOfferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID           *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID          *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Amount          *string `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	ReleaseByUserID *string `protobuf:"bytes,50,opt,name=ReleaseByUserID,proto3,oneof" json:"ReleaseByUserID,omitempty"`
	Start           *string `protobuf:"bytes,60,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
	DurationDays    *string `protobuf:"bytes,70,opt,name=DurationDays,proto3,oneof" json:"DurationDays,omitempty"`
	Message         *string `protobuf:"bytes,80,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *SpecialOfferReq) Reset() {
	*x = SpecialOfferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialOfferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialOfferReq) ProtoMessage() {}

func (x *SpecialOfferReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialOfferReq.ProtoReflect.Descriptor instead.
func (*SpecialOfferReq) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{0}
}

func (x *SpecialOfferReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *SpecialOfferReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *SpecialOfferReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *SpecialOfferReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *SpecialOfferReq) GetReleaseByUserID() string {
	if x != nil && x.ReleaseByUserID != nil {
		return *x.ReleaseByUserID
	}
	return ""
}

func (x *SpecialOfferReq) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

func (x *SpecialOfferReq) GetDurationDays() string {
	if x != nil && x.DurationDays != nil {
		return *x.DurationDays
	}
	return ""
}

func (x *SpecialOfferReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type SpecialOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID           string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID          string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Amount          string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ReleaseByUserID string `protobuf:"bytes,50,opt,name=ReleaseByUserID,proto3" json:"ReleaseByUserID,omitempty"`
	Start           string `protobuf:"bytes,60,opt,name=Start,proto3" json:"Start,omitempty"`
	DurationDays    string `protobuf:"bytes,70,opt,name=DurationDays,proto3" json:"DurationDays,omitempty"`
	Message         string `protobuf:"bytes,80,opt,name=Message,proto3" json:"Message,omitempty"`
	CreatedAt       string `protobuf:"bytes,100,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt       string `protobuf:"bytes,110,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *SpecialOffer) Reset() {
	*x = SpecialOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialOffer) ProtoMessage() {}

func (x *SpecialOffer) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialOffer.ProtoReflect.Descriptor instead.
func (*SpecialOffer) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{1}
}

func (x *SpecialOffer) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SpecialOffer) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SpecialOffer) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SpecialOffer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SpecialOffer) GetReleaseByUserID() string {
	if x != nil {
		return x.ReleaseByUserID
	}
	return ""
}

func (x *SpecialOffer) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *SpecialOffer) GetDurationDays() string {
	if x != nil {
		return x.DurationDays
	}
	return ""
}

func (x *SpecialOffer) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SpecialOffer) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SpecialOffer) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID  *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID *npool.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Start  *npool.Uint32Val `protobuf:"bytes,40,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *npool.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetStart() *npool.Uint32Val {
	if x != nil {
		return x.Start
	}
	return nil
}

type CreateSpecialOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOfferReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSpecialOfferRequest) Reset() {
	*x = CreateSpecialOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpecialOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecialOfferRequest) ProtoMessage() {}

func (x *CreateSpecialOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecialOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateSpecialOfferRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSpecialOfferRequest) GetInfo() *SpecialOfferReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSpecialOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSpecialOfferResponse) Reset() {
	*x = CreateSpecialOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpecialOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecialOfferResponse) ProtoMessage() {}

func (x *CreateSpecialOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecialOfferResponse.ProtoReflect.Descriptor instead.
func (*CreateSpecialOfferResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSpecialOfferResponse) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSpecialOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SpecialOfferReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSpecialOffersRequest) Reset() {
	*x = CreateSpecialOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpecialOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecialOffersRequest) ProtoMessage() {}

func (x *CreateSpecialOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecialOffersRequest.ProtoReflect.Descriptor instead.
func (*CreateSpecialOffersRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSpecialOffersRequest) GetInfos() []*SpecialOfferReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateSpecialOffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SpecialOffer `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateSpecialOffersResponse) Reset() {
	*x = CreateSpecialOffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpecialOffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpecialOffersResponse) ProtoMessage() {}

func (x *CreateSpecialOffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpecialOffersResponse.ProtoReflect.Descriptor instead.
func (*CreateSpecialOffersResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSpecialOffersResponse) GetInfos() []*SpecialOffer {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateSpecialOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOfferReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSpecialOfferRequest) Reset() {
	*x = UpdateSpecialOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpecialOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpecialOfferRequest) ProtoMessage() {}

func (x *UpdateSpecialOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpecialOfferRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpecialOfferRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSpecialOfferRequest) GetInfo() *SpecialOfferReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSpecialOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSpecialOfferResponse) Reset() {
	*x = UpdateSpecialOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpecialOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpecialOfferResponse) ProtoMessage() {}

func (x *UpdateSpecialOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpecialOfferResponse.ProtoReflect.Descriptor instead.
func (*UpdateSpecialOfferResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSpecialOfferResponse) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSpecialOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSpecialOfferRequest) Reset() {
	*x = GetSpecialOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOfferRequest) ProtoMessage() {}

func (x *GetSpecialOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOfferRequest.ProtoReflect.Descriptor instead.
func (*GetSpecialOfferRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{9}
}

func (x *GetSpecialOfferRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetSpecialOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSpecialOfferResponse) Reset() {
	*x = GetSpecialOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOfferResponse) ProtoMessage() {}

func (x *GetSpecialOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOfferResponse.ProtoReflect.Descriptor instead.
func (*GetSpecialOfferResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{10}
}

func (x *GetSpecialOfferResponse) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSpecialOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSpecialOffersRequest) Reset() {
	*x = GetSpecialOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOffersRequest) ProtoMessage() {}

func (x *GetSpecialOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOffersRequest.ProtoReflect.Descriptor instead.
func (*GetSpecialOffersRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{11}
}

func (x *GetSpecialOffersRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetSpecialOffersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSpecialOffersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSpecialOffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SpecialOffer `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32          `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSpecialOffersResponse) Reset() {
	*x = GetSpecialOffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOffersResponse) ProtoMessage() {}

func (x *GetSpecialOffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOffersResponse.ProtoReflect.Descriptor instead.
func (*GetSpecialOffersResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{12}
}

func (x *GetSpecialOffersResponse) GetInfos() []*SpecialOffer {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSpecialOffersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetSpecialOfferOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetSpecialOfferOnlyRequest) Reset() {
	*x = GetSpecialOfferOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOfferOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOfferOnlyRequest) ProtoMessage() {}

func (x *GetSpecialOfferOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOfferOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetSpecialOfferOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{13}
}

func (x *GetSpecialOfferOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetSpecialOfferOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSpecialOfferOnlyResponse) Reset() {
	*x = GetSpecialOfferOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialOfferOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialOfferOnlyResponse) ProtoMessage() {}

func (x *GetSpecialOfferOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialOfferOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetSpecialOfferOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{14}
}

func (x *GetSpecialOfferOnlyResponse) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistSpecialOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistSpecialOfferRequest) Reset() {
	*x = ExistSpecialOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSpecialOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSpecialOfferRequest) ProtoMessage() {}

func (x *ExistSpecialOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSpecialOfferRequest.ProtoReflect.Descriptor instead.
func (*ExistSpecialOfferRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{15}
}

func (x *ExistSpecialOfferRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistSpecialOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSpecialOfferResponse) Reset() {
	*x = ExistSpecialOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSpecialOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSpecialOfferResponse) ProtoMessage() {}

func (x *ExistSpecialOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSpecialOfferResponse.ProtoReflect.Descriptor instead.
func (*ExistSpecialOfferResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{16}
}

func (x *ExistSpecialOfferResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistSpecialOfferCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistSpecialOfferCondsRequest) Reset() {
	*x = ExistSpecialOfferCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSpecialOfferCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSpecialOfferCondsRequest) ProtoMessage() {}

func (x *ExistSpecialOfferCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSpecialOfferCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistSpecialOfferCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{17}
}

func (x *ExistSpecialOfferCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistSpecialOfferCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSpecialOfferCondsResponse) Reset() {
	*x = ExistSpecialOfferCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSpecialOfferCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSpecialOfferCondsResponse) ProtoMessage() {}

func (x *ExistSpecialOfferCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSpecialOfferCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistSpecialOfferCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{18}
}

func (x *ExistSpecialOfferCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountSpecialOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountSpecialOffersRequest) Reset() {
	*x = CountSpecialOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSpecialOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSpecialOffersRequest) ProtoMessage() {}

func (x *CountSpecialOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSpecialOffersRequest.ProtoReflect.Descriptor instead.
func (*CountSpecialOffersRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{19}
}

func (x *CountSpecialOffersRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountSpecialOffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountSpecialOffersResponse) Reset() {
	*x = CountSpecialOffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSpecialOffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSpecialOffersResponse) ProtoMessage() {}

func (x *CountSpecialOffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSpecialOffersResponse.ProtoReflect.Descriptor instead.
func (*CountSpecialOffersResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{20}
}

func (x *CountSpecialOffersResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteSpecialOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSpecialOfferRequest) Reset() {
	*x = DeleteSpecialOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpecialOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpecialOfferRequest) ProtoMessage() {}

func (x *DeleteSpecialOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpecialOfferRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpecialOfferRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteSpecialOfferRequest) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteSpecialOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SpecialOffer `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSpecialOfferResponse) Reset() {
	*x = DeleteSpecialOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpecialOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpecialOfferResponse) ProtoMessage() {}

func (x *DeleteSpecialOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpecialOfferResponse.ProtoReflect.Descriptor instead.
func (*DeleteSpecialOfferResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteSpecialOfferResponse) GetInfo() *SpecialOffer {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto protoreflect.FileDescriptor

var file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDesc = []byte{
	0x0a, 0x43, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x02, 0x0a, 0x0f, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0c, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x70, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x73, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x71,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x70, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x6b, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x69, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x2f, 0x0a, 0x19, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x6c, 0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x34, 0x0a, 0x1e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x19, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x30, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x6d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x6e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x32, 0xe9, 0x0d, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0xad, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x49, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb0, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xad, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x49, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa4, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x46, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb0, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x4a,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x47,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xaa, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x48, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xb9, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xad, 0x01, 0x0a,
	0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x12, 0x49, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xad, 0x01, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x49, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x53, 0x5a, 0x51,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x6d,
	0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescOnce sync.Once
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescData = file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDesc
)

func file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescGZIP() []byte {
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescOnce.Do(func() {
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescData)
	})
	return file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDescData
}

var file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_goTypes = []interface{}{
	(*SpecialOfferReq)(nil),                // 0: inspire.manager.inspire.coupon.specialoffer.v1.SpecialOfferReq
	(*SpecialOffer)(nil),                   // 1: inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	(*Conds)(nil),                          // 2: inspire.manager.inspire.coupon.specialoffer.v1.Conds
	(*CreateSpecialOfferRequest)(nil),      // 3: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferRequest
	(*CreateSpecialOfferResponse)(nil),     // 4: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferResponse
	(*CreateSpecialOffersRequest)(nil),     // 5: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersRequest
	(*CreateSpecialOffersResponse)(nil),    // 6: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersResponse
	(*UpdateSpecialOfferRequest)(nil),      // 7: inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferRequest
	(*UpdateSpecialOfferResponse)(nil),     // 8: inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferResponse
	(*GetSpecialOfferRequest)(nil),         // 9: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferRequest
	(*GetSpecialOfferResponse)(nil),        // 10: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferResponse
	(*GetSpecialOffersRequest)(nil),        // 11: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersRequest
	(*GetSpecialOffersResponse)(nil),       // 12: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersResponse
	(*GetSpecialOfferOnlyRequest)(nil),     // 13: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyRequest
	(*GetSpecialOfferOnlyResponse)(nil),    // 14: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyResponse
	(*ExistSpecialOfferRequest)(nil),       // 15: inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferRequest
	(*ExistSpecialOfferResponse)(nil),      // 16: inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferResponse
	(*ExistSpecialOfferCondsRequest)(nil),  // 17: inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferCondsRequest
	(*ExistSpecialOfferCondsResponse)(nil), // 18: inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferCondsResponse
	(*CountSpecialOffersRequest)(nil),      // 19: inspire.manager.inspire.coupon.specialoffer.v1.CountSpecialOffersRequest
	(*CountSpecialOffersResponse)(nil),     // 20: inspire.manager.inspire.coupon.specialoffer.v1.CountSpecialOffersResponse
	(*DeleteSpecialOfferRequest)(nil),      // 21: inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferRequest
	(*DeleteSpecialOfferResponse)(nil),     // 22: inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferResponse
	(*npool.StringVal)(nil),                // 23: npool.v1.StringVal
	(*npool.Uint32Val)(nil),                // 24: npool.v1.Uint32Val
}
var file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_depIdxs = []int32{
	23, // 0: inspire.manager.inspire.coupon.specialoffer.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: inspire.manager.inspire.coupon.specialoffer.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: inspire.manager.inspire.coupon.specialoffer.v1.Conds.UserID:type_name -> npool.v1.StringVal
	24, // 3: inspire.manager.inspire.coupon.specialoffer.v1.Conds.Start:type_name -> npool.v1.Uint32Val
	0,  // 4: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferRequest.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOfferReq
	1,  // 5: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferResponse.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	0,  // 6: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersRequest.Infos:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOfferReq
	1,  // 7: inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersResponse.Infos:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	0,  // 8: inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferRequest.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOfferReq
	1,  // 9: inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferResponse.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	1,  // 10: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferResponse.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	2,  // 11: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersRequest.Conds:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.Conds
	1,  // 12: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersResponse.Infos:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	2,  // 13: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyRequest.Conds:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.Conds
	1,  // 14: inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyResponse.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	2,  // 15: inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferCondsRequest.Conds:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.Conds
	2,  // 16: inspire.manager.inspire.coupon.specialoffer.v1.CountSpecialOffersRequest.Conds:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.Conds
	1,  // 17: inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferRequest.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	1,  // 18: inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferResponse.Info:type_name -> inspire.manager.inspire.coupon.specialoffer.v1.SpecialOffer
	3,  // 19: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CreateSpecialOffer:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferRequest
	5,  // 20: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CreateSpecialOffers:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersRequest
	7,  // 21: inspire.manager.inspire.coupon.specialoffer.v1.Manager.UpdateSpecialOffer:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferRequest
	9,  // 22: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOffer:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferRequest
	13, // 23: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOfferOnly:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyRequest
	11, // 24: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOffers:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersRequest
	15, // 25: inspire.manager.inspire.coupon.specialoffer.v1.Manager.ExistSpecialOffer:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferRequest
	17, // 26: inspire.manager.inspire.coupon.specialoffer.v1.Manager.ExistSpecialOfferConds:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferCondsRequest
	19, // 27: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CountSpecialOffers:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.CountSpecialOffersRequest
	21, // 28: inspire.manager.inspire.coupon.specialoffer.v1.Manager.DeleteSpecialOffer:input_type -> inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferRequest
	4,  // 29: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CreateSpecialOffer:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOfferResponse
	6,  // 30: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CreateSpecialOffers:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.CreateSpecialOffersResponse
	8,  // 31: inspire.manager.inspire.coupon.specialoffer.v1.Manager.UpdateSpecialOffer:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.UpdateSpecialOfferResponse
	10, // 32: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOffer:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferResponse
	14, // 33: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOfferOnly:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOfferOnlyResponse
	12, // 34: inspire.manager.inspire.coupon.specialoffer.v1.Manager.GetSpecialOffers:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.GetSpecialOffersResponse
	16, // 35: inspire.manager.inspire.coupon.specialoffer.v1.Manager.ExistSpecialOffer:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferResponse
	18, // 36: inspire.manager.inspire.coupon.specialoffer.v1.Manager.ExistSpecialOfferConds:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.ExistSpecialOfferCondsResponse
	20, // 37: inspire.manager.inspire.coupon.specialoffer.v1.Manager.CountSpecialOffers:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.CountSpecialOffersResponse
	22, // 38: inspire.manager.inspire.coupon.specialoffer.v1.Manager.DeleteSpecialOffer:output_type -> inspire.manager.inspire.coupon.specialoffer.v1.DeleteSpecialOfferResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_init() }
func file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_init() {
	if File_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialOfferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpecialOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpecialOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpecialOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpecialOffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpecialOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpecialOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOfferOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialOfferOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSpecialOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSpecialOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSpecialOfferCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSpecialOfferCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSpecialOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSpecialOffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpecialOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpecialOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_goTypes,
		DependencyIndexes: file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_depIdxs,
		MessageInfos:      file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_msgTypes,
	}.Build()
	File_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto = out.File
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_rawDesc = nil
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_goTypes = nil
	file_npool_inspire_mgr_v1_inspire_coupon_specialoffer_specialoffer_proto_depIdxs = nil
}
