// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/mgr/v1/inspire/purchaseamountsetting/purchaseamountsetting.proto

package purchaseamountsetting

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PurchaseAmountSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID     *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Title      *string `protobuf:"bytes,40,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Amount     *string `protobuf:"bytes,50,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	Percent    *string `protobuf:"bytes,60,opt,name=Percent,proto3,oneof" json:"Percent,omitempty"`
	StartAt    *uint32 `protobuf:"varint,70,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt      *uint32 `protobuf:"varint,80,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	BadgeLarge *string `protobuf:"bytes,90,opt,name=BadgeLarge,proto3,oneof" json:"BadgeLarge,omitempty"`
	BadgeSmall *string `protobuf:"bytes,100,opt,name=BadgeSmall,proto3,oneof" json:"BadgeSmall,omitempty"`
	GoodID     *string `protobuf:"bytes,110,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *string `protobuf:"bytes,120,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *PurchaseAmountSettingReq) Reset() {
	*x = PurchaseAmountSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseAmountSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseAmountSettingReq) ProtoMessage() {}

func (x *PurchaseAmountSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseAmountSettingReq.ProtoReflect.Descriptor instead.
func (*PurchaseAmountSettingReq) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseAmountSettingReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetPercent() string {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *PurchaseAmountSettingReq) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *PurchaseAmountSettingReq) GetBadgeLarge() string {
	if x != nil && x.BadgeLarge != nil {
		return *x.BadgeLarge
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetBadgeSmall() string {
	if x != nil && x.BadgeSmall != nil {
		return *x.BadgeSmall
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *PurchaseAmountSettingReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

type PurchaseAmountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Title      string `protobuf:"bytes,40,opt,name=Title,proto3" json:"Title,omitempty"`
	Amount     string `protobuf:"bytes,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Percent    string `protobuf:"bytes,60,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt    uint32 `protobuf:"varint,70,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt      uint32 `protobuf:"varint,80,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	BadgeLarge string `protobuf:"bytes,90,opt,name=BadgeLarge,proto3" json:"BadgeLarge,omitempty"`
	BadgeSmall string `protobuf:"bytes,100,opt,name=BadgeSmall,proto3" json:"BadgeSmall,omitempty"`
	GoodID     string `protobuf:"bytes,110,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID string `protobuf:"bytes,120,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CreatedAt  uint32 `protobuf:"varint,130,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  uint32 `protobuf:"varint,140,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *PurchaseAmountSetting) Reset() {
	*x = PurchaseAmountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseAmountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseAmountSetting) ProtoMessage() {}

func (x *PurchaseAmountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseAmountSetting.ProtoReflect.Descriptor instead.
func (*PurchaseAmountSetting) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{1}
}

func (x *PurchaseAmountSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PurchaseAmountSetting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PurchaseAmountSetting) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

func (x *PurchaseAmountSetting) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetBadgeLarge() string {
	if x != nil {
		return x.BadgeLarge
	}
	return ""
}

func (x *PurchaseAmountSetting) GetBadgeSmall() string {
	if x != nil {
		return x.BadgeSmall
	}
	return ""
}

func (x *PurchaseAmountSetting) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID     *npool.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	StartAt    *npool.Uint32Val `protobuf:"bytes,40,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt      *npool.Uint32Val `protobuf:"bytes,50,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	GoodID     *npool.StringVal `protobuf:"bytes,60,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *npool.StringVal `protobuf:"bytes,70,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *npool.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetStartAt() *npool.Uint32Val {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *Conds) GetEndAt() *npool.Uint32Val {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *Conds) GetGoodID() *npool.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

type CreatePurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSettingReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePurchaseAmountSettingRequest) Reset() {
	*x = CreatePurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingRequest) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePurchaseAmountSettingRequest) GetInfo() *PurchaseAmountSettingReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePurchaseAmountSettingResponse) Reset() {
	*x = CreatePurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingResponse) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PurchaseAmountSettingReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreatePurchaseAmountSettingsRequest) Reset() {
	*x = CreatePurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePurchaseAmountSettingsRequest) GetInfos() []*PurchaseAmountSettingReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreatePurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreatePurchaseAmountSettingsResponse) Reset() {
	*x = CreatePurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePurchaseAmountSettingsResponse) GetInfos() []*PurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdatePurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSettingReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePurchaseAmountSettingRequest) Reset() {
	*x = UpdatePurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePurchaseAmountSettingRequest) ProtoMessage() {}

func (x *UpdatePurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdatePurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePurchaseAmountSettingRequest) GetInfo() *PurchaseAmountSettingReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePurchaseAmountSettingResponse) Reset() {
	*x = UpdatePurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePurchaseAmountSettingResponse) ProtoMessage() {}

func (x *UpdatePurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdatePurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPurchaseAmountSettingRequest) Reset() {
	*x = GetPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *GetPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{9}
}

func (x *GetPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPurchaseAmountSettingResponse) Reset() {
	*x = GetPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *GetPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{10}
}

func (x *GetPurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetPurchaseAmountSettingsRequest) Reset() {
	*x = GetPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *GetPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{11}
}

func (x *GetPurchaseAmountSettingsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetPurchaseAmountSettingsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPurchaseAmountSettingsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetPurchaseAmountSettingsResponse) Reset() {
	*x = GetPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *GetPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{12}
}

func (x *GetPurchaseAmountSettingsResponse) GetInfos() []*PurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetPurchaseAmountSettingsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPurchaseAmountSettingOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetPurchaseAmountSettingOnlyRequest) Reset() {
	*x = GetPurchaseAmountSettingOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingOnlyRequest) ProtoMessage() {}

func (x *GetPurchaseAmountSettingOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{13}
}

func (x *GetPurchaseAmountSettingOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetPurchaseAmountSettingOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPurchaseAmountSettingOnlyResponse) Reset() {
	*x = GetPurchaseAmountSettingOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingOnlyResponse) ProtoMessage() {}

func (x *GetPurchaseAmountSettingOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{14}
}

func (x *GetPurchaseAmountSettingOnlyResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistPurchaseAmountSettingRequest) Reset() {
	*x = ExistPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *ExistPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*ExistPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{15}
}

func (x *ExistPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPurchaseAmountSettingResponse) Reset() {
	*x = ExistPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *ExistPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*ExistPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{16}
}

func (x *ExistPurchaseAmountSettingResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistPurchaseAmountSettingCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistPurchaseAmountSettingCondsRequest) Reset() {
	*x = ExistPurchaseAmountSettingCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPurchaseAmountSettingCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPurchaseAmountSettingCondsRequest) ProtoMessage() {}

func (x *ExistPurchaseAmountSettingCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPurchaseAmountSettingCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistPurchaseAmountSettingCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{17}
}

func (x *ExistPurchaseAmountSettingCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistPurchaseAmountSettingCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPurchaseAmountSettingCondsResponse) Reset() {
	*x = ExistPurchaseAmountSettingCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPurchaseAmountSettingCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPurchaseAmountSettingCondsResponse) ProtoMessage() {}

func (x *ExistPurchaseAmountSettingCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPurchaseAmountSettingCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistPurchaseAmountSettingCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{18}
}

func (x *ExistPurchaseAmountSettingCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountPurchaseAmountSettingsRequest) Reset() {
	*x = CountPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *CountPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*CountPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{19}
}

func (x *CountPurchaseAmountSettingsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountPurchaseAmountSettingsResponse) Reset() {
	*x = CountPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *CountPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*CountPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{20}
}

func (x *CountPurchaseAmountSettingsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeletePurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeletePurchaseAmountSettingRequest) Reset() {
	*x = DeletePurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchaseAmountSettingRequest) ProtoMessage() {}

func (x *DeletePurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*DeletePurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{21}
}

func (x *DeletePurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeletePurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeletePurchaseAmountSettingResponse) Reset() {
	*x = DeletePurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchaseAmountSettingResponse) ProtoMessage() {}

func (x *DeletePurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*DeletePurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto protoreflect.FileDescriptor

var file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc = []byte{
	0x0a, 0x4e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x30, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x04, 0x0a, 0x18, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x07, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0a, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x83, 0x03, 0x0a, 0x15, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x78, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x8c, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xaf, 0x03,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x07, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x05, 0x45,
	0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x48, 0x06, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22,
	0x84, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x23,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x7f, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9f, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x98, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x74, 0x0a, 0x23, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0x83, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x21, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x22, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x77, 0x0a, 0x26, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x3d,
	0x0a, 0x27, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x73, 0x0a,
	0x22, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x39, 0x0a, 0x23, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a,
	0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x9f, 0x10, 0x0a, 0x07, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0xcc, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xcf, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xcc, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xc3, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x51, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xcf, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x55, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x56, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc6, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x52, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc9, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xd8, 0x01, 0x0a, 0x1f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xcc, 0x01, 0x0a,
	0x1b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x54, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xcc, 0x01, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescOnce sync.Once
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData = file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc
)

func file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP() []byte {
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescOnce.Do(func() {
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData)
	})
	return file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData
}

var file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes = []interface{}{
	(*PurchaseAmountSettingReq)(nil),                // 0: inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSettingReq
	(*PurchaseAmountSetting)(nil),                   // 1: inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	(*Conds)(nil),                                   // 2: inspire.manager.inspire.purchaseamountsetting.v1.Conds
	(*CreatePurchaseAmountSettingRequest)(nil),      // 3: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingRequest
	(*CreatePurchaseAmountSettingResponse)(nil),     // 4: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse
	(*CreatePurchaseAmountSettingsRequest)(nil),     // 5: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsRequest
	(*CreatePurchaseAmountSettingsResponse)(nil),    // 6: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsResponse
	(*UpdatePurchaseAmountSettingRequest)(nil),      // 7: inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingRequest
	(*UpdatePurchaseAmountSettingResponse)(nil),     // 8: inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse
	(*GetPurchaseAmountSettingRequest)(nil),         // 9: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingRequest
	(*GetPurchaseAmountSettingResponse)(nil),        // 10: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingResponse
	(*GetPurchaseAmountSettingsRequest)(nil),        // 11: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsRequest
	(*GetPurchaseAmountSettingsResponse)(nil),       // 12: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse
	(*GetPurchaseAmountSettingOnlyRequest)(nil),     // 13: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyRequest
	(*GetPurchaseAmountSettingOnlyResponse)(nil),    // 14: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyResponse
	(*ExistPurchaseAmountSettingRequest)(nil),       // 15: inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingRequest
	(*ExistPurchaseAmountSettingResponse)(nil),      // 16: inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingResponse
	(*ExistPurchaseAmountSettingCondsRequest)(nil),  // 17: inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingCondsRequest
	(*ExistPurchaseAmountSettingCondsResponse)(nil), // 18: inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingCondsResponse
	(*CountPurchaseAmountSettingsRequest)(nil),      // 19: inspire.manager.inspire.purchaseamountsetting.v1.CountPurchaseAmountSettingsRequest
	(*CountPurchaseAmountSettingsResponse)(nil),     // 20: inspire.manager.inspire.purchaseamountsetting.v1.CountPurchaseAmountSettingsResponse
	(*DeletePurchaseAmountSettingRequest)(nil),      // 21: inspire.manager.inspire.purchaseamountsetting.v1.DeletePurchaseAmountSettingRequest
	(*DeletePurchaseAmountSettingResponse)(nil),     // 22: inspire.manager.inspire.purchaseamountsetting.v1.DeletePurchaseAmountSettingResponse
	(*npool.StringVal)(nil),                         // 23: npool.v1.StringVal
	(*npool.Uint32Val)(nil),                         // 24: npool.v1.Uint32Val
}
var file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs = []int32{
	23, // 0: inspire.manager.inspire.purchaseamountsetting.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: inspire.manager.inspire.purchaseamountsetting.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: inspire.manager.inspire.purchaseamountsetting.v1.Conds.UserID:type_name -> npool.v1.StringVal
	24, // 3: inspire.manager.inspire.purchaseamountsetting.v1.Conds.StartAt:type_name -> npool.v1.Uint32Val
	24, // 4: inspire.manager.inspire.purchaseamountsetting.v1.Conds.EndAt:type_name -> npool.v1.Uint32Val
	23, // 5: inspire.manager.inspire.purchaseamountsetting.v1.Conds.GoodID:type_name -> npool.v1.StringVal
	23, // 6: inspire.manager.inspire.purchaseamountsetting.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	0,  // 7: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingRequest.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSettingReq
	1,  // 8: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 9: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsRequest.Infos:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSettingReq
	1,  // 10: inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsResponse.Infos:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 11: inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingRequest.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSettingReq
	1,  // 12: inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	1,  // 13: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingResponse.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	2,  // 14: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsRequest.Conds:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.Conds
	1,  // 15: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse.Infos:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	2,  // 16: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyRequest.Conds:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.Conds
	1,  // 17: inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyResponse.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	2,  // 18: inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingCondsRequest.Conds:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.Conds
	2,  // 19: inspire.manager.inspire.purchaseamountsetting.v1.CountPurchaseAmountSettingsRequest.Conds:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.Conds
	1,  // 20: inspire.manager.inspire.purchaseamountsetting.v1.DeletePurchaseAmountSettingResponse.Info:type_name -> inspire.manager.inspire.purchaseamountsetting.v1.PurchaseAmountSetting
	3,  // 21: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CreatePurchaseAmountSetting:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingRequest
	5,  // 22: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CreatePurchaseAmountSettings:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsRequest
	7,  // 23: inspire.manager.inspire.purchaseamountsetting.v1.Manager.UpdatePurchaseAmountSetting:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingRequest
	9,  // 24: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSetting:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingRequest
	13, // 25: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSettingOnly:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyRequest
	11, // 26: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSettings:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsRequest
	15, // 27: inspire.manager.inspire.purchaseamountsetting.v1.Manager.ExistPurchaseAmountSetting:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingRequest
	17, // 28: inspire.manager.inspire.purchaseamountsetting.v1.Manager.ExistPurchaseAmountSettingConds:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingCondsRequest
	19, // 29: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CountPurchaseAmountSettings:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.CountPurchaseAmountSettingsRequest
	21, // 30: inspire.manager.inspire.purchaseamountsetting.v1.Manager.DeletePurchaseAmountSetting:input_type -> inspire.manager.inspire.purchaseamountsetting.v1.DeletePurchaseAmountSettingRequest
	4,  // 31: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CreatePurchaseAmountSetting:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse
	6,  // 32: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CreatePurchaseAmountSettings:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.CreatePurchaseAmountSettingsResponse
	8,  // 33: inspire.manager.inspire.purchaseamountsetting.v1.Manager.UpdatePurchaseAmountSetting:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse
	10, // 34: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSetting:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingResponse
	14, // 35: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSettingOnly:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingOnlyResponse
	12, // 36: inspire.manager.inspire.purchaseamountsetting.v1.Manager.GetPurchaseAmountSettings:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse
	16, // 37: inspire.manager.inspire.purchaseamountsetting.v1.Manager.ExistPurchaseAmountSetting:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingResponse
	18, // 38: inspire.manager.inspire.purchaseamountsetting.v1.Manager.ExistPurchaseAmountSettingConds:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.ExistPurchaseAmountSettingCondsResponse
	20, // 39: inspire.manager.inspire.purchaseamountsetting.v1.Manager.CountPurchaseAmountSettings:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.CountPurchaseAmountSettingsResponse
	22, // 40: inspire.manager.inspire.purchaseamountsetting.v1.Manager.DeletePurchaseAmountSetting:output_type -> inspire.manager.inspire.purchaseamountsetting.v1.DeletePurchaseAmountSettingResponse
	31, // [31:41] is the sub-list for method output_type
	21, // [21:31] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() {
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_init()
}
func file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_init() {
	if File_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseAmountSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseAmountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPurchaseAmountSettingCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPurchaseAmountSettingCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes,
		DependencyIndexes: file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs,
		MessageInfos:      file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes,
	}.Build()
	File_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto = out.File
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc = nil
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes = nil
	file_npool_inspire_mgr_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs = nil
}
