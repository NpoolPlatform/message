// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/mgr/v1/apppurchaseamountsettings/apppurchaseamountsettings.proto

package apppurchaseamountsetting

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppPurchaseAmountSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID     *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Title      *string `protobuf:"bytes,40,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Amount     *string `protobuf:"bytes,50,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	Percent    *string `protobuf:"bytes,60,opt,name=Percent,proto3,oneof" json:"Percent,omitempty"`
	StartAt    *uint32 `protobuf:"varint,70,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt      *uint32 `protobuf:"varint,80,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	BadgeLarge *string `protobuf:"bytes,90,opt,name=BadgeLarge,proto3,oneof" json:"BadgeLarge,omitempty"`
	BadgeSmall *string `protobuf:"bytes,100,opt,name=BadgeSmall,proto3,oneof" json:"BadgeSmall,omitempty"`
	GoodID     *string `protobuf:"bytes,110,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *string `protobuf:"bytes,120,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *AppPurchaseAmountSettingReq) Reset() {
	*x = AppPurchaseAmountSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPurchaseAmountSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPurchaseAmountSettingReq) ProtoMessage() {}

func (x *AppPurchaseAmountSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPurchaseAmountSettingReq.ProtoReflect.Descriptor instead.
func (*AppPurchaseAmountSettingReq) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{0}
}

func (x *AppPurchaseAmountSettingReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetPercent() string {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *AppPurchaseAmountSettingReq) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *AppPurchaseAmountSettingReq) GetBadgeLarge() string {
	if x != nil && x.BadgeLarge != nil {
		return *x.BadgeLarge
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetBadgeSmall() string {
	if x != nil && x.BadgeSmall != nil {
		return *x.BadgeSmall
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *AppPurchaseAmountSettingReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

type AppPurchaseAmountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Title      string `protobuf:"bytes,40,opt,name=Title,proto3" json:"Title,omitempty"`
	Amount     string `protobuf:"bytes,50,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Percent    string `protobuf:"bytes,60,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt    uint32 `protobuf:"varint,70,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt      uint32 `protobuf:"varint,80,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	BadgeLarge string `protobuf:"bytes,90,opt,name=BadgeLarge,proto3" json:"BadgeLarge,omitempty"`
	BadgeSmall string `protobuf:"bytes,100,opt,name=BadgeSmall,proto3" json:"BadgeSmall,omitempty"`
	GoodID     string `protobuf:"bytes,110,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID string `protobuf:"bytes,120,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CreatedAt  uint32 `protobuf:"varint,130,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  uint32 `protobuf:"varint,140,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *AppPurchaseAmountSetting) Reset() {
	*x = AppPurchaseAmountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPurchaseAmountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPurchaseAmountSetting) ProtoMessage() {}

func (x *AppPurchaseAmountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPurchaseAmountSetting.ProtoReflect.Descriptor instead.
func (*AppPurchaseAmountSetting) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{1}
}

func (x *AppPurchaseAmountSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *AppPurchaseAmountSetting) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *AppPurchaseAmountSetting) GetBadgeLarge() string {
	if x != nil {
		return x.BadgeLarge
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetBadgeSmall() string {
	if x != nil {
		return x.BadgeSmall
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *AppPurchaseAmountSetting) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppPurchaseAmountSetting) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID     *npool.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	StartAt    *npool.Uint32Val `protobuf:"bytes,40,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt      *npool.Uint32Val `protobuf:"bytes,50,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	GoodID     *npool.StringVal `protobuf:"bytes,60,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *npool.StringVal `protobuf:"bytes,70,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *npool.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetStartAt() *npool.Uint32Val {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *Conds) GetEndAt() *npool.Uint32Val {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *Conds) GetGoodID() *npool.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

type CreateAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSettingReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingRequest) Reset() {
	*x = CreateAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppPurchaseAmountSettingRequest) GetInfo() *AppPurchaseAmountSettingReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingResponse) Reset() {
	*x = CreateAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppPurchaseAmountSettingResponse) GetInfo() *AppPurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppPurchaseAmountSettingReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingsRequest) Reset() {
	*x = CreateAppPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAppPurchaseAmountSettingsRequest) GetInfos() []*AppPurchaseAmountSettingReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateAppPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppPurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingsResponse) Reset() {
	*x = CreateAppPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAppPurchaseAmountSettingsResponse) GetInfos() []*AppPurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSettingReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppPurchaseAmountSettingRequest) Reset() {
	*x = UpdateAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *UpdateAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetInfo() *AppPurchaseAmountSettingReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppPurchaseAmountSettingResponse) Reset() {
	*x = UpdateAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *UpdateAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppPurchaseAmountSettingResponse) GetInfo() *AppPurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppPurchaseAmountSettingRequest) Reset() {
	*x = GetAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppPurchaseAmountSettingResponse) Reset() {
	*x = GetAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppPurchaseAmountSettingResponse) GetInfo() *AppPurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppPurchaseAmountSettingsRequest) Reset() {
	*x = GetAppPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppPurchaseAmountSettingsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetAppPurchaseAmountSettingsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppPurchaseAmountSettingsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppPurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppPurchaseAmountSettingsResponse) Reset() {
	*x = GetAppPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppPurchaseAmountSettingsResponse) GetInfos() []*AppPurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppPurchaseAmountSettingsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppPurchaseAmountSettingOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetAppPurchaseAmountSettingOnlyRequest) Reset() {
	*x = GetAppPurchaseAmountSettingOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingOnlyRequest) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{13}
}

func (x *GetAppPurchaseAmountSettingOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetAppPurchaseAmountSettingOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppPurchaseAmountSettingOnlyResponse) Reset() {
	*x = GetAppPurchaseAmountSettingOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingOnlyResponse) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{14}
}

func (x *GetAppPurchaseAmountSettingOnlyResponse) GetInfo() *AppPurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistAppPurchaseAmountSettingRequest) Reset() {
	*x = ExistAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *ExistAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*ExistAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{15}
}

func (x *ExistAppPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppPurchaseAmountSettingResponse) Reset() {
	*x = ExistAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *ExistAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*ExistAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{16}
}

func (x *ExistAppPurchaseAmountSettingResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistAppPurchaseAmountSettingCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAppPurchaseAmountSettingCondsRequest) Reset() {
	*x = ExistAppPurchaseAmountSettingCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppPurchaseAmountSettingCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppPurchaseAmountSettingCondsRequest) ProtoMessage() {}

func (x *ExistAppPurchaseAmountSettingCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppPurchaseAmountSettingCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAppPurchaseAmountSettingCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{17}
}

func (x *ExistAppPurchaseAmountSettingCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAppPurchaseAmountSettingCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppPurchaseAmountSettingCondsResponse) Reset() {
	*x = ExistAppPurchaseAmountSettingCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppPurchaseAmountSettingCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppPurchaseAmountSettingCondsResponse) ProtoMessage() {}

func (x *ExistAppPurchaseAmountSettingCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppPurchaseAmountSettingCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAppPurchaseAmountSettingCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{18}
}

func (x *ExistAppPurchaseAmountSettingCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountAppPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountAppPurchaseAmountSettingsRequest) Reset() {
	*x = CountAppPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *CountAppPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*CountAppPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{19}
}

func (x *CountAppPurchaseAmountSettingsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountAppPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountAppPurchaseAmountSettingsResponse) Reset() {
	*x = CountAppPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *CountAppPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*CountAppPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{20}
}

func (x *CountAppPurchaseAmountSettingsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAppPurchaseAmountSettingRequest) Reset() {
	*x = DeleteAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *DeleteAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAppPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppPurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAppPurchaseAmountSettingResponse) Reset() {
	*x = DeleteAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *DeleteAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAppPurchaseAmountSettingResponse) GetInfo() *AppPurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto protoreflect.FileDescriptor

var file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDesc = []byte{
	0x0a, 0x4e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2f, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x32, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x04, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x07,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e,
	0x64, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x07, 0x52, 0x05, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0b, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x6e, 0x64, 0x41, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x86, 0x03, 0x0a,
	0x18, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x5a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xaf, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x48, 0x03, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x38, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x06, 0x52, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x63, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x63, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x87, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x36, 0x0a, 0x24, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3b, 0x0a, 0x25,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x29, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x2a, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x78, 0x0a, 0x25, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x3c, 0x0a, 0x26, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x37, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8a, 0x01, 0x0a, 0x26, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xa1, 0x11, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0xd9, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xdc, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x5b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd9,
	0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd0, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x56, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x57, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xdc, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5b, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd3, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x57, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xd6, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x59,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xe5, 0x01, 0x0a, 0x22,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x5d, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x5e, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xd9, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x5a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xd9, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x57, 0x5a, 0x55, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescOnce sync.Once
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescData = file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDesc
)

func file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescGZIP() []byte {
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescOnce.Do(func() {
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescData)
	})
	return file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDescData
}

var file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_goTypes = []interface{}{
	(*AppPurchaseAmountSettingReq)(nil),                // 0: inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSettingReq
	(*AppPurchaseAmountSetting)(nil),                   // 1: inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	(*Conds)(nil),                                      // 2: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds
	(*CreateAppPurchaseAmountSettingRequest)(nil),      // 3: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingRequest
	(*CreateAppPurchaseAmountSettingResponse)(nil),     // 4: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse
	(*CreateAppPurchaseAmountSettingsRequest)(nil),     // 5: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsRequest
	(*CreateAppPurchaseAmountSettingsResponse)(nil),    // 6: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsResponse
	(*UpdateAppPurchaseAmountSettingRequest)(nil),      // 7: inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingRequest
	(*UpdateAppPurchaseAmountSettingResponse)(nil),     // 8: inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse
	(*GetAppPurchaseAmountSettingRequest)(nil),         // 9: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingRequest
	(*GetAppPurchaseAmountSettingResponse)(nil),        // 10: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse
	(*GetAppPurchaseAmountSettingsRequest)(nil),        // 11: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsRequest
	(*GetAppPurchaseAmountSettingsResponse)(nil),       // 12: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse
	(*GetAppPurchaseAmountSettingOnlyRequest)(nil),     // 13: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyRequest
	(*GetAppPurchaseAmountSettingOnlyResponse)(nil),    // 14: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyResponse
	(*ExistAppPurchaseAmountSettingRequest)(nil),       // 15: inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingRequest
	(*ExistAppPurchaseAmountSettingResponse)(nil),      // 16: inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingResponse
	(*ExistAppPurchaseAmountSettingCondsRequest)(nil),  // 17: inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingCondsRequest
	(*ExistAppPurchaseAmountSettingCondsResponse)(nil), // 18: inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingCondsResponse
	(*CountAppPurchaseAmountSettingsRequest)(nil),      // 19: inspire.manager.coupon.apppurchaseamountsetting.v1.CountAppPurchaseAmountSettingsRequest
	(*CountAppPurchaseAmountSettingsResponse)(nil),     // 20: inspire.manager.coupon.apppurchaseamountsetting.v1.CountAppPurchaseAmountSettingsResponse
	(*DeleteAppPurchaseAmountSettingRequest)(nil),      // 21: inspire.manager.coupon.apppurchaseamountsetting.v1.DeleteAppPurchaseAmountSettingRequest
	(*DeleteAppPurchaseAmountSettingResponse)(nil),     // 22: inspire.manager.coupon.apppurchaseamountsetting.v1.DeleteAppPurchaseAmountSettingResponse
	(*npool.StringVal)(nil),                            // 23: npool.v1.StringVal
	(*npool.Uint32Val)(nil),                            // 24: npool.v1.Uint32Val
}
var file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_depIdxs = []int32{
	23, // 0: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.UserID:type_name -> npool.v1.StringVal
	24, // 3: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.StartAt:type_name -> npool.v1.Uint32Val
	24, // 4: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.EndAt:type_name -> npool.v1.Uint32Val
	23, // 5: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.GoodID:type_name -> npool.v1.StringVal
	23, // 6: inspire.manager.coupon.apppurchaseamountsetting.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	0,  // 7: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingRequest.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSettingReq
	1,  // 8: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	0,  // 9: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsRequest.Infos:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSettingReq
	1,  // 10: inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsResponse.Infos:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	0,  // 11: inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingRequest.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSettingReq
	1,  // 12: inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	1,  // 13: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	2,  // 14: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsRequest.Conds:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.Conds
	1,  // 15: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse.Infos:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	2,  // 16: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyRequest.Conds:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.Conds
	1,  // 17: inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyResponse.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	2,  // 18: inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingCondsRequest.Conds:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.Conds
	2,  // 19: inspire.manager.coupon.apppurchaseamountsetting.v1.CountAppPurchaseAmountSettingsRequest.Conds:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.Conds
	1,  // 20: inspire.manager.coupon.apppurchaseamountsetting.v1.DeleteAppPurchaseAmountSettingResponse.Info:type_name -> inspire.manager.coupon.apppurchaseamountsetting.v1.AppPurchaseAmountSetting
	3,  // 21: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CreateAppPurchaseAmountSetting:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingRequest
	5,  // 22: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CreateAppPurchaseAmountSettings:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsRequest
	7,  // 23: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.UpdateAppPurchaseAmountSetting:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingRequest
	9,  // 24: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSetting:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingRequest
	13, // 25: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSettingOnly:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyRequest
	11, // 26: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSettings:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsRequest
	15, // 27: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.ExistAppPurchaseAmountSetting:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingRequest
	17, // 28: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.ExistAppPurchaseAmountSettingConds:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingCondsRequest
	19, // 29: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CountAppPurchaseAmountSettings:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CountAppPurchaseAmountSettingsRequest
	21, // 30: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.DeleteAppPurchaseAmountSetting:input_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.DeleteAppPurchaseAmountSettingRequest
	4,  // 31: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CreateAppPurchaseAmountSetting:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse
	6,  // 32: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CreateAppPurchaseAmountSettings:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CreateAppPurchaseAmountSettingsResponse
	8,  // 33: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.UpdateAppPurchaseAmountSetting:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse
	10, // 34: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSetting:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse
	14, // 35: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSettingOnly:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingOnlyResponse
	12, // 36: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.GetAppPurchaseAmountSettings:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse
	16, // 37: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.ExistAppPurchaseAmountSetting:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingResponse
	18, // 38: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.ExistAppPurchaseAmountSettingConds:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.ExistAppPurchaseAmountSettingCondsResponse
	20, // 39: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.CountAppPurchaseAmountSettings:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.CountAppPurchaseAmountSettingsResponse
	22, // 40: inspire.manager.coupon.apppurchaseamountsetting.v1.Manager.DeleteAppPurchaseAmountSetting:output_type -> inspire.manager.coupon.apppurchaseamountsetting.v1.DeleteAppPurchaseAmountSettingResponse
	31, // [31:41] is the sub-list for method output_type
	21, // [21:31] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() {
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_init()
}
func file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_init() {
	if File_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPurchaseAmountSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPurchaseAmountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppPurchaseAmountSettingCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppPurchaseAmountSettingCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_goTypes,
		DependencyIndexes: file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_depIdxs,
		MessageInfos:      file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_msgTypes,
	}.Build()
	File_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto = out.File
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_rawDesc = nil
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_goTypes = nil
	file_npool_inspire_mgr_v1_apppurchaseamountsettings_apppurchaseamountsettings_proto_depIdxs = nil
}
