syntax = "proto3";

package inspire.manager.invitation.registration.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/mgr/v1/invitation/registration";

import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateRegistration     (CreateRegistrationRequest)     returns (CreateRegistrationResponse)     {}
    rpc CreateRegistrations    (CreateRegistrationsRequest)    returns (CreateRegistrationsResponse)    {}
    rpc UpdateRegistration     (UpdateRegistrationRequest)     returns (UpdateRegistrationResponse)     {}
    rpc GetRegistration        (GetRegistrationRequest)        returns (GetRegistrationResponse)        {}
    rpc GetRegistrationOnly    (GetRegistrationOnlyRequest)    returns (GetRegistrationOnlyResponse)    {}
    rpc GetRegistrations       (GetRegistrationsRequest)       returns (GetRegistrationsResponse)       {}
    rpc ExistRegistration      (ExistRegistrationRequest)      returns (ExistRegistrationResponse)      {}
    rpc ExistRegistrationConds (ExistRegistrationCondsRequest) returns (ExistRegistrationCondsResponse) {}
    rpc CountRegistrations     (CountRegistrationsRequest)     returns (CountRegistrationsResponse)     {}
    rpc DeleteRegistration     (DeleteRegistrationRequest)     returns (DeleteRegistrationResponse)     {}
}

message RegistrationReq {
    optional string ID        = 10;
    optional string AppID     = 20;
    optional string InviterID = 30;
    optional string InviteeID = 40;
}

message Registration {
    // @inject_tag: sql:"id"
    string ID        = 10;
    // @inject_tag: sql:"app_id"
    string AppID     = 20;
    // @inject_tag: sql:"inviter_id"
    string InviterID = 30;
    // @inject_tag: sql:"invitee_id"
    string InviteeID = 40;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 50;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 60;
}

message Conds {
    optional npool.v1.StringVal ID        = 10;
    optional npool.v1.StringVal AppID     = 20;
    optional npool.v1.StringVal InviterID = 30;
    optional npool.v1.StringVal InviteeID = 40;
    optional npool.v1.StringSliceVal InviterIDs = 50;
    optional npool.v1.StringSliceVal InviteeIDs = 60;
}


message CreateRegistrationRequest {
    RegistrationReq Info = 10;
}

message CreateRegistrationResponse {
    Registration Info = 10;
}

message CreateRegistrationsRequest {
    repeated RegistrationReq Infos = 10;
}

message CreateRegistrationsResponse {
    repeated Registration Infos = 10;
}

message UpdateRegistrationRequest {
    RegistrationReq Info = 10;
}

message UpdateRegistrationResponse {
    Registration Info = 10;
}

message GetRegistrationRequest {
    string ID = 10;
}

message GetRegistrationResponse {
    Registration Info = 10;
}

message GetRegistrationsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetRegistrationsResponse {
    repeated Registration Infos = 10;
    uint32                Total = 20;
}

message GetRegistrationOnlyRequest {
    Conds Conds = 10;
}

message GetRegistrationOnlyResponse {
    Registration Info = 10;
}

message ExistRegistrationRequest {
    string ID = 10;
}

message ExistRegistrationResponse {
    bool Info = 10;
}

message ExistRegistrationCondsRequest {
    Conds Conds = 10;
}

message ExistRegistrationCondsResponse {
    bool Info = 10;
}

message CountRegistrationsRequest {
    Conds Conds = 10;
}

message CountRegistrationsResponse {
    uint32 Info = 10;
}

message DeleteRegistrationRequest {
    Registration Info = 10;
}


message DeleteRegistrationResponse {
    Registration Info = 10;
}
