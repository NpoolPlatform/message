syntax = "proto3";

package inspire.gateway.event.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/gw/v1/event";

import "google/api/annotations.proto";
import "npool/inspire/mw/v1/coupon/coupon.proto";
import "npool/basetypes/v1/usedfor.proto";

// Service Name
service Gateway {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse) {
    option (google.api.http) = {
      post : "/v1/create/eventinspire"
      body : "*"
    };
  }
  rpc GetEvents(GetEventsRequest) returns (GetEventsResponse) {
    option (google.api.http) = {
      post : "/v1/get/eventinspires"
      body : "*"
    };
  }
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse) {
    option (google.api.http) = {
      post : "/v1/update/eventinspire"
      body : "*"
    };
  }
}

message Event {
  uint32 ID = 10;
  string EntID = 11;
  string AppID = 20;
  string AppName = 30;
  basetypes.v1.UsedFor EventType = 40;
  repeated inspire.middleware.coupon.v1.Coupon Coupons = 50;
  string Credits = 60;
  string CreditsPerUSD = 70;
  uint32 MaxConsecutive = 80;
  string GoodID = 90;
  string GoodName = 100;
  uint32 InviterLayers = 110;
  uint32 CreatedAt = 200;
  uint32 UpdatedAt = 210;
  uint32 DeletedAt = 220;
  string AppGoodID = 230;
  string AppGoodName = 240;
}

message CreateEventRequest {
  string AppID = 10;
  basetypes.v1.UsedFor EventType = 20;
  repeated string CouponIDs = 30;
  optional string Credits = 40;
  optional string CreditsPerUSD = 50;
  optional uint32 MaxConsecutive = 60;
  optional string AppGoodID = 70;
  optional uint32 InviterLayers = 80;
}

message CreateEventResponse { Event Info = 10; }

message GetEventsRequest {
  string AppID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetEventsResponse {
  repeated Event Infos = 10;
  uint32 Total = 20;
}

message UpdateEventRequest {
  uint32 ID = 10;
  string EntID = 11;
  string AppID = 20;
  repeated string CouponIDs = 30;
  optional string Credits = 40;
  optional string CreditsPerUSD = 50;
  optional uint32 MaxConsecutive = 60;
  optional uint32 InviterLayers = 80;
}

message UpdateEventResponse { Event Info = 10; }
