syntax = "proto3";

package inspire.gateway.app.config.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/gw/v1/app/config";

import "google/api/annotations.proto";
import "npool/basetypes/inspire/v1/enums.proto";

// Service Name
service Gateway {
    rpc CreateAppConfig (CreateAppConfigRequest) returns (CreateAppConfigResponse) {
        option (google.api.http) = {
            post: "/v1/create/app/config"
            body: "*"
        };
    }
    rpc CreateNAppConfig (CreateNAppConfigRequest) returns (CreateNAppConfigResponse) {
        option (google.api.http) = {
            post: "/v1/create/n/app/config"
            body: "*"
        };
    }
    rpc UpdateAppConfig (UpdateAppConfigRequest) returns (UpdateAppConfigResponse) {
        option (google.api.http) = {
            post: "/v1/update/app/config"
            body: "*"
        };
    }
    rpc UpdateNAppConfig (UpdateNAppConfigRequest) returns (UpdateNAppConfigResponse) {
        option (google.api.http) = {
            post: "/v1/update/n/app/config"
            body: "*"
        };
    }
    rpc GetAppConfigs (GetAppConfigsRequest) returns (GetAppConfigsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/confighistories"
            body: "*"
        };
    }
    rpc GetNAppConfigs (GetNAppConfigsRequest) returns (GetNAppConfigsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/app/configs"
            body: "*"
        };
    }
}

message AppConfig {
    uint32 ID            = 10;
    string EntID         = 20;
    string AppID         = 30;
    basetypes.inspire.v1.SettleMode SettleMode = 40;
    basetypes.inspire.v1.SettleAmountType SettleAmountType = 50;
    basetypes.inspire.v1.SettleInterval SettleInterval = 60;
    basetypes.inspire.v1.CommissionType CommissionType = 70;
    bool   SettleBenefit = 80;
    uint32 StartAt       = 90;
    uint32 EndAt         = 100;
    uint32 CreatedAt     = 110;
    uint32 UpdatedAt     = 120;
}

message CreateAppConfigRequest {
    string          AppID                                  = 10;
    basetypes.inspire.v1.SettleMode SettleMode             = 20;
    basetypes.inspire.v1.SettleAmountType SettleAmountType = 30;
    basetypes.inspire.v1.SettleInterval SettleInterval     = 40;
    basetypes.inspire.v1.CommissionType CommissionType     = 50;
    optional bool                       SettleBenefit      = 60;
    optional uint32                     StartAt            = 70;
}

message CreateAppConfigResponse {
    AppConfig Info = 10;
}

message CreateNAppConfigRequest {
    string          TargetAppID                            = 10;
    basetypes.inspire.v1.SettleMode SettleMode             = 20;
    basetypes.inspire.v1.SettleAmountType SettleAmountType = 30;
    basetypes.inspire.v1.SettleInterval SettleInterval     = 40;
    basetypes.inspire.v1.CommissionType CommissionType     = 50;
    optional bool                       SettleBenefit      = 60;
    optional uint32                     StartAt            = 70;
}

message CreateNAppConfigResponse {
    AppConfig Info = 10;
}

message UpdateAppConfigRequest {
    uint32          ID      = 10;
    string          EntID   = 20;
    string          AppID   = 30;
    optional uint32 StartAt = 40;
}

message UpdateAppConfigResponse {
    AppConfig Info = 10;
}

message UpdateNAppConfigRequest {
    uint32          ID      = 10;
    string          EntID   = 20;
    string          TargetAppID   = 30;
    optional uint32 StartAt = 40;
}

message UpdateNAppConfigResponse {
    AppConfig Info = 10;
}


message GetAppConfigsRequest {
    string AppID   = 10;
    optional uint32 EndAt = 20;
    int32  Offset  = 30;
    int32  Limit   = 40;
}

message GetAppConfigsResponse {
    repeated AppConfig Infos = 10;
    uint32              Total = 20;
}

message GetNAppConfigsRequest {
    string TargetAppID    = 10;
    optional uint32 EndAt = 20;
    int32  Offset  = 30;
    int32  Limit   = 40;
}

message GetNAppConfigsResponse {
    repeated AppConfig Infos = 10;
    uint32              Total = 20;
}
