// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/gw/v1/app/config/config.proto

package config

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/inspire/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint32              `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID            string              `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID            string              `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SettleMode       v1.SettleMode       `protobuf:"varint,40,opt,name=SettleMode,proto3,enum=basetypes.inspire.v1.SettleMode" json:"SettleMode,omitempty"`
	SettleAmountType v1.SettleAmountType `protobuf:"varint,50,opt,name=SettleAmountType,proto3,enum=basetypes.inspire.v1.SettleAmountType" json:"SettleAmountType,omitempty"`
	SettleInterval   v1.SettleInterval   `protobuf:"varint,60,opt,name=SettleInterval,proto3,enum=basetypes.inspire.v1.SettleInterval" json:"SettleInterval,omitempty"`
	CommissionType   v1.CommissionType   `protobuf:"varint,70,opt,name=CommissionType,proto3,enum=basetypes.inspire.v1.CommissionType" json:"CommissionType,omitempty"`
	SettleBenefit    bool                `protobuf:"varint,80,opt,name=SettleBenefit,proto3" json:"SettleBenefit,omitempty"`
	StartAt          uint32              `protobuf:"varint,90,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt            uint32              `protobuf:"varint,100,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	MaxLevelCount    uint32              `protobuf:"varint,110,opt,name=MaxLevelCount,proto3" json:"MaxLevelCount,omitempty"`
	CreatedAt        uint32              `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt        uint32              `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *AppConfig) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AppConfig) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AppConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppConfig) GetSettleMode() v1.SettleMode {
	if x != nil {
		return x.SettleMode
	}
	return v1.SettleMode(0)
}

func (x *AppConfig) GetSettleAmountType() v1.SettleAmountType {
	if x != nil {
		return x.SettleAmountType
	}
	return v1.SettleAmountType(0)
}

func (x *AppConfig) GetSettleInterval() v1.SettleInterval {
	if x != nil {
		return x.SettleInterval
	}
	return v1.SettleInterval(0)
}

func (x *AppConfig) GetCommissionType() v1.CommissionType {
	if x != nil {
		return x.CommissionType
	}
	return v1.CommissionType(0)
}

func (x *AppConfig) GetSettleBenefit() bool {
	if x != nil {
		return x.SettleBenefit
	}
	return false
}

func (x *AppConfig) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *AppConfig) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *AppConfig) GetMaxLevelCount() uint32 {
	if x != nil {
		return x.MaxLevelCount
	}
	return 0
}

func (x *AppConfig) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppConfig) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID            string              `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SettleMode       v1.SettleMode       `protobuf:"varint,20,opt,name=SettleMode,proto3,enum=basetypes.inspire.v1.SettleMode" json:"SettleMode,omitempty"`
	SettleAmountType v1.SettleAmountType `protobuf:"varint,30,opt,name=SettleAmountType,proto3,enum=basetypes.inspire.v1.SettleAmountType" json:"SettleAmountType,omitempty"`
	SettleInterval   v1.SettleInterval   `protobuf:"varint,40,opt,name=SettleInterval,proto3,enum=basetypes.inspire.v1.SettleInterval" json:"SettleInterval,omitempty"`
	CommissionType   v1.CommissionType   `protobuf:"varint,50,opt,name=CommissionType,proto3,enum=basetypes.inspire.v1.CommissionType" json:"CommissionType,omitempty"`
	SettleBenefit    bool                `protobuf:"varint,60,opt,name=SettleBenefit,proto3" json:"SettleBenefit,omitempty"`
	StartAt          *uint32             `protobuf:"varint,70,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	MaxLevelCount    uint32              `protobuf:"varint,80,opt,name=MaxLevelCount,proto3" json:"MaxLevelCount,omitempty"`
}

func (x *CreateAppConfigRequest) Reset() {
	*x = CreateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConfigRequest) ProtoMessage() {}

func (x *CreateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAppConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateAppConfigRequest) GetSettleMode() v1.SettleMode {
	if x != nil {
		return x.SettleMode
	}
	return v1.SettleMode(0)
}

func (x *CreateAppConfigRequest) GetSettleAmountType() v1.SettleAmountType {
	if x != nil {
		return x.SettleAmountType
	}
	return v1.SettleAmountType(0)
}

func (x *CreateAppConfigRequest) GetSettleInterval() v1.SettleInterval {
	if x != nil {
		return x.SettleInterval
	}
	return v1.SettleInterval(0)
}

func (x *CreateAppConfigRequest) GetCommissionType() v1.CommissionType {
	if x != nil {
		return x.CommissionType
	}
	return v1.CommissionType(0)
}

func (x *CreateAppConfigRequest) GetSettleBenefit() bool {
	if x != nil {
		return x.SettleBenefit
	}
	return false
}

func (x *CreateAppConfigRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *CreateAppConfigRequest) GetMaxLevelCount() uint32 {
	if x != nil {
		return x.MaxLevelCount
	}
	return 0
}

type CreateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppConfigResponse) Reset() {
	*x = CreateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConfigResponse) ProtoMessage() {}

func (x *CreateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAppConfigResponse) GetInfo() *AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminCreateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID      string              `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	SettleMode       v1.SettleMode       `protobuf:"varint,20,opt,name=SettleMode,proto3,enum=basetypes.inspire.v1.SettleMode" json:"SettleMode,omitempty"`
	SettleAmountType v1.SettleAmountType `protobuf:"varint,30,opt,name=SettleAmountType,proto3,enum=basetypes.inspire.v1.SettleAmountType" json:"SettleAmountType,omitempty"`
	SettleInterval   v1.SettleInterval   `protobuf:"varint,40,opt,name=SettleInterval,proto3,enum=basetypes.inspire.v1.SettleInterval" json:"SettleInterval,omitempty"`
	CommissionType   v1.CommissionType   `protobuf:"varint,50,opt,name=CommissionType,proto3,enum=basetypes.inspire.v1.CommissionType" json:"CommissionType,omitempty"`
	SettleBenefit    bool                `protobuf:"varint,60,opt,name=SettleBenefit,proto3" json:"SettleBenefit,omitempty"`
	StartAt          *uint32             `protobuf:"varint,70,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	MaxLevelCount    uint32              `protobuf:"varint,80,opt,name=MaxLevelCount,proto3" json:"MaxLevelCount,omitempty"`
}

func (x *AdminCreateAppConfigRequest) Reset() {
	*x = AdminCreateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppConfigRequest) ProtoMessage() {}

func (x *AdminCreateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *AdminCreateAppConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateAppConfigRequest) GetSettleMode() v1.SettleMode {
	if x != nil {
		return x.SettleMode
	}
	return v1.SettleMode(0)
}

func (x *AdminCreateAppConfigRequest) GetSettleAmountType() v1.SettleAmountType {
	if x != nil {
		return x.SettleAmountType
	}
	return v1.SettleAmountType(0)
}

func (x *AdminCreateAppConfigRequest) GetSettleInterval() v1.SettleInterval {
	if x != nil {
		return x.SettleInterval
	}
	return v1.SettleInterval(0)
}

func (x *AdminCreateAppConfigRequest) GetCommissionType() v1.CommissionType {
	if x != nil {
		return x.CommissionType
	}
	return v1.CommissionType(0)
}

func (x *AdminCreateAppConfigRequest) GetSettleBenefit() bool {
	if x != nil {
		return x.SettleBenefit
	}
	return false
}

func (x *AdminCreateAppConfigRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *AdminCreateAppConfigRequest) GetMaxLevelCount() uint32 {
	if x != nil {
		return x.MaxLevelCount
	}
	return 0
}

type AdminCreateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateAppConfigResponse) Reset() {
	*x = AdminCreateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppConfigResponse) ProtoMessage() {}

func (x *AdminCreateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *AdminCreateAppConfigResponse) GetInfo() *AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID   string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID   string  `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	StartAt *uint32 `protobuf:"varint,40,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
}

func (x *UpdateAppConfigRequest) Reset() {
	*x = UpdateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigRequest) ProtoMessage() {}

func (x *UpdateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAppConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

type UpdateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppConfigResponse) Reset() {
	*x = UpdateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigResponse) ProtoMessage() {}

func (x *UpdateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAppConfigResponse) GetInfo() *AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID string  `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	StartAt     *uint32 `protobuf:"varint,40,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
}

func (x *AdminUpdateAppConfigRequest) Reset() {
	*x = AdminUpdateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppConfigRequest) ProtoMessage() {}

func (x *AdminUpdateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *AdminUpdateAppConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

type AdminUpdateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateAppConfigResponse) Reset() {
	*x = AdminUpdateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppConfigResponse) ProtoMessage() {}

func (x *AdminUpdateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{8}
}

func (x *AdminUpdateAppConfigResponse) GetInfo() *AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EndAt  *uint32 `protobuf:"varint,20,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	Offset int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppConfigsRequest) Reset() {
	*x = GetAppConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigsRequest) ProtoMessage() {}

func (x *GetAppConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetAppConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppConfigsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppConfigsRequest) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *GetAppConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppConfigsResponse) Reset() {
	*x = GetAppConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigsResponse) ProtoMessage() {}

func (x *GetAppConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetAppConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppConfigsResponse) GetInfos() []*AppConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminGetAppConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string  `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	EndAt       *uint32 `protobuf:"varint,20,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	Offset      int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetAppConfigsRequest) Reset() {
	*x = AdminGetAppConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppConfigsRequest) ProtoMessage() {}

func (x *AdminGetAppConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppConfigsRequest.ProtoReflect.Descriptor instead.
func (*AdminGetAppConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{11}
}

func (x *AdminGetAppConfigsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminGetAppConfigsRequest) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *AdminGetAppConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetAppConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetAppConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetAppConfigsResponse) Reset() {
	*x = AdminGetAppConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppConfigsResponse) ProtoMessage() {}

func (x *AdminGetAppConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppConfigsResponse.ProtoReflect.Descriptor instead.
func (*AdminGetAppConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP(), []int{12}
}

func (x *AdminGetAppConfigsResponse) GetInfos() []*AppConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetAppConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_inspire_gw_v1_app_config_config_proto protoreflect.FileDescriptor

var file_npool_inspire_gw_v1_app_config_config_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb3, 0x04, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x52,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x52, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x4c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45,
	0x6e, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x61, 0x78,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x03, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x4c, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe8, 0x03, 0x0a, 0x1b,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x40, 0x0a,
	0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x52, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x4c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x61, 0x78,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x5c, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x90,
	0x01, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x22, 0x5c, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x7f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x19, 0x0a,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x22, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x90, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x19, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x22, 0x72, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x90, 0x08, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0xa1, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb6, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3a, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12,
	0xa1, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x3a, 0x01, 0x2a, 0x12, 0xb6, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x33,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xae, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x38, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x67, 0x77, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_gw_v1_app_config_config_proto_rawDescOnce sync.Once
	file_npool_inspire_gw_v1_app_config_config_proto_rawDescData = file_npool_inspire_gw_v1_app_config_config_proto_rawDesc
)

func file_npool_inspire_gw_v1_app_config_config_proto_rawDescGZIP() []byte {
	file_npool_inspire_gw_v1_app_config_config_proto_rawDescOnce.Do(func() {
		file_npool_inspire_gw_v1_app_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_gw_v1_app_config_config_proto_rawDescData)
	})
	return file_npool_inspire_gw_v1_app_config_config_proto_rawDescData
}

var file_npool_inspire_gw_v1_app_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_inspire_gw_v1_app_config_config_proto_goTypes = []interface{}{
	(*AppConfig)(nil),                    // 0: inspire.gateway.app.config.v1.AppConfig
	(*CreateAppConfigRequest)(nil),       // 1: inspire.gateway.app.config.v1.CreateAppConfigRequest
	(*CreateAppConfigResponse)(nil),      // 2: inspire.gateway.app.config.v1.CreateAppConfigResponse
	(*AdminCreateAppConfigRequest)(nil),  // 3: inspire.gateway.app.config.v1.AdminCreateAppConfigRequest
	(*AdminCreateAppConfigResponse)(nil), // 4: inspire.gateway.app.config.v1.AdminCreateAppConfigResponse
	(*UpdateAppConfigRequest)(nil),       // 5: inspire.gateway.app.config.v1.UpdateAppConfigRequest
	(*UpdateAppConfigResponse)(nil),      // 6: inspire.gateway.app.config.v1.UpdateAppConfigResponse
	(*AdminUpdateAppConfigRequest)(nil),  // 7: inspire.gateway.app.config.v1.AdminUpdateAppConfigRequest
	(*AdminUpdateAppConfigResponse)(nil), // 8: inspire.gateway.app.config.v1.AdminUpdateAppConfigResponse
	(*GetAppConfigsRequest)(nil),         // 9: inspire.gateway.app.config.v1.GetAppConfigsRequest
	(*GetAppConfigsResponse)(nil),        // 10: inspire.gateway.app.config.v1.GetAppConfigsResponse
	(*AdminGetAppConfigsRequest)(nil),    // 11: inspire.gateway.app.config.v1.AdminGetAppConfigsRequest
	(*AdminGetAppConfigsResponse)(nil),   // 12: inspire.gateway.app.config.v1.AdminGetAppConfigsResponse
	(v1.SettleMode)(0),                   // 13: basetypes.inspire.v1.SettleMode
	(v1.SettleAmountType)(0),             // 14: basetypes.inspire.v1.SettleAmountType
	(v1.SettleInterval)(0),               // 15: basetypes.inspire.v1.SettleInterval
	(v1.CommissionType)(0),               // 16: basetypes.inspire.v1.CommissionType
}
var file_npool_inspire_gw_v1_app_config_config_proto_depIdxs = []int32{
	13, // 0: inspire.gateway.app.config.v1.AppConfig.SettleMode:type_name -> basetypes.inspire.v1.SettleMode
	14, // 1: inspire.gateway.app.config.v1.AppConfig.SettleAmountType:type_name -> basetypes.inspire.v1.SettleAmountType
	15, // 2: inspire.gateway.app.config.v1.AppConfig.SettleInterval:type_name -> basetypes.inspire.v1.SettleInterval
	16, // 3: inspire.gateway.app.config.v1.AppConfig.CommissionType:type_name -> basetypes.inspire.v1.CommissionType
	13, // 4: inspire.gateway.app.config.v1.CreateAppConfigRequest.SettleMode:type_name -> basetypes.inspire.v1.SettleMode
	14, // 5: inspire.gateway.app.config.v1.CreateAppConfigRequest.SettleAmountType:type_name -> basetypes.inspire.v1.SettleAmountType
	15, // 6: inspire.gateway.app.config.v1.CreateAppConfigRequest.SettleInterval:type_name -> basetypes.inspire.v1.SettleInterval
	16, // 7: inspire.gateway.app.config.v1.CreateAppConfigRequest.CommissionType:type_name -> basetypes.inspire.v1.CommissionType
	0,  // 8: inspire.gateway.app.config.v1.CreateAppConfigResponse.Info:type_name -> inspire.gateway.app.config.v1.AppConfig
	13, // 9: inspire.gateway.app.config.v1.AdminCreateAppConfigRequest.SettleMode:type_name -> basetypes.inspire.v1.SettleMode
	14, // 10: inspire.gateway.app.config.v1.AdminCreateAppConfigRequest.SettleAmountType:type_name -> basetypes.inspire.v1.SettleAmountType
	15, // 11: inspire.gateway.app.config.v1.AdminCreateAppConfigRequest.SettleInterval:type_name -> basetypes.inspire.v1.SettleInterval
	16, // 12: inspire.gateway.app.config.v1.AdminCreateAppConfigRequest.CommissionType:type_name -> basetypes.inspire.v1.CommissionType
	0,  // 13: inspire.gateway.app.config.v1.AdminCreateAppConfigResponse.Info:type_name -> inspire.gateway.app.config.v1.AppConfig
	0,  // 14: inspire.gateway.app.config.v1.UpdateAppConfigResponse.Info:type_name -> inspire.gateway.app.config.v1.AppConfig
	0,  // 15: inspire.gateway.app.config.v1.AdminUpdateAppConfigResponse.Info:type_name -> inspire.gateway.app.config.v1.AppConfig
	0,  // 16: inspire.gateway.app.config.v1.GetAppConfigsResponse.Infos:type_name -> inspire.gateway.app.config.v1.AppConfig
	0,  // 17: inspire.gateway.app.config.v1.AdminGetAppConfigsResponse.Infos:type_name -> inspire.gateway.app.config.v1.AppConfig
	1,  // 18: inspire.gateway.app.config.v1.Gateway.CreateAppConfig:input_type -> inspire.gateway.app.config.v1.CreateAppConfigRequest
	3,  // 19: inspire.gateway.app.config.v1.Gateway.AdminCreateAppConfig:input_type -> inspire.gateway.app.config.v1.AdminCreateAppConfigRequest
	5,  // 20: inspire.gateway.app.config.v1.Gateway.UpdateAppConfig:input_type -> inspire.gateway.app.config.v1.UpdateAppConfigRequest
	7,  // 21: inspire.gateway.app.config.v1.Gateway.AdminUpdateAppConfig:input_type -> inspire.gateway.app.config.v1.AdminUpdateAppConfigRequest
	9,  // 22: inspire.gateway.app.config.v1.Gateway.GetAppConfigs:input_type -> inspire.gateway.app.config.v1.GetAppConfigsRequest
	11, // 23: inspire.gateway.app.config.v1.Gateway.AdminGetAppConfigs:input_type -> inspire.gateway.app.config.v1.AdminGetAppConfigsRequest
	2,  // 24: inspire.gateway.app.config.v1.Gateway.CreateAppConfig:output_type -> inspire.gateway.app.config.v1.CreateAppConfigResponse
	4,  // 25: inspire.gateway.app.config.v1.Gateway.AdminCreateAppConfig:output_type -> inspire.gateway.app.config.v1.AdminCreateAppConfigResponse
	6,  // 26: inspire.gateway.app.config.v1.Gateway.UpdateAppConfig:output_type -> inspire.gateway.app.config.v1.UpdateAppConfigResponse
	8,  // 27: inspire.gateway.app.config.v1.Gateway.AdminUpdateAppConfig:output_type -> inspire.gateway.app.config.v1.AdminUpdateAppConfigResponse
	10, // 28: inspire.gateway.app.config.v1.Gateway.GetAppConfigs:output_type -> inspire.gateway.app.config.v1.GetAppConfigsResponse
	12, // 29: inspire.gateway.app.config.v1.Gateway.AdminGetAppConfigs:output_type -> inspire.gateway.app.config.v1.AdminGetAppConfigsResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_npool_inspire_gw_v1_app_config_config_proto_init() }
func file_npool_inspire_gw_v1_app_config_config_proto_init() {
	if File_npool_inspire_gw_v1_app_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_app_config_config_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_gw_v1_app_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_gw_v1_app_config_config_proto_goTypes,
		DependencyIndexes: file_npool_inspire_gw_v1_app_config_config_proto_depIdxs,
		MessageInfos:      file_npool_inspire_gw_v1_app_config_config_proto_msgTypes,
	}.Build()
	File_npool_inspire_gw_v1_app_config_config_proto = out.File
	file_npool_inspire_gw_v1_app_config_config_proto_rawDesc = nil
	file_npool_inspire_gw_v1_app_config_config_proto_goTypes = nil
	file_npool_inspire_gw_v1_app_config_config_proto_depIdxs = nil
}
