syntax = "proto3";

package inspire.gateway.achievement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/gw/v1/achievement";

import "google/api/annotations.proto";
import "npool/basetypes/inspire/v1/enums.proto";

// Service Name
service Gateway {
  rpc GetAchievements(GetAchievementsRequest)
      returns (GetAchievementsResponse) {
    option (google.api.http) = {
      post : "/v1/get/achievements"
      body : "*"
    };
  }

  rpc GetUserAchievements(GetUserAchievementsRequest)
      returns (GetUserAchievementsResponse) {
    option (google.api.http) = {
      post : "/v1/get/user/achievements"
      body : "*"
    };
  }
}

message GoodAchievement {
  string GoodID = 10;
  string GoodName = 20;
  string GoodUnit = 30;

  string CommissionValue = 40;
  basetypes.inspire.v1.SettleType CommissionSettleType = 41;
  basetypes.inspire.v1.SettleAmountType CommissionSettleAmountType = 42;
  basetypes.inspire.v1.SettleMode CommissionSettleMode = 43;
  basetypes.inspire.v1.SettleInterval CommissionSettleInterval = 44;
  string CommissionThreshold = 45;

  string CoinTypeID = 50;
  string CoinName = 60;
  string CoinLogo = 70;
  string CoinUnit = 80;

  string TotalUnits = 90;
  string SelfUnits = 100;
  // In USD
  string TotalAmount = 110;
  string SelfAmount = 120;
  string TotalCommission = 130;
  string SelfCommission = 140;

  string SuperiorCommission = 150;

  string AppGoodID = 160;
}

message Achievement {
  optional string InviterID = 9;
  string UserID = 10;
  string Username = 20;
  string EmailAddress = 30;
  string PhoneNO = 40;
  string FirstName = 50;
  string LastName = 60;
  bool Kol = 70;
  uint32 TotalInvitees = 80;
  repeated GoodAchievement Achievements = 90;
  string TotalCommission = 100;
  string SelfCommission = 110;
  uint32 DirectInvites = 120;
  uint32 IndirectInvites = 130;
  string DirectConsumeAmount = 140;
  string InviteeConsumeAmount = 150;
  uint32 CreatedAt = 1000;
  uint32 InvitedAt = 1010;
}

message GetAchievementsRequest {
  string AppID = 10;
  string UserID = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAchievementsResponse {
  repeated Achievement Infos = 10; // Each user
  uint32 Total = 20;
}

message GetUserAchievementsRequest {
  string AppID = 10;
  repeated string UserIDs = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetUserAchievementsResponse {
  repeated Achievement Infos = 10;
  uint32 Total = 20;
}
