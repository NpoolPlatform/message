// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/inspire/gw/v1/coupon/allocated/allocated.proto

package allocated

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/inspire/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32              `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID               string              `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID               string              `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID              string              `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress        string              `protobuf:"bytes,50,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO             string              `protobuf:"bytes,51,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	Denomination        string              `protobuf:"bytes,60,opt,name=Denomination,proto3" json:"Denomination,omitempty"`
	Circulation         string              `protobuf:"bytes,70,opt,name=Circulation,proto3" json:"Circulation,omitempty"`
	StartAt             uint32              `protobuf:"varint,80,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	DurationDays        uint32              `protobuf:"varint,90,opt,name=DurationDays,proto3" json:"DurationDays,omitempty"`
	EndAt               uint32              `protobuf:"varint,100,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	CouponID            string              `protobuf:"bytes,110,opt,name=CouponID,proto3" json:"CouponID,omitempty"`
	CouponName          string              `protobuf:"bytes,120,opt,name=CouponName,proto3" json:"CouponName,omitempty"`
	Message             string              `protobuf:"bytes,130,opt,name=Message,proto3" json:"Message,omitempty"`
	Expired             bool                `protobuf:"varint,140,opt,name=Expired,proto3" json:"Expired,omitempty"`
	Valid               bool                `protobuf:"varint,150,opt,name=Valid,proto3" json:"Valid,omitempty"`
	Used                bool                `protobuf:"varint,160,opt,name=Used,proto3" json:"Used,omitempty"`
	UsedAt              uint32              `protobuf:"varint,170,opt,name=UsedAt,proto3" json:"UsedAt,omitempty"`
	UsedByOrderID       string              `protobuf:"bytes,180,opt,name=UsedByOrderID,proto3" json:"UsedByOrderID,omitempty"`
	Threshold           string              `protobuf:"bytes,200,opt,name=Threshold,proto3" json:"Threshold,omitempty"`
	CouponTypeStr       string              `protobuf:"bytes,220,opt,name=CouponTypeStr,proto3" json:"CouponTypeStr,omitempty"`
	CouponType          v1.CouponType       `protobuf:"varint,230,opt,name=CouponType,proto3,enum=basetypes.inspire.v1.CouponType" json:"CouponType,omitempty"`
	CouponConstraintStr string              `protobuf:"bytes,240,opt,name=CouponConstraintStr,proto3" json:"CouponConstraintStr,omitempty"`
	CouponConstraint    v1.CouponConstraint `protobuf:"varint,250,opt,name=CouponConstraint,proto3,enum=basetypes.inspire.v1.CouponConstraint" json:"CouponConstraint,omitempty"`
	Random              bool                `protobuf:"varint,260,opt,name=Random,proto3" json:"Random,omitempty"`
	CouponScopeStr      string              `protobuf:"bytes,270,opt,name=CouponScopeStr,proto3" json:"CouponScopeStr,omitempty"`
	CouponScope         v1.CouponScope      `protobuf:"varint,280,opt,name=CouponScope,proto3,enum=basetypes.inspire.v1.CouponScope" json:"CouponScope,omitempty"`
	Cashable            bool                `protobuf:"varint,290,opt,name=Cashable,proto3" json:"Cashable,omitempty"`
	CreatedAt           uint32              `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt           uint32              `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{0}
}

func (x *Coupon) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Coupon) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Coupon) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Coupon) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Coupon) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Coupon) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Coupon) GetDenomination() string {
	if x != nil {
		return x.Denomination
	}
	return ""
}

func (x *Coupon) GetCirculation() string {
	if x != nil {
		return x.Circulation
	}
	return ""
}

func (x *Coupon) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Coupon) GetDurationDays() uint32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *Coupon) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *Coupon) GetCouponID() string {
	if x != nil {
		return x.CouponID
	}
	return ""
}

func (x *Coupon) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *Coupon) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Coupon) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *Coupon) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Coupon) GetUsed() bool {
	if x != nil {
		return x.Used
	}
	return false
}

func (x *Coupon) GetUsedAt() uint32 {
	if x != nil {
		return x.UsedAt
	}
	return 0
}

func (x *Coupon) GetUsedByOrderID() string {
	if x != nil {
		return x.UsedByOrderID
	}
	return ""
}

func (x *Coupon) GetThreshold() string {
	if x != nil {
		return x.Threshold
	}
	return ""
}

func (x *Coupon) GetCouponTypeStr() string {
	if x != nil {
		return x.CouponTypeStr
	}
	return ""
}

func (x *Coupon) GetCouponType() v1.CouponType {
	if x != nil {
		return x.CouponType
	}
	return v1.CouponType(0)
}

func (x *Coupon) GetCouponConstraintStr() string {
	if x != nil {
		return x.CouponConstraintStr
	}
	return ""
}

func (x *Coupon) GetCouponConstraint() v1.CouponConstraint {
	if x != nil {
		return x.CouponConstraint
	}
	return v1.CouponConstraint(0)
}

func (x *Coupon) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *Coupon) GetCouponScopeStr() string {
	if x != nil {
		return x.CouponScopeStr
	}
	return ""
}

func (x *Coupon) GetCouponScope() v1.CouponScope {
	if x != nil {
		return x.CouponScope
	}
	return v1.CouponScope(0)
}

func (x *Coupon) GetCashable() bool {
	if x != nil {
		return x.Cashable
	}
	return false
}

func (x *Coupon) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Coupon) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	CouponID     string `protobuf:"bytes,30,opt,name=CouponID,proto3" json:"CouponID,omitempty"`
}

func (x *CreateCouponRequest) Reset() {
	*x = CreateCouponRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCouponRequest) ProtoMessage() {}

func (x *CreateCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCouponRequest.ProtoReflect.Descriptor instead.
func (*CreateCouponRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCouponRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateCouponRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateCouponRequest) GetCouponID() string {
	if x != nil {
		return x.CouponID
	}
	return ""
}

type CreateCouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Coupon `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCouponResponse) Reset() {
	*x = CreateCouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCouponResponse) ProtoMessage() {}

func (x *CreateCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCouponResponse.ProtoReflect.Descriptor instead.
func (*CreateCouponResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCouponResponse) GetInfo() *Coupon {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCouponsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetCouponsRequest) Reset() {
	*x = GetCouponsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCouponsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponsRequest) ProtoMessage() {}

func (x *GetCouponsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponsRequest.ProtoReflect.Descriptor instead.
func (*GetCouponsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{3}
}

func (x *GetCouponsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetCouponsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetCouponsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCouponsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCouponsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Coupon `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetCouponsResponse) Reset() {
	*x = GetCouponsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCouponsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponsResponse) ProtoMessage() {}

func (x *GetCouponsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponsResponse.ProtoReflect.Descriptor instead.
func (*GetCouponsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{4}
}

func (x *GetCouponsResponse) GetInfos() []*Coupon {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetCouponsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppCouponsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppCouponsRequest) Reset() {
	*x = GetAppCouponsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppCouponsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppCouponsRequest) ProtoMessage() {}

func (x *GetAppCouponsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppCouponsRequest.ProtoReflect.Descriptor instead.
func (*GetAppCouponsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppCouponsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppCouponsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppCouponsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppCouponsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Coupon `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppCouponsResponse) Reset() {
	*x = GetAppCouponsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppCouponsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppCouponsResponse) ProtoMessage() {}

func (x *GetAppCouponsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppCouponsResponse.ProtoReflect.Descriptor instead.
func (*GetAppCouponsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppCouponsResponse) GetInfos() []*Coupon {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppCouponsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_inspire_gw_v1_coupon_allocated_allocated_proto protoreflect.FileDescriptor

var file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDesc = []byte{
	0x0a, 0x34, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x86, 0x08, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x55, 0x73, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x64, 0x41, 0x74,
	0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x25, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x41, 0x0a, 0x0a,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x31, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x12, 0x53, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0xfa, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x12, 0x27, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53,
	0x74, 0x72, 0x18, 0x8e, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x98, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0xa2, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6b, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x6f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x6d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x70, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x8d,
	0x04, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xaa, 0x01, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0xa2, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0xaf, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x39,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x42, 0x47,
	0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescOnce sync.Once
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescData = file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDesc
)

func file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescGZIP() []byte {
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescOnce.Do(func() {
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescData)
	})
	return file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDescData
}

var file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_goTypes = []interface{}{
	(*Coupon)(nil),                // 0: inspire.gateway.coupon.allocated.v1.Coupon
	(*CreateCouponRequest)(nil),   // 1: inspire.gateway.coupon.allocated.v1.CreateCouponRequest
	(*CreateCouponResponse)(nil),  // 2: inspire.gateway.coupon.allocated.v1.CreateCouponResponse
	(*GetCouponsRequest)(nil),     // 3: inspire.gateway.coupon.allocated.v1.GetCouponsRequest
	(*GetCouponsResponse)(nil),    // 4: inspire.gateway.coupon.allocated.v1.GetCouponsResponse
	(*GetAppCouponsRequest)(nil),  // 5: inspire.gateway.coupon.allocated.v1.GetAppCouponsRequest
	(*GetAppCouponsResponse)(nil), // 6: inspire.gateway.coupon.allocated.v1.GetAppCouponsResponse
	(v1.CouponType)(0),            // 7: basetypes.inspire.v1.CouponType
	(v1.CouponConstraint)(0),      // 8: basetypes.inspire.v1.CouponConstraint
	(v1.CouponScope)(0),           // 9: basetypes.inspire.v1.CouponScope
}
var file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_depIdxs = []int32{
	7, // 0: inspire.gateway.coupon.allocated.v1.Coupon.CouponType:type_name -> basetypes.inspire.v1.CouponType
	8, // 1: inspire.gateway.coupon.allocated.v1.Coupon.CouponConstraint:type_name -> basetypes.inspire.v1.CouponConstraint
	9, // 2: inspire.gateway.coupon.allocated.v1.Coupon.CouponScope:type_name -> basetypes.inspire.v1.CouponScope
	0, // 3: inspire.gateway.coupon.allocated.v1.CreateCouponResponse.Info:type_name -> inspire.gateway.coupon.allocated.v1.Coupon
	0, // 4: inspire.gateway.coupon.allocated.v1.GetCouponsResponse.Infos:type_name -> inspire.gateway.coupon.allocated.v1.Coupon
	0, // 5: inspire.gateway.coupon.allocated.v1.GetAppCouponsResponse.Infos:type_name -> inspire.gateway.coupon.allocated.v1.Coupon
	1, // 6: inspire.gateway.coupon.allocated.v1.Gateway.CreateCoupon:input_type -> inspire.gateway.coupon.allocated.v1.CreateCouponRequest
	3, // 7: inspire.gateway.coupon.allocated.v1.Gateway.GetCoupons:input_type -> inspire.gateway.coupon.allocated.v1.GetCouponsRequest
	5, // 8: inspire.gateway.coupon.allocated.v1.Gateway.GetAppCoupons:input_type -> inspire.gateway.coupon.allocated.v1.GetAppCouponsRequest
	2, // 9: inspire.gateway.coupon.allocated.v1.Gateway.CreateCoupon:output_type -> inspire.gateway.coupon.allocated.v1.CreateCouponResponse
	4, // 10: inspire.gateway.coupon.allocated.v1.Gateway.GetCoupons:output_type -> inspire.gateway.coupon.allocated.v1.GetCouponsResponse
	6, // 11: inspire.gateway.coupon.allocated.v1.Gateway.GetAppCoupons:output_type -> inspire.gateway.coupon.allocated.v1.GetAppCouponsResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_init() }
func file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_init() {
	if File_npool_inspire_gw_v1_coupon_allocated_allocated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCouponRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCouponsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCouponsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppCouponsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppCouponsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_goTypes,
		DependencyIndexes: file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_depIdxs,
		MessageInfos:      file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_msgTypes,
	}.Build()
	File_npool_inspire_gw_v1_coupon_allocated_allocated_proto = out.File
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_rawDesc = nil
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_goTypes = nil
	file_npool_inspire_gw_v1_coupon_allocated_allocated_proto_depIdxs = nil
}
