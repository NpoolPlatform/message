// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/gw/v1/commission/commission.proto

package commission

import (
	_ "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Percent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,10,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Username     string `protobuf:"bytes,20,opt,name=Username,proto3" json:"Username,omitempty"`
	EmailAddress string `protobuf:"bytes,30,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO      string `protobuf:"bytes,40,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	FirstName    string `protobuf:"bytes,50,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName     string `protobuf:"bytes,60,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Kol          bool   `protobuf:"varint,70,opt,name=Kol,proto3" json:"Kol,omitempty"`
	GoodID       string `protobuf:"bytes,80,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodName     string `protobuf:"bytes,90,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	CoinTypeID   string `protobuf:"bytes,100,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName     string `protobuf:"bytes,110,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	CoinLogo     string `protobuf:"bytes,120,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	Percent      uint32 `protobuf:"varint,130,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt      uint32 `protobuf:"varint,140,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt        uint32 `protobuf:"varint,150,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	CreatedAt    uint32 `protobuf:"varint,160,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *Percent) Reset() {
	*x = Percent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Percent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percent) ProtoMessage() {}

func (x *Percent) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percent.ProtoReflect.Descriptor instead.
func (*Percent) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_commission_commission_proto_rawDescGZIP(), []int{0}
}

func (x *Percent) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Percent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Percent) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Percent) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Percent) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Percent) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Percent) GetKol() bool {
	if x != nil {
		return x.Kol
	}
	return false
}

func (x *Percent) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Percent) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Percent) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Percent) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Percent) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Percent) GetPercent() uint32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Percent) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Percent) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *Percent) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetPercentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithSub bool   `protobuf:"varint,30,opt,name=WithSub,proto3" json:"WithSub,omitempty"`
	StartAt uint32 `protobuf:"varint,40,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt   uint32 `protobuf:"varint,50,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Offset  int32  `protobuf:"varint,60,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32  `protobuf:"varint,70,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetPercentsRequest) Reset() {
	*x = GetPercentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPercentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPercentsRequest) ProtoMessage() {}

func (x *GetPercentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPercentsRequest.ProtoReflect.Descriptor instead.
func (*GetPercentsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_commission_commission_proto_rawDescGZIP(), []int{1}
}

func (x *GetPercentsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetPercentsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetPercentsRequest) GetWithSub() bool {
	if x != nil {
		return x.WithSub
	}
	return false
}

func (x *GetPercentsRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetPercentsRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetPercentsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPercentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPercentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Percent `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32     `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetPercentsResponse) Reset() {
	*x = GetPercentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPercentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPercentsResponse) ProtoMessage() {}

func (x *GetPercentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPercentsResponse.ProtoReflect.Descriptor instead.
func (*GetPercentsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_commission_commission_proto_rawDescGZIP(), []int{2}
}

func (x *GetPercentsResponse) GetInfos() []*Percent {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetPercentsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_inspire_gw_v1_commission_commission_proto protoreflect.FileDescriptor

var file_npool_inspire_gw_v1_commission_commission_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf,
	0x03, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x6f, 0x6c, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x4b, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x82, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x45, 0x6e,
	0x64, 0x41, 0x74, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xba, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x69, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xa7, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x12, 0x9b, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x3a,
	0x01, 0x2a, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_gw_v1_commission_commission_proto_rawDescOnce sync.Once
	file_npool_inspire_gw_v1_commission_commission_proto_rawDescData = file_npool_inspire_gw_v1_commission_commission_proto_rawDesc
)

func file_npool_inspire_gw_v1_commission_commission_proto_rawDescGZIP() []byte {
	file_npool_inspire_gw_v1_commission_commission_proto_rawDescOnce.Do(func() {
		file_npool_inspire_gw_v1_commission_commission_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_gw_v1_commission_commission_proto_rawDescData)
	})
	return file_npool_inspire_gw_v1_commission_commission_proto_rawDescData
}

var file_npool_inspire_gw_v1_commission_commission_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_npool_inspire_gw_v1_commission_commission_proto_goTypes = []interface{}{
	(*Percent)(nil),             // 0: inspire.gateway.commission.v1.Percent
	(*GetPercentsRequest)(nil),  // 1: inspire.gateway.commission.v1.GetPercentsRequest
	(*GetPercentsResponse)(nil), // 2: inspire.gateway.commission.v1.GetPercentsResponse
}
var file_npool_inspire_gw_v1_commission_commission_proto_depIdxs = []int32{
	0, // 0: inspire.gateway.commission.v1.GetPercentsResponse.Infos:type_name -> inspire.gateway.commission.v1.Percent
	1, // 1: inspire.gateway.commission.v1.Gateway.GetPercents:input_type -> inspire.gateway.commission.v1.GetPercentsRequest
	2, // 2: inspire.gateway.commission.v1.Gateway.GetPercents:output_type -> inspire.gateway.commission.v1.GetPercentsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_npool_inspire_gw_v1_commission_commission_proto_init() }
func file_npool_inspire_gw_v1_commission_commission_proto_init() {
	if File_npool_inspire_gw_v1_commission_commission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Percent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPercentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_commission_commission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPercentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_gw_v1_commission_commission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_gw_v1_commission_commission_proto_goTypes,
		DependencyIndexes: file_npool_inspire_gw_v1_commission_commission_proto_depIdxs,
		MessageInfos:      file_npool_inspire_gw_v1_commission_commission_proto_msgTypes,
	}.Build()
	File_npool_inspire_gw_v1_commission_commission_proto = out.File
	file_npool_inspire_gw_v1_commission_commission_proto_rawDesc = nil
	file_npool_inspire_gw_v1_commission_commission_proto_goTypes = nil
	file_npool_inspire_gw_v1_commission_commission_proto_depIdxs = nil
}
