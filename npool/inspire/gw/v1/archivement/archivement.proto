syntax = "proto3";

package inspire.gateway.archivement.v1;

option go_package = "github.com/NpoolPlatform/message/npool/inspire/gw/v1/archivement";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Gateway {
    rpc GetGoodArchivements (GetGoodArchivementsRequest) returns (GetGoodArchivementsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goodarchivements"
            body: "*"
        };
    }

    rpc GetUserGoodArchivements (GetUserGoodArchivementsRequest) returns (GetUserGoodArchivementsResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/goodarchivements"
            body: "*"
        };
    }
}

message GoodArchivement {
    string GoodID             = 10;
    string GoodName           = 20;
    string GoodUnit           = 30;
    string CommissionPercent  = 40;

    string CoinTypeID         = 50;
    string CoinName           = 60;
    string CoinLogo           = 70;
    string CoinUnit           = 80;

    string TotalUnits         = 90;
    string SelfUnits          = 100;
    // In USD
    string TotalAmount        = 110;
    string SelfAmount         = 120;
    string TotalCommission    = 130;
    string SelfCommission     = 140;

    string SuperiorCommission = 150;
}

message UserArchivement {
    string InviterID       = 9;
    string UserID          = 10;
    string Username        = 20;
    string EmailAddress    = 30;
    string PhoneNO         = 40;
    string FirstName       = 50;
    string LastName        = 60;
    bool   Kol             = 70;
    uint32 TotalInvitees   = 80;
    repeated GoodArchivement Archivements = 90;
    uint32 CreatedAt       = 100;
    uint32 InvitedAt       = 110;
}

message GetGoodArchivementsRequest {
    string AppID    = 10;
    string UserID   = 20;
    int32  Offset   = 30;
    int32  Limit    = 40;
}

message GetGoodArchivementsResponse {
    repeated UserArchivement Archivements  = 10; // Each user
    uint32                   Total         = 20;
}


message GetUserGoodArchivementsRequest {
    string          AppID    = 10;
    repeated string UserIDs  = 20;
    int32           Offset   = 30;
    int32           Limit    = 40;
}

message GetUserGoodArchivementsResponse {
    repeated UserArchivement Archivements = 10;
    uint32                   Total        = 20;
}

