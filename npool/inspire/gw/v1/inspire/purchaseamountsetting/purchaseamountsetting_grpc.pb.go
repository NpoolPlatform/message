// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/inspire/gw/v1/inspire/purchaseamountsetting/purchaseamountsetting.proto

package purchaseamountsetting

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GatewayClient interface {
	GetPurchaseAmountSetting(ctx context.Context, in *GetAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingResponse, error)
	GetPurchaseAmountSettings(ctx context.Context, in *GetPurchaseAmountSettingsRequest, opts ...grpc.CallOption) (*GetPurchaseAmountSettingsResponse, error)
	GetAppPurchaseAmountSettings(ctx context.Context, in *GetAppPurchaseAmountSettingsRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsResponse, error)
	CreatePurchaseAmountSetting(ctx context.Context, in *CreatePurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreatePurchaseAmountSettingResponse, error)
	CreateAppPurchaseAmountSetting(ctx context.Context, in *CreateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingResponse, error)
	UpdatePurchaseAmountSetting(ctx context.Context, in *UpdatePurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdatePurchaseAmountSettingResponse, error)
	UpdateAppPurchaseAmountSetting(ctx context.Context, in *UpdateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdateAppPurchaseAmountSettingResponse, error)
}

type gatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayClient(cc grpc.ClientConnInterface) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) GetPurchaseAmountSetting(ctx context.Context, in *GetAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingResponse, error) {
	out := new(GetAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetPurchaseAmountSettings(ctx context.Context, in *GetPurchaseAmountSettingsRequest, opts ...grpc.CallOption) (*GetPurchaseAmountSettingsResponse, error) {
	out := new(GetPurchaseAmountSettingsResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetPurchaseAmountSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetAppPurchaseAmountSettings(ctx context.Context, in *GetAppPurchaseAmountSettingsRequest, opts ...grpc.CallOption) (*GetAppPurchaseAmountSettingsResponse, error) {
	out := new(GetAppPurchaseAmountSettingsResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetAppPurchaseAmountSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CreatePurchaseAmountSetting(ctx context.Context, in *CreatePurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreatePurchaseAmountSettingResponse, error) {
	out := new(CreatePurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/CreatePurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CreateAppPurchaseAmountSetting(ctx context.Context, in *CreateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*CreateAppPurchaseAmountSettingResponse, error) {
	out := new(CreateAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/CreateAppPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) UpdatePurchaseAmountSetting(ctx context.Context, in *UpdatePurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdatePurchaseAmountSettingResponse, error) {
	out := new(UpdatePurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/UpdatePurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) UpdateAppPurchaseAmountSetting(ctx context.Context, in *UpdateAppPurchaseAmountSettingRequest, opts ...grpc.CallOption) (*UpdateAppPurchaseAmountSettingResponse, error) {
	out := new(UpdateAppPurchaseAmountSettingResponse)
	err := c.cc.Invoke(ctx, "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/UpdateAppPurchaseAmountSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
// All implementations must embed UnimplementedGatewayServer
// for forward compatibility
type GatewayServer interface {
	GetPurchaseAmountSetting(context.Context, *GetAppPurchaseAmountSettingRequest) (*GetAppPurchaseAmountSettingResponse, error)
	GetPurchaseAmountSettings(context.Context, *GetPurchaseAmountSettingsRequest) (*GetPurchaseAmountSettingsResponse, error)
	GetAppPurchaseAmountSettings(context.Context, *GetAppPurchaseAmountSettingsRequest) (*GetAppPurchaseAmountSettingsResponse, error)
	CreatePurchaseAmountSetting(context.Context, *CreatePurchaseAmountSettingRequest) (*CreatePurchaseAmountSettingResponse, error)
	CreateAppPurchaseAmountSetting(context.Context, *CreateAppPurchaseAmountSettingRequest) (*CreateAppPurchaseAmountSettingResponse, error)
	UpdatePurchaseAmountSetting(context.Context, *UpdatePurchaseAmountSettingRequest) (*UpdatePurchaseAmountSettingResponse, error)
	UpdateAppPurchaseAmountSetting(context.Context, *UpdateAppPurchaseAmountSettingRequest) (*UpdateAppPurchaseAmountSettingResponse, error)
	mustEmbedUnimplementedGatewayServer()
}

// UnimplementedGatewayServer must be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (UnimplementedGatewayServer) GetPurchaseAmountSetting(context.Context, *GetAppPurchaseAmountSettingRequest) (*GetAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPurchaseAmountSetting not implemented")
}
func (UnimplementedGatewayServer) GetPurchaseAmountSettings(context.Context, *GetPurchaseAmountSettingsRequest) (*GetPurchaseAmountSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPurchaseAmountSettings not implemented")
}
func (UnimplementedGatewayServer) GetAppPurchaseAmountSettings(context.Context, *GetAppPurchaseAmountSettingsRequest) (*GetAppPurchaseAmountSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPurchaseAmountSettings not implemented")
}
func (UnimplementedGatewayServer) CreatePurchaseAmountSetting(context.Context, *CreatePurchaseAmountSettingRequest) (*CreatePurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePurchaseAmountSetting not implemented")
}
func (UnimplementedGatewayServer) CreateAppPurchaseAmountSetting(context.Context, *CreateAppPurchaseAmountSettingRequest) (*CreateAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppPurchaseAmountSetting not implemented")
}
func (UnimplementedGatewayServer) UpdatePurchaseAmountSetting(context.Context, *UpdatePurchaseAmountSettingRequest) (*UpdatePurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePurchaseAmountSetting not implemented")
}
func (UnimplementedGatewayServer) UpdateAppPurchaseAmountSetting(context.Context, *UpdateAppPurchaseAmountSettingRequest) (*UpdateAppPurchaseAmountSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppPurchaseAmountSetting not implemented")
}
func (UnimplementedGatewayServer) mustEmbedUnimplementedGatewayServer() {}

// UnsafeGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GatewayServer will
// result in compilation errors.
type UnsafeGatewayServer interface {
	mustEmbedUnimplementedGatewayServer()
}

func RegisterGatewayServer(s grpc.ServiceRegistrar, srv GatewayServer) {
	s.RegisterService(&Gateway_ServiceDesc, srv)
}

func _Gateway_GetPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetPurchaseAmountSetting(ctx, req.(*GetAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetPurchaseAmountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPurchaseAmountSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetPurchaseAmountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetPurchaseAmountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetPurchaseAmountSettings(ctx, req.(*GetPurchaseAmountSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetAppPurchaseAmountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPurchaseAmountSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetAppPurchaseAmountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/GetAppPurchaseAmountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetAppPurchaseAmountSettings(ctx, req.(*GetAppPurchaseAmountSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CreatePurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreatePurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/CreatePurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreatePurchaseAmountSetting(ctx, req.(*CreatePurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CreateAppPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreateAppPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/CreateAppPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreateAppPurchaseAmountSetting(ctx, req.(*CreateAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_UpdatePurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).UpdatePurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/UpdatePurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).UpdatePurchaseAmountSetting(ctx, req.(*UpdatePurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_UpdateAppPurchaseAmountSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppPurchaseAmountSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).UpdateAppPurchaseAmountSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway/UpdateAppPurchaseAmountSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).UpdateAppPurchaseAmountSetting(ctx, req.(*UpdateAppPurchaseAmountSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Gateway_ServiceDesc is the grpc.ServiceDesc for Gateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Gateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPurchaseAmountSetting",
			Handler:    _Gateway_GetPurchaseAmountSetting_Handler,
		},
		{
			MethodName: "GetPurchaseAmountSettings",
			Handler:    _Gateway_GetPurchaseAmountSettings_Handler,
		},
		{
			MethodName: "GetAppPurchaseAmountSettings",
			Handler:    _Gateway_GetAppPurchaseAmountSettings_Handler,
		},
		{
			MethodName: "CreatePurchaseAmountSetting",
			Handler:    _Gateway_CreatePurchaseAmountSetting_Handler,
		},
		{
			MethodName: "CreateAppPurchaseAmountSetting",
			Handler:    _Gateway_CreateAppPurchaseAmountSetting_Handler,
		},
		{
			MethodName: "UpdatePurchaseAmountSetting",
			Handler:    _Gateway_UpdatePurchaseAmountSetting_Handler,
		},
		{
			MethodName: "UpdateAppPurchaseAmountSetting",
			Handler:    _Gateway_UpdateAppPurchaseAmountSetting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/inspire/gw/v1/inspire/purchaseamountsetting/purchaseamountsetting.proto",
}
