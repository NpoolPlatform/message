// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/inspire/gw/v1/inspire/purchaseamountsetting/purchaseamountsetting.proto

package purchaseamountsetting

import (
	_ "github.com/NpoolPlatform/message/npool"
	_ "github.com/NpoolPlatform/message/npool/inspire/mgr/v1/inspire/coupon/allocated"
	_ "github.com/NpoolPlatform/message/npool/inspire/mw/v1/inspire/coupon"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PurchaseAmountSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID         string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName       string `protobuf:"bytes,30,opt,name=AppName,proto3" json:"AppName,omitempty"`
	UserID        string `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName      string `protobuf:"bytes,50,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserFirstName string `protobuf:"bytes,60,opt,name=UserFirstName,proto3" json:"UserFirstName,omitempty"`
	UserLastName  string `protobuf:"bytes,70,opt,name=UserLastName,proto3" json:"UserLastName,omitempty"`
	UserPhoneNO   string `protobuf:"bytes,80,opt,name=UserPhoneNO,proto3" json:"UserPhoneNO,omitempty"`
	Title         string `protobuf:"bytes,90,opt,name=Title,proto3" json:"Title,omitempty"`
	Amount        string `protobuf:"bytes,100,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Percent       string `protobuf:"bytes,110,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt       uint32 `protobuf:"varint,120,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt         uint32 `protobuf:"varint,130,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	BadgeLarge    string `protobuf:"bytes,140,opt,name=BadgeLarge,proto3" json:"BadgeLarge,omitempty"`
	BadgeSmall    string `protobuf:"bytes,150,opt,name=BadgeSmall,proto3" json:"BadgeSmall,omitempty"`
	GoodID        string `protobuf:"bytes,160,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodName      string `protobuf:"bytes,170,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	CoinTypeID    string `protobuf:"bytes,180,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName      string `protobuf:"bytes,190,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	CoinLogo      string `protobuf:"bytes,200,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit      string `protobuf:"bytes,210,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	CoinENV       string `protobuf:"bytes,220,opt,name=CoinENV,proto3" json:"CoinENV,omitempty"`
	CreatedAt     uint32 `protobuf:"varint,230,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     uint32 `protobuf:"varint,240,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *PurchaseAmountSetting) Reset() {
	*x = PurchaseAmountSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseAmountSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseAmountSetting) ProtoMessage() {}

func (x *PurchaseAmountSetting) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseAmountSetting.ProtoReflect.Descriptor instead.
func (*PurchaseAmountSetting) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseAmountSetting) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserFirstName() string {
	if x != nil {
		return x.UserFirstName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserLastName() string {
	if x != nil {
		return x.UserLastName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetUserPhoneNO() string {
	if x != nil {
		return x.UserPhoneNO
	}
	return ""
}

func (x *PurchaseAmountSetting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PurchaseAmountSetting) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PurchaseAmountSetting) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

func (x *PurchaseAmountSetting) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetBadgeLarge() string {
	if x != nil {
		return x.BadgeLarge
	}
	return ""
}

func (x *PurchaseAmountSetting) GetBadgeSmall() string {
	if x != nil {
		return x.BadgeSmall
	}
	return ""
}

func (x *PurchaseAmountSetting) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCoinENV() string {
	if x != nil {
		return x.CoinENV
	}
	return ""
}

func (x *PurchaseAmountSetting) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PurchaseAmountSetting) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppPurchaseAmountSettingRequest) Reset() {
	*x = GetAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppPurchaseAmountSettingRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppPurchaseAmountSettingResponse) Reset() {
	*x = GetAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppPurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset uint32 `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  uint32 `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetPurchaseAmountSettingsRequest) Reset() {
	*x = GetPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *GetPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{3}
}

func (x *GetPurchaseAmountSettingsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetPurchaseAmountSettingsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPurchaseAmountSettingsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetPurchaseAmountSettingsResponse) Reset() {
	*x = GetPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *GetPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{4}
}

func (x *GetPurchaseAmountSettingsResponse) GetInfos() []*PurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetPurchaseAmountSettingsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppPurchaseAmountSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      uint32 `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       uint32 `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppPurchaseAmountSettingsRequest) Reset() {
	*x = GetAppPurchaseAmountSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingsRequest) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingsRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppPurchaseAmountSettingsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppPurchaseAmountSettingsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppPurchaseAmountSettingsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppPurchaseAmountSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PurchaseAmountSetting `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppPurchaseAmountSettingsResponse) Reset() {
	*x = GetAppPurchaseAmountSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppPurchaseAmountSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppPurchaseAmountSettingsResponse) ProtoMessage() {}

func (x *GetAppPurchaseAmountSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppPurchaseAmountSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetAppPurchaseAmountSettingsResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppPurchaseAmountSettingsResponse) GetInfos() []*PurchaseAmountSetting {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppPurchaseAmountSettingsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreatePurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Title      string `protobuf:"bytes,30,opt,name=Title,proto3" json:"Title,omitempty"`
	Amount     string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Percent    string `protobuf:"bytes,50,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt    uint32 `protobuf:"varint,60,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt      uint32 `protobuf:"varint,70,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	BadgeLarge string `protobuf:"bytes,80,opt,name=BadgeLarge,proto3" json:"BadgeLarge,omitempty"`
	BadgeSmall string `protobuf:"bytes,90,opt,name=BadgeSmall,proto3" json:"BadgeSmall,omitempty"`
	GoodID     string `protobuf:"bytes,100,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID string `protobuf:"bytes,110,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *CreatePurchaseAmountSettingRequest) Reset() {
	*x = CreatePurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingRequest) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePurchaseAmountSettingRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *CreatePurchaseAmountSettingRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *CreatePurchaseAmountSettingRequest) GetBadgeLarge() string {
	if x != nil {
		return x.BadgeLarge
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetBadgeSmall() string {
	if x != nil {
		return x.BadgeSmall
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *CreatePurchaseAmountSettingRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type CreatePurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePurchaseAmountSettingResponse) Reset() {
	*x = CreatePurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseAmountSettingResponse) ProtoMessage() {}

func (x *CreatePurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*CreatePurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	UserID      string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Title       string `protobuf:"bytes,30,opt,name=Title,proto3" json:"Title,omitempty"`
	Amount      string `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Percent     string `protobuf:"bytes,50,opt,name=Percent,proto3" json:"Percent,omitempty"`
	StartAt     uint32 `protobuf:"varint,60,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt       uint32 `protobuf:"varint,70,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	BadgeLarge  string `protobuf:"bytes,80,opt,name=BadgeLarge,proto3" json:"BadgeLarge,omitempty"`
	BadgeSmall  string `protobuf:"bytes,90,opt,name=BadgeSmall,proto3" json:"BadgeSmall,omitempty"`
	GoodID      string `protobuf:"bytes,100,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID  string `protobuf:"bytes,110,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingRequest) Reset() {
	*x = CreateAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAppPurchaseAmountSettingRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *CreateAppPurchaseAmountSettingRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *CreateAppPurchaseAmountSettingRequest) GetBadgeLarge() string {
	if x != nil {
		return x.BadgeLarge
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetBadgeSmall() string {
	if x != nil {
		return x.BadgeSmall
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *CreateAppPurchaseAmountSettingRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type CreateAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppPurchaseAmountSettingResponse) Reset() {
	*x = CreateAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *CreateAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*CreateAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAppPurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     *string `protobuf:"bytes,20,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Title      *string `protobuf:"bytes,30,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Amount     *string `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	Percent    *string `protobuf:"bytes,50,opt,name=Percent,proto3,oneof" json:"Percent,omitempty"`
	StartAt    *uint32 `protobuf:"varint,60,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt      *uint32 `protobuf:"varint,70,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	BadgeLarge *string `protobuf:"bytes,80,opt,name=BadgeLarge,proto3,oneof" json:"BadgeLarge,omitempty"`
	BadgeSmall *string `protobuf:"bytes,90,opt,name=BadgeSmall,proto3,oneof" json:"BadgeSmall,omitempty"`
	GoodID     *string `protobuf:"bytes,100,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *string `protobuf:"bytes,110,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *UpdatePurchaseAmountSettingRequest) Reset() {
	*x = UpdatePurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePurchaseAmountSettingRequest) ProtoMessage() {}

func (x *UpdatePurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdatePurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePurchaseAmountSettingRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetPercent() string {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *UpdatePurchaseAmountSettingRequest) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *UpdatePurchaseAmountSettingRequest) GetBadgeLarge() string {
	if x != nil && x.BadgeLarge != nil {
		return *x.BadgeLarge
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetBadgeSmall() string {
	if x != nil && x.BadgeSmall != nil {
		return *x.BadgeSmall
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *UpdatePurchaseAmountSettingRequest) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

type UpdatePurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePurchaseAmountSettingResponse) Reset() {
	*x = UpdatePurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePurchaseAmountSettingResponse) ProtoMessage() {}

func (x *UpdatePurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdatePurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppPurchaseAmountSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string  `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	UserID      *string `protobuf:"bytes,20,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Title       *string `protobuf:"bytes,30,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Amount      *string `protobuf:"bytes,40,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	Percent     *string `protobuf:"bytes,50,opt,name=Percent,proto3,oneof" json:"Percent,omitempty"`
	StartAt     *uint32 `protobuf:"varint,60,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt       *uint32 `protobuf:"varint,70,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
	BadgeLarge  *string `protobuf:"bytes,80,opt,name=BadgeLarge,proto3,oneof" json:"BadgeLarge,omitempty"`
	BadgeSmall  *string `protobuf:"bytes,90,opt,name=BadgeSmall,proto3,oneof" json:"BadgeSmall,omitempty"`
	GoodID      *string `protobuf:"bytes,100,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID  *string `protobuf:"bytes,110,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *UpdateAppPurchaseAmountSettingRequest) Reset() {
	*x = UpdateAppPurchaseAmountSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppPurchaseAmountSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppPurchaseAmountSettingRequest) ProtoMessage() {}

func (x *UpdateAppPurchaseAmountSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppPurchaseAmountSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppPurchaseAmountSettingRequest) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetPercent() string {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetBadgeLarge() string {
	if x != nil && x.BadgeLarge != nil {
		return *x.BadgeLarge
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetBadgeSmall() string {
	if x != nil && x.BadgeSmall != nil {
		return *x.BadgeSmall
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *UpdateAppPurchaseAmountSettingRequest) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

type UpdateAppPurchaseAmountSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PurchaseAmountSetting `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppPurchaseAmountSettingResponse) Reset() {
	*x = UpdateAppPurchaseAmountSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppPurchaseAmountSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppPurchaseAmountSettingResponse) ProtoMessage() {}

func (x *UpdateAppPurchaseAmountSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppPurchaseAmountSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppPurchaseAmountSettingResponse) Descriptor() ([]byte, []int) {
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAppPurchaseAmountSettingResponse) GetInfo() *PurchaseAmountSetting {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto protoreflect.FileDescriptor

var file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc = []byte{
	0x0a, 0x4d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x31, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x05, 0x0a, 0x15, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12,
	0x15, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c,
	0x61, 0x72, 0x67, 0x65, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x12, 0x1b, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xaa, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0xb4, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x1b, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xbe, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x08, 0x43, 0x6f, 0x69,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e,
	0x56, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e,
	0x56, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe6,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf0, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x75, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc2, 0x02, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64,
	0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72,
	0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x48, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xd1, 0x02, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xee, 0x03,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x04, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x05,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x6e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x4c, 0x61, 0x72, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x83,
	0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfd, 0x03, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x05, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xfe, 0x0d,
	0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xf3, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12,
	0xf1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x53, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x54, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xfe, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x56, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x57, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69,
	0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0xf9, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a,
	0x12, 0x86, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x59, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xf9, 0x01, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x55, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x56, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x58, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x32, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x59, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x32, 0x2e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x42, 0x54,
	0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65,
	0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescOnce sync.Once
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData = file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc
)

func file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescGZIP() []byte {
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescOnce.Do(func() {
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData)
	})
	return file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDescData
}

var file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes = []interface{}{
	(*PurchaseAmountSetting)(nil),                  // 0: inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	(*GetAppPurchaseAmountSettingRequest)(nil),     // 1: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingRequest
	(*GetAppPurchaseAmountSettingResponse)(nil),    // 2: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse
	(*GetPurchaseAmountSettingsRequest)(nil),       // 3: inspire.gateway.inspire2.purchaseamountsetting.v1.GetPurchaseAmountSettingsRequest
	(*GetPurchaseAmountSettingsResponse)(nil),      // 4: inspire.gateway.inspire2.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse
	(*GetAppPurchaseAmountSettingsRequest)(nil),    // 5: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingsRequest
	(*GetAppPurchaseAmountSettingsResponse)(nil),   // 6: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse
	(*CreatePurchaseAmountSettingRequest)(nil),     // 7: inspire.gateway.inspire2.purchaseamountsetting.v1.CreatePurchaseAmountSettingRequest
	(*CreatePurchaseAmountSettingResponse)(nil),    // 8: inspire.gateway.inspire2.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse
	(*CreateAppPurchaseAmountSettingRequest)(nil),  // 9: inspire.gateway.inspire2.purchaseamountsetting.v1.CreateAppPurchaseAmountSettingRequest
	(*CreateAppPurchaseAmountSettingResponse)(nil), // 10: inspire.gateway.inspire2.purchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse
	(*UpdatePurchaseAmountSettingRequest)(nil),     // 11: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdatePurchaseAmountSettingRequest
	(*UpdatePurchaseAmountSettingResponse)(nil),    // 12: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse
	(*UpdateAppPurchaseAmountSettingRequest)(nil),  // 13: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdateAppPurchaseAmountSettingRequest
	(*UpdateAppPurchaseAmountSettingResponse)(nil), // 14: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse
}
var file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs = []int32{
	0,  // 0: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse.Info:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 1: inspire.gateway.inspire2.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse.Infos:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 2: inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse.Infos:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 3: inspire.gateway.inspire2.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse.Info:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 4: inspire.gateway.inspire2.purchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse.Info:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 5: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse.Info:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	0,  // 6: inspire.gateway.inspire2.purchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse.Info:type_name -> inspire.gateway.inspire2.purchaseamountsetting.v1.PurchaseAmountSetting
	1,  // 7: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetPurchaseAmountSetting:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingRequest
	3,  // 8: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetPurchaseAmountSettings:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetPurchaseAmountSettingsRequest
	5,  // 9: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetAppPurchaseAmountSettings:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingsRequest
	7,  // 10: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.CreatePurchaseAmountSetting:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.CreatePurchaseAmountSettingRequest
	9,  // 11: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.CreateAppPurchaseAmountSetting:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.CreateAppPurchaseAmountSettingRequest
	11, // 12: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.UpdatePurchaseAmountSetting:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.UpdatePurchaseAmountSettingRequest
	13, // 13: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.UpdateAppPurchaseAmountSetting:input_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.UpdateAppPurchaseAmountSettingRequest
	2,  // 14: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetPurchaseAmountSetting:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingResponse
	4,  // 15: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetPurchaseAmountSettings:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetPurchaseAmountSettingsResponse
	6,  // 16: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.GetAppPurchaseAmountSettings:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.GetAppPurchaseAmountSettingsResponse
	8,  // 17: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.CreatePurchaseAmountSetting:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.CreatePurchaseAmountSettingResponse
	10, // 18: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.CreateAppPurchaseAmountSetting:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.CreateAppPurchaseAmountSettingResponse
	12, // 19: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.UpdatePurchaseAmountSetting:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.UpdatePurchaseAmountSettingResponse
	14, // 20: inspire.gateway.inspire2.purchaseamountsetting.v1.Gateway.UpdateAppPurchaseAmountSetting:output_type -> inspire.gateway.inspire2.purchaseamountsetting.v1.UpdateAppPurchaseAmountSettingResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() {
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_init()
}
func file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_init() {
	if File_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseAmountSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppPurchaseAmountSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppPurchaseAmountSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppPurchaseAmountSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes,
		DependencyIndexes: file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs,
		MessageInfos:      file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_msgTypes,
	}.Build()
	File_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto = out.File
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_rawDesc = nil
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_goTypes = nil
	file_npool_inspire_gw_v1_inspire_purchaseamountsetting_purchaseamountsetting_proto_depIdxs = nil
}
