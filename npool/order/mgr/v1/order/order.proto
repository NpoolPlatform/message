syntax = "proto3";

package order.manager.order.v1;

option go_package = "github.com/NpoolPlatform/message/npool/order/mgr/v1/order";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateOrder     (CreateOrderRequest)     returns (CreateOrderResponse)     {}
    rpc CreateOrders    (CreateOrdersRequest)    returns (CreateOrdersResponse)    {}
    rpc UpdateOrder     (UpdateOrderRequest)     returns (UpdateOrderResponse)     {}
    rpc GetOrder        (GetOrderRequest)        returns (GetOrderResponse)        {}
    rpc GetOrderOnly    (GetOrderOnlyRequest)    returns (GetOrderOnlyResponse)    {}
    rpc GetOrders       (GetOrdersRequest)       returns (GetOrdersResponse)       {}
    rpc ExistOrder      (ExistOrderRequest)      returns (ExistOrderResponse)      {}
    rpc ExistOrderConds (ExistOrderCondsRequest) returns (ExistOrderCondsResponse) {}
    rpc CountOrders     (CountOrdersRequest)     returns (CountOrdersResponse)     {}
    rpc DeleteOrder     (DeleteOrderRequest)     returns (DeleteOrderResponse)     {}
}

enum OrderType {
    DefaultOrderType = 0;
    Normal           = 10;
    Offline          = 20;
    Airdrop          = 30;
}

enum OrderState {
    DefaultState      = 0;

    // Common state
    WaitPayment       = 10;
    Paid              = 20;
    PaymentTimeout    = 30;
    // User set canceled
    UserCanceled      = 31;
    // Platform confirm canceled
    Canceled          = 40;

    // Cyclation order state
    InService         = 50;
    Expired           = 60;

    // Delivery order state
}

message OrderReq {
    optional string     ID                      = 10;
    optional string     GoodID                  = 20;
    optional string     AppID                   = 30;
    optional string     UserID                  = 40;
    optional string     ParentOrderID           = 50;
    optional bool       PayWithParent           = 60;
    optional uint32     Units                   = 70;
    optional string     PromotionID             = 80;
    optional string     DiscountCouponID        = 90;
    optional string     UserSpecialReductionID  = 100;
    optional uint32     StartAt                 = 110;
    optional string     CouponID                = 120; 
    optional OrderType  Type                    = 130;
    optional OrderState State                   = 150;
    optional uint32     CreatedAt               = 140;
}

message Order {
    string     ID                      = 10;
    string     GoodID                  = 20;
    string     AppID                   = 30;
    string     UserID                  = 40;
    string     ParentOrderID           = 50;
    bool       PayWithParent           = 60;
    uint32     Units                   = 70;
    string     PromotionID             = 80;
    string     DiscountCouponID        = 90;
    string     UserSpecialReductionID  = 100;
    uint32     StartAt                 = 110;
    uint32     EndAt                   = 120;
    string     CouponID                = 130;
    OrderType  Type                    = 140;
    OrderState State                   = 150;
    uint32     CreatedAt               = 160;
    uint32     UpdatedAt               = 170;
    uint32     DeletedAt               = 180;
}

message Conds {
    optional npool.v1.StringVal ID      = 10;
    optional npool.v1.StringVal GoodID  = 20;
    optional npool.v1.StringVal AppID   = 30;
    optional npool.v1.StringVal UserID  = 40;
    optional npool.v1.Uint32Val Type    = 50;
    optional npool.v1.Uint32Val State   = 60;
}


message CreateOrderRequest {
    OrderReq Info = 10;
}

message CreateOrderResponse {
    Order Info = 10;
}

message CreateOrdersRequest {
    repeated OrderReq Infos = 10;
}

message CreateOrdersResponse {
    repeated Order Infos = 10;
}

message UpdateOrderRequest {
    OrderReq Info = 10;
}

message UpdateOrderResponse {
    Order Info = 10;
}

message GetOrderRequest {
    string ID = 10;
}

message GetOrderResponse {
    Order Info = 10;
}

message GetOrdersRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetOrdersResponse {
    repeated Order Infos = 10;
    uint32        Total = 20;
}

message GetOrderOnlyRequest {
    Conds Conds = 10;
}

message GetOrderOnlyResponse {
    Order Info = 10;
}

message ExistOrderRequest {
    string ID = 10;
}

message ExistOrderResponse {
    bool Info = 10;
}

message ExistOrderCondsRequest {
    Conds Conds = 10;
}

message ExistOrderCondsResponse {
    bool Info = 10;
}

message CountOrdersRequest {
    Conds Conds = 10;
}

message CountOrdersResponse {
    uint32 Info = 10;
}

message DeleteOrderRequest {
    string ID = 10;
}

message DeleteOrderResponse {
    Order Info = 10;
}
