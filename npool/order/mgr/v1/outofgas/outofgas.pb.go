// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/order/mgr/v1/outofgas/outofgas.proto

package outofgas

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OutOfGasReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	OrderID   *string `protobuf:"bytes,20,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	Start     *uint32 `protobuf:"varint,30,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
	End       *uint32 `protobuf:"varint,40,opt,name=End,proto3,oneof" json:"End,omitempty"`
	CreatedAt *uint32 `protobuf:"varint,50,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
}

func (x *OutOfGasReq) Reset() {
	*x = OutOfGasReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutOfGasReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutOfGasReq) ProtoMessage() {}

func (x *OutOfGasReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutOfGasReq.ProtoReflect.Descriptor instead.
func (*OutOfGasReq) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{0}
}

func (x *OutOfGasReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *OutOfGasReq) GetOrderID() string {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return ""
}

func (x *OutOfGasReq) GetStart() uint32 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *OutOfGasReq) GetEnd() uint32 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *OutOfGasReq) GetCreatedAt() uint32 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

type OutOfGas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	OrderID   string `protobuf:"bytes,20,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Start     uint32 `protobuf:"varint,30,opt,name=Start,proto3" json:"Start,omitempty"`
	End       uint32 `protobuf:"varint,40,opt,name=End,proto3" json:"End,omitempty"`
	CreatedAt uint32 `protobuf:"varint,50,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt uint32 `protobuf:"varint,60,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt uint32 `protobuf:"varint,70,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *OutOfGas) Reset() {
	*x = OutOfGas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutOfGas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutOfGas) ProtoMessage() {}

func (x *OutOfGas) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutOfGas.ProtoReflect.Descriptor instead.
func (*OutOfGas) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{1}
}

func (x *OutOfGas) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *OutOfGas) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *OutOfGas) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *OutOfGas) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *OutOfGas) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OutOfGas) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *OutOfGas) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	OrderID *npool.StringVal `protobuf:"bytes,20,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	Start   *npool.Uint32Val `protobuf:"bytes,30,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
	End     *npool.Uint32Val `protobuf:"bytes,40,opt,name=End,proto3,oneof" json:"End,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetOrderID() *npool.StringVal {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *Conds) GetStart() *npool.Uint32Val {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Conds) GetEnd() *npool.Uint32Val {
	if x != nil {
		return x.End
	}
	return nil
}

type CreateOutOfGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGasReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateOutOfGasRequest) Reset() {
	*x = CreateOutOfGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfGasRequest) ProtoMessage() {}

func (x *CreateOutOfGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfGasRequest.ProtoReflect.Descriptor instead.
func (*CreateOutOfGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOutOfGasRequest) GetInfo() *OutOfGasReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateOutOfGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateOutOfGasResponse) Reset() {
	*x = CreateOutOfGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfGasResponse) ProtoMessage() {}

func (x *CreateOutOfGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfGasResponse.ProtoReflect.Descriptor instead.
func (*CreateOutOfGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOutOfGasResponse) GetInfo() *OutOfGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateOutOfGassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGasReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateOutOfGassRequest) Reset() {
	*x = CreateOutOfGassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfGassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfGassRequest) ProtoMessage() {}

func (x *CreateOutOfGassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfGassRequest.ProtoReflect.Descriptor instead.
func (*CreateOutOfGassRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOutOfGassRequest) GetInfos() []*OutOfGasReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateOutOfGassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateOutOfGassResponse) Reset() {
	*x = CreateOutOfGassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfGassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfGassResponse) ProtoMessage() {}

func (x *CreateOutOfGassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfGassResponse.ProtoReflect.Descriptor instead.
func (*CreateOutOfGassResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOutOfGassResponse) GetInfos() []*OutOfGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateOutOfGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGasReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateOutOfGasRequest) Reset() {
	*x = UpdateOutOfGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOutOfGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOutOfGasRequest) ProtoMessage() {}

func (x *UpdateOutOfGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOutOfGasRequest.ProtoReflect.Descriptor instead.
func (*UpdateOutOfGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateOutOfGasRequest) GetInfo() *OutOfGasReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateOutOfGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateOutOfGasResponse) Reset() {
	*x = UpdateOutOfGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOutOfGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOutOfGasResponse) ProtoMessage() {}

func (x *UpdateOutOfGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOutOfGasResponse.ProtoReflect.Descriptor instead.
func (*UpdateOutOfGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateOutOfGasResponse) GetInfo() *OutOfGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOutOfGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetOutOfGasRequest) Reset() {
	*x = GetOutOfGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasRequest) ProtoMessage() {}

func (x *GetOutOfGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasRequest.ProtoReflect.Descriptor instead.
func (*GetOutOfGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{9}
}

func (x *GetOutOfGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetOutOfGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetOutOfGasResponse) Reset() {
	*x = GetOutOfGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasResponse) ProtoMessage() {}

func (x *GetOutOfGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasResponse.ProtoReflect.Descriptor instead.
func (*GetOutOfGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{10}
}

func (x *GetOutOfGasResponse) GetInfo() *OutOfGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOutOfGassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetOutOfGassRequest) Reset() {
	*x = GetOutOfGassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGassRequest) ProtoMessage() {}

func (x *GetOutOfGassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGassRequest.ProtoReflect.Descriptor instead.
func (*GetOutOfGassRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{11}
}

func (x *GetOutOfGassRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetOutOfGassRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOutOfGassRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOutOfGassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetOutOfGassResponse) Reset() {
	*x = GetOutOfGassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGassResponse) ProtoMessage() {}

func (x *GetOutOfGassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGassResponse.ProtoReflect.Descriptor instead.
func (*GetOutOfGassResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{12}
}

func (x *GetOutOfGassResponse) GetInfos() []*OutOfGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetOutOfGassResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetOutOfGasOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetOutOfGasOnlyRequest) Reset() {
	*x = GetOutOfGasOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasOnlyRequest) ProtoMessage() {}

func (x *GetOutOfGasOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetOutOfGasOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{13}
}

func (x *GetOutOfGasOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetOutOfGasOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetOutOfGasOnlyResponse) Reset() {
	*x = GetOutOfGasOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasOnlyResponse) ProtoMessage() {}

func (x *GetOutOfGasOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetOutOfGasOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{14}
}

func (x *GetOutOfGasOnlyResponse) GetInfo() *OutOfGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistOutOfGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistOutOfGasRequest) Reset() {
	*x = ExistOutOfGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistOutOfGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistOutOfGasRequest) ProtoMessage() {}

func (x *ExistOutOfGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistOutOfGasRequest.ProtoReflect.Descriptor instead.
func (*ExistOutOfGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{15}
}

func (x *ExistOutOfGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistOutOfGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistOutOfGasResponse) Reset() {
	*x = ExistOutOfGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistOutOfGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistOutOfGasResponse) ProtoMessage() {}

func (x *ExistOutOfGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistOutOfGasResponse.ProtoReflect.Descriptor instead.
func (*ExistOutOfGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{16}
}

func (x *ExistOutOfGasResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistOutOfGasCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistOutOfGasCondsRequest) Reset() {
	*x = ExistOutOfGasCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistOutOfGasCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistOutOfGasCondsRequest) ProtoMessage() {}

func (x *ExistOutOfGasCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistOutOfGasCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistOutOfGasCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{17}
}

func (x *ExistOutOfGasCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistOutOfGasCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistOutOfGasCondsResponse) Reset() {
	*x = ExistOutOfGasCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistOutOfGasCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistOutOfGasCondsResponse) ProtoMessage() {}

func (x *ExistOutOfGasCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistOutOfGasCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistOutOfGasCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{18}
}

func (x *ExistOutOfGasCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountOutOfGassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountOutOfGassRequest) Reset() {
	*x = CountOutOfGassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountOutOfGassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOutOfGassRequest) ProtoMessage() {}

func (x *CountOutOfGassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOutOfGassRequest.ProtoReflect.Descriptor instead.
func (*CountOutOfGassRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{19}
}

func (x *CountOutOfGassRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountOutOfGassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountOutOfGassResponse) Reset() {
	*x = CountOutOfGassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountOutOfGassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOutOfGassResponse) ProtoMessage() {}

func (x *CountOutOfGassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOutOfGassResponse.ProtoReflect.Descriptor instead.
func (*CountOutOfGassResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{20}
}

func (x *CountOutOfGassResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteOutOfGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteOutOfGasRequest) Reset() {
	*x = DeleteOutOfGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOutOfGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOutOfGasRequest) ProtoMessage() {}

func (x *DeleteOutOfGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOutOfGasRequest.ProtoReflect.Descriptor instead.
func (*DeleteOutOfGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteOutOfGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteOutOfGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OutOfGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteOutOfGasResponse) Reset() {
	*x = DeleteOutOfGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOutOfGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOutOfGasResponse) ProtoMessage() {}

func (x *DeleteOutOfGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOutOfGasResponse.ProtoReflect.Descriptor instead.
func (*DeleteOutOfGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteOutOfGasResponse) GetInfo() *OutOfGas {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_mgr_v1_outofgas_outofgas_proto protoreflect.FileDescriptor

var file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2f, 0x6f, 0x75,
	0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f,
	0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x4f,
	0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x04, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x45, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x45,
	0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe6, 0x01, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x32, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x45, 0x6e, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x54, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f,
	0x66, 0x47, 0x61, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x51, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f,
	0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66,
	0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75,
	0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66,
	0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2b, 0x0a,
	0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x19, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x30, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66,
	0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc4, 0x09, 0x0a,
	0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66,
	0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66,
	0x47, 0x61, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x12,
	0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x12, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61,
	0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f,
	0x66, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61,
	0x73, 0x73, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x12,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x12, 0x30, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f,
	0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66,
	0x67, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescOnce sync.Once
	file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescData = file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDesc
)

func file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescGZIP() []byte {
	file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescOnce.Do(func() {
		file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescData)
	})
	return file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDescData
}

var file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_order_mgr_v1_outofgas_outofgas_proto_goTypes = []interface{}{
	(*OutOfGasReq)(nil),                // 0: order.manager.outofgas.v1.OutOfGasReq
	(*OutOfGas)(nil),                   // 1: order.manager.outofgas.v1.OutOfGas
	(*Conds)(nil),                      // 2: order.manager.outofgas.v1.Conds
	(*CreateOutOfGasRequest)(nil),      // 3: order.manager.outofgas.v1.CreateOutOfGasRequest
	(*CreateOutOfGasResponse)(nil),     // 4: order.manager.outofgas.v1.CreateOutOfGasResponse
	(*CreateOutOfGassRequest)(nil),     // 5: order.manager.outofgas.v1.CreateOutOfGassRequest
	(*CreateOutOfGassResponse)(nil),    // 6: order.manager.outofgas.v1.CreateOutOfGassResponse
	(*UpdateOutOfGasRequest)(nil),      // 7: order.manager.outofgas.v1.UpdateOutOfGasRequest
	(*UpdateOutOfGasResponse)(nil),     // 8: order.manager.outofgas.v1.UpdateOutOfGasResponse
	(*GetOutOfGasRequest)(nil),         // 9: order.manager.outofgas.v1.GetOutOfGasRequest
	(*GetOutOfGasResponse)(nil),        // 10: order.manager.outofgas.v1.GetOutOfGasResponse
	(*GetOutOfGassRequest)(nil),        // 11: order.manager.outofgas.v1.GetOutOfGassRequest
	(*GetOutOfGassResponse)(nil),       // 12: order.manager.outofgas.v1.GetOutOfGassResponse
	(*GetOutOfGasOnlyRequest)(nil),     // 13: order.manager.outofgas.v1.GetOutOfGasOnlyRequest
	(*GetOutOfGasOnlyResponse)(nil),    // 14: order.manager.outofgas.v1.GetOutOfGasOnlyResponse
	(*ExistOutOfGasRequest)(nil),       // 15: order.manager.outofgas.v1.ExistOutOfGasRequest
	(*ExistOutOfGasResponse)(nil),      // 16: order.manager.outofgas.v1.ExistOutOfGasResponse
	(*ExistOutOfGasCondsRequest)(nil),  // 17: order.manager.outofgas.v1.ExistOutOfGasCondsRequest
	(*ExistOutOfGasCondsResponse)(nil), // 18: order.manager.outofgas.v1.ExistOutOfGasCondsResponse
	(*CountOutOfGassRequest)(nil),      // 19: order.manager.outofgas.v1.CountOutOfGassRequest
	(*CountOutOfGassResponse)(nil),     // 20: order.manager.outofgas.v1.CountOutOfGassResponse
	(*DeleteOutOfGasRequest)(nil),      // 21: order.manager.outofgas.v1.DeleteOutOfGasRequest
	(*DeleteOutOfGasResponse)(nil),     // 22: order.manager.outofgas.v1.DeleteOutOfGasResponse
	(*npool.StringVal)(nil),            // 23: npool.v1.StringVal
	(*npool.Uint32Val)(nil),            // 24: npool.v1.Uint32Val
}
var file_npool_order_mgr_v1_outofgas_outofgas_proto_depIdxs = []int32{
	23, // 0: order.manager.outofgas.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: order.manager.outofgas.v1.Conds.OrderID:type_name -> npool.v1.StringVal
	24, // 2: order.manager.outofgas.v1.Conds.Start:type_name -> npool.v1.Uint32Val
	24, // 3: order.manager.outofgas.v1.Conds.End:type_name -> npool.v1.Uint32Val
	0,  // 4: order.manager.outofgas.v1.CreateOutOfGasRequest.Info:type_name -> order.manager.outofgas.v1.OutOfGasReq
	1,  // 5: order.manager.outofgas.v1.CreateOutOfGasResponse.Info:type_name -> order.manager.outofgas.v1.OutOfGas
	0,  // 6: order.manager.outofgas.v1.CreateOutOfGassRequest.Infos:type_name -> order.manager.outofgas.v1.OutOfGasReq
	1,  // 7: order.manager.outofgas.v1.CreateOutOfGassResponse.Infos:type_name -> order.manager.outofgas.v1.OutOfGas
	0,  // 8: order.manager.outofgas.v1.UpdateOutOfGasRequest.Info:type_name -> order.manager.outofgas.v1.OutOfGasReq
	1,  // 9: order.manager.outofgas.v1.UpdateOutOfGasResponse.Info:type_name -> order.manager.outofgas.v1.OutOfGas
	1,  // 10: order.manager.outofgas.v1.GetOutOfGasResponse.Info:type_name -> order.manager.outofgas.v1.OutOfGas
	2,  // 11: order.manager.outofgas.v1.GetOutOfGassRequest.Conds:type_name -> order.manager.outofgas.v1.Conds
	1,  // 12: order.manager.outofgas.v1.GetOutOfGassResponse.Infos:type_name -> order.manager.outofgas.v1.OutOfGas
	2,  // 13: order.manager.outofgas.v1.GetOutOfGasOnlyRequest.Conds:type_name -> order.manager.outofgas.v1.Conds
	1,  // 14: order.manager.outofgas.v1.GetOutOfGasOnlyResponse.Info:type_name -> order.manager.outofgas.v1.OutOfGas
	2,  // 15: order.manager.outofgas.v1.ExistOutOfGasCondsRequest.Conds:type_name -> order.manager.outofgas.v1.Conds
	2,  // 16: order.manager.outofgas.v1.CountOutOfGassRequest.Conds:type_name -> order.manager.outofgas.v1.Conds
	1,  // 17: order.manager.outofgas.v1.DeleteOutOfGasResponse.Info:type_name -> order.manager.outofgas.v1.OutOfGas
	3,  // 18: order.manager.outofgas.v1.Manager.CreateOutOfGas:input_type -> order.manager.outofgas.v1.CreateOutOfGasRequest
	5,  // 19: order.manager.outofgas.v1.Manager.CreateOutOfGass:input_type -> order.manager.outofgas.v1.CreateOutOfGassRequest
	7,  // 20: order.manager.outofgas.v1.Manager.UpdateOutOfGas:input_type -> order.manager.outofgas.v1.UpdateOutOfGasRequest
	9,  // 21: order.manager.outofgas.v1.Manager.GetOutOfGas:input_type -> order.manager.outofgas.v1.GetOutOfGasRequest
	13, // 22: order.manager.outofgas.v1.Manager.GetOutOfGasOnly:input_type -> order.manager.outofgas.v1.GetOutOfGasOnlyRequest
	11, // 23: order.manager.outofgas.v1.Manager.GetOutOfGass:input_type -> order.manager.outofgas.v1.GetOutOfGassRequest
	15, // 24: order.manager.outofgas.v1.Manager.ExistOutOfGas:input_type -> order.manager.outofgas.v1.ExistOutOfGasRequest
	17, // 25: order.manager.outofgas.v1.Manager.ExistOutOfGasConds:input_type -> order.manager.outofgas.v1.ExistOutOfGasCondsRequest
	19, // 26: order.manager.outofgas.v1.Manager.CountOutOfGass:input_type -> order.manager.outofgas.v1.CountOutOfGassRequest
	21, // 27: order.manager.outofgas.v1.Manager.DeleteOutOfGas:input_type -> order.manager.outofgas.v1.DeleteOutOfGasRequest
	4,  // 28: order.manager.outofgas.v1.Manager.CreateOutOfGas:output_type -> order.manager.outofgas.v1.CreateOutOfGasResponse
	6,  // 29: order.manager.outofgas.v1.Manager.CreateOutOfGass:output_type -> order.manager.outofgas.v1.CreateOutOfGassResponse
	8,  // 30: order.manager.outofgas.v1.Manager.UpdateOutOfGas:output_type -> order.manager.outofgas.v1.UpdateOutOfGasResponse
	10, // 31: order.manager.outofgas.v1.Manager.GetOutOfGas:output_type -> order.manager.outofgas.v1.GetOutOfGasResponse
	14, // 32: order.manager.outofgas.v1.Manager.GetOutOfGasOnly:output_type -> order.manager.outofgas.v1.GetOutOfGasOnlyResponse
	12, // 33: order.manager.outofgas.v1.Manager.GetOutOfGass:output_type -> order.manager.outofgas.v1.GetOutOfGassResponse
	16, // 34: order.manager.outofgas.v1.Manager.ExistOutOfGas:output_type -> order.manager.outofgas.v1.ExistOutOfGasResponse
	18, // 35: order.manager.outofgas.v1.Manager.ExistOutOfGasConds:output_type -> order.manager.outofgas.v1.ExistOutOfGasCondsResponse
	20, // 36: order.manager.outofgas.v1.Manager.CountOutOfGass:output_type -> order.manager.outofgas.v1.CountOutOfGassResponse
	22, // 37: order.manager.outofgas.v1.Manager.DeleteOutOfGas:output_type -> order.manager.outofgas.v1.DeleteOutOfGasResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_npool_order_mgr_v1_outofgas_outofgas_proto_init() }
func file_npool_order_mgr_v1_outofgas_outofgas_proto_init() {
	if File_npool_order_mgr_v1_outofgas_outofgas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutOfGasReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutOfGas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfGassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfGassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOutOfGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOutOfGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistOutOfGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistOutOfGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistOutOfGasCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistOutOfGasCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountOutOfGassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountOutOfGassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOutOfGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOutOfGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_mgr_v1_outofgas_outofgas_proto_goTypes,
		DependencyIndexes: file_npool_order_mgr_v1_outofgas_outofgas_proto_depIdxs,
		MessageInfos:      file_npool_order_mgr_v1_outofgas_outofgas_proto_msgTypes,
	}.Build()
	File_npool_order_mgr_v1_outofgas_outofgas_proto = out.File
	file_npool_order_mgr_v1_outofgas_outofgas_proto_rawDesc = nil
	file_npool_order_mgr_v1_outofgas_outofgas_proto_goTypes = nil
	file_npool_order_mgr_v1_outofgas_outofgas_proto_depIdxs = nil
}
