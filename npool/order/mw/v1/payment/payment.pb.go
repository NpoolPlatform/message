// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/order/mw/v1/payment/payment.proto

package payment

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/order/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   *string          `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID                *string          `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID               *string          `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	GoodID               *string          `protobuf:"bytes,40,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	OrderID              *string          `protobuf:"bytes,50,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	AccountID            *string          `protobuf:"bytes,60,opt,name=AccountID,proto3,oneof" json:"AccountID,omitempty"`
	StartAmount          *string          `protobuf:"bytes,70,opt,name=StartAmount,proto3,oneof" json:"StartAmount,omitempty"`
	Amount               *string          `protobuf:"bytes,80,opt,name=Amount,proto3,oneof" json:"Amount,omitempty"`
	PayWithBalanceAmount *string          `protobuf:"bytes,90,opt,name=PayWithBalanceAmount,proto3,oneof" json:"PayWithBalanceAmount,omitempty"`
	FinishAmount         *string          `protobuf:"bytes,100,opt,name=FinishAmount,proto3,oneof" json:"FinishAmount,omitempty"`
	CoinUsdCurrency      *string          `protobuf:"bytes,110,opt,name=CoinUsdCurrency,proto3,oneof" json:"CoinUsdCurrency,omitempty"`
	LocalCoinUsdCurrency *string          `protobuf:"bytes,120,opt,name=LocalCoinUsdCurrency,proto3,oneof" json:"LocalCoinUsdCurrency,omitempty"`
	LiveCoinUsdCurrency  *string          `protobuf:"bytes,130,opt,name=LiveCoinUsdCurrency,proto3,oneof" json:"LiveCoinUsdCurrency,omitempty"`
	CoinInfoID           *string          `protobuf:"bytes,140,opt,name=CoinInfoID,proto3,oneof" json:"CoinInfoID,omitempty"`
	State                *v1.PaymentState `protobuf:"varint,150,opt,name=State,proto3,enum=basetypes.order.v1.PaymentState,oneof" json:"State,omitempty"`
	ChainTransactionID   *string          `protobuf:"bytes,160,opt,name=ChainTransactionID,proto3,oneof" json:"ChainTransactionID,omitempty"`
	UserSetPaid          *bool            `protobuf:"varint,170,opt,name=UserSetPaid,proto3,oneof" json:"UserSetPaid,omitempty"`
	UserSetCanceled      *bool            `protobuf:"varint,180,opt,name=UserSetCanceled,proto3,oneof" json:"UserSetCanceled,omitempty"`
	FakePayment          *bool            `protobuf:"varint,190,opt,name=FakePayment,proto3,oneof" json:"FakePayment,omitempty"`
}

func (x *PaymentReq) Reset() {
	*x = PaymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentReq) ProtoMessage() {}

func (x *PaymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentReq.ProtoReflect.Descriptor instead.
func (*PaymentReq) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *PaymentReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *PaymentReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *PaymentReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *PaymentReq) GetOrderID() string {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return ""
}

func (x *PaymentReq) GetAccountID() string {
	if x != nil && x.AccountID != nil {
		return *x.AccountID
	}
	return ""
}

func (x *PaymentReq) GetStartAmount() string {
	if x != nil && x.StartAmount != nil {
		return *x.StartAmount
	}
	return ""
}

func (x *PaymentReq) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *PaymentReq) GetPayWithBalanceAmount() string {
	if x != nil && x.PayWithBalanceAmount != nil {
		return *x.PayWithBalanceAmount
	}
	return ""
}

func (x *PaymentReq) GetFinishAmount() string {
	if x != nil && x.FinishAmount != nil {
		return *x.FinishAmount
	}
	return ""
}

func (x *PaymentReq) GetCoinUsdCurrency() string {
	if x != nil && x.CoinUsdCurrency != nil {
		return *x.CoinUsdCurrency
	}
	return ""
}

func (x *PaymentReq) GetLocalCoinUsdCurrency() string {
	if x != nil && x.LocalCoinUsdCurrency != nil {
		return *x.LocalCoinUsdCurrency
	}
	return ""
}

func (x *PaymentReq) GetLiveCoinUsdCurrency() string {
	if x != nil && x.LiveCoinUsdCurrency != nil {
		return *x.LiveCoinUsdCurrency
	}
	return ""
}

func (x *PaymentReq) GetCoinInfoID() string {
	if x != nil && x.CoinInfoID != nil {
		return *x.CoinInfoID
	}
	return ""
}

func (x *PaymentReq) GetState() v1.PaymentState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return v1.PaymentState(0)
}

func (x *PaymentReq) GetChainTransactionID() string {
	if x != nil && x.ChainTransactionID != nil {
		return *x.ChainTransactionID
	}
	return ""
}

func (x *PaymentReq) GetUserSetPaid() bool {
	if x != nil && x.UserSetPaid != nil {
		return *x.UserSetPaid
	}
	return false
}

func (x *PaymentReq) GetUserSetCanceled() bool {
	if x != nil && x.UserSetCanceled != nil {
		return *x.UserSetCanceled
	}
	return false
}

func (x *PaymentReq) GetFakePayment() bool {
	if x != nil && x.FakePayment != nil {
		return *x.FakePayment
	}
	return false
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"user_id"
	UserID string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty" sql:"user_id"`
	// @inject_tag: sql:"good_id"
	GoodID string `protobuf:"bytes,40,opt,name=GoodID,proto3" json:"GoodID,omitempty" sql:"good_id"`
	// @inject_tag: sql:"order_id"
	OrderID string `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty" sql:"order_id"`
	// @inject_tag: sql:"account_id"
	AccountID string `protobuf:"bytes,60,opt,name=AccountID,proto3" json:"AccountID,omitempty" sql:"account_id"`
	// @inject_tag: sql:"start_amount"
	StartAmount string `protobuf:"bytes,70,opt,name=StartAmount,proto3" json:"StartAmount,omitempty" sql:"start_amount"`
	// @inject_tag: sql:"amount"
	Amount string `protobuf:"bytes,80,opt,name=Amount,proto3" json:"Amount,omitempty" sql:"amount"`
	// @inject_tag: sql:"pay_with_balance_amount"
	PayWithBalanceAmount string `protobuf:"bytes,90,opt,name=PayWithBalanceAmount,proto3" json:"PayWithBalanceAmount,omitempty" sql:"pay_with_balance_amount"`
	// @inject_tag: sql:"finish_amount"
	FinishAmount string `protobuf:"bytes,100,opt,name=FinishAmount,proto3" json:"FinishAmount,omitempty" sql:"finish_amount"`
	// @inject_tag: sql:"coin_usd_currency"
	CoinUsdCurrency string `protobuf:"bytes,110,opt,name=CoinUsdCurrency,proto3" json:"CoinUsdCurrency,omitempty" sql:"coin_usd_currency"`
	// @inject_tag: sql:"local_coin_usd_currency"
	LocalCoinUsdCurrency string `protobuf:"bytes,120,opt,name=LocalCoinUsdCurrency,proto3" json:"LocalCoinUsdCurrency,omitempty" sql:"local_coin_usd_currency"`
	// @inject_tag: sql:"live_coin_usd_currency"
	LiveCoinUsdCurrency string `protobuf:"bytes,130,opt,name=LiveCoinUsdCurrency,proto3" json:"LiveCoinUsdCurrency,omitempty" sql:"live_coin_usd_currency"`
	// @inject_tag: sql:"coin_info_id"
	CoinInfoID string `protobuf:"bytes,140,opt,name=CoinInfoID,proto3" json:"CoinInfoID,omitempty" sql:"coin_info_id"`
	// @inject_tag: sql:"state"
	PaymentStateStr string          `protobuf:"bytes,149,opt,name=PaymentStateStr,proto3" json:"PaymentStateStr,omitempty" sql:"state"`
	State           v1.PaymentState `protobuf:"varint,150,opt,name=State,proto3,enum=basetypes.order.v1.PaymentState" json:"State,omitempty"`
	// @inject_tag: sql:"chain_transaction_id"
	ChainTransactionID string `protobuf:"bytes,160,opt,name=ChainTransactionID,proto3" json:"ChainTransactionID,omitempty" sql:"chain_transaction_id"`
	// @inject_tag: sql:"user_set_paid"
	UserSetPaid bool `protobuf:"varint,170,opt,name=UserSetPaid,proto3" json:"UserSetPaid,omitempty" sql:"user_set_paid"`
	// @inject_tag: sql:"user_set_canceled"
	UserSetCanceled bool `protobuf:"varint,180,opt,name=UserSetCanceled,proto3" json:"UserSetCanceled,omitempty" sql:"user_set_canceled"`
	// @inject_tag: sql:"fake_payment"
	FakePayment bool `protobuf:"varint,290,opt,name=FakePayment,proto3" json:"FakePayment,omitempty" sql:"fake_payment"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,200,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,210,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{1}
}

func (x *Payment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Payment) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Payment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Payment) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Payment) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *Payment) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Payment) GetStartAmount() string {
	if x != nil {
		return x.StartAmount
	}
	return ""
}

func (x *Payment) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Payment) GetPayWithBalanceAmount() string {
	if x != nil {
		return x.PayWithBalanceAmount
	}
	return ""
}

func (x *Payment) GetFinishAmount() string {
	if x != nil {
		return x.FinishAmount
	}
	return ""
}

func (x *Payment) GetCoinUsdCurrency() string {
	if x != nil {
		return x.CoinUsdCurrency
	}
	return ""
}

func (x *Payment) GetLocalCoinUsdCurrency() string {
	if x != nil {
		return x.LocalCoinUsdCurrency
	}
	return ""
}

func (x *Payment) GetLiveCoinUsdCurrency() string {
	if x != nil {
		return x.LiveCoinUsdCurrency
	}
	return ""
}

func (x *Payment) GetCoinInfoID() string {
	if x != nil {
		return x.CoinInfoID
	}
	return ""
}

func (x *Payment) GetPaymentStateStr() string {
	if x != nil {
		return x.PaymentStateStr
	}
	return ""
}

func (x *Payment) GetState() v1.PaymentState {
	if x != nil {
		return x.State
	}
	return v1.PaymentState(0)
}

func (x *Payment) GetChainTransactionID() string {
	if x != nil {
		return x.ChainTransactionID
	}
	return ""
}

func (x *Payment) GetUserSetPaid() bool {
	if x != nil {
		return x.UserSetPaid
	}
	return false
}

func (x *Payment) GetUserSetCanceled() bool {
	if x != nil {
		return x.UserSetCanceled
	}
	return false
}

func (x *Payment) GetFakePayment() bool {
	if x != nil {
		return x.FakePayment
	}
	return false
}

func (x *Payment) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Payment) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *v11.StringVal `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      *v11.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     *v11.StringVal `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GoodID     *v11.StringVal `protobuf:"bytes,40,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	OrderID    *v11.StringVal `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	AccountID  *v11.StringVal `protobuf:"bytes,60,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	CoinInfoID *v11.StringVal `protobuf:"bytes,70,opt,name=CoinInfoID,proto3" json:"CoinInfoID,omitempty"`
	State      *v11.Uint32Val `protobuf:"bytes,80,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v11.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *v11.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *v11.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetGoodID() *v11.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

func (x *Conds) GetOrderID() *v11.StringVal {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *Conds) GetAccountID() *v11.StringVal {
	if x != nil {
		return x.AccountID
	}
	return nil
}

func (x *Conds) GetCoinInfoID() *v11.StringVal {
	if x != nil {
		return x.CoinInfoID
	}
	return nil
}

func (x *Conds) GetState() *v11.Uint32Val {
	if x != nil {
		return x.State
	}
	return nil
}

type CreatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PaymentReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePaymentRequest) Reset() {
	*x = CreatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest) ProtoMessage() {}

func (x *CreatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePaymentRequest) GetInfo() *PaymentReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Payment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePaymentResponse) Reset() {
	*x = CreatePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentResponse) ProtoMessage() {}

func (x *CreatePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePaymentResponse) GetInfo() *Payment {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*PaymentReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreatePaymentsRequest) Reset() {
	*x = CreatePaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentsRequest) ProtoMessage() {}

func (x *CreatePaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentsRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePaymentsRequest) GetInfos() []*PaymentReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreatePaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Payment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreatePaymentsResponse) Reset() {
	*x = CreatePaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentsResponse) ProtoMessage() {}

func (x *CreatePaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentsResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePaymentsResponse) GetInfos() []*Payment {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PaymentReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePaymentRequest) Reset() {
	*x = UpdatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRequest) ProtoMessage() {}

func (x *UpdatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePaymentRequest) GetInfo() *PaymentReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Payment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePaymentResponse) Reset() {
	*x = UpdatePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentResponse) ProtoMessage() {}

func (x *UpdatePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePaymentResponse) GetInfo() *Payment {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPaymentRequest) Reset() {
	*x = GetPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentRequest) ProtoMessage() {}

func (x *GetPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{9}
}

func (x *GetPaymentRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Payment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPaymentResponse) Reset() {
	*x = GetPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentResponse) ProtoMessage() {}

func (x *GetPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{10}
}

func (x *GetPaymentResponse) GetInfo() *Payment {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetPaymentsRequest) Reset() {
	*x = GetPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentsRequest) ProtoMessage() {}

func (x *GetPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{11}
}

func (x *GetPaymentsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetPaymentsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPaymentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Payment `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32     `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetPaymentsResponse) Reset() {
	*x = GetPaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentsResponse) ProtoMessage() {}

func (x *GetPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{12}
}

func (x *GetPaymentsResponse) GetInfos() []*Payment {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetPaymentsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPaymentOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetPaymentOnlyRequest) Reset() {
	*x = GetPaymentOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentOnlyRequest) ProtoMessage() {}

func (x *GetPaymentOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{13}
}

func (x *GetPaymentOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetPaymentOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Payment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetPaymentOnlyResponse) Reset() {
	*x = GetPaymentOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentOnlyResponse) ProtoMessage() {}

func (x *GetPaymentOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{14}
}

func (x *GetPaymentOnlyResponse) GetInfo() *Payment {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistPaymentRequest) Reset() {
	*x = ExistPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPaymentRequest) ProtoMessage() {}

func (x *ExistPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPaymentRequest.ProtoReflect.Descriptor instead.
func (*ExistPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{15}
}

func (x *ExistPaymentRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPaymentResponse) Reset() {
	*x = ExistPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPaymentResponse) ProtoMessage() {}

func (x *ExistPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPaymentResponse.ProtoReflect.Descriptor instead.
func (*ExistPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{16}
}

func (x *ExistPaymentResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistPaymentCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistPaymentCondsRequest) Reset() {
	*x = ExistPaymentCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPaymentCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPaymentCondsRequest) ProtoMessage() {}

func (x *ExistPaymentCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPaymentCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistPaymentCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{17}
}

func (x *ExistPaymentCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistPaymentCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistPaymentCondsResponse) Reset() {
	*x = ExistPaymentCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistPaymentCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistPaymentCondsResponse) ProtoMessage() {}

func (x *ExistPaymentCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistPaymentCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistPaymentCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{18}
}

func (x *ExistPaymentCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountPaymentsRequest) Reset() {
	*x = CountPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPaymentsRequest) ProtoMessage() {}

func (x *CountPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPaymentsRequest.ProtoReflect.Descriptor instead.
func (*CountPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{19}
}

func (x *CountPaymentsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountPaymentsResponse) Reset() {
	*x = CountPaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPaymentsResponse) ProtoMessage() {}

func (x *CountPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPaymentsResponse.ProtoReflect.Descriptor instead.
func (*CountPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{20}
}

func (x *CountPaymentsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeletePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PaymentReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeletePaymentRequest) Reset() {
	*x = DeletePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentRequest) ProtoMessage() {}

func (x *DeletePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentRequest.ProtoReflect.Descriptor instead.
func (*DeletePaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{21}
}

func (x *DeletePaymentRequest) GetInfo() *PaymentReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeletePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Payment `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeletePaymentResponse) Reset() {
	*x = DeletePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentResponse) ProtoMessage() {}

func (x *DeletePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_payment_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentResponse.ProtoReflect.Descriptor instead.
func (*DeletePaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePaymentResponse) GetInfo() *Payment {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_mw_v1_payment_payment_proto protoreflect.FileDescriptor

var file_npool_order_mw_v1_payment_payment_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x08, 0x0a,
	0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x14, 0x50, 0x61, 0x79,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0c, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73,
	0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x14, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x82, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55,
	0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x18, 0x8c, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x96, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x0e, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x34, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f,
	0x52, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10, 0x52,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0b, 0x46, 0x61, 0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xbe,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x12, 0x52, 0x0b, 0x46, 0x61, 0x6b, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x55,
	0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x4c,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x46, 0x61, 0x6b, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x9f, 0x06, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61,
	0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74,
	0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x69,
	0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x32, 0x0a, 0x14,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x31, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x73, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x44, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x18, 0x95, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x12,
	0x37, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18,
	0xb4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x46, 0x61, 0x6b, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xa2, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x46,
	0x61, 0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x93, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x35, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x12,
	0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x53,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x54,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x53, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x7c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x52, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x25, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x54, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x14, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x32, 0xd1, 0x09, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12,
	0x78, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x35, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x78, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_mw_v1_payment_payment_proto_rawDescOnce sync.Once
	file_npool_order_mw_v1_payment_payment_proto_rawDescData = file_npool_order_mw_v1_payment_payment_proto_rawDesc
)

func file_npool_order_mw_v1_payment_payment_proto_rawDescGZIP() []byte {
	file_npool_order_mw_v1_payment_payment_proto_rawDescOnce.Do(func() {
		file_npool_order_mw_v1_payment_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_mw_v1_payment_payment_proto_rawDescData)
	})
	return file_npool_order_mw_v1_payment_payment_proto_rawDescData
}

var file_npool_order_mw_v1_payment_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_order_mw_v1_payment_payment_proto_goTypes = []interface{}{
	(*PaymentReq)(nil),                // 0: order.middleware.payment.v1.PaymentReq
	(*Payment)(nil),                   // 1: order.middleware.payment.v1.Payment
	(*Conds)(nil),                     // 2: order.middleware.payment.v1.Conds
	(*CreatePaymentRequest)(nil),      // 3: order.middleware.payment.v1.CreatePaymentRequest
	(*CreatePaymentResponse)(nil),     // 4: order.middleware.payment.v1.CreatePaymentResponse
	(*CreatePaymentsRequest)(nil),     // 5: order.middleware.payment.v1.CreatePaymentsRequest
	(*CreatePaymentsResponse)(nil),    // 6: order.middleware.payment.v1.CreatePaymentsResponse
	(*UpdatePaymentRequest)(nil),      // 7: order.middleware.payment.v1.UpdatePaymentRequest
	(*UpdatePaymentResponse)(nil),     // 8: order.middleware.payment.v1.UpdatePaymentResponse
	(*GetPaymentRequest)(nil),         // 9: order.middleware.payment.v1.GetPaymentRequest
	(*GetPaymentResponse)(nil),        // 10: order.middleware.payment.v1.GetPaymentResponse
	(*GetPaymentsRequest)(nil),        // 11: order.middleware.payment.v1.GetPaymentsRequest
	(*GetPaymentsResponse)(nil),       // 12: order.middleware.payment.v1.GetPaymentsResponse
	(*GetPaymentOnlyRequest)(nil),     // 13: order.middleware.payment.v1.GetPaymentOnlyRequest
	(*GetPaymentOnlyResponse)(nil),    // 14: order.middleware.payment.v1.GetPaymentOnlyResponse
	(*ExistPaymentRequest)(nil),       // 15: order.middleware.payment.v1.ExistPaymentRequest
	(*ExistPaymentResponse)(nil),      // 16: order.middleware.payment.v1.ExistPaymentResponse
	(*ExistPaymentCondsRequest)(nil),  // 17: order.middleware.payment.v1.ExistPaymentCondsRequest
	(*ExistPaymentCondsResponse)(nil), // 18: order.middleware.payment.v1.ExistPaymentCondsResponse
	(*CountPaymentsRequest)(nil),      // 19: order.middleware.payment.v1.CountPaymentsRequest
	(*CountPaymentsResponse)(nil),     // 20: order.middleware.payment.v1.CountPaymentsResponse
	(*DeletePaymentRequest)(nil),      // 21: order.middleware.payment.v1.DeletePaymentRequest
	(*DeletePaymentResponse)(nil),     // 22: order.middleware.payment.v1.DeletePaymentResponse
	(v1.PaymentState)(0),              // 23: basetypes.order.v1.PaymentState
	(*v11.StringVal)(nil),             // 24: basetypes.v1.StringVal
	(*v11.Uint32Val)(nil),             // 25: basetypes.v1.Uint32Val
}
var file_npool_order_mw_v1_payment_payment_proto_depIdxs = []int32{
	23, // 0: order.middleware.payment.v1.PaymentReq.State:type_name -> basetypes.order.v1.PaymentState
	23, // 1: order.middleware.payment.v1.Payment.State:type_name -> basetypes.order.v1.PaymentState
	24, // 2: order.middleware.payment.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	24, // 3: order.middleware.payment.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	24, // 4: order.middleware.payment.v1.Conds.UserID:type_name -> basetypes.v1.StringVal
	24, // 5: order.middleware.payment.v1.Conds.GoodID:type_name -> basetypes.v1.StringVal
	24, // 6: order.middleware.payment.v1.Conds.OrderID:type_name -> basetypes.v1.StringVal
	24, // 7: order.middleware.payment.v1.Conds.AccountID:type_name -> basetypes.v1.StringVal
	24, // 8: order.middleware.payment.v1.Conds.CoinInfoID:type_name -> basetypes.v1.StringVal
	25, // 9: order.middleware.payment.v1.Conds.State:type_name -> basetypes.v1.Uint32Val
	0,  // 10: order.middleware.payment.v1.CreatePaymentRequest.Info:type_name -> order.middleware.payment.v1.PaymentReq
	1,  // 11: order.middleware.payment.v1.CreatePaymentResponse.Info:type_name -> order.middleware.payment.v1.Payment
	0,  // 12: order.middleware.payment.v1.CreatePaymentsRequest.Infos:type_name -> order.middleware.payment.v1.PaymentReq
	1,  // 13: order.middleware.payment.v1.CreatePaymentsResponse.Infos:type_name -> order.middleware.payment.v1.Payment
	0,  // 14: order.middleware.payment.v1.UpdatePaymentRequest.Info:type_name -> order.middleware.payment.v1.PaymentReq
	1,  // 15: order.middleware.payment.v1.UpdatePaymentResponse.Info:type_name -> order.middleware.payment.v1.Payment
	1,  // 16: order.middleware.payment.v1.GetPaymentResponse.Info:type_name -> order.middleware.payment.v1.Payment
	2,  // 17: order.middleware.payment.v1.GetPaymentsRequest.Conds:type_name -> order.middleware.payment.v1.Conds
	1,  // 18: order.middleware.payment.v1.GetPaymentsResponse.Infos:type_name -> order.middleware.payment.v1.Payment
	2,  // 19: order.middleware.payment.v1.GetPaymentOnlyRequest.Conds:type_name -> order.middleware.payment.v1.Conds
	1,  // 20: order.middleware.payment.v1.GetPaymentOnlyResponse.Info:type_name -> order.middleware.payment.v1.Payment
	2,  // 21: order.middleware.payment.v1.ExistPaymentCondsRequest.Conds:type_name -> order.middleware.payment.v1.Conds
	2,  // 22: order.middleware.payment.v1.CountPaymentsRequest.Conds:type_name -> order.middleware.payment.v1.Conds
	0,  // 23: order.middleware.payment.v1.DeletePaymentRequest.Info:type_name -> order.middleware.payment.v1.PaymentReq
	1,  // 24: order.middleware.payment.v1.DeletePaymentResponse.Info:type_name -> order.middleware.payment.v1.Payment
	3,  // 25: order.middleware.payment.v1.Middleware.CreatePayment:input_type -> order.middleware.payment.v1.CreatePaymentRequest
	5,  // 26: order.middleware.payment.v1.Middleware.CreatePayments:input_type -> order.middleware.payment.v1.CreatePaymentsRequest
	7,  // 27: order.middleware.payment.v1.Middleware.UpdatePayment:input_type -> order.middleware.payment.v1.UpdatePaymentRequest
	9,  // 28: order.middleware.payment.v1.Middleware.GetPayment:input_type -> order.middleware.payment.v1.GetPaymentRequest
	13, // 29: order.middleware.payment.v1.Middleware.GetPaymentOnly:input_type -> order.middleware.payment.v1.GetPaymentOnlyRequest
	11, // 30: order.middleware.payment.v1.Middleware.GetPayments:input_type -> order.middleware.payment.v1.GetPaymentsRequest
	15, // 31: order.middleware.payment.v1.Middleware.ExistPayment:input_type -> order.middleware.payment.v1.ExistPaymentRequest
	17, // 32: order.middleware.payment.v1.Middleware.ExistPaymentConds:input_type -> order.middleware.payment.v1.ExistPaymentCondsRequest
	19, // 33: order.middleware.payment.v1.Middleware.CountPayments:input_type -> order.middleware.payment.v1.CountPaymentsRequest
	21, // 34: order.middleware.payment.v1.Middleware.DeletePayment:input_type -> order.middleware.payment.v1.DeletePaymentRequest
	4,  // 35: order.middleware.payment.v1.Middleware.CreatePayment:output_type -> order.middleware.payment.v1.CreatePaymentResponse
	6,  // 36: order.middleware.payment.v1.Middleware.CreatePayments:output_type -> order.middleware.payment.v1.CreatePaymentsResponse
	8,  // 37: order.middleware.payment.v1.Middleware.UpdatePayment:output_type -> order.middleware.payment.v1.UpdatePaymentResponse
	10, // 38: order.middleware.payment.v1.Middleware.GetPayment:output_type -> order.middleware.payment.v1.GetPaymentResponse
	14, // 39: order.middleware.payment.v1.Middleware.GetPaymentOnly:output_type -> order.middleware.payment.v1.GetPaymentOnlyResponse
	12, // 40: order.middleware.payment.v1.Middleware.GetPayments:output_type -> order.middleware.payment.v1.GetPaymentsResponse
	16, // 41: order.middleware.payment.v1.Middleware.ExistPayment:output_type -> order.middleware.payment.v1.ExistPaymentResponse
	18, // 42: order.middleware.payment.v1.Middleware.ExistPaymentConds:output_type -> order.middleware.payment.v1.ExistPaymentCondsResponse
	20, // 43: order.middleware.payment.v1.Middleware.CountPayments:output_type -> order.middleware.payment.v1.CountPaymentsResponse
	22, // 44: order.middleware.payment.v1.Middleware.DeletePayment:output_type -> order.middleware.payment.v1.DeletePaymentResponse
	35, // [35:45] is the sub-list for method output_type
	25, // [25:35] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_npool_order_mw_v1_payment_payment_proto_init() }
func file_npool_order_mw_v1_payment_payment_proto_init() {
	if File_npool_order_mw_v1_payment_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPaymentCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistPaymentCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_payment_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_mw_v1_payment_payment_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_mw_v1_payment_payment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_mw_v1_payment_payment_proto_goTypes,
		DependencyIndexes: file_npool_order_mw_v1_payment_payment_proto_depIdxs,
		MessageInfos:      file_npool_order_mw_v1_payment_payment_proto_msgTypes,
	}.Build()
	File_npool_order_mw_v1_payment_payment_proto = out.File
	file_npool_order_mw_v1_payment_payment_proto_rawDesc = nil
	file_npool_order_mw_v1_payment_payment_proto_goTypes = nil
	file_npool_order_mw_v1_payment_payment_proto_depIdxs = nil
}
