// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/order/mw/v1/powerrental/miningpooluser/miningpooluser.proto

package miningpooluser

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MiningPoolUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID       *string `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	OrderID     *string `protobuf:"bytes,20,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	OrderUserID *string `protobuf:"bytes,30,opt,name=OrderUserID,proto3,oneof" json:"OrderUserID,omitempty"`
}

func (x *MiningPoolUserReq) Reset() {
	*x = MiningPoolUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningPoolUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningPoolUserReq) ProtoMessage() {}

func (x *MiningPoolUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningPoolUserReq.ProtoReflect.Descriptor instead.
func (*MiningPoolUserReq) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{0}
}

func (x *MiningPoolUserReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *MiningPoolUserReq) GetOrderID() string {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return ""
}

func (x *MiningPoolUserReq) GetOrderUserID() string {
	if x != nil && x.OrderUserID != nil {
		return *x.OrderUserID
	}
	return ""
}

type MiningPoolUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"order_id"
	OrderID string `protobuf:"bytes,30,opt,name=OrderID,proto3" json:"OrderID,omitempty" sql:"order_id"`
	// @inject_tag: sql:"order_user_id"
	OrderUserID string `protobuf:"bytes,40,opt,name=OrderUserID,proto3" json:"OrderUserID,omitempty" sql:"order_user_id"`
}

func (x *MiningPoolUser) Reset() {
	*x = MiningPoolUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningPoolUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningPoolUser) ProtoMessage() {}

func (x *MiningPoolUser) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningPoolUser.ProtoReflect.Descriptor instead.
func (*MiningPoolUser) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{1}
}

func (x *MiningPoolUser) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *MiningPoolUser) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *MiningPoolUser) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *MiningPoolUser) GetOrderUserID() string {
	if x != nil {
		return x.OrderUserID
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *v1.Uint32Val      `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *v1.StringVal      `protobuf:"bytes,20,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	OrderID     *v1.StringVal      `protobuf:"bytes,30,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	OrderUserID *v1.StringVal      `protobuf:"bytes,40,opt,name=OrderUserID,proto3,oneof" json:"OrderUserID,omitempty"`
	CreatedAt   *v1.Uint32Val      `protobuf:"bytes,100,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
	EntIDs      *v1.StringSliceVal `protobuf:"bytes,110,opt,name=EntIDs,proto3,oneof" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetOrderID() *v1.StringVal {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *Conds) GetOrderUserID() *v1.StringVal {
	if x != nil {
		return x.OrderUserID
	}
	return nil
}

func (x *Conds) GetCreatedAt() *v1.Uint32Val {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Conds) GetEntIDs() *v1.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

type CreateMiningPoolUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MiningPoolUserReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMiningPoolUserRequest) Reset() {
	*x = CreateMiningPoolUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMiningPoolUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMiningPoolUserRequest) ProtoMessage() {}

func (x *CreateMiningPoolUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMiningPoolUserRequest.ProtoReflect.Descriptor instead.
func (*CreateMiningPoolUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMiningPoolUserRequest) GetInfo() *MiningPoolUserReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateMiningPoolUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MiningPoolUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateMiningPoolUserResponse) Reset() {
	*x = CreateMiningPoolUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMiningPoolUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMiningPoolUserResponse) ProtoMessage() {}

func (x *CreateMiningPoolUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMiningPoolUserResponse.ProtoReflect.Descriptor instead.
func (*CreateMiningPoolUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMiningPoolUserResponse) GetInfo() *MiningPoolUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMiningPoolUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetMiningPoolUserRequest) Reset() {
	*x = GetMiningPoolUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningPoolUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningPoolUserRequest) ProtoMessage() {}

func (x *GetMiningPoolUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningPoolUserRequest.ProtoReflect.Descriptor instead.
func (*GetMiningPoolUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{5}
}

func (x *GetMiningPoolUserRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetMiningPoolUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MiningPoolUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetMiningPoolUserResponse) Reset() {
	*x = GetMiningPoolUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningPoolUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningPoolUserResponse) ProtoMessage() {}

func (x *GetMiningPoolUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningPoolUserResponse.ProtoReflect.Descriptor instead.
func (*GetMiningPoolUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{6}
}

func (x *GetMiningPoolUserResponse) GetInfo() *MiningPoolUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMiningPoolUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMiningPoolUsersRequest) Reset() {
	*x = GetMiningPoolUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningPoolUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningPoolUsersRequest) ProtoMessage() {}

func (x *GetMiningPoolUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningPoolUsersRequest.ProtoReflect.Descriptor instead.
func (*GetMiningPoolUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{7}
}

func (x *GetMiningPoolUsersRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetMiningPoolUsersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMiningPoolUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMiningPoolUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*MiningPoolUser `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32            `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetMiningPoolUsersResponse) Reset() {
	*x = GetMiningPoolUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningPoolUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningPoolUsersResponse) ProtoMessage() {}

func (x *GetMiningPoolUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningPoolUsersResponse.ProtoReflect.Descriptor instead.
func (*GetMiningPoolUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{8}
}

func (x *GetMiningPoolUsersResponse) GetInfos() []*MiningPoolUser {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetMiningPoolUsersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistMiningPoolUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *ExistMiningPoolUserRequest) Reset() {
	*x = ExistMiningPoolUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMiningPoolUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMiningPoolUserRequest) ProtoMessage() {}

func (x *ExistMiningPoolUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMiningPoolUserRequest.ProtoReflect.Descriptor instead.
func (*ExistMiningPoolUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{9}
}

func (x *ExistMiningPoolUserRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type ExistMiningPoolUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistMiningPoolUserResponse) Reset() {
	*x = ExistMiningPoolUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMiningPoolUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMiningPoolUserResponse) ProtoMessage() {}

func (x *ExistMiningPoolUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMiningPoolUserResponse.ProtoReflect.Descriptor instead.
func (*ExistMiningPoolUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{10}
}

func (x *ExistMiningPoolUserResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistMiningPoolUserCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistMiningPoolUserCondsRequest) Reset() {
	*x = ExistMiningPoolUserCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMiningPoolUserCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMiningPoolUserCondsRequest) ProtoMessage() {}

func (x *ExistMiningPoolUserCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMiningPoolUserCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistMiningPoolUserCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{11}
}

func (x *ExistMiningPoolUserCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistMiningPoolUserCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistMiningPoolUserCondsResponse) Reset() {
	*x = ExistMiningPoolUserCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMiningPoolUserCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMiningPoolUserCondsResponse) ProtoMessage() {}

func (x *ExistMiningPoolUserCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMiningPoolUserCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistMiningPoolUserCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{12}
}

func (x *ExistMiningPoolUserCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteMiningPoolUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MiningPoolUserReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteMiningPoolUserRequest) Reset() {
	*x = DeleteMiningPoolUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMiningPoolUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMiningPoolUserRequest) ProtoMessage() {}

func (x *DeleteMiningPoolUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMiningPoolUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteMiningPoolUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMiningPoolUserRequest) GetInfo() *MiningPoolUserReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteMiningPoolUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MiningPoolUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteMiningPoolUserResponse) Reset() {
	*x = DeleteMiningPoolUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMiningPoolUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMiningPoolUserResponse) ProtoMessage() {}

func (x *DeleteMiningPoolUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMiningPoolUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteMiningPoolUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMiningPoolUserResponse) GetInfo() *MiningPoolUser {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto protoreflect.FileDescriptor

var file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDesc = []byte{
	0x0a, 0x41, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x22, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x72, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x9e, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x0b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x68, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x63, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x7c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a,
	0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x31, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x1f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x20, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x68, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x1c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xba, 0x07, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x92, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70,
	0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f,
	0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x95, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a,
	0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x43, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f,
	0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x75, 0x73, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescOnce sync.Once
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescData = file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDesc
)

func file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescGZIP() []byte {
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescOnce.Do(func() {
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescData)
	})
	return file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDescData
}

var file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_goTypes = []interface{}{
	(*MiningPoolUserReq)(nil),                // 0: order.middleware.miningpooluser.v1.MiningPoolUserReq
	(*MiningPoolUser)(nil),                   // 1: order.middleware.miningpooluser.v1.MiningPoolUser
	(*Conds)(nil),                            // 2: order.middleware.miningpooluser.v1.Conds
	(*CreateMiningPoolUserRequest)(nil),      // 3: order.middleware.miningpooluser.v1.CreateMiningPoolUserRequest
	(*CreateMiningPoolUserResponse)(nil),     // 4: order.middleware.miningpooluser.v1.CreateMiningPoolUserResponse
	(*GetMiningPoolUserRequest)(nil),         // 5: order.middleware.miningpooluser.v1.GetMiningPoolUserRequest
	(*GetMiningPoolUserResponse)(nil),        // 6: order.middleware.miningpooluser.v1.GetMiningPoolUserResponse
	(*GetMiningPoolUsersRequest)(nil),        // 7: order.middleware.miningpooluser.v1.GetMiningPoolUsersRequest
	(*GetMiningPoolUsersResponse)(nil),       // 8: order.middleware.miningpooluser.v1.GetMiningPoolUsersResponse
	(*ExistMiningPoolUserRequest)(nil),       // 9: order.middleware.miningpooluser.v1.ExistMiningPoolUserRequest
	(*ExistMiningPoolUserResponse)(nil),      // 10: order.middleware.miningpooluser.v1.ExistMiningPoolUserResponse
	(*ExistMiningPoolUserCondsRequest)(nil),  // 11: order.middleware.miningpooluser.v1.ExistMiningPoolUserCondsRequest
	(*ExistMiningPoolUserCondsResponse)(nil), // 12: order.middleware.miningpooluser.v1.ExistMiningPoolUserCondsResponse
	(*DeleteMiningPoolUserRequest)(nil),      // 13: order.middleware.miningpooluser.v1.DeleteMiningPoolUserRequest
	(*DeleteMiningPoolUserResponse)(nil),     // 14: order.middleware.miningpooluser.v1.DeleteMiningPoolUserResponse
	(*v1.Uint32Val)(nil),                     // 15: basetypes.v1.Uint32Val
	(*v1.StringVal)(nil),                     // 16: basetypes.v1.StringVal
	(*v1.StringSliceVal)(nil),                // 17: basetypes.v1.StringSliceVal
}
var file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_depIdxs = []int32{
	15, // 0: order.middleware.miningpooluser.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	16, // 1: order.middleware.miningpooluser.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	16, // 2: order.middleware.miningpooluser.v1.Conds.OrderID:type_name -> basetypes.v1.StringVal
	16, // 3: order.middleware.miningpooluser.v1.Conds.OrderUserID:type_name -> basetypes.v1.StringVal
	15, // 4: order.middleware.miningpooluser.v1.Conds.CreatedAt:type_name -> basetypes.v1.Uint32Val
	17, // 5: order.middleware.miningpooluser.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	0,  // 6: order.middleware.miningpooluser.v1.CreateMiningPoolUserRequest.Info:type_name -> order.middleware.miningpooluser.v1.MiningPoolUserReq
	1,  // 7: order.middleware.miningpooluser.v1.CreateMiningPoolUserResponse.Info:type_name -> order.middleware.miningpooluser.v1.MiningPoolUser
	1,  // 8: order.middleware.miningpooluser.v1.GetMiningPoolUserResponse.Info:type_name -> order.middleware.miningpooluser.v1.MiningPoolUser
	2,  // 9: order.middleware.miningpooluser.v1.GetMiningPoolUsersRequest.Conds:type_name -> order.middleware.miningpooluser.v1.Conds
	1,  // 10: order.middleware.miningpooluser.v1.GetMiningPoolUsersResponse.Infos:type_name -> order.middleware.miningpooluser.v1.MiningPoolUser
	2,  // 11: order.middleware.miningpooluser.v1.ExistMiningPoolUserCondsRequest.Conds:type_name -> order.middleware.miningpooluser.v1.Conds
	0,  // 12: order.middleware.miningpooluser.v1.DeleteMiningPoolUserRequest.Info:type_name -> order.middleware.miningpooluser.v1.MiningPoolUserReq
	1,  // 13: order.middleware.miningpooluser.v1.DeleteMiningPoolUserResponse.Info:type_name -> order.middleware.miningpooluser.v1.MiningPoolUser
	3,  // 14: order.middleware.miningpooluser.v1.Middleware.CreateMiningPoolUser:input_type -> order.middleware.miningpooluser.v1.CreateMiningPoolUserRequest
	5,  // 15: order.middleware.miningpooluser.v1.Middleware.GetMiningPoolUser:input_type -> order.middleware.miningpooluser.v1.GetMiningPoolUserRequest
	7,  // 16: order.middleware.miningpooluser.v1.Middleware.GetMiningPoolUsers:input_type -> order.middleware.miningpooluser.v1.GetMiningPoolUsersRequest
	9,  // 17: order.middleware.miningpooluser.v1.Middleware.ExistMiningPoolUser:input_type -> order.middleware.miningpooluser.v1.ExistMiningPoolUserRequest
	11, // 18: order.middleware.miningpooluser.v1.Middleware.ExistMiningPoolUserConds:input_type -> order.middleware.miningpooluser.v1.ExistMiningPoolUserCondsRequest
	13, // 19: order.middleware.miningpooluser.v1.Middleware.DeleteMiningPoolUser:input_type -> order.middleware.miningpooluser.v1.DeleteMiningPoolUserRequest
	4,  // 20: order.middleware.miningpooluser.v1.Middleware.CreateMiningPoolUser:output_type -> order.middleware.miningpooluser.v1.CreateMiningPoolUserResponse
	6,  // 21: order.middleware.miningpooluser.v1.Middleware.GetMiningPoolUser:output_type -> order.middleware.miningpooluser.v1.GetMiningPoolUserResponse
	8,  // 22: order.middleware.miningpooluser.v1.Middleware.GetMiningPoolUsers:output_type -> order.middleware.miningpooluser.v1.GetMiningPoolUsersResponse
	10, // 23: order.middleware.miningpooluser.v1.Middleware.ExistMiningPoolUser:output_type -> order.middleware.miningpooluser.v1.ExistMiningPoolUserResponse
	12, // 24: order.middleware.miningpooluser.v1.Middleware.ExistMiningPoolUserConds:output_type -> order.middleware.miningpooluser.v1.ExistMiningPoolUserCondsResponse
	14, // 25: order.middleware.miningpooluser.v1.Middleware.DeleteMiningPoolUser:output_type -> order.middleware.miningpooluser.v1.DeleteMiningPoolUserResponse
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_init() }
func file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_init() {
	if File_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningPoolUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningPoolUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMiningPoolUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMiningPoolUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningPoolUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningPoolUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningPoolUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiningPoolUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMiningPoolUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMiningPoolUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMiningPoolUserCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMiningPoolUserCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMiningPoolUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMiningPoolUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_goTypes,
		DependencyIndexes: file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_depIdxs,
		MessageInfos:      file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_msgTypes,
	}.Build()
	File_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto = out.File
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_rawDesc = nil
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_goTypes = nil
	file_npool_order_mw_v1_powerrental_miningpooluser_miningpooluser_proto_depIdxs = nil
}
