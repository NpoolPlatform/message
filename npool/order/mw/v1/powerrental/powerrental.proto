syntax = "proto3";

package order.middleware.powerrental.v1;

option go_package = "github.com/NpoolPlatform/message/npool/order/mw/v1/powerrental";

import "google/api/annotations.proto";
import "npool/basetypes/order/v1/enums.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/order/mw/v1/payment/payment.proto";
import "npool/order/mw/v1/order/coupon/coupon.proto";
import "npool/order/mw/v1/order/order.proto";

// Service Name
service Middleware {
    rpc CreatePowerRentalOrder (CreatePowerRentalOrderRequest) returns (CreatePowerRentalOrderResponse) {}
    rpc CreatePowerRentalOrderWithChilds (CreatePowerRentalOrderWithChildsRequest) returns (CreatePowerRentalOrderWithChildsResponse) {}
    rpc UpdatePowerRentalOrder (UpdatePowerRentalOrderRequest) returns (UpdatePowerRentalOrderResponse) {}
    rpc GetPowerRentalOrder (GetPowerRentalOrderRequest) returns (GetPowerRentalOrderResponse) {}
    rpc GetPowerRentalOrders (GetPowerRentalOrdersRequest) returns (GetPowerRentalOrdersResponse) {}
    rpc ExistPowerRentalOrder (ExistPowerRentalOrderRequest) returns (ExistPowerRentalOrderResponse) {}
    rpc ExistPowerRentalOrderConds (ExistPowerRentalOrderCondsRequest) returns (ExistPowerRentalOrderCondsResponse) {}
    rpc DeletePowerRentalOrder (DeletePowerRentalOrderRequest) returns (DeletePowerRentalOrderResponse) {}
}

message ChildOrderReq {
    optional string OrderID = 10;
    optional string GoodID = 20;
    optional string AppGoodID = 30;
    optional uint32 Duration = 40;
}

message PowerRentalOrderReq {
    // order
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string UserID = 40;
    optional string GoodID = 50;
    optional string AppGoodID = 60;
    optional string OrderID = 70;
    optional string ParentOrderID = 80;
    optional string Units = 90;
    optional string GoodValueUSD = 100;
    optional string PaymentAmountUSD = 110;
    optional string DiscountAmountUSD = 120;
    optional string PromotionID = 130;
    optional uint32 Duration = 140;
    optional basetypes.order.v1.OrderType OrderType = 150;
    optional basetypes.order.v1.InvestmentType InvestmentType = 160;
    optional basetypes.order.v1.PaymentType PaymentType = 170;

    // Support multiple payment coins from user balances
    optional basetypes.order.v1.OrderCreateMethod CreateMethod = 180;

    // Create or Update
    // orderstate
    optional basetypes.order.v1.OrderState OrderState = 190;
    optional basetypes.order.v1.OrderStartMode StartMode = 200;
    optional uint32 StartAt = 210;
    optional uint32 EndAt = 220;
    optional uint32 LastBenefitAt = 230;
    optional basetypes.order.v1.BenefitState BenefitState = 240;
    optional bool UserSetPaid = 250;
    optional bool UserSetCanceled = 260;
    optional bool AdminSetCanceled = 270;
    optional basetypes.order.v1.PaymentState PaymentState = 280;
    optional uint32 OutOfGasHours = 290;
    optional uint32 CompensateHours = 300;
    optional bool Rollback = 310;
    optional string AppGoodStockLockID = 320;
    optional string LedgerLockID = 330;
    optional basetypes.order.v1.OrderRenewState RenewState = 340;
    optional uint32 RenewNotifyAt = 350;
    optional bool Simulate = 360;

    // Coupons
    repeated string CouponIDs = 370;
    // Payment balances
    repeated order.middleware.payment.v1.PaymentBalanceReq PaymentBalances = 380;
    // Payment transfers
    repeated order.middleware.payment.v1.PaymentTransferReq PaymentTransfers = 390;
}

message PowerRentalOrderWithChildsReq {
    PowerRentalOrderReq PowerRentalOrder = 10;
    repeated ChildOrderReq ChildOrders = 20;
}

message PowerRentalOrder {
    // Base order information
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"user_id"
    string UserID = 40;
    // @inject_tag: sql:"good_id"
    string GoodID = 50;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID = 60;
    // @inject_tag: sql:"parent_order_id"
    string ParentOrderID = 70;
    // @inject_tag: sql:"order_type"
    string OrderTypeStr = 90;
    basetypes.order.v1.OrderType OrderType = 100;
    // @inject_tag: sql:"payment_type"
    string PaymentTypeStr = 110;
    basetypes.order.v1.PaymentType PaymentType = 120;
    // @inject_tag: sql:"create_method"
    string CreateMethodStr = 130;
    basetypes.order.v1.OrderCreateMethod CreateMethod = 140;
    // @inject_tag: sql:"simulate"
    bool Simulate = 150;

    // Base order state information
    // @inject_tag: sql:"order_state"
    string OrderStateStr = 160;
    basetypes.order.v1.OrderState OrderState = 170;
    // @inject_tag: sql:"start_mode"
    string StartModeStr = 180;
    basetypes.order.v1.OrderStartMode StartMode = 190;
    // @inject_tag: sql:"start_at"
    uint32 StartAt = 200;
    // @inject_tag: sql:"last_benefit_at"
    uint32 LastBenefitAt = 210;
    // @inject_tag: sql:"benefit_state"
    string BenefitStateStr = 220;
    basetypes.order.v1.BenefitState BenefitState = 230;

    // Power rental information
    // @inject_tag: sql:"units"
    string Units = 240;
    // @inject_tag: sql:"good_value_usd"
    string GoodValueUSD = 250;
    // @inject_tag: sql:"payment_amount_usd"
    string PaymentAmountUSD = 260;
    // @inject_tag: sql:"discount_amount_usd"
    string DiscountAmountUSD = 270;
    // @inject_tag: sql:"promotion_id"
    string PromotionID = 280;
    // @inject_tag: sql:"duration"
    uint32 Duration = 290;
    // @inject_tag: sql:"investment_type"
    string InvestmentTypeStr = 300;
    basetypes.order.v1.InvestmentType InvestmentType = 310;

    // Power rental state information
    // @inject_tag: sql:"cancel_state"
    string CancelStateStr = 320;
    basetypes.order.v1.OrderState CancelState = 330;
    // @inject_tag: sql:"end_at"
    uint32 EndAt = 340;
    // @inject_tag: sql:"paid_at"
    uint32 PaidAt = 350;
    // @inject_tag: sql:"user_set_paid"
    bool UserSetPaid = 360;
    // @inject_tag: sql:"user_set_canceled"
    bool UserSetCanceled = 370;
    // @inject_tag: sql:"admin_set_canceled"
    bool AdminSetCanceled = 380;
    // @inject_tag: sql:"payment_state"
    string PaymentStateStr = 390;
    basetypes.order.v1.PaymentState PaymentState = 400;
    // @inject_tag: sql:"out_of_gas_hours"
    uint32 OutOfGasHours = 410;
    // @inject_tag: sql:"compensate_horus"
    uint32 CompensateHours = 420;
    // @inject_tag: sql:"renew_state"
    string RenewStateStr = 430;
    basetypes.order.v1.OrderRenewState RenewState = 440;
    // @inject_tag: sql:"renew_notify_at"
    uint32 RenewNotifyAt = 450;
    // @inject_tag: sql:"app_good_stock_lock_id"
    string AppGoodStockLockID = 460;
    // @inject_tag: sql:"ledger_lock_id"
    string LedgerLockID = 470;

    // Coupons
    repeated order.middleware.order1.coupon.v1.OrderCouponInfo Coupons = 600;
    // Payment balances
    repeated order.middleware.payment.v1.PaymentBalanceInfo PaymentBalances = 610;
    // Payment transfers
    repeated order.middleware.payment.v1.PaymentTransferInfo PaymentTransfers = 620;

    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message PowerRentalOrderWithChilds {
    PowerRentalOrder PowerRentalOrder = 10;
    repeated order.middleware.order1.v1.Order ChildOrders = 20;
}

message Conds {
    // order
    optional basetypes.v1.Uint32Val ID = 10;
    optional basetypes.v1.Uint32SliceVal IDs = 20;
    optional basetypes.v1.StringVal EntID = 30;
    optional basetypes.v1.StringSliceVal EntIDs = 40;
    optional basetypes.v1.StringVal AppID = 50;
    optional basetypes.v1.StringVal UserID = 60;
    optional basetypes.v1.StringVal GoodID = 70;
    optional basetypes.v1.StringSliceVal GoodIDs = 80;
    optional basetypes.v1.StringVal AppGoodID = 90;
    optional basetypes.v1.StringSliceVal AppGoodIDs = 100;
    optional basetypes.v1.StringVal ParentOrderID = 110;
    optional basetypes.v1.StringSliceVal ParentOrderIDs = 120;
    optional basetypes.v1.Uint32Val OrderType = 130;
    optional basetypes.v1.Uint32Val PaymentType = 140;
    optional basetypes.v1.Uint32SliceVal PaymentTypes = 150;
    optional basetypes.v1.BoolVal Simulate = 160;

    // orderstate
    optional basetypes.v1.Uint32Val OrderState = 170;
    optional basetypes.v1.Uint32SliceVal OrderStates = 180;
    optional basetypes.v1.Uint32Val StartMode = 190;
    optional basetypes.v1.Uint32Val LastBenefitAt = 200;
    optional basetypes.v1.Uint32Val BenefitState = 210;

    // power rental
    optional basetypes.v1.BoolVal AdminSetCanceled = 220;
    optional basetypes.v1.BoolVal UserSetCanceled = 240;

    // power rental state
    optional basetypes.v1.Uint32Val RenewState = 250;
    optional basetypes.v1.Uint32Val RenewNotifyAt = 260;
    optional basetypes.v1.Uint32Val PaymentState = 270;

    // coupon
    optional basetypes.v1.StringVal CouponID = 280;
    optional basetypes.v1.StringSliceVal CouponIDs = 290;

    // transaction id
    optional basetypes.v1.StringVal TransactionID = 300;
    optional basetypes.v1.StringSliceVal TransactionIDs = 310;

    // other
    optional basetypes.v1.Uint32Val CreatedAt = 320;
    optional basetypes.v1.Uint32Val UpdatedAt = 330;
    optional basetypes.v1.Uint32Val PaidAt = 340;
}

message CreatePowerRentalOrderRequest {
    PowerRentalOrderReq Info = 10;
}

message CreatePowerRentalOrderResponse {
    PowerRentalOrder Info = 10;
}

message CreatePowerRentalOrderWithChildsRequest {
    PowerRentalOrderWithChildsReq Info = 10;
}

message CreatePowerRentalOrderWithChildsResponse {
    PowerRentalOrderWithChilds Info = 10;
}

message UpdatePowerRentalOrderRequest {
    PowerRentalOrderReq Info = 10;
}

message UpdatePowerRentalOrderResponse {
    PowerRentalOrder Info = 10;
}

message GetPowerRentalOrderRequest {
    string OrderID = 10;
}

message GetPowerRentalOrderResponse {
    PowerRentalOrder Info = 10;
}

message GetPowerRentalOrdersRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetPowerRentalOrdersResponse {
    repeated PowerRentalOrder Infos = 10;
    uint32 Total = 20;
}

message ExistPowerRentalOrderRequest {
    string OrderID = 10;
}

message ExistPowerRentalOrderResponse {
    bool Info = 10;
}

message ExistPowerRentalOrderCondsRequest {
    Conds Conds = 10;
}

message ExistPowerRentalOrderCondsResponse {
    bool Info = 10;
}

message DeletePowerRentalOrderRequest {
    PowerRentalOrderReq Info = 10;
}

message DeletePowerRentalOrderResponse {
    PowerRentalOrder Info = 10;
}


