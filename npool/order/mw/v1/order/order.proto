syntax = "proto3";

package order.middleware.order1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/order/mw/v1/order";

import "npool/order/mgr/v1/order/state/state.proto";
import "npool/order/mgr/v1/order/order/order.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc CreateOrder (CreateOrderRequest) returns (CreateOrderResponse) {}
    rpc GetOrder    (GetOrderRequest)    returns (GetOrderResponse)    {}
}

message OrderReq {
    optional string AppID                     = 10;
    optional string UserID                    = 20;
    optional string GoodID                    = 30;
    optional uint32 Units                     = 40;
    optional order.manager.order.order.v1.OrderType OrderType = 50;

    optional string ParentOrderID             = 60;
    optional bool   PayWithParent             = 70;

    optional string PaymentCoinID             = 80;
    optional string PayWithBalanceAmount      = 90;
    optional string PaymentAccountID          = 100;
    optional string PaymentAmount             = 110;
    optional string PaymentAccountStartAmount = 120;
    optional string PaymentCoinUSDCurrency    = 130;
    optional string PaymentLiveUSDCurrency    = 140;
    optional string PaymentLocalUSDCurrency   = 150;

    optional string FixAmountID               = 160;
    optional string DiscountID                = 170;
    optional string SpecialOfferID            = 180;

    optional uint32 Start                     = 190;
    optional uint32 End                       = 200;

    optional string PromotionID               = 210;
}

message Order {
    // @inject_tag: sql:"id"
    string ID                     = 10;
    // @inject_tag: sql:"user_id"
    string UserID                 = 20;
    // @inject_tag: sql:"good_id"
    string GoodID                 = 30;
    // @inject_tag: sql:"uints"
    uint32 Units                  = 40;
    // @inject_tag: sql:"order_type"
    string OrderType              = 50;
    // @inject_tag: sql:"parent_order_id"
    string ParentOrderID          = 60;
    // @inject_tag: sql:"start"
    uint32 Start                  = 70;
    // @inject_tag: sql:"end"
    uint32 End                    = 80;

    // @inject_tag: sql:"payment_coin_type_id"
    string PaymentCoinTypeID      = 90;
    // @inject_tag: sql:"payment_coin_usd_currency"
    string PaymentCoinUSDCurrency = 100;
    // @inject_tag: sql:"payment_id"
    string PaymentID              = 110;
    // @inject_tag: sql:"payment_account_id"
    string PaymentAccountID       = 120;
    // @inject_tag: sql:"payment_amount"
    string PaymentAmount          = 130;
    // @inject_tag: sql:"payment_state"
    string PaymentState           = 140;
    // @inject_tag: sql:"pay_with_balance_amount"
    string PayWithBalanceAmount   = 150;
    // @inject_tag: sql:"pay_with_parent"
    int32  PayWithParentInt       = 160;

    // @inject_tag: sql:"coupon_id"
    string FixAmountID            = 170;
    // @inject_tag: sql:"discount_id"
    string DiscountID             = 180;
    // @inject_tag: sql:"special_offer_id"
    string SpecialOfferID         = 190;

    // @inject_tag: sql:"create_at"
    uint32 CreatedAt              = 200;

    order.manager.order.state.v1.EState    State         = 210;
    order.manager.order.order.v1.OrderType Type          = 220;
    bool                                   PayWithParent = 230;
}

message Conds {
    optional npool.v1.StringVal      ID                 = 10;
    optional npool.v1.StringSliceVal IDs                = 20;
    optional npool.v1.StringVal      AppID              = 30;
    optional npool.v1.StringVal      UserID             = 40;
    optional npool.v1.StringVal      CoinTypeID         = 50;
    optional npool.v1.StringVal      ParentOrderID      = 60;
    optional npool.v1.Uint32Val      PaymentState       = 70;
    optional npool.v1.StringVal      PaymentAmount      = 80;
    optional npool.v1.Uint32Val      OrderType          = 90;
    optional npool.v1.Uint32Val      CreatedAt          = 100;
}

message CreateOrderRequest {
    OrderReq Info = 10;
}

message CreateOrderResponse {
    Order Info = 10;
}

message GetOrderRequest {
    string ID  = 10;
}

message GetOrderResponse {
    Order Info = 10;
}
