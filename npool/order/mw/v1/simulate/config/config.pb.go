// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/order/mw/v1/simulate/config/config.proto

package config

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/order/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimulateConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                        *uint32            `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID                     *string            `protobuf:"bytes,20,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID                     *string            `protobuf:"bytes,30,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	SendCouponMode            *v1.SendCouponMode `protobuf:"varint,40,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode,oneof" json:"SendCouponMode,omitempty"`
	SendCouponProbability     *string            `protobuf:"bytes,50,opt,name=SendCouponProbability,proto3,oneof" json:"SendCouponProbability,omitempty"`
	EnabledCashableProfit     *bool              `protobuf:"varint,60,opt,name=EnabledCashableProfit,proto3,oneof" json:"EnabledCashableProfit,omitempty"`
	CashableProfitProbability *string            `protobuf:"bytes,70,opt,name=CashableProfitProbability,proto3,oneof" json:"CashableProfitProbability,omitempty"`
	Enabled                   *bool              `protobuf:"varint,80,opt,name=Enabled,proto3,oneof" json:"Enabled,omitempty"`
}

func (x *SimulateConfigReq) Reset() {
	*x = SimulateConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulateConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateConfigReq) ProtoMessage() {}

func (x *SimulateConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateConfigReq.ProtoReflect.Descriptor instead.
func (*SimulateConfigReq) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *SimulateConfigReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *SimulateConfigReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *SimulateConfigReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *SimulateConfigReq) GetSendCouponMode() v1.SendCouponMode {
	if x != nil && x.SendCouponMode != nil {
		return *x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *SimulateConfigReq) GetSendCouponProbability() string {
	if x != nil && x.SendCouponProbability != nil {
		return *x.SendCouponProbability
	}
	return ""
}

func (x *SimulateConfigReq) GetEnabledCashableProfit() bool {
	if x != nil && x.EnabledCashableProfit != nil {
		return *x.EnabledCashableProfit
	}
	return false
}

func (x *SimulateConfigReq) GetCashableProfitProbability() string {
	if x != nil && x.CashableProfitProbability != nil {
		return *x.CashableProfitProbability
	}
	return ""
}

func (x *SimulateConfigReq) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type SimulateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"send_coupon_mode"
	SendCouponModeStr string            `protobuf:"bytes,40,opt,name=SendCouponModeStr,proto3" json:"SendCouponModeStr,omitempty" sql:"send_coupon_mode"`
	SendCouponMode    v1.SendCouponMode `protobuf:"varint,50,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode" json:"SendCouponMode,omitempty"`
	// @inject_tag: sql:"send_coupon_probability"
	SendCouponProbability string `protobuf:"bytes,60,opt,name=SendCouponProbability,proto3" json:"SendCouponProbability,omitempty" sql:"send_coupon_probability"`
	// @inject_tag: sql:"enabled_cashable_profit"
	EnabledCashableProfit bool `protobuf:"varint,70,opt,name=EnabledCashableProfit,proto3" json:"EnabledCashableProfit,omitempty" sql:"enabled_cashable_profit"`
	// @inject_tag: sql:"cashable_profit_probability"
	CashableProfitProbability string `protobuf:"bytes,80,opt,name=CashableProfitProbability,proto3" json:"CashableProfitProbability,omitempty" sql:"cashable_profit_probability"`
	// @inject_tag: sql:"enabled"
	Enabled bool `protobuf:"varint,90,opt,name=Enabled,proto3" json:"Enabled,omitempty" sql:"enabled"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *SimulateConfig) Reset() {
	*x = SimulateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateConfig) ProtoMessage() {}

func (x *SimulateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateConfig.ProtoReflect.Descriptor instead.
func (*SimulateConfig) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *SimulateConfig) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SimulateConfig) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *SimulateConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SimulateConfig) GetSendCouponModeStr() string {
	if x != nil {
		return x.SendCouponModeStr
	}
	return ""
}

func (x *SimulateConfig) GetSendCouponMode() v1.SendCouponMode {
	if x != nil {
		return x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *SimulateConfig) GetSendCouponProbability() string {
	if x != nil {
		return x.SendCouponProbability
	}
	return ""
}

func (x *SimulateConfig) GetEnabledCashableProfit() bool {
	if x != nil {
		return x.EnabledCashableProfit
	}
	return false
}

func (x *SimulateConfig) GetCashableProfitProbability() string {
	if x != nil {
		return x.CashableProfitProbability
	}
	return ""
}

func (x *SimulateConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SimulateConfig) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SimulateConfig) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    *v11.Uint32Val `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                 *v11.StringVal `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                 *v11.StringVal `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SendCouponMode        *v11.Uint32Val `protobuf:"bytes,40,opt,name=SendCouponMode,proto3" json:"SendCouponMode,omitempty"`
	EnabledCashableProfit *v11.BoolVal   `protobuf:"bytes,50,opt,name=EnabledCashableProfit,proto3" json:"EnabledCashableProfit,omitempty"`
	Enabled               *v11.BoolVal   `protobuf:"bytes,60,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v11.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v11.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v11.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetSendCouponMode() *v11.Uint32Val {
	if x != nil {
		return x.SendCouponMode
	}
	return nil
}

func (x *Conds) GetEnabledCashableProfit() *v11.BoolVal {
	if x != nil {
		return x.EnabledCashableProfit
	}
	return nil
}

func (x *Conds) GetEnabled() *v11.BoolVal {
	if x != nil {
		return x.Enabled
	}
	return nil
}

type CreateSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfigReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSimulateConfigRequest) Reset() {
	*x = CreateSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimulateConfigRequest) ProtoMessage() {}

func (x *CreateSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSimulateConfigRequest) GetInfo() *SimulateConfigReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSimulateConfigResponse) Reset() {
	*x = CreateSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimulateConfigResponse) ProtoMessage() {}

func (x *CreateSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSimulateConfigResponse) GetInfo() *SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfigReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSimulateConfigRequest) Reset() {
	*x = UpdateSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSimulateConfigRequest) ProtoMessage() {}

func (x *UpdateSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSimulateConfigRequest) GetInfo() *SimulateConfigReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSimulateConfigResponse) Reset() {
	*x = UpdateSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSimulateConfigResponse) ProtoMessage() {}

func (x *UpdateSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSimulateConfigResponse) GetInfo() *SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetSimulateConfigRequest) Reset() {
	*x = GetSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigRequest) ProtoMessage() {}

func (x *GetSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *GetSimulateConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSimulateConfigResponse) Reset() {
	*x = GetSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigResponse) ProtoMessage() {}

func (x *GetSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{8}
}

func (x *GetSimulateConfigResponse) GetInfo() *SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSimulateConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSimulateConfigsRequest) Reset() {
	*x = GetSimulateConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigsRequest) ProtoMessage() {}

func (x *GetSimulateConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{9}
}

func (x *GetSimulateConfigsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetSimulateConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSimulateConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSimulateConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SimulateConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32            `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSimulateConfigsResponse) Reset() {
	*x = GetSimulateConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigsResponse) ProtoMessage() {}

func (x *GetSimulateConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{10}
}

func (x *GetSimulateConfigsResponse) GetInfos() []*SimulateConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSimulateConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *ExistSimulateConfigRequest) Reset() {
	*x = ExistSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSimulateConfigRequest) ProtoMessage() {}

func (x *ExistSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*ExistSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{11}
}

func (x *ExistSimulateConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type ExistSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSimulateConfigResponse) Reset() {
	*x = ExistSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSimulateConfigResponse) ProtoMessage() {}

func (x *ExistSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*ExistSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{12}
}

func (x *ExistSimulateConfigResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistSimulateConfigCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistSimulateConfigCondsRequest) Reset() {
	*x = ExistSimulateConfigCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSimulateConfigCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSimulateConfigCondsRequest) ProtoMessage() {}

func (x *ExistSimulateConfigCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSimulateConfigCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistSimulateConfigCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{13}
}

func (x *ExistSimulateConfigCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistSimulateConfigCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistSimulateConfigCondsResponse) Reset() {
	*x = ExistSimulateConfigCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistSimulateConfigCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistSimulateConfigCondsResponse) ProtoMessage() {}

func (x *ExistSimulateConfigCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistSimulateConfigCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistSimulateConfigCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{14}
}

func (x *ExistSimulateConfigCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfigReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSimulateConfigRequest) Reset() {
	*x = DeleteSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSimulateConfigRequest) ProtoMessage() {}

func (x *DeleteSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteSimulateConfigRequest) GetInfo() *SimulateConfigReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteSimulateConfigResponse) Reset() {
	*x = DeleteSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSimulateConfigResponse) ProtoMessage() {}

func (x *DeleteSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSimulateConfigResponse) GetInfo() *SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_mw_v1_simulate_config_config_proto protoreflect.FileDescriptor

var file_npool_order_mw_v1_simulate_config_config_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x23, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x04, 0x0a, 0x11,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x03, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x15,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x19, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x19, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x18, 0x0a,
	0x16, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x43, 0x61, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0xc8, 0x03, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x12, 0x4a,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x34, 0x0a, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x43, 0x61, 0x73, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcd, 0x02, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x2d, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2d,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x3f, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4b,
	0x0a, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x52, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x73,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x69, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8b, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7d, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x1a, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x31, 0x0a,
	0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x63, 0x0a, 0x1f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x20, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x69, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0xe6, 0x08, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x9d, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x9d, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x94, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x3e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9,
	0x01, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x44, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x45, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x40, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_mw_v1_simulate_config_config_proto_rawDescOnce sync.Once
	file_npool_order_mw_v1_simulate_config_config_proto_rawDescData = file_npool_order_mw_v1_simulate_config_config_proto_rawDesc
)

func file_npool_order_mw_v1_simulate_config_config_proto_rawDescGZIP() []byte {
	file_npool_order_mw_v1_simulate_config_config_proto_rawDescOnce.Do(func() {
		file_npool_order_mw_v1_simulate_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_mw_v1_simulate_config_config_proto_rawDescData)
	})
	return file_npool_order_mw_v1_simulate_config_config_proto_rawDescData
}

var file_npool_order_mw_v1_simulate_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_order_mw_v1_simulate_config_config_proto_goTypes = []interface{}{
	(*SimulateConfigReq)(nil),                // 0: order.middleware.simulate.config.v1.SimulateConfigReq
	(*SimulateConfig)(nil),                   // 1: order.middleware.simulate.config.v1.SimulateConfig
	(*Conds)(nil),                            // 2: order.middleware.simulate.config.v1.Conds
	(*CreateSimulateConfigRequest)(nil),      // 3: order.middleware.simulate.config.v1.CreateSimulateConfigRequest
	(*CreateSimulateConfigResponse)(nil),     // 4: order.middleware.simulate.config.v1.CreateSimulateConfigResponse
	(*UpdateSimulateConfigRequest)(nil),      // 5: order.middleware.simulate.config.v1.UpdateSimulateConfigRequest
	(*UpdateSimulateConfigResponse)(nil),     // 6: order.middleware.simulate.config.v1.UpdateSimulateConfigResponse
	(*GetSimulateConfigRequest)(nil),         // 7: order.middleware.simulate.config.v1.GetSimulateConfigRequest
	(*GetSimulateConfigResponse)(nil),        // 8: order.middleware.simulate.config.v1.GetSimulateConfigResponse
	(*GetSimulateConfigsRequest)(nil),        // 9: order.middleware.simulate.config.v1.GetSimulateConfigsRequest
	(*GetSimulateConfigsResponse)(nil),       // 10: order.middleware.simulate.config.v1.GetSimulateConfigsResponse
	(*ExistSimulateConfigRequest)(nil),       // 11: order.middleware.simulate.config.v1.ExistSimulateConfigRequest
	(*ExistSimulateConfigResponse)(nil),      // 12: order.middleware.simulate.config.v1.ExistSimulateConfigResponse
	(*ExistSimulateConfigCondsRequest)(nil),  // 13: order.middleware.simulate.config.v1.ExistSimulateConfigCondsRequest
	(*ExistSimulateConfigCondsResponse)(nil), // 14: order.middleware.simulate.config.v1.ExistSimulateConfigCondsResponse
	(*DeleteSimulateConfigRequest)(nil),      // 15: order.middleware.simulate.config.v1.DeleteSimulateConfigRequest
	(*DeleteSimulateConfigResponse)(nil),     // 16: order.middleware.simulate.config.v1.DeleteSimulateConfigResponse
	(v1.SendCouponMode)(0),                   // 17: basetypes.order.v1.SendCouponMode
	(*v11.Uint32Val)(nil),                    // 18: basetypes.v1.Uint32Val
	(*v11.StringVal)(nil),                    // 19: basetypes.v1.StringVal
	(*v11.BoolVal)(nil),                      // 20: basetypes.v1.BoolVal
}
var file_npool_order_mw_v1_simulate_config_config_proto_depIdxs = []int32{
	17, // 0: order.middleware.simulate.config.v1.SimulateConfigReq.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	17, // 1: order.middleware.simulate.config.v1.SimulateConfig.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	18, // 2: order.middleware.simulate.config.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	19, // 3: order.middleware.simulate.config.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	19, // 4: order.middleware.simulate.config.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	18, // 5: order.middleware.simulate.config.v1.Conds.SendCouponMode:type_name -> basetypes.v1.Uint32Val
	20, // 6: order.middleware.simulate.config.v1.Conds.EnabledCashableProfit:type_name -> basetypes.v1.BoolVal
	20, // 7: order.middleware.simulate.config.v1.Conds.Enabled:type_name -> basetypes.v1.BoolVal
	0,  // 8: order.middleware.simulate.config.v1.CreateSimulateConfigRequest.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfigReq
	1,  // 9: order.middleware.simulate.config.v1.CreateSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	0,  // 10: order.middleware.simulate.config.v1.UpdateSimulateConfigRequest.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfigReq
	1,  // 11: order.middleware.simulate.config.v1.UpdateSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	1,  // 12: order.middleware.simulate.config.v1.GetSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	2,  // 13: order.middleware.simulate.config.v1.GetSimulateConfigsRequest.Conds:type_name -> order.middleware.simulate.config.v1.Conds
	1,  // 14: order.middleware.simulate.config.v1.GetSimulateConfigsResponse.Infos:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	2,  // 15: order.middleware.simulate.config.v1.ExistSimulateConfigCondsRequest.Conds:type_name -> order.middleware.simulate.config.v1.Conds
	0,  // 16: order.middleware.simulate.config.v1.DeleteSimulateConfigRequest.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfigReq
	1,  // 17: order.middleware.simulate.config.v1.DeleteSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	3,  // 18: order.middleware.simulate.config.v1.Middleware.CreateSimulateConfig:input_type -> order.middleware.simulate.config.v1.CreateSimulateConfigRequest
	5,  // 19: order.middleware.simulate.config.v1.Middleware.UpdateSimulateConfig:input_type -> order.middleware.simulate.config.v1.UpdateSimulateConfigRequest
	7,  // 20: order.middleware.simulate.config.v1.Middleware.GetSimulateConfig:input_type -> order.middleware.simulate.config.v1.GetSimulateConfigRequest
	9,  // 21: order.middleware.simulate.config.v1.Middleware.GetSimulateConfigs:input_type -> order.middleware.simulate.config.v1.GetSimulateConfigsRequest
	11, // 22: order.middleware.simulate.config.v1.Middleware.ExistSimulateConfig:input_type -> order.middleware.simulate.config.v1.ExistSimulateConfigRequest
	13, // 23: order.middleware.simulate.config.v1.Middleware.ExistSimulateConfigConds:input_type -> order.middleware.simulate.config.v1.ExistSimulateConfigCondsRequest
	15, // 24: order.middleware.simulate.config.v1.Middleware.DeleteSimulateConfig:input_type -> order.middleware.simulate.config.v1.DeleteSimulateConfigRequest
	4,  // 25: order.middleware.simulate.config.v1.Middleware.CreateSimulateConfig:output_type -> order.middleware.simulate.config.v1.CreateSimulateConfigResponse
	6,  // 26: order.middleware.simulate.config.v1.Middleware.UpdateSimulateConfig:output_type -> order.middleware.simulate.config.v1.UpdateSimulateConfigResponse
	8,  // 27: order.middleware.simulate.config.v1.Middleware.GetSimulateConfig:output_type -> order.middleware.simulate.config.v1.GetSimulateConfigResponse
	10, // 28: order.middleware.simulate.config.v1.Middleware.GetSimulateConfigs:output_type -> order.middleware.simulate.config.v1.GetSimulateConfigsResponse
	12, // 29: order.middleware.simulate.config.v1.Middleware.ExistSimulateConfig:output_type -> order.middleware.simulate.config.v1.ExistSimulateConfigResponse
	14, // 30: order.middleware.simulate.config.v1.Middleware.ExistSimulateConfigConds:output_type -> order.middleware.simulate.config.v1.ExistSimulateConfigCondsResponse
	16, // 31: order.middleware.simulate.config.v1.Middleware.DeleteSimulateConfig:output_type -> order.middleware.simulate.config.v1.DeleteSimulateConfigResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_npool_order_mw_v1_simulate_config_config_proto_init() }
func file_npool_order_mw_v1_simulate_config_config_proto_init() {
	if File_npool_order_mw_v1_simulate_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulateConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSimulateConfigCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistSimulateConfigCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_mw_v1_simulate_config_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_mw_v1_simulate_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_mw_v1_simulate_config_config_proto_goTypes,
		DependencyIndexes: file_npool_order_mw_v1_simulate_config_config_proto_depIdxs,
		MessageInfos:      file_npool_order_mw_v1_simulate_config_config_proto_msgTypes,
	}.Build()
	File_npool_order_mw_v1_simulate_config_config_proto = out.File
	file_npool_order_mw_v1_simulate_config_config_proto_rawDesc = nil
	file_npool_order_mw_v1_simulate_config_config_proto_goTypes = nil
	file_npool_order_mw_v1_simulate_config_config_proto_depIdxs = nil
}
