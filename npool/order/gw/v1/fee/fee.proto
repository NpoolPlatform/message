syntax = "proto3";

package order.gateway.fee.v1;

option go_package = "github.com/NpoolPlatform/message/npool/order/gw/v1/fee";

import "google/api/annotations.proto";
import "npool/basetypes/order/v1/enums.proto";
import "npool/basetypes/good/v1/enums.proto";
import "npool/order/gw/v1/order/coupon/coupon.proto";
import "npool/order/gw/v1/payment/payment.proto";

// Service Name
service Gateway {
    rpc CreateFeeOrder (CreateFeeOrderRequest) returns (CreateFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/create/feeorder"
            body: "*"
        };
    }

    rpc CreateUserFeeOrder (CreateUserFeeOrderRequest) returns (CreateUserFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/feeorder"
            body: "*"
        };
    }

    rpc CreateFeeOrders (CreateFeeOrdersRequest) returns (CreateFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/create/feeorders"
            body: "*"
        };
    }

    rpc CreateUserFeeOrders (CreateUserFeeOrdersRequest) returns (CreateUserFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/create/user/feeorders"
            body: "*"
        };
    }

    rpc UpdateFeeOrder (UpdateFeeOrderRequest) returns (UpdateFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/update/feeorder"
            body: "*"
        };
    }

    rpc UpdateUserFeeOrder (UpdateUserFeeOrderRequest) returns (UpdateUserFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/update/user/feeorder"
            body: "*"
        };
    }

    rpc GetFeeOrder (GetFeeOrderRequest) returns (GetFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/feeorder"
            body: "*"
        };
    }

    rpc GetFeeOrders (GetFeeOrdersRequest) returns (GetFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/get/feeorders"
            body: "*"
        };
    }

    rpc GetMyFeeOrders (GetMyFeeOrdersRequest) returns (GetMyFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/get/my/feeorders"
            body: "*"
        };
    }

    // Admin apis
    rpc AdminCreateFeeOrder (AdminCreateFeeOrderRequest) returns (AdminCreateFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/feeorder"
            body: "*"
        };
    }

    rpc AdminCreateFeeOrders (AdminCreateFeeOrdersRequest) returns (AdminCreateFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/feeorders"
            body: "*"
        };
    }

    rpc AdminUpdateFeeOrder (AdminUpdateFeeOrderRequest) returns (AdminUpdateFeeOrderResponse) {
      option (google.api.http) = {
          post: "/v1/admin/update/feeorder"
          body: "*"
      };
    }

    rpc AdminGetFeeOrders (AdminGetFeeOrdersRequest) returns (AdminGetFeeOrdersResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/feeorders"
            body: "*"
        };
    }

    rpc AdminDeleteFeeOrder (AdminDeleteFeeOrderRequest) returns (AdminDeleteFeeOrderResponse) {
        option (google.api.http) = {
            post: "/v1/admin/delete/feeorder"
            body: "*"
        };
    }
}

message FeeOrder {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppName = 40;
    string UserID = 50;
    string EmailAddress = 60;
    string PhoneNO = 70;
    string GoodID = 80;
    basetypes.good.v1.GoodType GoodType = 90;
    string GoodName = 100;
    string AppGoodID = 110;
    string AppGoodName = 120;
    string OrderID = 130;
    string ParentOrderID = 140;
    string ParentAppGoodID = 150;
    string ParentAppGoodName = 160;
    basetypes.good.v1.GoodType ParentGoodType = 170;
    basetypes.order.v1.OrderType OrderType = 180;
    basetypes.order.v1.PaymentType PaymentType = 190;
    basetypes.order.v1.OrderCreateMethod CreateMethod = 200;

    basetypes.order.v1.OrderState OrderState = 250;

    string GoodValueUSD = 300;
    string PaymentAmountUSD = 310;
    string DiscountAmountUSD = 320;
    string PromotionID = 330;
    string TopMostTitle = 340;
    string TopMostTargetUrl = 350;

    basetypes.good.v1.GoodDurationType DurationDisplayType = 400;
    uint32 DurationSeconds = 410;
    basetypes.order.v1.OrderState CancelState = 420;
    uint32 CanceledAt = 430;
    uint32 PaidAt = 440;
    bool UserSetPaid = 450;
    bool UserSetCanceled = 460;
    bool AdminSetCanceled = 470;
    basetypes.order.v1.PaymentState PaymentState = 480;

    repeated order.gateway.order1.coupon.v1.OrderCouponInfo Coupons = 600;
    repeated order.gateway.payment.v1.PaymentBalanceInfo PaymentBalances = 610;
    repeated order.gateway.payment.v1.PaymentTransferInfo PaymentTransfers = 620;

    uint32 CreatedAt = 1000;
    uint32 UpdatedAt = 1010;
}

message FeeDuration {
    string AppGoodID = 10;
    string AppGoodName = 20;
    uint32 DurationSeconds = 30;
}

message CreateFeeOrderRequest {
    string AppID = 10;
    string UserID = 20;
    string AppGoodID = 30;
    string ParentOrderID = 40;
    uint32 DurationSeconds = 50;
    repeated order.gateway.payment.v1.PaymentBalance Balances = 60;
    optional string PaymentTransferCoinTypeID = 70;
    repeated string CouponIDs = 80;
}

message CreateFeeOrderResponse {
    FeeOrder Info = 10;
}

message CreateUserFeeOrderRequest {
    string AppID = 10;
    string TargetUserID = 20;
    string AppGoodID = 30;
    string ParentOrderID = 40;
    uint32 DurationSeconds = 50;
    basetypes.order.v1.OrderType OrderType = 60;
}

message CreateUserFeeOrderResponse {
    FeeOrder Info = 10;
}

message CreateFeeOrdersRequest {
    string AppID = 10;
    string UserID = 20;
    string ParentOrderID = 30;
    uint32 DurationSeconds = 40;
    repeated order.gateway.payment.v1.PaymentBalance Balances = 50;
    optional string PaymentTransferCoinTypeID = 60;
    repeated string CouponIDs = 70;
    repeated string AppGoodIDs = 80;
}

message CreateFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
}

message CreateUserFeeOrdersRequest {
    string AppID = 10;
    string TargetUserID = 20;
    string ParentOrderID = 30;
    uint32 DurationSeconds = 40;
    repeated string AppGoodIDs = 50;
    basetypes.order.v1.OrderType OrderType = 60;
}

message CreateUserFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
}

message UpdateFeeOrderRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string UserID = 40;
    string OrderID = 50;
    repeated order.gateway.payment.v1.PaymentBalance Balances = 60;
    optional string PaymentTransferCoinTypeID = 70;
    optional bool Paid = 80;
    optional bool Canceled = 90;
}

message UpdateFeeOrderResponse {
    FeeOrder Info = 10;
}

message UpdateUserFeeOrderRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    string OrderID = 40;
    optional bool Canceled = 50;
}

message UpdateUserFeeOrderResponse {
    FeeOrder Info = 10;
}

message GetFeeOrderRequest {
    string AppID = 10;
    string UserID = 20;
    string OrderID = 30;
}

message GetFeeOrderResponse {
    FeeOrder Info = 10;
}

message GetFeeOrdersRequest {
    string AppID = 10;
    optional string TargetUserID = 20;
    optional string AppGoodID = 30;
    int32 Offset = 40;
    int32 Limit = 50;
}

message GetFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
    uint32 Total = 20;
}

message GetMyFeeOrdersRequest {
    string AppID = 10;
    string UserID = 20;
    optional string AppGoodID = 30;
    int32 Offset = 40;
    int32 Limit = 50;
}

message GetMyFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
    uint32 Total = 20;
}

message AdminCreateFeeOrderRequest {
    string TargetAppID = 10;
    string TargetUserID = 20;
    string AppGoodID = 30;
    string ParentOrderID = 40;
    uint32 DurationSeconds = 50;
    basetypes.order.v1.OrderType OrderType = 60;
}

message AdminCreateFeeOrderResponse {
    FeeOrder Info = 10;
}

message AdminCreateFeeOrdersRequest {
    string TargetAppID = 10;
    string TargetUserID = 20;
    string ParentOrderID = 30;
    uint32 DurationSeconds = 40;
    repeated string AppGoodID = 50;
    basetypes.order.v1.OrderType OrderType = 60;
}

message AdminCreateFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
}

message AdminUpdateFeeOrderRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    string OrderID = 40;
    optional bool Canceled = 50;
}

message AdminUpdateFeeOrderResponse {
    FeeOrder Info = 10;
}

message AdminGetFeeOrdersRequest {
    optional string TargetAppID = 10;
    optional string GoodID = 20;
    int32 Offset = 30;
    int32 Limit = 40;
}

message AdminGetFeeOrdersResponse {
    repeated FeeOrder Infos = 10;
    uint32 Total = 20;
}

message AdminDeleteFeeOrderRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    string OrderID = 40;
}

message AdminDeleteFeeOrderResponse {
    FeeOrder Info = 10;
}
