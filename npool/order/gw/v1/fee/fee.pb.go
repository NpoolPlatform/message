// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/order/gw/v1/fee/fee.proto

package fee

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/order/v1"
	coupon "github.com/NpoolPlatform/message/npool/order/gw/v1/order/coupon"
	payment "github.com/NpoolPlatform/message/npool/order/gw/v1/payment"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32                         `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID               string                         `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID               string                         `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName             string                         `protobuf:"bytes,40,opt,name=AppName,proto3" json:"AppName,omitempty"`
	UserID              string                         `protobuf:"bytes,50,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress        string                         `protobuf:"bytes,60,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO             string                         `protobuf:"bytes,70,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	GoodID              string                         `protobuf:"bytes,80,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodType            v1.GoodType                    `protobuf:"varint,90,opt,name=GoodType,proto3,enum=basetypes.good.v1.GoodType" json:"GoodType,omitempty"`
	GoodName            string                         `protobuf:"bytes,100,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	AppGoodID           string                         `protobuf:"bytes,110,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	AppGoodName         string                         `protobuf:"bytes,120,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty"`
	OrderID             string                         `protobuf:"bytes,130,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	ParentOrderID       string                         `protobuf:"bytes,140,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	ParentAppGoodID     string                         `protobuf:"bytes,150,opt,name=ParentAppGoodID,proto3" json:"ParentAppGoodID,omitempty"`
	ParentAppGoodName   string                         `protobuf:"bytes,160,opt,name=ParentAppGoodName,proto3" json:"ParentAppGoodName,omitempty"`
	ParentGoodType      v1.GoodType                    `protobuf:"varint,170,opt,name=ParentGoodType,proto3,enum=basetypes.good.v1.GoodType" json:"ParentGoodType,omitempty"`
	OrderType           v11.OrderType                  `protobuf:"varint,180,opt,name=OrderType,proto3,enum=basetypes.order.v1.OrderType" json:"OrderType,omitempty"`
	PaymentType         v11.PaymentType                `protobuf:"varint,190,opt,name=PaymentType,proto3,enum=basetypes.order.v1.PaymentType" json:"PaymentType,omitempty"`
	CreateMethod        v11.OrderCreateMethod          `protobuf:"varint,200,opt,name=CreateMethod,proto3,enum=basetypes.order.v1.OrderCreateMethod" json:"CreateMethod,omitempty"`
	OrderState          v11.OrderState                 `protobuf:"varint,250,opt,name=OrderState,proto3,enum=basetypes.order.v1.OrderState" json:"OrderState,omitempty"`
	GoodValueUSD        string                         `protobuf:"bytes,300,opt,name=GoodValueUSD,proto3" json:"GoodValueUSD,omitempty"`
	PaymentAmountUSD    string                         `protobuf:"bytes,310,opt,name=PaymentAmountUSD,proto3" json:"PaymentAmountUSD,omitempty"`
	DiscountAmountUSD   string                         `protobuf:"bytes,320,opt,name=DiscountAmountUSD,proto3" json:"DiscountAmountUSD,omitempty"`
	PromotionID         string                         `protobuf:"bytes,330,opt,name=PromotionID,proto3" json:"PromotionID,omitempty"`
	TopMostTitle        string                         `protobuf:"bytes,340,opt,name=TopMostTitle,proto3" json:"TopMostTitle,omitempty"`
	TopMostTargetUrl    string                         `protobuf:"bytes,350,opt,name=TopMostTargetUrl,proto3" json:"TopMostTargetUrl,omitempty"`
	DurationDisplayType v1.GoodDurationType            `protobuf:"varint,400,opt,name=DurationDisplayType,proto3,enum=basetypes.good.v1.GoodDurationType" json:"DurationDisplayType,omitempty"`
	DurationUnit        string                         `protobuf:"bytes,410,opt,name=DurationUnit,proto3" json:"DurationUnit,omitempty"`
	DurationSeconds     uint32                         `protobuf:"varint,420,opt,name=DurationSeconds,proto3" json:"DurationSeconds,omitempty"`
	Durations           uint32                         `protobuf:"varint,430,opt,name=Durations,proto3" json:"Durations,omitempty"`
	CancelState         v11.OrderState                 `protobuf:"varint,440,opt,name=CancelState,proto3,enum=basetypes.order.v1.OrderState" json:"CancelState,omitempty"`
	CanceledAt          uint32                         `protobuf:"varint,450,opt,name=CanceledAt,proto3" json:"CanceledAt,omitempty"`
	PaidAt              uint32                         `protobuf:"varint,460,opt,name=PaidAt,proto3" json:"PaidAt,omitempty"`
	UserSetPaid         bool                           `protobuf:"varint,470,opt,name=UserSetPaid,proto3" json:"UserSetPaid,omitempty"`
	UserSetCanceled     bool                           `protobuf:"varint,480,opt,name=UserSetCanceled,proto3" json:"UserSetCanceled,omitempty"`
	AdminSetCanceled    bool                           `protobuf:"varint,490,opt,name=AdminSetCanceled,proto3" json:"AdminSetCanceled,omitempty"`
	PaymentState        v11.PaymentState               `protobuf:"varint,500,opt,name=PaymentState,proto3,enum=basetypes.order.v1.PaymentState" json:"PaymentState,omitempty"`
	Coupons             []*coupon.OrderCouponInfo      `protobuf:"bytes,600,rep,name=Coupons,proto3" json:"Coupons,omitempty"`
	PaymentBalances     []*payment.PaymentBalanceInfo  `protobuf:"bytes,610,rep,name=PaymentBalances,proto3" json:"PaymentBalances,omitempty"`
	PaymentTransfers    []*payment.PaymentTransferInfo `protobuf:"bytes,620,rep,name=PaymentTransfers,proto3" json:"PaymentTransfers,omitempty"`
	CreatedAt           uint32                         `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt           uint32                         `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *FeeOrder) Reset() {
	*x = FeeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeOrder) ProtoMessage() {}

func (x *FeeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeOrder.ProtoReflect.Descriptor instead.
func (*FeeOrder) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{0}
}

func (x *FeeOrder) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FeeOrder) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *FeeOrder) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FeeOrder) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *FeeOrder) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FeeOrder) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *FeeOrder) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *FeeOrder) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *FeeOrder) GetGoodType() v1.GoodType {
	if x != nil {
		return x.GoodType
	}
	return v1.GoodType(0)
}

func (x *FeeOrder) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *FeeOrder) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *FeeOrder) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *FeeOrder) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *FeeOrder) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *FeeOrder) GetParentAppGoodID() string {
	if x != nil {
		return x.ParentAppGoodID
	}
	return ""
}

func (x *FeeOrder) GetParentAppGoodName() string {
	if x != nil {
		return x.ParentAppGoodName
	}
	return ""
}

func (x *FeeOrder) GetParentGoodType() v1.GoodType {
	if x != nil {
		return x.ParentGoodType
	}
	return v1.GoodType(0)
}

func (x *FeeOrder) GetOrderType() v11.OrderType {
	if x != nil {
		return x.OrderType
	}
	return v11.OrderType(0)
}

func (x *FeeOrder) GetPaymentType() v11.PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return v11.PaymentType(0)
}

func (x *FeeOrder) GetCreateMethod() v11.OrderCreateMethod {
	if x != nil {
		return x.CreateMethod
	}
	return v11.OrderCreateMethod(0)
}

func (x *FeeOrder) GetOrderState() v11.OrderState {
	if x != nil {
		return x.OrderState
	}
	return v11.OrderState(0)
}

func (x *FeeOrder) GetGoodValueUSD() string {
	if x != nil {
		return x.GoodValueUSD
	}
	return ""
}

func (x *FeeOrder) GetPaymentAmountUSD() string {
	if x != nil {
		return x.PaymentAmountUSD
	}
	return ""
}

func (x *FeeOrder) GetDiscountAmountUSD() string {
	if x != nil {
		return x.DiscountAmountUSD
	}
	return ""
}

func (x *FeeOrder) GetPromotionID() string {
	if x != nil {
		return x.PromotionID
	}
	return ""
}

func (x *FeeOrder) GetTopMostTitle() string {
	if x != nil {
		return x.TopMostTitle
	}
	return ""
}

func (x *FeeOrder) GetTopMostTargetUrl() string {
	if x != nil {
		return x.TopMostTargetUrl
	}
	return ""
}

func (x *FeeOrder) GetDurationDisplayType() v1.GoodDurationType {
	if x != nil {
		return x.DurationDisplayType
	}
	return v1.GoodDurationType(0)
}

func (x *FeeOrder) GetDurationUnit() string {
	if x != nil {
		return x.DurationUnit
	}
	return ""
}

func (x *FeeOrder) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *FeeOrder) GetDurations() uint32 {
	if x != nil {
		return x.Durations
	}
	return 0
}

func (x *FeeOrder) GetCancelState() v11.OrderState {
	if x != nil {
		return x.CancelState
	}
	return v11.OrderState(0)
}

func (x *FeeOrder) GetCanceledAt() uint32 {
	if x != nil {
		return x.CanceledAt
	}
	return 0
}

func (x *FeeOrder) GetPaidAt() uint32 {
	if x != nil {
		return x.PaidAt
	}
	return 0
}

func (x *FeeOrder) GetUserSetPaid() bool {
	if x != nil {
		return x.UserSetPaid
	}
	return false
}

func (x *FeeOrder) GetUserSetCanceled() bool {
	if x != nil {
		return x.UserSetCanceled
	}
	return false
}

func (x *FeeOrder) GetAdminSetCanceled() bool {
	if x != nil {
		return x.AdminSetCanceled
	}
	return false
}

func (x *FeeOrder) GetPaymentState() v11.PaymentState {
	if x != nil {
		return x.PaymentState
	}
	return v11.PaymentState(0)
}

func (x *FeeOrder) GetCoupons() []*coupon.OrderCouponInfo {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *FeeOrder) GetPaymentBalances() []*payment.PaymentBalanceInfo {
	if x != nil {
		return x.PaymentBalances
	}
	return nil
}

func (x *FeeOrder) GetPaymentTransfers() []*payment.PaymentTransferInfo {
	if x != nil {
		return x.PaymentTransfers
	}
	return nil
}

func (x *FeeOrder) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FeeOrder) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FeeDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppGoodID            string `protobuf:"bytes,10,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	AppGoodName          string `protobuf:"bytes,20,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty"`
	TotalDurationSeconds uint32 `protobuf:"varint,30,opt,name=TotalDurationSeconds,proto3" json:"TotalDurationSeconds,omitempty"`
}

func (x *FeeDuration) Reset() {
	*x = FeeDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeDuration) ProtoMessage() {}

func (x *FeeDuration) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeDuration.ProtoReflect.Descriptor instead.
func (*FeeDuration) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{1}
}

func (x *FeeDuration) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *FeeDuration) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *FeeDuration) GetTotalDurationSeconds() uint32 {
	if x != nil {
		return x.TotalDurationSeconds
	}
	return 0
}

type CreateFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                     string                    `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                    string                    `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppGoodID                 string                    `protobuf:"bytes,30,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	ParentOrderID             string                    `protobuf:"bytes,40,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	DurationSeconds           uint32                    `protobuf:"varint,50,opt,name=DurationSeconds,proto3" json:"DurationSeconds,omitempty"`
	Balances                  []*payment.PaymentBalance `protobuf:"bytes,60,rep,name=Balances,proto3" json:"Balances,omitempty"`
	PaymentTransferCoinTypeID *string                   `protobuf:"bytes,70,opt,name=PaymentTransferCoinTypeID,proto3,oneof" json:"PaymentTransferCoinTypeID,omitempty"`
	CouponIDs                 []string                  `protobuf:"bytes,80,rep,name=CouponIDs,proto3" json:"CouponIDs,omitempty"`
}

func (x *CreateFeeOrderRequest) Reset() {
	*x = CreateFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeeOrderRequest) ProtoMessage() {}

func (x *CreateFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeeOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateFeeOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateFeeOrderRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *CreateFeeOrderRequest) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *CreateFeeOrderRequest) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CreateFeeOrderRequest) GetBalances() []*payment.PaymentBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *CreateFeeOrderRequest) GetPaymentTransferCoinTypeID() string {
	if x != nil && x.PaymentTransferCoinTypeID != nil {
		return *x.PaymentTransferCoinTypeID
	}
	return ""
}

func (x *CreateFeeOrderRequest) GetCouponIDs() []string {
	if x != nil {
		return x.CouponIDs
	}
	return nil
}

type CreateFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateFeeOrderResponse) Reset() {
	*x = CreateFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeeOrderResponse) ProtoMessage() {}

func (x *CreateFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID           string        `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID    string        `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	AppGoodID       string        `protobuf:"bytes,30,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	ParentOrderID   string        `protobuf:"bytes,40,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	DurationSeconds uint32        `protobuf:"varint,50,opt,name=DurationSeconds,proto3" json:"DurationSeconds,omitempty"`
	OrderType       v11.OrderType `protobuf:"varint,60,opt,name=OrderType,proto3,enum=basetypes.order.v1.OrderType" json:"OrderType,omitempty"`
}

func (x *CreateUserFeeOrderRequest) Reset() {
	*x = CreateUserFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserFeeOrderRequest) ProtoMessage() {}

func (x *CreateUserFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateUserFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserFeeOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateUserFeeOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateUserFeeOrderRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *CreateUserFeeOrderRequest) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *CreateUserFeeOrderRequest) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CreateUserFeeOrderRequest) GetOrderType() v11.OrderType {
	if x != nil {
		return x.OrderType
	}
	return v11.OrderType(0)
}

type CreateUserFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserFeeOrderResponse) Reset() {
	*x = CreateUserFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserFeeOrderResponse) ProtoMessage() {}

func (x *CreateUserFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateUserFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateFeeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                     string                    `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                    string                    `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ParentOrderID             string                    `protobuf:"bytes,30,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	DurationSeconds           uint32                    `protobuf:"varint,40,opt,name=DurationSeconds,proto3" json:"DurationSeconds,omitempty"`
	Balances                  []*payment.PaymentBalance `protobuf:"bytes,50,rep,name=Balances,proto3" json:"Balances,omitempty"`
	PaymentTransferCoinTypeID *string                   `protobuf:"bytes,60,opt,name=PaymentTransferCoinTypeID,proto3,oneof" json:"PaymentTransferCoinTypeID,omitempty"`
	CouponIDs                 []string                  `protobuf:"bytes,70,rep,name=CouponIDs,proto3" json:"CouponIDs,omitempty"`
	AppGoodIDs                []string                  `protobuf:"bytes,80,rep,name=AppGoodIDs,proto3" json:"AppGoodIDs,omitempty"`
}

func (x *CreateFeeOrdersRequest) Reset() {
	*x = CreateFeeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeeOrdersRequest) ProtoMessage() {}

func (x *CreateFeeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeeOrdersRequest.ProtoReflect.Descriptor instead.
func (*CreateFeeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFeeOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateFeeOrdersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateFeeOrdersRequest) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *CreateFeeOrdersRequest) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CreateFeeOrdersRequest) GetBalances() []*payment.PaymentBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *CreateFeeOrdersRequest) GetPaymentTransferCoinTypeID() string {
	if x != nil && x.PaymentTransferCoinTypeID != nil {
		return *x.PaymentTransferCoinTypeID
	}
	return ""
}

func (x *CreateFeeOrdersRequest) GetCouponIDs() []string {
	if x != nil {
		return x.CouponIDs
	}
	return nil
}

func (x *CreateFeeOrdersRequest) GetAppGoodIDs() []string {
	if x != nil {
		return x.AppGoodIDs
	}
	return nil
}

type CreateFeeOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FeeOrder `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateFeeOrdersResponse) Reset() {
	*x = CreateFeeOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeeOrdersResponse) ProtoMessage() {}

func (x *CreateFeeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeeOrdersResponse.ProtoReflect.Descriptor instead.
func (*CreateFeeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFeeOrdersResponse) GetInfos() []*FeeOrder {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                        uint32                    `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                     string                    `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                     string                    `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                    string                    `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OrderID                   string                    `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Balances                  []*payment.PaymentBalance `protobuf:"bytes,60,rep,name=Balances,proto3" json:"Balances,omitempty"`
	PaymentTransferCoinTypeID *string                   `protobuf:"bytes,70,opt,name=PaymentTransferCoinTypeID,proto3,oneof" json:"PaymentTransferCoinTypeID,omitempty"`
	Paid                      *bool                     `protobuf:"varint,80,opt,name=Paid,proto3,oneof" json:"Paid,omitempty"`
	Canceled                  *bool                     `protobuf:"varint,90,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *UpdateFeeOrderRequest) Reset() {
	*x = UpdateFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeeOrderRequest) ProtoMessage() {}

func (x *UpdateFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFeeOrderRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateFeeOrderRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateFeeOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateFeeOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateFeeOrderRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UpdateFeeOrderRequest) GetBalances() []*payment.PaymentBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *UpdateFeeOrderRequest) GetPaymentTransferCoinTypeID() string {
	if x != nil && x.PaymentTransferCoinTypeID != nil {
		return *x.PaymentTransferCoinTypeID
	}
	return ""
}

func (x *UpdateFeeOrderRequest) GetPaid() bool {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return false
}

func (x *UpdateFeeOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type UpdateFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateFeeOrderResponse) Reset() {
	*x = UpdateFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeeOrderResponse) ProtoMessage() {}

func (x *UpdateFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID        string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID string `protobuf:"bytes,40,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	OrderID      string `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Canceled     *bool  `protobuf:"varint,60,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *UpdateUserFeeOrderRequest) Reset() {
	*x = UpdateUserFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFeeOrderRequest) ProtoMessage() {}

func (x *UpdateUserFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserFeeOrderRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateUserFeeOrderRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateUserFeeOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateUserFeeOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *UpdateUserFeeOrderRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UpdateUserFeeOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type UpdateUserFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserFeeOrderResponse) Reset() {
	*x = UpdateUserFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFeeOrderResponse) ProtoMessage() {}

func (x *UpdateUserFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OrderID string `protobuf:"bytes,30,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
}

func (x *GetFeeOrderRequest) Reset() {
	*x = GetFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeOrderRequest) ProtoMessage() {}

func (x *GetFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*GetFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{12}
}

func (x *GetFeeOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetFeeOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetFeeOrderRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

type GetFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetFeeOrderResponse) Reset() {
	*x = GetFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeOrderResponse) ProtoMessage() {}

func (x *GetFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*GetFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{13}
}

func (x *GetFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetFeeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
	AppGoodID    *string `protobuf:"bytes,30,opt,name=AppGoodID,proto3,oneof" json:"AppGoodID,omitempty"`
	Offset       int32   `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32   `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetFeeOrdersRequest) Reset() {
	*x = GetFeeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeOrdersRequest) ProtoMessage() {}

func (x *GetFeeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetFeeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{14}
}

func (x *GetFeeOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetFeeOrdersRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

func (x *GetFeeOrdersRequest) GetAppGoodID() string {
	if x != nil && x.AppGoodID != nil {
		return *x.AppGoodID
	}
	return ""
}

func (x *GetFeeOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetFeeOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetFeeOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FeeOrder `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetFeeOrdersResponse) Reset() {
	*x = GetFeeOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeOrdersResponse) ProtoMessage() {}

func (x *GetFeeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetFeeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{15}
}

func (x *GetFeeOrdersResponse) GetInfos() []*FeeOrder {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetFeeOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetMyFeeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID    string  `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppGoodID *string `protobuf:"bytes,30,opt,name=AppGoodID,proto3,oneof" json:"AppGoodID,omitempty"`
	Offset    int32   `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit     int32   `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMyFeeOrdersRequest) Reset() {
	*x = GetMyFeeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeeOrdersRequest) ProtoMessage() {}

func (x *GetMyFeeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeeOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetMyFeeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{16}
}

func (x *GetMyFeeOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMyFeeOrdersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMyFeeOrdersRequest) GetAppGoodID() string {
	if x != nil && x.AppGoodID != nil {
		return *x.AppGoodID
	}
	return ""
}

func (x *GetMyFeeOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMyFeeOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMyFeeOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FeeOrder `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetMyFeeOrdersResponse) Reset() {
	*x = GetMyFeeOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyFeeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyFeeOrdersResponse) ProtoMessage() {}

func (x *GetMyFeeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyFeeOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetMyFeeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{17}
}

func (x *GetMyFeeOrdersResponse) GetInfos() []*FeeOrder {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetMyFeeOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminCreateFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID     string        `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID    string        `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	AppGoodID       string        `protobuf:"bytes,30,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	ParentOrderID   string        `protobuf:"bytes,40,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	DurationSeconds uint32        `protobuf:"varint,50,opt,name=DurationSeconds,proto3" json:"DurationSeconds,omitempty"`
	OrderType       v11.OrderType `protobuf:"varint,60,opt,name=OrderType,proto3,enum=basetypes.order.v1.OrderType" json:"OrderType,omitempty"`
}

func (x *AdminCreateFeeOrderRequest) Reset() {
	*x = AdminCreateFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateFeeOrderRequest) ProtoMessage() {}

func (x *AdminCreateFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{18}
}

func (x *AdminCreateFeeOrderRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateFeeOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *AdminCreateFeeOrderRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *AdminCreateFeeOrderRequest) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *AdminCreateFeeOrderRequest) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *AdminCreateFeeOrderRequest) GetOrderType() v11.OrderType {
	if x != nil {
		return x.OrderType
	}
	return v11.OrderType(0)
}

type AdminCreateFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateFeeOrderResponse) Reset() {
	*x = AdminCreateFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateFeeOrderResponse) ProtoMessage() {}

func (x *AdminCreateFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{19}
}

func (x *AdminCreateFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID  string `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,40,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	OrderID      string `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Canceled     *bool  `protobuf:"varint,60,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *AdminUpdateFeeOrderRequest) Reset() {
	*x = AdminUpdateFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateFeeOrderRequest) ProtoMessage() {}

func (x *AdminUpdateFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{20}
}

func (x *AdminUpdateFeeOrderRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateFeeOrderRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateFeeOrderRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateFeeOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *AdminUpdateFeeOrderRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *AdminUpdateFeeOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type AdminUpdateFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateFeeOrderResponse) Reset() {
	*x = AdminUpdateFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateFeeOrderResponse) ProtoMessage() {}

func (x *AdminUpdateFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{21}
}

func (x *AdminUpdateFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetFeeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID *string `protobuf:"bytes,10,opt,name=TargetAppID,proto3,oneof" json:"TargetAppID,omitempty"`
	GoodID      *string `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	Offset      int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetFeeOrdersRequest) Reset() {
	*x = AdminGetFeeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetFeeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetFeeOrdersRequest) ProtoMessage() {}

func (x *AdminGetFeeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetFeeOrdersRequest.ProtoReflect.Descriptor instead.
func (*AdminGetFeeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{22}
}

func (x *AdminGetFeeOrdersRequest) GetTargetAppID() string {
	if x != nil && x.TargetAppID != nil {
		return *x.TargetAppID
	}
	return ""
}

func (x *AdminGetFeeOrdersRequest) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *AdminGetFeeOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetFeeOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetFeeOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FeeOrder `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetFeeOrdersResponse) Reset() {
	*x = AdminGetFeeOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetFeeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetFeeOrdersResponse) ProtoMessage() {}

func (x *AdminGetFeeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetFeeOrdersResponse.ProtoReflect.Descriptor instead.
func (*AdminGetFeeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{23}
}

func (x *AdminGetFeeOrdersResponse) GetInfos() []*FeeOrder {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetFeeOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminDeleteFeeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID  string `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,40,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	OrderID      string `protobuf:"bytes,50,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
}

func (x *AdminDeleteFeeOrderRequest) Reset() {
	*x = AdminDeleteFeeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteFeeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteFeeOrderRequest) ProtoMessage() {}

func (x *AdminDeleteFeeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteFeeOrderRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteFeeOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{24}
}

func (x *AdminDeleteFeeOrderRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteFeeOrderRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminDeleteFeeOrderRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminDeleteFeeOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *AdminDeleteFeeOrderRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

type AdminDeleteFeeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeeOrder `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteFeeOrderResponse) Reset() {
	*x = AdminDeleteFeeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteFeeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteFeeOrderResponse) ProtoMessage() {}

func (x *AdminDeleteFeeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_fee_fee_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteFeeOrderResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteFeeOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP(), []int{25}
}

func (x *AdminDeleteFeeOrderResponse) GetInfo() *FeeOrder {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_gw_v1_fee_fee_proto protoreflect.FileDescriptor

var file_npool_order_gw_v1_fee_fee_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x0f, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29,
	0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x11, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0xb4, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0xbe, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3f, 0x0a, 0x0a,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xfa, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x53, 0x44, 0x18, 0xac, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55,
	0x53, 0x44, 0x12, 0x2b, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x53, 0x44, 0x18, 0xb6, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x53, 0x44, 0x12,
	0x2d, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x53, 0x44, 0x18, 0xc0, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x53, 0x44, 0x12, 0x21,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0xca, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x23, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0xd4, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0xde, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x56, 0x0a, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x9a, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x29, 0x0a, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0xa4, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xae, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xb8, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0xc2, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17,
	0x0a, 0x06, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74, 0x18, 0xcc, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x18, 0xd6, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0xe0, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0xea, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x73, 0x18, 0xd8, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x31, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0xe2, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x5a,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0xec, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x65,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xf8, 0x02, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x3c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x19, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x50, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x19, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x19,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x18, 0x50, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x44, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x3c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x19, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x50, 0x61,
	0x69, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x04, 0x50, 0x61, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x61, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f,
	0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x62,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x8d, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x51, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x51, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x22, 0x67, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x1a,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x51, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x32, 0x8f, 0x0e, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x8b, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x9c, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x8f, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x8b,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x9c, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01,
	0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x7f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x83, 0x01, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d, 0x79, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x12, 0xa0, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0xa0, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x66,
	0x65, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x98, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66, 0x65, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x66, 0x65, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_gw_v1_fee_fee_proto_rawDescOnce sync.Once
	file_npool_order_gw_v1_fee_fee_proto_rawDescData = file_npool_order_gw_v1_fee_fee_proto_rawDesc
)

func file_npool_order_gw_v1_fee_fee_proto_rawDescGZIP() []byte {
	file_npool_order_gw_v1_fee_fee_proto_rawDescOnce.Do(func() {
		file_npool_order_gw_v1_fee_fee_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_gw_v1_fee_fee_proto_rawDescData)
	})
	return file_npool_order_gw_v1_fee_fee_proto_rawDescData
}

var file_npool_order_gw_v1_fee_fee_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_npool_order_gw_v1_fee_fee_proto_goTypes = []interface{}{
	(*FeeOrder)(nil),                    // 0: order.gateway.fee.v1.FeeOrder
	(*FeeDuration)(nil),                 // 1: order.gateway.fee.v1.FeeDuration
	(*CreateFeeOrderRequest)(nil),       // 2: order.gateway.fee.v1.CreateFeeOrderRequest
	(*CreateFeeOrderResponse)(nil),      // 3: order.gateway.fee.v1.CreateFeeOrderResponse
	(*CreateUserFeeOrderRequest)(nil),   // 4: order.gateway.fee.v1.CreateUserFeeOrderRequest
	(*CreateUserFeeOrderResponse)(nil),  // 5: order.gateway.fee.v1.CreateUserFeeOrderResponse
	(*CreateFeeOrdersRequest)(nil),      // 6: order.gateway.fee.v1.CreateFeeOrdersRequest
	(*CreateFeeOrdersResponse)(nil),     // 7: order.gateway.fee.v1.CreateFeeOrdersResponse
	(*UpdateFeeOrderRequest)(nil),       // 8: order.gateway.fee.v1.UpdateFeeOrderRequest
	(*UpdateFeeOrderResponse)(nil),      // 9: order.gateway.fee.v1.UpdateFeeOrderResponse
	(*UpdateUserFeeOrderRequest)(nil),   // 10: order.gateway.fee.v1.UpdateUserFeeOrderRequest
	(*UpdateUserFeeOrderResponse)(nil),  // 11: order.gateway.fee.v1.UpdateUserFeeOrderResponse
	(*GetFeeOrderRequest)(nil),          // 12: order.gateway.fee.v1.GetFeeOrderRequest
	(*GetFeeOrderResponse)(nil),         // 13: order.gateway.fee.v1.GetFeeOrderResponse
	(*GetFeeOrdersRequest)(nil),         // 14: order.gateway.fee.v1.GetFeeOrdersRequest
	(*GetFeeOrdersResponse)(nil),        // 15: order.gateway.fee.v1.GetFeeOrdersResponse
	(*GetMyFeeOrdersRequest)(nil),       // 16: order.gateway.fee.v1.GetMyFeeOrdersRequest
	(*GetMyFeeOrdersResponse)(nil),      // 17: order.gateway.fee.v1.GetMyFeeOrdersResponse
	(*AdminCreateFeeOrderRequest)(nil),  // 18: order.gateway.fee.v1.AdminCreateFeeOrderRequest
	(*AdminCreateFeeOrderResponse)(nil), // 19: order.gateway.fee.v1.AdminCreateFeeOrderResponse
	(*AdminUpdateFeeOrderRequest)(nil),  // 20: order.gateway.fee.v1.AdminUpdateFeeOrderRequest
	(*AdminUpdateFeeOrderResponse)(nil), // 21: order.gateway.fee.v1.AdminUpdateFeeOrderResponse
	(*AdminGetFeeOrdersRequest)(nil),    // 22: order.gateway.fee.v1.AdminGetFeeOrdersRequest
	(*AdminGetFeeOrdersResponse)(nil),   // 23: order.gateway.fee.v1.AdminGetFeeOrdersResponse
	(*AdminDeleteFeeOrderRequest)(nil),  // 24: order.gateway.fee.v1.AdminDeleteFeeOrderRequest
	(*AdminDeleteFeeOrderResponse)(nil), // 25: order.gateway.fee.v1.AdminDeleteFeeOrderResponse
	(v1.GoodType)(0),                    // 26: basetypes.good.v1.GoodType
	(v11.OrderType)(0),                  // 27: basetypes.order.v1.OrderType
	(v11.PaymentType)(0),                // 28: basetypes.order.v1.PaymentType
	(v11.OrderCreateMethod)(0),          // 29: basetypes.order.v1.OrderCreateMethod
	(v11.OrderState)(0),                 // 30: basetypes.order.v1.OrderState
	(v1.GoodDurationType)(0),            // 31: basetypes.good.v1.GoodDurationType
	(v11.PaymentState)(0),               // 32: basetypes.order.v1.PaymentState
	(*coupon.OrderCouponInfo)(nil),      // 33: order.gateway.order1.coupon.v1.OrderCouponInfo
	(*payment.PaymentBalanceInfo)(nil),  // 34: order.gateway.payment.v1.PaymentBalanceInfo
	(*payment.PaymentTransferInfo)(nil), // 35: order.gateway.payment.v1.PaymentTransferInfo
	(*payment.PaymentBalance)(nil),      // 36: order.gateway.payment.v1.PaymentBalance
}
var file_npool_order_gw_v1_fee_fee_proto_depIdxs = []int32{
	26, // 0: order.gateway.fee.v1.FeeOrder.GoodType:type_name -> basetypes.good.v1.GoodType
	26, // 1: order.gateway.fee.v1.FeeOrder.ParentGoodType:type_name -> basetypes.good.v1.GoodType
	27, // 2: order.gateway.fee.v1.FeeOrder.OrderType:type_name -> basetypes.order.v1.OrderType
	28, // 3: order.gateway.fee.v1.FeeOrder.PaymentType:type_name -> basetypes.order.v1.PaymentType
	29, // 4: order.gateway.fee.v1.FeeOrder.CreateMethod:type_name -> basetypes.order.v1.OrderCreateMethod
	30, // 5: order.gateway.fee.v1.FeeOrder.OrderState:type_name -> basetypes.order.v1.OrderState
	31, // 6: order.gateway.fee.v1.FeeOrder.DurationDisplayType:type_name -> basetypes.good.v1.GoodDurationType
	30, // 7: order.gateway.fee.v1.FeeOrder.CancelState:type_name -> basetypes.order.v1.OrderState
	32, // 8: order.gateway.fee.v1.FeeOrder.PaymentState:type_name -> basetypes.order.v1.PaymentState
	33, // 9: order.gateway.fee.v1.FeeOrder.Coupons:type_name -> order.gateway.order1.coupon.v1.OrderCouponInfo
	34, // 10: order.gateway.fee.v1.FeeOrder.PaymentBalances:type_name -> order.gateway.payment.v1.PaymentBalanceInfo
	35, // 11: order.gateway.fee.v1.FeeOrder.PaymentTransfers:type_name -> order.gateway.payment.v1.PaymentTransferInfo
	36, // 12: order.gateway.fee.v1.CreateFeeOrderRequest.Balances:type_name -> order.gateway.payment.v1.PaymentBalance
	0,  // 13: order.gateway.fee.v1.CreateFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	27, // 14: order.gateway.fee.v1.CreateUserFeeOrderRequest.OrderType:type_name -> basetypes.order.v1.OrderType
	0,  // 15: order.gateway.fee.v1.CreateUserFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	36, // 16: order.gateway.fee.v1.CreateFeeOrdersRequest.Balances:type_name -> order.gateway.payment.v1.PaymentBalance
	0,  // 17: order.gateway.fee.v1.CreateFeeOrdersResponse.Infos:type_name -> order.gateway.fee.v1.FeeOrder
	36, // 18: order.gateway.fee.v1.UpdateFeeOrderRequest.Balances:type_name -> order.gateway.payment.v1.PaymentBalance
	0,  // 19: order.gateway.fee.v1.UpdateFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 20: order.gateway.fee.v1.UpdateUserFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 21: order.gateway.fee.v1.GetFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 22: order.gateway.fee.v1.GetFeeOrdersResponse.Infos:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 23: order.gateway.fee.v1.GetMyFeeOrdersResponse.Infos:type_name -> order.gateway.fee.v1.FeeOrder
	27, // 24: order.gateway.fee.v1.AdminCreateFeeOrderRequest.OrderType:type_name -> basetypes.order.v1.OrderType
	0,  // 25: order.gateway.fee.v1.AdminCreateFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 26: order.gateway.fee.v1.AdminUpdateFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 27: order.gateway.fee.v1.AdminGetFeeOrdersResponse.Infos:type_name -> order.gateway.fee.v1.FeeOrder
	0,  // 28: order.gateway.fee.v1.AdminDeleteFeeOrderResponse.Info:type_name -> order.gateway.fee.v1.FeeOrder
	2,  // 29: order.gateway.fee.v1.Gateway.CreateFeeOrder:input_type -> order.gateway.fee.v1.CreateFeeOrderRequest
	4,  // 30: order.gateway.fee.v1.Gateway.CreateUserFeeOrder:input_type -> order.gateway.fee.v1.CreateUserFeeOrderRequest
	6,  // 31: order.gateway.fee.v1.Gateway.CreateFeeOrders:input_type -> order.gateway.fee.v1.CreateFeeOrdersRequest
	8,  // 32: order.gateway.fee.v1.Gateway.UpdateFeeOrder:input_type -> order.gateway.fee.v1.UpdateFeeOrderRequest
	10, // 33: order.gateway.fee.v1.Gateway.UpdateUserFeeOrder:input_type -> order.gateway.fee.v1.UpdateUserFeeOrderRequest
	12, // 34: order.gateway.fee.v1.Gateway.GetFeeOrder:input_type -> order.gateway.fee.v1.GetFeeOrderRequest
	14, // 35: order.gateway.fee.v1.Gateway.GetFeeOrders:input_type -> order.gateway.fee.v1.GetFeeOrdersRequest
	16, // 36: order.gateway.fee.v1.Gateway.GetMyFeeOrders:input_type -> order.gateway.fee.v1.GetMyFeeOrdersRequest
	18, // 37: order.gateway.fee.v1.Gateway.AdminCreateFeeOrder:input_type -> order.gateway.fee.v1.AdminCreateFeeOrderRequest
	20, // 38: order.gateway.fee.v1.Gateway.AdminUpdateFeeOrder:input_type -> order.gateway.fee.v1.AdminUpdateFeeOrderRequest
	22, // 39: order.gateway.fee.v1.Gateway.AdminGetFeeOrders:input_type -> order.gateway.fee.v1.AdminGetFeeOrdersRequest
	24, // 40: order.gateway.fee.v1.Gateway.AdminDeleteFeeOrder:input_type -> order.gateway.fee.v1.AdminDeleteFeeOrderRequest
	3,  // 41: order.gateway.fee.v1.Gateway.CreateFeeOrder:output_type -> order.gateway.fee.v1.CreateFeeOrderResponse
	5,  // 42: order.gateway.fee.v1.Gateway.CreateUserFeeOrder:output_type -> order.gateway.fee.v1.CreateUserFeeOrderResponse
	7,  // 43: order.gateway.fee.v1.Gateway.CreateFeeOrders:output_type -> order.gateway.fee.v1.CreateFeeOrdersResponse
	9,  // 44: order.gateway.fee.v1.Gateway.UpdateFeeOrder:output_type -> order.gateway.fee.v1.UpdateFeeOrderResponse
	11, // 45: order.gateway.fee.v1.Gateway.UpdateUserFeeOrder:output_type -> order.gateway.fee.v1.UpdateUserFeeOrderResponse
	13, // 46: order.gateway.fee.v1.Gateway.GetFeeOrder:output_type -> order.gateway.fee.v1.GetFeeOrderResponse
	15, // 47: order.gateway.fee.v1.Gateway.GetFeeOrders:output_type -> order.gateway.fee.v1.GetFeeOrdersResponse
	17, // 48: order.gateway.fee.v1.Gateway.GetMyFeeOrders:output_type -> order.gateway.fee.v1.GetMyFeeOrdersResponse
	19, // 49: order.gateway.fee.v1.Gateway.AdminCreateFeeOrder:output_type -> order.gateway.fee.v1.AdminCreateFeeOrderResponse
	21, // 50: order.gateway.fee.v1.Gateway.AdminUpdateFeeOrder:output_type -> order.gateway.fee.v1.AdminUpdateFeeOrderResponse
	23, // 51: order.gateway.fee.v1.Gateway.AdminGetFeeOrders:output_type -> order.gateway.fee.v1.AdminGetFeeOrdersResponse
	25, // 52: order.gateway.fee.v1.Gateway.AdminDeleteFeeOrder:output_type -> order.gateway.fee.v1.AdminDeleteFeeOrderResponse
	41, // [41:53] is the sub-list for method output_type
	29, // [29:41] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_npool_order_gw_v1_fee_fee_proto_init() }
func file_npool_order_gw_v1_fee_fee_proto_init() {
	if File_npool_order_gw_v1_fee_fee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeeOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyFeeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyFeeOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetFeeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetFeeOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteFeeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_fee_fee_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteFeeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_fee_fee_proto_msgTypes[22].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_gw_v1_fee_fee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_gw_v1_fee_fee_proto_goTypes,
		DependencyIndexes: file_npool_order_gw_v1_fee_fee_proto_depIdxs,
		MessageInfos:      file_npool_order_gw_v1_fee_fee_proto_msgTypes,
	}.Build()
	File_npool_order_gw_v1_fee_fee_proto = out.File
	file_npool_order_gw_v1_fee_fee_proto_rawDesc = nil
	file_npool_order_gw_v1_fee_fee_proto_goTypes = nil
	file_npool_order_gw_v1_fee_fee_proto_depIdxs = nil
}
