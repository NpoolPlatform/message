// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/order/gw/v1/order/order.proto

package order

import (
	allocated "github.com/NpoolPlatform/message/npool/inspire/mgr/v1/coupon/allocated"
	order "github.com/NpoolPlatform/message/npool/order/mgr/v1/order"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponID    string               `protobuf:"bytes,10,opt,name=CouponID,proto3" json:"CouponID,omitempty"`
	CouponType  allocated.CouponType `protobuf:"varint,20,opt,name=CouponType,proto3,enum=inspire.manager.coupon.allocated.v1.CouponType" json:"CouponType,omitempty"`
	CouponName  string               `protobuf:"bytes,30,opt,name=CouponName,proto3" json:"CouponName,omitempty"`
	CouponValue string               `protobuf:"bytes,40,opt,name=CouponValue,proto3" json:"CouponValue,omitempty"`
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *Coupon) GetCouponID() string {
	if x != nil {
		return x.CouponID
	}
	return ""
}

func (x *Coupon) GetCouponType() allocated.CouponType {
	if x != nil {
		return x.CouponType
	}
	return allocated.CouponType(0)
}

func (x *Coupon) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *Coupon) GetCouponValue() string {
	if x != nil {
		return x.CouponValue
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                      string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ParentOrderID           string           `protobuf:"bytes,20,opt,name=ParentOrderID,proto3" json:"ParentOrderID,omitempty"`
	ParentOrderGoodID       string           `protobuf:"bytes,30,opt,name=ParentOrderGoodID,proto3" json:"ParentOrderGoodID,omitempty"`
	ParentOrderGoodName     string           `protobuf:"bytes,40,opt,name=ParentOrderGoodName,proto3" json:"ParentOrderGoodName,omitempty"`
	AppID                   string           `protobuf:"bytes,49,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                  string           `protobuf:"bytes,50,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress            string           `protobuf:"bytes,60,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO                 string           `protobuf:"bytes,70,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	CoinTypeID              string           `protobuf:"bytes,80,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName                string           `protobuf:"bytes,90,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	CoinLogo                string           `protobuf:"bytes,100,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	CoinUnit                string           `protobuf:"bytes,110,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	CoinPresale             bool             `protobuf:"varint,111,opt,name=CoinPresale,proto3" json:"CoinPresale,omitempty"`
	GoodID                  string           `protobuf:"bytes,120,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodName                string           `protobuf:"bytes,130,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	GoodUnit                string           `protobuf:"bytes,131,opt,name=GoodUnit,proto3" json:"GoodUnit,omitempty"`
	GoodServicePeriodDays   uint32           `protobuf:"varint,132,opt,name=GoodServicePeriodDays,proto3" json:"GoodServicePeriodDays,omitempty"`
	GoodUnitPrice           string           `protobuf:"bytes,133,opt,name=GoodUnitPrice,proto3" json:"GoodUnitPrice,omitempty"`
	GoodValue               string           `protobuf:"bytes,134,opt,name=GoodValue,proto3" json:"GoodValue,omitempty"`
	Units                   string           `protobuf:"bytes,140,opt,name=Units,proto3" json:"Units,omitempty"`
	PaymentID               string           `protobuf:"bytes,150,opt,name=PaymentID,proto3" json:"PaymentID,omitempty"`
	PaymentCoinTypeID       string           `protobuf:"bytes,160,opt,name=PaymentCoinTypeID,proto3" json:"PaymentCoinTypeID,omitempty"`
	PaymentCoinName         string           `protobuf:"bytes,170,opt,name=PaymentCoinName,proto3" json:"PaymentCoinName,omitempty"`
	PaymentCoinLogo         string           `protobuf:"bytes,180,opt,name=PaymentCoinLogo,proto3" json:"PaymentCoinLogo,omitempty"`
	PaymentCoinUnit         string           `protobuf:"bytes,190,opt,name=PaymentCoinUnit,proto3" json:"PaymentCoinUnit,omitempty"`
	PaymentCoinUSDCurrency  string           `protobuf:"bytes,200,opt,name=PaymentCoinUSDCurrency,proto3" json:"PaymentCoinUSDCurrency,omitempty"`
	PaymentLiveUSDCurrency  string           `protobuf:"bytes,210,opt,name=PaymentLiveUSDCurrency,proto3" json:"PaymentLiveUSDCurrency,omitempty"`
	PaymentLocalUSDCurrency string           `protobuf:"bytes,220,opt,name=PaymentLocalUSDCurrency,proto3" json:"PaymentLocalUSDCurrency,omitempty"`
	PaymentAddress          string           `protobuf:"bytes,230,opt,name=PaymentAddress,proto3" json:"PaymentAddress,omitempty"`
	PaymentAmount           string           `protobuf:"bytes,240,opt,name=PaymentAmount,proto3" json:"PaymentAmount,omitempty"`
	PaymentStartAmount      string           `protobuf:"bytes,241,opt,name=PaymentStartAmount,proto3" json:"PaymentStartAmount,omitempty"`
	PaymentFinishAmount     string           `protobuf:"bytes,242,opt,name=PaymentFinishAmount,proto3" json:"PaymentFinishAmount,omitempty"`
	PayWithBalanceAmount    string           `protobuf:"bytes,250,opt,name=PayWithBalanceAmount,proto3" json:"PayWithBalanceAmount,omitempty"`
	PayWithParent           bool             `protobuf:"varint,260,opt,name=PayWithParent,proto3" json:"PayWithParent,omitempty"`
	FixAmountID             string           `protobuf:"bytes,270,opt,name=FixAmountID,proto3" json:"FixAmountID,omitempty"`
	FixAmountName           string           `protobuf:"bytes,280,opt,name=FixAmountName,proto3" json:"FixAmountName,omitempty"`
	FixAmountAmount         string           `protobuf:"bytes,290,opt,name=FixAmountAmount,proto3" json:"FixAmountAmount,omitempty"`
	DiscountID              string           `protobuf:"bytes,300,opt,name=DiscountID,proto3" json:"DiscountID,omitempty"`
	DiscountName            string           `protobuf:"bytes,310,opt,name=DiscountName,proto3" json:"DiscountName,omitempty"`
	DiscountPercent         uint32           `protobuf:"varint,320,opt,name=DiscountPercent,proto3" json:"DiscountPercent,omitempty"`
	SpecialOfferID          string           `protobuf:"bytes,330,opt,name=SpecialOfferID,proto3" json:"SpecialOfferID,omitempty"`
	SpecialOfferAmount      string           `protobuf:"bytes,340,opt,name=SpecialOfferAmount,proto3" json:"SpecialOfferAmount,omitempty"`
	CreatedAt               uint32           `protobuf:"varint,350,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	PaidAt                  uint32           `protobuf:"varint,360,opt,name=PaidAt,proto3" json:"PaidAt,omitempty"`
	State                   order.OrderState `protobuf:"varint,370,opt,name=State,proto3,enum=order.manager.order.v1.OrderState" json:"State,omitempty"`
	OrderType               order.OrderType  `protobuf:"varint,380,opt,name=OrderType,proto3,enum=order.manager.order.v1.OrderType" json:"OrderType,omitempty"`
	Start                   uint32           `protobuf:"varint,390,opt,name=Start,proto3" json:"Start,omitempty"`
	End                     uint32           `protobuf:"varint,400,opt,name=End,proto3" json:"End,omitempty"`
	Coupons                 []*Coupon        `protobuf:"bytes,500,rep,name=Coupons,proto3" json:"Coupons,omitempty"`
	LastBenefitAt           uint32           `protobuf:"varint,510,opt,name=LastBenefitAt,proto3" json:"LastBenefitAt,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Order) GetParentOrderID() string {
	if x != nil {
		return x.ParentOrderID
	}
	return ""
}

func (x *Order) GetParentOrderGoodID() string {
	if x != nil {
		return x.ParentOrderGoodID
	}
	return ""
}

func (x *Order) GetParentOrderGoodName() string {
	if x != nil {
		return x.ParentOrderGoodName
	}
	return ""
}

func (x *Order) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Order) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Order) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Order) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *Order) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Order) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *Order) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *Order) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *Order) GetCoinPresale() bool {
	if x != nil {
		return x.CoinPresale
	}
	return false
}

func (x *Order) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Order) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Order) GetGoodUnit() string {
	if x != nil {
		return x.GoodUnit
	}
	return ""
}

func (x *Order) GetGoodServicePeriodDays() uint32 {
	if x != nil {
		return x.GoodServicePeriodDays
	}
	return 0
}

func (x *Order) GetGoodUnitPrice() string {
	if x != nil {
		return x.GoodUnitPrice
	}
	return ""
}

func (x *Order) GetGoodValue() string {
	if x != nil {
		return x.GoodValue
	}
	return ""
}

func (x *Order) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *Order) GetPaymentID() string {
	if x != nil {
		return x.PaymentID
	}
	return ""
}

func (x *Order) GetPaymentCoinTypeID() string {
	if x != nil {
		return x.PaymentCoinTypeID
	}
	return ""
}

func (x *Order) GetPaymentCoinName() string {
	if x != nil {
		return x.PaymentCoinName
	}
	return ""
}

func (x *Order) GetPaymentCoinLogo() string {
	if x != nil {
		return x.PaymentCoinLogo
	}
	return ""
}

func (x *Order) GetPaymentCoinUnit() string {
	if x != nil {
		return x.PaymentCoinUnit
	}
	return ""
}

func (x *Order) GetPaymentCoinUSDCurrency() string {
	if x != nil {
		return x.PaymentCoinUSDCurrency
	}
	return ""
}

func (x *Order) GetPaymentLiveUSDCurrency() string {
	if x != nil {
		return x.PaymentLiveUSDCurrency
	}
	return ""
}

func (x *Order) GetPaymentLocalUSDCurrency() string {
	if x != nil {
		return x.PaymentLocalUSDCurrency
	}
	return ""
}

func (x *Order) GetPaymentAddress() string {
	if x != nil {
		return x.PaymentAddress
	}
	return ""
}

func (x *Order) GetPaymentAmount() string {
	if x != nil {
		return x.PaymentAmount
	}
	return ""
}

func (x *Order) GetPaymentStartAmount() string {
	if x != nil {
		return x.PaymentStartAmount
	}
	return ""
}

func (x *Order) GetPaymentFinishAmount() string {
	if x != nil {
		return x.PaymentFinishAmount
	}
	return ""
}

func (x *Order) GetPayWithBalanceAmount() string {
	if x != nil {
		return x.PayWithBalanceAmount
	}
	return ""
}

func (x *Order) GetPayWithParent() bool {
	if x != nil {
		return x.PayWithParent
	}
	return false
}

func (x *Order) GetFixAmountID() string {
	if x != nil {
		return x.FixAmountID
	}
	return ""
}

func (x *Order) GetFixAmountName() string {
	if x != nil {
		return x.FixAmountName
	}
	return ""
}

func (x *Order) GetFixAmountAmount() string {
	if x != nil {
		return x.FixAmountAmount
	}
	return ""
}

func (x *Order) GetDiscountID() string {
	if x != nil {
		return x.DiscountID
	}
	return ""
}

func (x *Order) GetDiscountName() string {
	if x != nil {
		return x.DiscountName
	}
	return ""
}

func (x *Order) GetDiscountPercent() uint32 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

func (x *Order) GetSpecialOfferID() string {
	if x != nil {
		return x.SpecialOfferID
	}
	return ""
}

func (x *Order) GetSpecialOfferAmount() string {
	if x != nil {
		return x.SpecialOfferAmount
	}
	return ""
}

func (x *Order) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Order) GetPaidAt() uint32 {
	if x != nil {
		return x.PaidAt
	}
	return 0
}

func (x *Order) GetState() order.OrderState {
	if x != nil {
		return x.State
	}
	return order.OrderState(0)
}

func (x *Order) GetOrderType() order.OrderType {
	if x != nil {
		return x.OrderType
	}
	return order.OrderType(0)
}

func (x *Order) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Order) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Order) GetCoupons() []*Coupon {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *Order) GetLastBenefitAt() uint32 {
	if x != nil {
		return x.LastBenefitAt
	}
	return 0
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                string          `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID               string          `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GoodID               string          `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Units                string          `protobuf:"bytes,40,opt,name=Units,proto3" json:"Units,omitempty"`
	PaymentCoinID        string          `protobuf:"bytes,50,opt,name=PaymentCoinID,proto3" json:"PaymentCoinID,omitempty"`
	ParentOrderID        *string         `protobuf:"bytes,60,opt,name=ParentOrderID,proto3,oneof" json:"ParentOrderID,omitempty"`
	PayWithBalanceAmount *string         `protobuf:"bytes,70,opt,name=PayWithBalanceAmount,proto3,oneof" json:"PayWithBalanceAmount,omitempty"`
	FixAmountID          *string         `protobuf:"bytes,80,opt,name=FixAmountID,proto3,oneof" json:"FixAmountID,omitempty"`
	DiscountID           *string         `protobuf:"bytes,90,opt,name=DiscountID,proto3,oneof" json:"DiscountID,omitempty"`
	SpecialOfferID       *string         `protobuf:"bytes,100,opt,name=SpecialOfferID,proto3,oneof" json:"SpecialOfferID,omitempty"`
	OrderType            order.OrderType `protobuf:"varint,110,opt,name=OrderType,proto3,enum=order.manager.order.v1.OrderType" json:"OrderType,omitempty"`
	CouponIDs            []string        `protobuf:"bytes,120,rep,name=CouponIDs,proto3" json:"CouponIDs,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateOrderRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *CreateOrderRequest) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *CreateOrderRequest) GetPaymentCoinID() string {
	if x != nil {
		return x.PaymentCoinID
	}
	return ""
}

func (x *CreateOrderRequest) GetParentOrderID() string {
	if x != nil && x.ParentOrderID != nil {
		return *x.ParentOrderID
	}
	return ""
}

func (x *CreateOrderRequest) GetPayWithBalanceAmount() string {
	if x != nil && x.PayWithBalanceAmount != nil {
		return *x.PayWithBalanceAmount
	}
	return ""
}

func (x *CreateOrderRequest) GetFixAmountID() string {
	if x != nil && x.FixAmountID != nil {
		return *x.FixAmountID
	}
	return ""
}

func (x *CreateOrderRequest) GetDiscountID() string {
	if x != nil && x.DiscountID != nil {
		return *x.DiscountID
	}
	return ""
}

func (x *CreateOrderRequest) GetSpecialOfferID() string {
	if x != nil && x.SpecialOfferID != nil {
		return *x.SpecialOfferID
	}
	return ""
}

func (x *CreateOrderRequest) GetOrderType() order.OrderType {
	if x != nil {
		return x.OrderType
	}
	return order.OrderType(0)
}

func (x *CreateOrderRequest) GetCouponIDs() []string {
	if x != nil {
		return x.CouponIDs
	}
	return nil
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID    string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ID        string `protobuf:"bytes,30,opt,name=ID,proto3" json:"ID,omitempty"`
	PaymentID string `protobuf:"bytes,40,opt,name=PaymentID,proto3" json:"PaymentID,omitempty"`
	Canceled  *bool  `protobuf:"varint,50,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *UpdateOrderRequest) Reset() {
	*x = UpdateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderRequest) ProtoMessage() {}

func (x *UpdateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateOrderRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateOrderRequest) GetPaymentID() string {
	if x != nil {
		return x.PaymentID
	}
	return ""
}

func (x *UpdateOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type UpdateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateOrderResponse) Reset() {
	*x = UpdateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderResponse) ProtoMessage() {}

func (x *UpdateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	ID           string `protobuf:"bytes,30,opt,name=ID,proto3" json:"ID,omitempty"`
	PaymentID    string `protobuf:"bytes,40,opt,name=PaymentID,proto3" json:"PaymentID,omitempty"`
	Canceled     *bool  `protobuf:"varint,50,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *UpdateUserOrderRequest) Reset() {
	*x = UpdateUserOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserOrderRequest) ProtoMessage() {}

func (x *UpdateUserOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateUserOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateUserOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *UpdateUserOrderRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateUserOrderRequest) GetPaymentID() string {
	if x != nil {
		return x.PaymentID
	}
	return ""
}

func (x *UpdateUserOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type UpdateUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserOrderResponse) Reset() {
	*x = UpdateUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserOrderResponse) ProtoMessage() {}

func (x *UpdateUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppUserOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	ID           string `protobuf:"bytes,30,opt,name=ID,proto3" json:"ID,omitempty"`
	PaymentID    string `protobuf:"bytes,40,opt,name=PaymentID,proto3" json:"PaymentID,omitempty"`
	Canceled     *bool  `protobuf:"varint,50,opt,name=Canceled,proto3,oneof" json:"Canceled,omitempty"`
}

func (x *UpdateAppUserOrderRequest) Reset() {
	*x = UpdateAppUserOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserOrderRequest) ProtoMessage() {}

func (x *UpdateAppUserOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppUserOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppUserOrderRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppUserOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *UpdateAppUserOrderRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateAppUserOrderRequest) GetPaymentID() string {
	if x != nil {
		return x.PaymentID
	}
	return ""
}

func (x *UpdateAppUserOrderRequest) GetCanceled() bool {
	if x != nil && x.Canceled != nil {
		return *x.Canceled
	}
	return false
}

type UpdateAppUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppUserOrderResponse) Reset() {
	*x = UpdateAppUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserOrderResponse) ProtoMessage() {}

func (x *UpdateAppUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAppUserOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ID     string `protobuf:"bytes,30,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetOrderRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetOrdersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrdersResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUserOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Offset       int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUserOrdersRequest) Reset() {
	*x = GetUserOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrdersRequest) ProtoMessage() {}

func (x *GetUserOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetUserOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserOrdersRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *GetUserOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CreateUserOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID         string          `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID  string          `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	GoodID        string          `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Units         string          `protobuf:"bytes,40,opt,name=Units,proto3" json:"Units,omitempty"`
	PaymentCoinID string          `protobuf:"bytes,50,opt,name=PaymentCoinID,proto3" json:"PaymentCoinID,omitempty"`
	ParentOrderID *string         `protobuf:"bytes,60,opt,name=ParentOrderID,proto3,oneof" json:"ParentOrderID,omitempty"`
	OrderType     order.OrderType `protobuf:"varint,110,opt,name=OrderType,proto3,enum=order.manager.order.v1.OrderType" json:"OrderType,omitempty"`
}

func (x *CreateUserOrderRequest) Reset() {
	*x = CreateUserOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserOrderRequest) ProtoMessage() {}

func (x *CreateUserOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateUserOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{15}
}

func (x *CreateUserOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateUserOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateUserOrderRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *CreateUserOrderRequest) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *CreateUserOrderRequest) GetPaymentCoinID() string {
	if x != nil {
		return x.PaymentCoinID
	}
	return ""
}

func (x *CreateUserOrderRequest) GetParentOrderID() string {
	if x != nil && x.ParentOrderID != nil {
		return *x.ParentOrderID
	}
	return ""
}

func (x *CreateUserOrderRequest) GetOrderType() order.OrderType {
	if x != nil {
		return x.OrderType
	}
	return order.OrderType(0)
}

type CreateUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserOrderResponse) Reset() {
	*x = CreateUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserOrderResponse) ProtoMessage() {}

func (x *CreateUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUserOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID   string          `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID  string          `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	GoodID        string          `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Units         string          `protobuf:"bytes,40,opt,name=Units,proto3" json:"Units,omitempty"`
	PaymentCoinID string          `protobuf:"bytes,50,opt,name=PaymentCoinID,proto3" json:"PaymentCoinID,omitempty"`
	ParentOrderID *string         `protobuf:"bytes,60,opt,name=ParentOrderID,proto3,oneof" json:"ParentOrderID,omitempty"`
	OrderType     order.OrderType `protobuf:"varint,110,opt,name=OrderType,proto3,enum=order.manager.order.v1.OrderType" json:"OrderType,omitempty"`
}

func (x *CreateAppUserOrderRequest) Reset() {
	*x = CreateAppUserOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserOrderRequest) ProtoMessage() {}

func (x *CreateAppUserOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAppUserOrderRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetPaymentCoinID() string {
	if x != nil {
		return x.PaymentCoinID
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetParentOrderID() string {
	if x != nil && x.ParentOrderID != nil {
		return *x.ParentOrderID
	}
	return ""
}

func (x *CreateAppUserOrderRequest) GetOrderType() order.OrderType {
	if x != nil {
		return x.OrderType
	}
	return order.OrderType(0)
}

type CreateAppUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserOrderResponse) Reset() {
	*x = CreateAppUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserOrderResponse) ProtoMessage() {}

func (x *CreateAppUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{18}
}

func (x *CreateAppUserOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetUserOrdersResponse) Reset() {
	*x = GetUserOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrdersResponse) ProtoMessage() {}

func (x *GetUserOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetUserOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserOrdersResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetUserOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppUserOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string `protobuf:"bytes,20,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Offset       int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppUserOrdersRequest) Reset() {
	*x = GetAppUserOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserOrdersRequest) ProtoMessage() {}

func (x *GetAppUserOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{20}
}

func (x *GetAppUserOrdersRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppUserOrdersRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *GetAppUserOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppUserOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppUserOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppUserOrdersResponse) Reset() {
	*x = GetAppUserOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserOrdersResponse) ProtoMessage() {}

func (x *GetAppUserOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{21}
}

func (x *GetAppUserOrdersResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppUserOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppOrdersRequest) Reset() {
	*x = GetAppOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppOrdersRequest) ProtoMessage() {}

func (x *GetAppOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetAppOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{22}
}

func (x *GetAppOrdersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppOrdersResponse) Reset() {
	*x = GetAppOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppOrdersResponse) ProtoMessage() {}

func (x *GetAppOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetAppOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{23}
}

func (x *GetAppOrdersResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNAppOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetNAppOrdersRequest) Reset() {
	*x = GetNAppOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppOrdersRequest) ProtoMessage() {}

func (x *GetNAppOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetNAppOrdersRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{24}
}

func (x *GetNAppOrdersRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetNAppOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetNAppOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNAppOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetNAppOrdersResponse) Reset() {
	*x = GetNAppOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNAppOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNAppOrdersResponse) ProtoMessage() {}

func (x *GetNAppOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_order_order_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNAppOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetNAppOrdersResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_order_order_proto_rawDescGZIP(), []int{25}
}

func (x *GetNAppOrdersResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetNAppOrdersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_order_gw_v1_order_order_proto protoreflect.FileDescriptor

var file_npool_order_gw_v1_order_order_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x1a, 0x24,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x67, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x35, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72,
	0x65, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x06, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x93, 0x0f, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x31, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x61,
	0x6c, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x50, 0x72,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1b, 0x0a,
	0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x47, 0x6f,
	0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47,
	0x6f, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73,
	0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x25,
	0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x85, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x55, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x8c, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x11, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x0f, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xaa, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12,
	0x29, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x16, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x37, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0xd2, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x55, 0x53, 0x44, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x39, 0x0a, 0x17,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x53, 0x44, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x53, 0x44, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xf1, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0xf2, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xfa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x57,
	0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x8e, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46,
	0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0d, 0x46, 0x69,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x98, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0xa2, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x46, 0x69, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0a,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x23, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xb6, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0xc0, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x44, 0x18,
	0xca, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xd4, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0xde, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74,
	0x18, 0xe8, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xf2, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0xfc, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x11, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x18, 0xf4, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x74, 0x41, 0x74, 0x18, 0xfe, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x41, 0x74, 0x22, 0xaf, 0x04, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x49, 0x44, 0x12, 0x29, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x14, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x14, 0x50,
	0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x46,
	0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x3f, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x78, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x46, 0x69,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65,
	0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x22, 0x50, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5f, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa4,
	0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x3f, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb3, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x0d,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x66, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e,
	0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xdf, 0x0d, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22,
	0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x96, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x79, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x7d, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2f,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01,
	0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70,
	0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01,
	0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6e, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_gw_v1_order_order_proto_rawDescOnce sync.Once
	file_npool_order_gw_v1_order_order_proto_rawDescData = file_npool_order_gw_v1_order_order_proto_rawDesc
)

func file_npool_order_gw_v1_order_order_proto_rawDescGZIP() []byte {
	file_npool_order_gw_v1_order_order_proto_rawDescOnce.Do(func() {
		file_npool_order_gw_v1_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_gw_v1_order_order_proto_rawDescData)
	})
	return file_npool_order_gw_v1_order_order_proto_rawDescData
}

var file_npool_order_gw_v1_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_npool_order_gw_v1_order_order_proto_goTypes = []interface{}{
	(*Coupon)(nil),                     // 0: order.gateway.order1.v1.Coupon
	(*Order)(nil),                      // 1: order.gateway.order1.v1.Order
	(*CreateOrderRequest)(nil),         // 2: order.gateway.order1.v1.CreateOrderRequest
	(*CreateOrderResponse)(nil),        // 3: order.gateway.order1.v1.CreateOrderResponse
	(*UpdateOrderRequest)(nil),         // 4: order.gateway.order1.v1.UpdateOrderRequest
	(*UpdateOrderResponse)(nil),        // 5: order.gateway.order1.v1.UpdateOrderResponse
	(*UpdateUserOrderRequest)(nil),     // 6: order.gateway.order1.v1.UpdateUserOrderRequest
	(*UpdateUserOrderResponse)(nil),    // 7: order.gateway.order1.v1.UpdateUserOrderResponse
	(*UpdateAppUserOrderRequest)(nil),  // 8: order.gateway.order1.v1.UpdateAppUserOrderRequest
	(*UpdateAppUserOrderResponse)(nil), // 9: order.gateway.order1.v1.UpdateAppUserOrderResponse
	(*GetOrderRequest)(nil),            // 10: order.gateway.order1.v1.GetOrderRequest
	(*GetOrderResponse)(nil),           // 11: order.gateway.order1.v1.GetOrderResponse
	(*GetOrdersRequest)(nil),           // 12: order.gateway.order1.v1.GetOrdersRequest
	(*GetOrdersResponse)(nil),          // 13: order.gateway.order1.v1.GetOrdersResponse
	(*GetUserOrdersRequest)(nil),       // 14: order.gateway.order1.v1.GetUserOrdersRequest
	(*CreateUserOrderRequest)(nil),     // 15: order.gateway.order1.v1.CreateUserOrderRequest
	(*CreateUserOrderResponse)(nil),    // 16: order.gateway.order1.v1.CreateUserOrderResponse
	(*CreateAppUserOrderRequest)(nil),  // 17: order.gateway.order1.v1.CreateAppUserOrderRequest
	(*CreateAppUserOrderResponse)(nil), // 18: order.gateway.order1.v1.CreateAppUserOrderResponse
	(*GetUserOrdersResponse)(nil),      // 19: order.gateway.order1.v1.GetUserOrdersResponse
	(*GetAppUserOrdersRequest)(nil),    // 20: order.gateway.order1.v1.GetAppUserOrdersRequest
	(*GetAppUserOrdersResponse)(nil),   // 21: order.gateway.order1.v1.GetAppUserOrdersResponse
	(*GetAppOrdersRequest)(nil),        // 22: order.gateway.order1.v1.GetAppOrdersRequest
	(*GetAppOrdersResponse)(nil),       // 23: order.gateway.order1.v1.GetAppOrdersResponse
	(*GetNAppOrdersRequest)(nil),       // 24: order.gateway.order1.v1.GetNAppOrdersRequest
	(*GetNAppOrdersResponse)(nil),      // 25: order.gateway.order1.v1.GetNAppOrdersResponse
	(allocated.CouponType)(0),          // 26: inspire.manager.coupon.allocated.v1.CouponType
	(order.OrderState)(0),              // 27: order.manager.order.v1.OrderState
	(order.OrderType)(0),               // 28: order.manager.order.v1.OrderType
}
var file_npool_order_gw_v1_order_order_proto_depIdxs = []int32{
	26, // 0: order.gateway.order1.v1.Coupon.CouponType:type_name -> inspire.manager.coupon.allocated.v1.CouponType
	27, // 1: order.gateway.order1.v1.Order.State:type_name -> order.manager.order.v1.OrderState
	28, // 2: order.gateway.order1.v1.Order.OrderType:type_name -> order.manager.order.v1.OrderType
	0,  // 3: order.gateway.order1.v1.Order.Coupons:type_name -> order.gateway.order1.v1.Coupon
	28, // 4: order.gateway.order1.v1.CreateOrderRequest.OrderType:type_name -> order.manager.order.v1.OrderType
	1,  // 5: order.gateway.order1.v1.CreateOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 6: order.gateway.order1.v1.UpdateOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 7: order.gateway.order1.v1.UpdateUserOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 8: order.gateway.order1.v1.UpdateAppUserOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 9: order.gateway.order1.v1.GetOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 10: order.gateway.order1.v1.GetOrdersResponse.Infos:type_name -> order.gateway.order1.v1.Order
	28, // 11: order.gateway.order1.v1.CreateUserOrderRequest.OrderType:type_name -> order.manager.order.v1.OrderType
	1,  // 12: order.gateway.order1.v1.CreateUserOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	28, // 13: order.gateway.order1.v1.CreateAppUserOrderRequest.OrderType:type_name -> order.manager.order.v1.OrderType
	1,  // 14: order.gateway.order1.v1.CreateAppUserOrderResponse.Info:type_name -> order.gateway.order1.v1.Order
	1,  // 15: order.gateway.order1.v1.GetUserOrdersResponse.Infos:type_name -> order.gateway.order1.v1.Order
	1,  // 16: order.gateway.order1.v1.GetAppUserOrdersResponse.Infos:type_name -> order.gateway.order1.v1.Order
	1,  // 17: order.gateway.order1.v1.GetAppOrdersResponse.Infos:type_name -> order.gateway.order1.v1.Order
	1,  // 18: order.gateway.order1.v1.GetNAppOrdersResponse.Infos:type_name -> order.gateway.order1.v1.Order
	2,  // 19: order.gateway.order1.v1.Gateway.CreateOrder:input_type -> order.gateway.order1.v1.CreateOrderRequest
	4,  // 20: order.gateway.order1.v1.Gateway.UpdateOrder:input_type -> order.gateway.order1.v1.UpdateOrderRequest
	6,  // 21: order.gateway.order1.v1.Gateway.UpdateUserOrder:input_type -> order.gateway.order1.v1.UpdateUserOrderRequest
	8,  // 22: order.gateway.order1.v1.Gateway.UpdateAppUserOrder:input_type -> order.gateway.order1.v1.UpdateAppUserOrderRequest
	10, // 23: order.gateway.order1.v1.Gateway.GetOrder:input_type -> order.gateway.order1.v1.GetOrderRequest
	12, // 24: order.gateway.order1.v1.Gateway.GetOrders:input_type -> order.gateway.order1.v1.GetOrdersRequest
	15, // 25: order.gateway.order1.v1.Gateway.CreateUserOrder:input_type -> order.gateway.order1.v1.CreateUserOrderRequest
	17, // 26: order.gateway.order1.v1.Gateway.CreateAppUserOrder:input_type -> order.gateway.order1.v1.CreateAppUserOrderRequest
	14, // 27: order.gateway.order1.v1.Gateway.GetUserOrders:input_type -> order.gateway.order1.v1.GetUserOrdersRequest
	20, // 28: order.gateway.order1.v1.Gateway.GetAppUserOrders:input_type -> order.gateway.order1.v1.GetAppUserOrdersRequest
	22, // 29: order.gateway.order1.v1.Gateway.GetAppOrders:input_type -> order.gateway.order1.v1.GetAppOrdersRequest
	24, // 30: order.gateway.order1.v1.Gateway.GetNAppOrders:input_type -> order.gateway.order1.v1.GetNAppOrdersRequest
	3,  // 31: order.gateway.order1.v1.Gateway.CreateOrder:output_type -> order.gateway.order1.v1.CreateOrderResponse
	5,  // 32: order.gateway.order1.v1.Gateway.UpdateOrder:output_type -> order.gateway.order1.v1.UpdateOrderResponse
	7,  // 33: order.gateway.order1.v1.Gateway.UpdateUserOrder:output_type -> order.gateway.order1.v1.UpdateUserOrderResponse
	9,  // 34: order.gateway.order1.v1.Gateway.UpdateAppUserOrder:output_type -> order.gateway.order1.v1.UpdateAppUserOrderResponse
	11, // 35: order.gateway.order1.v1.Gateway.GetOrder:output_type -> order.gateway.order1.v1.GetOrderResponse
	13, // 36: order.gateway.order1.v1.Gateway.GetOrders:output_type -> order.gateway.order1.v1.GetOrdersResponse
	16, // 37: order.gateway.order1.v1.Gateway.CreateUserOrder:output_type -> order.gateway.order1.v1.CreateUserOrderResponse
	18, // 38: order.gateway.order1.v1.Gateway.CreateAppUserOrder:output_type -> order.gateway.order1.v1.CreateAppUserOrderResponse
	19, // 39: order.gateway.order1.v1.Gateway.GetUserOrders:output_type -> order.gateway.order1.v1.GetUserOrdersResponse
	21, // 40: order.gateway.order1.v1.Gateway.GetAppUserOrders:output_type -> order.gateway.order1.v1.GetAppUserOrdersResponse
	23, // 41: order.gateway.order1.v1.Gateway.GetAppOrders:output_type -> order.gateway.order1.v1.GetAppOrdersResponse
	25, // 42: order.gateway.order1.v1.Gateway.GetNAppOrders:output_type -> order.gateway.order1.v1.GetNAppOrdersResponse
	31, // [31:43] is the sub-list for method output_type
	19, // [19:31] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_npool_order_gw_v1_order_order_proto_init() }
func file_npool_order_gw_v1_order_order_proto_init() {
	if File_npool_order_gw_v1_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_gw_v1_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_order_order_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNAppOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_gw_v1_order_order_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_order_order_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_order_order_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_order_order_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_order_order_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_order_order_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_gw_v1_order_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_gw_v1_order_order_proto_goTypes,
		DependencyIndexes: file_npool_order_gw_v1_order_order_proto_depIdxs,
		MessageInfos:      file_npool_order_gw_v1_order_order_proto_msgTypes,
	}.Build()
	File_npool_order_gw_v1_order_order_proto = out.File
	file_npool_order_gw_v1_order_order_proto_rawDesc = nil
	file_npool_order_gw_v1_order_order_proto_goTypes = nil
	file_npool_order_gw_v1_order_order_proto_depIdxs = nil
}
