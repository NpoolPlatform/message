// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/order/gw/v1/outofgas/outofgas.proto

package outofgas

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OutOfGas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32      `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string      `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID        string      `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName      string      `protobuf:"bytes,40,opt,name=AppName,proto3" json:"AppName,omitempty"`
	UserID       string      `protobuf:"bytes,50,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress string      `protobuf:"bytes,60,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO      string      `protobuf:"bytes,70,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	GoodID       string      `protobuf:"bytes,80,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodType     v1.GoodType `protobuf:"varint,90,opt,name=GoodType,proto3,enum=basetypes.good.v1.GoodType" json:"GoodType,omitempty"`
	GoodName     string      `protobuf:"bytes,100,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	AppGoodID    string      `protobuf:"bytes,110,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	AppGoodName  string      `protobuf:"bytes,120,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty"`
	OrderID      string      `protobuf:"bytes,130,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	StartAt      uint32      `protobuf:"varint,140,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt        uint32      `protobuf:"varint,150,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	CreatedAt    uint32      `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    uint32      `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *OutOfGas) Reset() {
	*x = OutOfGas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutOfGas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutOfGas) ProtoMessage() {}

func (x *OutOfGas) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutOfGas.ProtoReflect.Descriptor instead.
func (*OutOfGas) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{0}
}

func (x *OutOfGas) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *OutOfGas) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *OutOfGas) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *OutOfGas) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *OutOfGas) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *OutOfGas) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *OutOfGas) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *OutOfGas) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *OutOfGas) GetGoodType() v1.GoodType {
	if x != nil {
		return x.GoodType
	}
	return v1.GoodType(0)
}

func (x *OutOfGas) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *OutOfGas) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *OutOfGas) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *OutOfGas) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *OutOfGas) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *OutOfGas) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *OutOfGas) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OutOfGas) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetOutOfGasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
	AppGoodID    *string `protobuf:"bytes,30,opt,name=AppGoodID,proto3,oneof" json:"AppGoodID,omitempty"`
	Offset       int32   `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32   `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetOutOfGasesRequest) Reset() {
	*x = GetOutOfGasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasesRequest) ProtoMessage() {}

func (x *GetOutOfGasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasesRequest.ProtoReflect.Descriptor instead.
func (*GetOutOfGasesRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{1}
}

func (x *GetOutOfGasesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetOutOfGasesRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

func (x *GetOutOfGasesRequest) GetAppGoodID() string {
	if x != nil && x.AppGoodID != nil {
		return *x.AppGoodID
	}
	return ""
}

func (x *GetOutOfGasesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOutOfGasesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOutOfGasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetOutOfGasesResponse) Reset() {
	*x = GetOutOfGasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutOfGasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutOfGasesResponse) ProtoMessage() {}

func (x *GetOutOfGasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutOfGasesResponse.ProtoReflect.Descriptor instead.
func (*GetOutOfGasesResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{2}
}

func (x *GetOutOfGasesResponse) GetInfos() []*OutOfGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetOutOfGasesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetMyOutOfGasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID   string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID  string  `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OrderID *string `protobuf:"bytes,30,opt,name=OrderID,proto3,oneof" json:"OrderID,omitempty"`
	Offset  int32   `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit   int32   `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMyOutOfGasesRequest) Reset() {
	*x = GetMyOutOfGasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOutOfGasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOutOfGasesRequest) ProtoMessage() {}

func (x *GetMyOutOfGasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOutOfGasesRequest.ProtoReflect.Descriptor instead.
func (*GetMyOutOfGasesRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{3}
}

func (x *GetMyOutOfGasesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMyOutOfGasesRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMyOutOfGasesRequest) GetOrderID() string {
	if x != nil && x.OrderID != nil {
		return *x.OrderID
	}
	return ""
}

func (x *GetMyOutOfGasesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMyOutOfGasesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMyOutOfGasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetMyOutOfGasesResponse) Reset() {
	*x = GetMyOutOfGasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOutOfGasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOutOfGasesResponse) ProtoMessage() {}

func (x *GetMyOutOfGasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOutOfGasesResponse.ProtoReflect.Descriptor instead.
func (*GetMyOutOfGasesResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{4}
}

func (x *GetMyOutOfGasesResponse) GetInfos() []*OutOfGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetMyOutOfGasesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminGetOutOfGasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID *string `protobuf:"bytes,10,opt,name=TargetAppID,proto3,oneof" json:"TargetAppID,omitempty"`
	GoodID      *string `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	Offset      int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetOutOfGasesRequest) Reset() {
	*x = AdminGetOutOfGasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetOutOfGasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetOutOfGasesRequest) ProtoMessage() {}

func (x *AdminGetOutOfGasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetOutOfGasesRequest.ProtoReflect.Descriptor instead.
func (*AdminGetOutOfGasesRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{5}
}

func (x *AdminGetOutOfGasesRequest) GetTargetAppID() string {
	if x != nil && x.TargetAppID != nil {
		return *x.TargetAppID
	}
	return ""
}

func (x *AdminGetOutOfGasesRequest) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *AdminGetOutOfGasesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetOutOfGasesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetOutOfGasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*OutOfGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetOutOfGasesResponse) Reset() {
	*x = AdminGetOutOfGasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetOutOfGasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetOutOfGasesResponse) ProtoMessage() {}

func (x *AdminGetOutOfGasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetOutOfGasesResponse.ProtoReflect.Descriptor instead.
func (*AdminGetOutOfGasesResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP(), []int{6}
}

func (x *AdminGetOutOfGasesResponse) GetInfos() []*OutOfGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetOutOfGasesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_order_gw_v1_outofgas_outofgas_proto protoreflect.FileDescriptor

var file_npool_order_gw_v1_outofgas_outofgas_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2f, 0x6f, 0x75, 0x74,
	0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66,
	0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x03, 0x0a, 0x08, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x4f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x6f,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x07, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x96,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x22, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66,
	0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa8, 0x01, 0x0a, 0x19, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65,
	0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0xe2, 0x03, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x91, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f,
	0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x6d, 0x79, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x65, 0x73,
	0x12, 0xa6, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f,
	0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6f, 0x75,
	0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f,
	0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x65, 0x73, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x67, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescOnce sync.Once
	file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescData = file_npool_order_gw_v1_outofgas_outofgas_proto_rawDesc
)

func file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescGZIP() []byte {
	file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescOnce.Do(func() {
		file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescData)
	})
	return file_npool_order_gw_v1_outofgas_outofgas_proto_rawDescData
}

var file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_npool_order_gw_v1_outofgas_outofgas_proto_goTypes = []interface{}{
	(*OutOfGas)(nil),                   // 0: order.gateway.outofgas.v1.OutOfGas
	(*GetOutOfGasesRequest)(nil),       // 1: order.gateway.outofgas.v1.GetOutOfGasesRequest
	(*GetOutOfGasesResponse)(nil),      // 2: order.gateway.outofgas.v1.GetOutOfGasesResponse
	(*GetMyOutOfGasesRequest)(nil),     // 3: order.gateway.outofgas.v1.GetMyOutOfGasesRequest
	(*GetMyOutOfGasesResponse)(nil),    // 4: order.gateway.outofgas.v1.GetMyOutOfGasesResponse
	(*AdminGetOutOfGasesRequest)(nil),  // 5: order.gateway.outofgas.v1.AdminGetOutOfGasesRequest
	(*AdminGetOutOfGasesResponse)(nil), // 6: order.gateway.outofgas.v1.AdminGetOutOfGasesResponse
	(v1.GoodType)(0),                   // 7: basetypes.good.v1.GoodType
}
var file_npool_order_gw_v1_outofgas_outofgas_proto_depIdxs = []int32{
	7, // 0: order.gateway.outofgas.v1.OutOfGas.GoodType:type_name -> basetypes.good.v1.GoodType
	0, // 1: order.gateway.outofgas.v1.GetOutOfGasesResponse.Infos:type_name -> order.gateway.outofgas.v1.OutOfGas
	0, // 2: order.gateway.outofgas.v1.GetMyOutOfGasesResponse.Infos:type_name -> order.gateway.outofgas.v1.OutOfGas
	0, // 3: order.gateway.outofgas.v1.AdminGetOutOfGasesResponse.Infos:type_name -> order.gateway.outofgas.v1.OutOfGas
	1, // 4: order.gateway.outofgas.v1.Gateway.GetOutOfGases:input_type -> order.gateway.outofgas.v1.GetOutOfGasesRequest
	3, // 5: order.gateway.outofgas.v1.Gateway.GetMyOutOfGases:input_type -> order.gateway.outofgas.v1.GetMyOutOfGasesRequest
	5, // 6: order.gateway.outofgas.v1.Gateway.AdminGetOutOfGases:input_type -> order.gateway.outofgas.v1.AdminGetOutOfGasesRequest
	2, // 7: order.gateway.outofgas.v1.Gateway.GetOutOfGases:output_type -> order.gateway.outofgas.v1.GetOutOfGasesResponse
	4, // 8: order.gateway.outofgas.v1.Gateway.GetMyOutOfGases:output_type -> order.gateway.outofgas.v1.GetMyOutOfGasesResponse
	6, // 9: order.gateway.outofgas.v1.Gateway.AdminGetOutOfGases:output_type -> order.gateway.outofgas.v1.AdminGetOutOfGasesResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_npool_order_gw_v1_outofgas_outofgas_proto_init() }
func file_npool_order_gw_v1_outofgas_outofgas_proto_init() {
	if File_npool_order_gw_v1_outofgas_outofgas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutOfGas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutOfGasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOutOfGasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOutOfGasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetOutOfGasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetOutOfGasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_gw_v1_outofgas_outofgas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_gw_v1_outofgas_outofgas_proto_goTypes,
		DependencyIndexes: file_npool_order_gw_v1_outofgas_outofgas_proto_depIdxs,
		MessageInfos:      file_npool_order_gw_v1_outofgas_outofgas_proto_msgTypes,
	}.Build()
	File_npool_order_gw_v1_outofgas_outofgas_proto = out.File
	file_npool_order_gw_v1_outofgas_outofgas_proto_rawDesc = nil
	file_npool_order_gw_v1_outofgas_outofgas_proto_goTypes = nil
	file_npool_order_gw_v1_outofgas_outofgas_proto_depIdxs = nil
}
