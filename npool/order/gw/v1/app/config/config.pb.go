// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/order/gw/v1/app/config/config.proto

package config

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/order/v1"
	config "github.com/NpoolPlatform/message/npool/order/mw/v1/app/config"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                                  string                      `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EnableSimulateOrder                    *bool                       `protobuf:"varint,20,opt,name=EnableSimulateOrder,proto3,oneof" json:"EnableSimulateOrder,omitempty"`
	SimulateOrderCouponMode                *v1.SimulateOrderCouponMode `protobuf:"varint,30,opt,name=SimulateOrderCouponMode,proto3,enum=basetypes.order.v1.SimulateOrderCouponMode,oneof" json:"SimulateOrderCouponMode,omitempty"`
	SimulateOrderCouponProbability         *string                     `protobuf:"bytes,40,opt,name=SimulateOrderCouponProbability,proto3,oneof" json:"SimulateOrderCouponProbability,omitempty"`
	SimulateOrderCashableProfitProbability *string                     `protobuf:"bytes,50,opt,name=SimulateOrderCashableProfitProbability,proto3,oneof" json:"SimulateOrderCashableProfitProbability,omitempty"`
	MaxUnpaidOrders                        *uint32                     `protobuf:"varint,60,opt,name=MaxUnpaidOrders,proto3,oneof" json:"MaxUnpaidOrders,omitempty"`
}

func (x *CreateAppConfigRequest) Reset() {
	*x = CreateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConfigRequest) ProtoMessage() {}

func (x *CreateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAppConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateAppConfigRequest) GetEnableSimulateOrder() bool {
	if x != nil && x.EnableSimulateOrder != nil {
		return *x.EnableSimulateOrder
	}
	return false
}

func (x *CreateAppConfigRequest) GetSimulateOrderCouponMode() v1.SimulateOrderCouponMode {
	if x != nil && x.SimulateOrderCouponMode != nil {
		return *x.SimulateOrderCouponMode
	}
	return v1.SimulateOrderCouponMode(0)
}

func (x *CreateAppConfigRequest) GetSimulateOrderCouponProbability() string {
	if x != nil && x.SimulateOrderCouponProbability != nil {
		return *x.SimulateOrderCouponProbability
	}
	return ""
}

func (x *CreateAppConfigRequest) GetSimulateOrderCashableProfitProbability() string {
	if x != nil && x.SimulateOrderCashableProfitProbability != nil {
		return *x.SimulateOrderCashableProfitProbability
	}
	return ""
}

func (x *CreateAppConfigRequest) GetMaxUnpaidOrders() uint32 {
	if x != nil && x.MaxUnpaidOrders != nil {
		return *x.MaxUnpaidOrders
	}
	return 0
}

type CreateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppConfigResponse) Reset() {
	*x = CreateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConfigResponse) ProtoMessage() {}

func (x *CreateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                                     uint32                      `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                                  string                      `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                                  string                      `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EnableSimulateOrder                    *bool                       `protobuf:"varint,40,opt,name=EnableSimulateOrder,proto3,oneof" json:"EnableSimulateOrder,omitempty"`
	SimulateOrderCouponMode                *v1.SimulateOrderCouponMode `protobuf:"varint,50,opt,name=SimulateOrderCouponMode,proto3,enum=basetypes.order.v1.SimulateOrderCouponMode,oneof" json:"SimulateOrderCouponMode,omitempty"`
	SimulateOrderCouponProbability         *string                     `protobuf:"bytes,60,opt,name=SimulateOrderCouponProbability,proto3,oneof" json:"SimulateOrderCouponProbability,omitempty"`
	SimulateOrderCashableProfitProbability *string                     `protobuf:"bytes,70,opt,name=SimulateOrderCashableProfitProbability,proto3,oneof" json:"SimulateOrderCashableProfitProbability,omitempty"`
	MaxUnpaidOrders                        *uint32                     `protobuf:"varint,80,opt,name=MaxUnpaidOrders,proto3,oneof" json:"MaxUnpaidOrders,omitempty"`
}

func (x *UpdateAppConfigRequest) Reset() {
	*x = UpdateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigRequest) ProtoMessage() {}

func (x *UpdateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAppConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetEnableSimulateOrder() bool {
	if x != nil && x.EnableSimulateOrder != nil {
		return *x.EnableSimulateOrder
	}
	return false
}

func (x *UpdateAppConfigRequest) GetSimulateOrderCouponMode() v1.SimulateOrderCouponMode {
	if x != nil && x.SimulateOrderCouponMode != nil {
		return *x.SimulateOrderCouponMode
	}
	return v1.SimulateOrderCouponMode(0)
}

func (x *UpdateAppConfigRequest) GetSimulateOrderCouponProbability() string {
	if x != nil && x.SimulateOrderCouponProbability != nil {
		return *x.SimulateOrderCouponProbability
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetSimulateOrderCashableProfitProbability() string {
	if x != nil && x.SimulateOrderCashableProfitProbability != nil {
		return *x.SimulateOrderCashableProfitProbability
	}
	return ""
}

func (x *UpdateAppConfigRequest) GetMaxUnpaidOrders() uint32 {
	if x != nil && x.MaxUnpaidOrders != nil {
		return *x.MaxUnpaidOrders
	}
	return 0
}

type UpdateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppConfigResponse) Reset() {
	*x = UpdateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppConfigResponse) ProtoMessage() {}

func (x *UpdateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetAppConfigRequest) Reset() {
	*x = GetAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigRequest) ProtoMessage() {}

func (x *GetAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigRequest.ProtoReflect.Descriptor instead.
func (*GetAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppConfigResponse) Reset() {
	*x = GetAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigResponse) ProtoMessage() {}

func (x *GetAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigResponse.ProtoReflect.Descriptor instead.
func (*GetAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppConfigsRequest) Reset() {
	*x = GetAppConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigsRequest) ProtoMessage() {}

func (x *GetAppConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetAppConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppConfigsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*config.AppConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32              `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppConfigsResponse) Reset() {
	*x = GetAppConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigsResponse) ProtoMessage() {}

func (x *GetAppConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetAppConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *GetAppConfigsResponse) GetInfos() []*config.AppConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminCreateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID                            string                      `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	EnableSimulateOrder                    *bool                       `protobuf:"varint,20,opt,name=EnableSimulateOrder,proto3,oneof" json:"EnableSimulateOrder,omitempty"`
	SimulateOrderCouponMode                *v1.SimulateOrderCouponMode `protobuf:"varint,30,opt,name=SimulateOrderCouponMode,proto3,enum=basetypes.order.v1.SimulateOrderCouponMode,oneof" json:"SimulateOrderCouponMode,omitempty"`
	SimulateOrderCouponProbability         *string                     `protobuf:"bytes,40,opt,name=SimulateOrderCouponProbability,proto3,oneof" json:"SimulateOrderCouponProbability,omitempty"`
	SimulateOrderCashableProfitProbability *string                     `protobuf:"bytes,50,opt,name=SimulateOrderCashableProfitProbability,proto3,oneof" json:"SimulateOrderCashableProfitProbability,omitempty"`
	MaxUnpaidOrders                        *uint32                     `protobuf:"varint,60,opt,name=MaxUnpaidOrders,proto3,oneof" json:"MaxUnpaidOrders,omitempty"`
}

func (x *AdminCreateAppConfigRequest) Reset() {
	*x = AdminCreateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppConfigRequest) ProtoMessage() {}

func (x *AdminCreateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{8}
}

func (x *AdminCreateAppConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateAppConfigRequest) GetEnableSimulateOrder() bool {
	if x != nil && x.EnableSimulateOrder != nil {
		return *x.EnableSimulateOrder
	}
	return false
}

func (x *AdminCreateAppConfigRequest) GetSimulateOrderCouponMode() v1.SimulateOrderCouponMode {
	if x != nil && x.SimulateOrderCouponMode != nil {
		return *x.SimulateOrderCouponMode
	}
	return v1.SimulateOrderCouponMode(0)
}

func (x *AdminCreateAppConfigRequest) GetSimulateOrderCouponProbability() string {
	if x != nil && x.SimulateOrderCouponProbability != nil {
		return *x.SimulateOrderCouponProbability
	}
	return ""
}

func (x *AdminCreateAppConfigRequest) GetSimulateOrderCashableProfitProbability() string {
	if x != nil && x.SimulateOrderCashableProfitProbability != nil {
		return *x.SimulateOrderCashableProfitProbability
	}
	return ""
}

func (x *AdminCreateAppConfigRequest) GetMaxUnpaidOrders() uint32 {
	if x != nil && x.MaxUnpaidOrders != nil {
		return *x.MaxUnpaidOrders
	}
	return 0
}

type AdminCreateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateAppConfigResponse) Reset() {
	*x = AdminCreateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppConfigResponse) ProtoMessage() {}

func (x *AdminCreateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{9}
}

func (x *AdminCreateAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                                     uint32                      `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                                  string                      `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID                            string                      `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	EnableSimulateOrder                    *bool                       `protobuf:"varint,40,opt,name=EnableSimulateOrder,proto3,oneof" json:"EnableSimulateOrder,omitempty"`
	SimulateOrderCouponMode                *v1.SimulateOrderCouponMode `protobuf:"varint,50,opt,name=SimulateOrderCouponMode,proto3,enum=basetypes.order.v1.SimulateOrderCouponMode,oneof" json:"SimulateOrderCouponMode,omitempty"`
	SimulateOrderCouponProbability         *string                     `protobuf:"bytes,60,opt,name=SimulateOrderCouponProbability,proto3,oneof" json:"SimulateOrderCouponProbability,omitempty"`
	SimulateOrderCashableProfitProbability *string                     `protobuf:"bytes,70,opt,name=SimulateOrderCashableProfitProbability,proto3,oneof" json:"SimulateOrderCashableProfitProbability,omitempty"`
	MaxUnpaidOrders                        *uint32                     `protobuf:"varint,80,opt,name=MaxUnpaidOrders,proto3,oneof" json:"MaxUnpaidOrders,omitempty"`
}

func (x *AdminUpdateAppConfigRequest) Reset() {
	*x = AdminUpdateAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppConfigRequest) ProtoMessage() {}

func (x *AdminUpdateAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{10}
}

func (x *AdminUpdateAppConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetEnableSimulateOrder() bool {
	if x != nil && x.EnableSimulateOrder != nil {
		return *x.EnableSimulateOrder
	}
	return false
}

func (x *AdminUpdateAppConfigRequest) GetSimulateOrderCouponMode() v1.SimulateOrderCouponMode {
	if x != nil && x.SimulateOrderCouponMode != nil {
		return *x.SimulateOrderCouponMode
	}
	return v1.SimulateOrderCouponMode(0)
}

func (x *AdminUpdateAppConfigRequest) GetSimulateOrderCouponProbability() string {
	if x != nil && x.SimulateOrderCouponProbability != nil {
		return *x.SimulateOrderCouponProbability
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetSimulateOrderCashableProfitProbability() string {
	if x != nil && x.SimulateOrderCashableProfitProbability != nil {
		return *x.SimulateOrderCashableProfitProbability
	}
	return ""
}

func (x *AdminUpdateAppConfigRequest) GetMaxUnpaidOrders() uint32 {
	if x != nil && x.MaxUnpaidOrders != nil {
		return *x.MaxUnpaidOrders
	}
	return 0
}

type AdminUpdateAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateAppConfigResponse) Reset() {
	*x = AdminUpdateAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppConfigResponse) ProtoMessage() {}

func (x *AdminUpdateAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppConfigResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{11}
}

func (x *AdminUpdateAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetAppConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetAppConfigsRequest) Reset() {
	*x = AdminGetAppConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppConfigsRequest) ProtoMessage() {}

func (x *AdminGetAppConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppConfigsRequest.ProtoReflect.Descriptor instead.
func (*AdminGetAppConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{12}
}

func (x *AdminGetAppConfigsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminGetAppConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetAppConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetAppConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*config.AppConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32              `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetAppConfigsResponse) Reset() {
	*x = AdminGetAppConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppConfigsResponse) ProtoMessage() {}

func (x *AdminGetAppConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppConfigsResponse.ProtoReflect.Descriptor instead.
func (*AdminGetAppConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{13}
}

func (x *AdminGetAppConfigsResponse) GetInfos() []*config.AppConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetAppConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminDeleteAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID string `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *AdminDeleteAppConfigRequest) Reset() {
	*x = AdminDeleteAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteAppConfigRequest) ProtoMessage() {}

func (x *AdminDeleteAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{14}
}

func (x *AdminDeleteAppConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteAppConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminDeleteAppConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type AdminDeleteAppConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.AppConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteAppConfigResponse) Reset() {
	*x = AdminDeleteAppConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteAppConfigResponse) ProtoMessage() {}

func (x *AdminDeleteAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_app_config_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteAppConfigResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteAppConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP(), []int{15}
}

func (x *AdminDeleteAppConfigResponse) GetInfo() *config.AppConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_order_gw_v1_app_config_config_proto protoreflect.FileDescriptor

var file_npool_order_gw_v1_app_config_config_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x6a, 0x0a, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x01, 0x52,
	0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1e, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x1e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x26, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x26, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61,
	0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04,
	0x52, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x1a, 0x0a, 0x18,
	0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x29, 0x0a, 0x27, 0x5f,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x4d, 0x61, 0x78, 0x55, 0x6e,
	0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe6, 0x04, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x13, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x6a, 0x0a, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x48, 0x01, 0x52, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b,
	0x0a, 0x1e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x1e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x26, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x26, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x55,
	0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x04, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x1a, 0x0a, 0x18, 0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x5f,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x29,
	0x0a, 0x27, 0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x4d, 0x61,
	0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6e, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd1, 0x04,
	0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x35, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x6a, 0x0a, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x48, 0x01, 0x52, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x1e, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x5b, 0x0a, 0x26, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x26, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f,
	0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61,
	0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42,
	0x21, 0x0a, 0x1f, 0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x42, 0x29, 0x0a, 0x27, 0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x5d, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xf7, 0x04, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x6a, 0x0a, 0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x01, 0x52,
	0x17, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1e, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x1e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x26, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x26, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61,
	0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04,
	0x52, 0x0f, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x1a, 0x0a, 0x18,
	0x5f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x29, 0x0a, 0x27, 0x5f,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x4d, 0x61, 0x78, 0x55, 0x6e,
	0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x1c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x19, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x73, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x1b, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0xc1, 0x0a, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x9d, 0x01,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x9d, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x91, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x95, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61,
	0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x14, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xb2,
	0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0xaa, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x12, 0xb2, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_gw_v1_app_config_config_proto_rawDescOnce sync.Once
	file_npool_order_gw_v1_app_config_config_proto_rawDescData = file_npool_order_gw_v1_app_config_config_proto_rawDesc
)

func file_npool_order_gw_v1_app_config_config_proto_rawDescGZIP() []byte {
	file_npool_order_gw_v1_app_config_config_proto_rawDescOnce.Do(func() {
		file_npool_order_gw_v1_app_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_gw_v1_app_config_config_proto_rawDescData)
	})
	return file_npool_order_gw_v1_app_config_config_proto_rawDescData
}

var file_npool_order_gw_v1_app_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_npool_order_gw_v1_app_config_config_proto_goTypes = []interface{}{
	(*CreateAppConfigRequest)(nil),       // 0: order.gateway.app.config.v1.CreateAppConfigRequest
	(*CreateAppConfigResponse)(nil),      // 1: order.gateway.app.config.v1.CreateAppConfigResponse
	(*UpdateAppConfigRequest)(nil),       // 2: order.gateway.app.config.v1.UpdateAppConfigRequest
	(*UpdateAppConfigResponse)(nil),      // 3: order.gateway.app.config.v1.UpdateAppConfigResponse
	(*GetAppConfigRequest)(nil),          // 4: order.gateway.app.config.v1.GetAppConfigRequest
	(*GetAppConfigResponse)(nil),         // 5: order.gateway.app.config.v1.GetAppConfigResponse
	(*GetAppConfigsRequest)(nil),         // 6: order.gateway.app.config.v1.GetAppConfigsRequest
	(*GetAppConfigsResponse)(nil),        // 7: order.gateway.app.config.v1.GetAppConfigsResponse
	(*AdminCreateAppConfigRequest)(nil),  // 8: order.gateway.app.config.v1.AdminCreateAppConfigRequest
	(*AdminCreateAppConfigResponse)(nil), // 9: order.gateway.app.config.v1.AdminCreateAppConfigResponse
	(*AdminUpdateAppConfigRequest)(nil),  // 10: order.gateway.app.config.v1.AdminUpdateAppConfigRequest
	(*AdminUpdateAppConfigResponse)(nil), // 11: order.gateway.app.config.v1.AdminUpdateAppConfigResponse
	(*AdminGetAppConfigsRequest)(nil),    // 12: order.gateway.app.config.v1.AdminGetAppConfigsRequest
	(*AdminGetAppConfigsResponse)(nil),   // 13: order.gateway.app.config.v1.AdminGetAppConfigsResponse
	(*AdminDeleteAppConfigRequest)(nil),  // 14: order.gateway.app.config.v1.AdminDeleteAppConfigRequest
	(*AdminDeleteAppConfigResponse)(nil), // 15: order.gateway.app.config.v1.AdminDeleteAppConfigResponse
	(v1.SimulateOrderCouponMode)(0),      // 16: basetypes.order.v1.SimulateOrderCouponMode
	(*config.AppConfig)(nil),             // 17: order.middleware.app.config.v1.AppConfig
}
var file_npool_order_gw_v1_app_config_config_proto_depIdxs = []int32{
	16, // 0: order.gateway.app.config.v1.CreateAppConfigRequest.SimulateOrderCouponMode:type_name -> basetypes.order.v1.SimulateOrderCouponMode
	17, // 1: order.gateway.app.config.v1.CreateAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	16, // 2: order.gateway.app.config.v1.UpdateAppConfigRequest.SimulateOrderCouponMode:type_name -> basetypes.order.v1.SimulateOrderCouponMode
	17, // 3: order.gateway.app.config.v1.UpdateAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	17, // 4: order.gateway.app.config.v1.GetAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	17, // 5: order.gateway.app.config.v1.GetAppConfigsResponse.Infos:type_name -> order.middleware.app.config.v1.AppConfig
	16, // 6: order.gateway.app.config.v1.AdminCreateAppConfigRequest.SimulateOrderCouponMode:type_name -> basetypes.order.v1.SimulateOrderCouponMode
	17, // 7: order.gateway.app.config.v1.AdminCreateAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	16, // 8: order.gateway.app.config.v1.AdminUpdateAppConfigRequest.SimulateOrderCouponMode:type_name -> basetypes.order.v1.SimulateOrderCouponMode
	17, // 9: order.gateway.app.config.v1.AdminUpdateAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	17, // 10: order.gateway.app.config.v1.AdminGetAppConfigsResponse.Infos:type_name -> order.middleware.app.config.v1.AppConfig
	17, // 11: order.gateway.app.config.v1.AdminDeleteAppConfigResponse.Info:type_name -> order.middleware.app.config.v1.AppConfig
	0,  // 12: order.gateway.app.config.v1.Gateway.CreateAppConfig:input_type -> order.gateway.app.config.v1.CreateAppConfigRequest
	2,  // 13: order.gateway.app.config.v1.Gateway.UpdateAppConfig:input_type -> order.gateway.app.config.v1.UpdateAppConfigRequest
	4,  // 14: order.gateway.app.config.v1.Gateway.GetAppConfig:input_type -> order.gateway.app.config.v1.GetAppConfigRequest
	6,  // 15: order.gateway.app.config.v1.Gateway.GetAppConfigs:input_type -> order.gateway.app.config.v1.GetAppConfigsRequest
	8,  // 16: order.gateway.app.config.v1.Gateway.AdminCreateAppConfig:input_type -> order.gateway.app.config.v1.AdminCreateAppConfigRequest
	10, // 17: order.gateway.app.config.v1.Gateway.AdminUpdateAppConfig:input_type -> order.gateway.app.config.v1.AdminUpdateAppConfigRequest
	12, // 18: order.gateway.app.config.v1.Gateway.AdminGetAppConfigs:input_type -> order.gateway.app.config.v1.AdminGetAppConfigsRequest
	14, // 19: order.gateway.app.config.v1.Gateway.AdminDeleteAppConfig:input_type -> order.gateway.app.config.v1.AdminDeleteAppConfigRequest
	1,  // 20: order.gateway.app.config.v1.Gateway.CreateAppConfig:output_type -> order.gateway.app.config.v1.CreateAppConfigResponse
	3,  // 21: order.gateway.app.config.v1.Gateway.UpdateAppConfig:output_type -> order.gateway.app.config.v1.UpdateAppConfigResponse
	5,  // 22: order.gateway.app.config.v1.Gateway.GetAppConfig:output_type -> order.gateway.app.config.v1.GetAppConfigResponse
	7,  // 23: order.gateway.app.config.v1.Gateway.GetAppConfigs:output_type -> order.gateway.app.config.v1.GetAppConfigsResponse
	9,  // 24: order.gateway.app.config.v1.Gateway.AdminCreateAppConfig:output_type -> order.gateway.app.config.v1.AdminCreateAppConfigResponse
	11, // 25: order.gateway.app.config.v1.Gateway.AdminUpdateAppConfig:output_type -> order.gateway.app.config.v1.AdminUpdateAppConfigResponse
	13, // 26: order.gateway.app.config.v1.Gateway.AdminGetAppConfigs:output_type -> order.gateway.app.config.v1.AdminGetAppConfigsResponse
	15, // 27: order.gateway.app.config.v1.Gateway.AdminDeleteAppConfig:output_type -> order.gateway.app.config.v1.AdminDeleteAppConfigResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_npool_order_gw_v1_app_config_config_proto_init() }
func file_npool_order_gw_v1_app_config_config_proto_init() {
	if File_npool_order_gw_v1_app_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_app_config_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteAppConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_gw_v1_app_config_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_app_config_config_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_app_config_config_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_app_config_config_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_gw_v1_app_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_gw_v1_app_config_config_proto_goTypes,
		DependencyIndexes: file_npool_order_gw_v1_app_config_config_proto_depIdxs,
		MessageInfos:      file_npool_order_gw_v1_app_config_config_proto_msgTypes,
	}.Build()
	File_npool_order_gw_v1_app_config_config_proto = out.File
	file_npool_order_gw_v1_app_config_config_proto_rawDesc = nil
	file_npool_order_gw_v1_app_config_config_proto_goTypes = nil
	file_npool_order_gw_v1_app_config_config_proto_depIdxs = nil
}
