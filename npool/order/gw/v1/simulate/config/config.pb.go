// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/order/gw/v1/simulate/config/config.proto

package config

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/order/v1"
	config "github.com/NpoolPlatform/message/npool/order/mw/v1/simulate/config"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                 string            `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SendCouponMode        v1.SendCouponMode `protobuf:"varint,20,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode" json:"SendCouponMode,omitempty"`
	SendCouponProbability string            `protobuf:"bytes,30,opt,name=SendCouponProbability,proto3" json:"SendCouponProbability,omitempty"`
	EnabledProfitTx       bool              `protobuf:"varint,40,opt,name=EnabledProfitTx,proto3" json:"EnabledProfitTx,omitempty"`
	ProfitTxProbability   string            `protobuf:"bytes,50,opt,name=ProfitTxProbability,proto3" json:"ProfitTxProbability,omitempty"`
	Enabled               bool              `protobuf:"varint,60,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *CreateSimulateConfigRequest) Reset() {
	*x = CreateSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimulateConfigRequest) ProtoMessage() {}

func (x *CreateSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSimulateConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateSimulateConfigRequest) GetSendCouponMode() v1.SendCouponMode {
	if x != nil {
		return x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *CreateSimulateConfigRequest) GetSendCouponProbability() string {
	if x != nil {
		return x.SendCouponProbability
	}
	return ""
}

func (x *CreateSimulateConfigRequest) GetEnabledProfitTx() bool {
	if x != nil {
		return x.EnabledProfitTx
	}
	return false
}

func (x *CreateSimulateConfigRequest) GetProfitTxProbability() string {
	if x != nil {
		return x.ProfitTxProbability
	}
	return ""
}

func (x *CreateSimulateConfigRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type CreateSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSimulateConfigResponse) Reset() {
	*x = CreateSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSimulateConfigResponse) ProtoMessage() {}

func (x *CreateSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSimulateConfigResponse) GetInfo() *config.SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    uint32             `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                 string             `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                 string             `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SendCouponMode        *v1.SendCouponMode `protobuf:"varint,40,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode,oneof" json:"SendCouponMode,omitempty"`
	SendCouponProbability *string            `protobuf:"bytes,50,opt,name=SendCouponProbability,proto3,oneof" json:"SendCouponProbability,omitempty"`
	EnabledProfitTx       *bool              `protobuf:"varint,60,opt,name=EnabledProfitTx,proto3,oneof" json:"EnabledProfitTx,omitempty"`
	ProfitTxProbability   *string            `protobuf:"bytes,70,opt,name=ProfitTxProbability,proto3,oneof" json:"ProfitTxProbability,omitempty"`
	Enabled               *bool              `protobuf:"varint,80,opt,name=Enabled,proto3,oneof" json:"Enabled,omitempty"`
}

func (x *UpdateSimulateConfigRequest) Reset() {
	*x = UpdateSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSimulateConfigRequest) ProtoMessage() {}

func (x *UpdateSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSimulateConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateSimulateConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateSimulateConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateSimulateConfigRequest) GetSendCouponMode() v1.SendCouponMode {
	if x != nil && x.SendCouponMode != nil {
		return *x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *UpdateSimulateConfigRequest) GetSendCouponProbability() string {
	if x != nil && x.SendCouponProbability != nil {
		return *x.SendCouponProbability
	}
	return ""
}

func (x *UpdateSimulateConfigRequest) GetEnabledProfitTx() bool {
	if x != nil && x.EnabledProfitTx != nil {
		return *x.EnabledProfitTx
	}
	return false
}

func (x *UpdateSimulateConfigRequest) GetProfitTxProbability() string {
	if x != nil && x.ProfitTxProbability != nil {
		return *x.ProfitTxProbability
	}
	return ""
}

func (x *UpdateSimulateConfigRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type UpdateSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSimulateConfigResponse) Reset() {
	*x = UpdateSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSimulateConfigResponse) ProtoMessage() {}

func (x *UpdateSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSimulateConfigResponse) GetInfo() *config.SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetSimulateConfigRequest) Reset() {
	*x = GetSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigRequest) ProtoMessage() {}

func (x *GetSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *GetSimulateConfigRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetSimulateConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSimulateConfigResponse) Reset() {
	*x = GetSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigResponse) ProtoMessage() {}

func (x *GetSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *GetSimulateConfigResponse) GetInfo() *config.SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSimulateConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSimulateConfigsRequest) Reset() {
	*x = GetSimulateConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigsRequest) ProtoMessage() {}

func (x *GetSimulateConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *GetSimulateConfigsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetSimulateConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSimulateConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSimulateConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*config.SimulateConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSimulateConfigsResponse) Reset() {
	*x = GetSimulateConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSimulateConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimulateConfigsResponse) ProtoMessage() {}

func (x *GetSimulateConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimulateConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetSimulateConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *GetSimulateConfigsResponse) GetInfos() []*config.SimulateConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSimulateConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateAppSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID           string            `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	SendCouponMode        v1.SendCouponMode `protobuf:"varint,20,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode" json:"SendCouponMode,omitempty"`
	SendCouponProbability string            `protobuf:"bytes,30,opt,name=SendCouponProbability,proto3" json:"SendCouponProbability,omitempty"`
	EnabledProfitTx       bool              `protobuf:"varint,40,opt,name=EnabledProfitTx,proto3" json:"EnabledProfitTx,omitempty"`
	ProfitTxProbability   string            `protobuf:"bytes,50,opt,name=ProfitTxProbability,proto3" json:"ProfitTxProbability,omitempty"`
	Enabled               bool              `protobuf:"varint,60,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *CreateAppSimulateConfigRequest) Reset() {
	*x = CreateAppSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppSimulateConfigRequest) ProtoMessage() {}

func (x *CreateAppSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateAppSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{8}
}

func (x *CreateAppSimulateConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppSimulateConfigRequest) GetSendCouponMode() v1.SendCouponMode {
	if x != nil {
		return x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *CreateAppSimulateConfigRequest) GetSendCouponProbability() string {
	if x != nil {
		return x.SendCouponProbability
	}
	return ""
}

func (x *CreateAppSimulateConfigRequest) GetEnabledProfitTx() bool {
	if x != nil {
		return x.EnabledProfitTx
	}
	return false
}

func (x *CreateAppSimulateConfigRequest) GetProfitTxProbability() string {
	if x != nil {
		return x.ProfitTxProbability
	}
	return ""
}

func (x *CreateAppSimulateConfigRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type CreateAppSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppSimulateConfigResponse) Reset() {
	*x = CreateAppSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppSimulateConfigResponse) ProtoMessage() {}

func (x *CreateAppSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateAppSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAppSimulateConfigResponse) GetInfo() *config.SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppSimulateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    uint32             `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                 string             `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID           string             `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	SendCouponMode        *v1.SendCouponMode `protobuf:"varint,40,opt,name=SendCouponMode,proto3,enum=basetypes.order.v1.SendCouponMode,oneof" json:"SendCouponMode,omitempty"`
	SendCouponProbability *string            `protobuf:"bytes,50,opt,name=SendCouponProbability,proto3,oneof" json:"SendCouponProbability,omitempty"`
	EnabledProfitTx       *bool              `protobuf:"varint,60,opt,name=EnabledProfitTx,proto3,oneof" json:"EnabledProfitTx,omitempty"`
	ProfitTxProbability   *string            `protobuf:"bytes,70,opt,name=ProfitTxProbability,proto3,oneof" json:"ProfitTxProbability,omitempty"`
	Enabled               *bool              `protobuf:"varint,80,opt,name=Enabled,proto3,oneof" json:"Enabled,omitempty"`
}

func (x *UpdateAppSimulateConfigRequest) Reset() {
	*x = UpdateAppSimulateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSimulateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSimulateConfigRequest) ProtoMessage() {}

func (x *UpdateAppSimulateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSimulateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppSimulateConfigRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAppSimulateConfigRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateAppSimulateConfigRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateAppSimulateConfigRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppSimulateConfigRequest) GetSendCouponMode() v1.SendCouponMode {
	if x != nil && x.SendCouponMode != nil {
		return *x.SendCouponMode
	}
	return v1.SendCouponMode(0)
}

func (x *UpdateAppSimulateConfigRequest) GetSendCouponProbability() string {
	if x != nil && x.SendCouponProbability != nil {
		return *x.SendCouponProbability
	}
	return ""
}

func (x *UpdateAppSimulateConfigRequest) GetEnabledProfitTx() bool {
	if x != nil && x.EnabledProfitTx != nil {
		return *x.EnabledProfitTx
	}
	return false
}

func (x *UpdateAppSimulateConfigRequest) GetProfitTxProbability() string {
	if x != nil && x.ProfitTxProbability != nil {
		return *x.ProfitTxProbability
	}
	return ""
}

func (x *UpdateAppSimulateConfigRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type UpdateAppSimulateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *config.SimulateConfig `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppSimulateConfigResponse) Reset() {
	*x = UpdateAppSimulateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSimulateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSimulateConfigResponse) ProtoMessage() {}

func (x *UpdateAppSimulateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSimulateConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppSimulateConfigResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAppSimulateConfigResponse) GetInfo() *config.SimulateConfig {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppSimulateConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppSimulateConfigsRequest) Reset() {
	*x = GetAppSimulateConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSimulateConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSimulateConfigsRequest) ProtoMessage() {}

func (x *GetAppSimulateConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSimulateConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetAppSimulateConfigsRequest) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppSimulateConfigsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppSimulateConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppSimulateConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppSimulateConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*config.SimulateConfig `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppSimulateConfigsResponse) Reset() {
	*x = GetAppSimulateConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSimulateConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSimulateConfigsResponse) ProtoMessage() {}

func (x *GetAppSimulateConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSimulateConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetAppSimulateConfigsResponse) Descriptor() ([]byte, []int) {
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP(), []int{13}
}

func (x *GetAppSimulateConfigsResponse) GetInfos() []*config.SimulateConfig {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppSimulateConfigsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_order_gw_v1_simulate_config_config_proto protoreflect.FileDescriptor

var file_npool_order_gw_v1_simulate_config_config_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x02, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54,
	0x78, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcf, 0x03,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x0e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x15, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02,
	0x52, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x07,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x18, 0x0a,
	0x16, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x67, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xba, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a,
	0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x6a, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xde, 0x03, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x54, 0x78, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54,
	0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52,
	0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x6a, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x80, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32,
	0xcd, 0x0a, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xbc, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xbc, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xb4, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xc9, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x40, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12,
	0xc9, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0xc1, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x3e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x42,
	0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_order_gw_v1_simulate_config_config_proto_rawDescOnce sync.Once
	file_npool_order_gw_v1_simulate_config_config_proto_rawDescData = file_npool_order_gw_v1_simulate_config_config_proto_rawDesc
)

func file_npool_order_gw_v1_simulate_config_config_proto_rawDescGZIP() []byte {
	file_npool_order_gw_v1_simulate_config_config_proto_rawDescOnce.Do(func() {
		file_npool_order_gw_v1_simulate_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_order_gw_v1_simulate_config_config_proto_rawDescData)
	})
	return file_npool_order_gw_v1_simulate_config_config_proto_rawDescData
}

var file_npool_order_gw_v1_simulate_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_npool_order_gw_v1_simulate_config_config_proto_goTypes = []interface{}{
	(*CreateSimulateConfigRequest)(nil),     // 0: order.gateway.simulate.config.v1.CreateSimulateConfigRequest
	(*CreateSimulateConfigResponse)(nil),    // 1: order.gateway.simulate.config.v1.CreateSimulateConfigResponse
	(*UpdateSimulateConfigRequest)(nil),     // 2: order.gateway.simulate.config.v1.UpdateSimulateConfigRequest
	(*UpdateSimulateConfigResponse)(nil),    // 3: order.gateway.simulate.config.v1.UpdateSimulateConfigResponse
	(*GetSimulateConfigRequest)(nil),        // 4: order.gateway.simulate.config.v1.GetSimulateConfigRequest
	(*GetSimulateConfigResponse)(nil),       // 5: order.gateway.simulate.config.v1.GetSimulateConfigResponse
	(*GetSimulateConfigsRequest)(nil),       // 6: order.gateway.simulate.config.v1.GetSimulateConfigsRequest
	(*GetSimulateConfigsResponse)(nil),      // 7: order.gateway.simulate.config.v1.GetSimulateConfigsResponse
	(*CreateAppSimulateConfigRequest)(nil),  // 8: order.gateway.simulate.config.v1.CreateAppSimulateConfigRequest
	(*CreateAppSimulateConfigResponse)(nil), // 9: order.gateway.simulate.config.v1.CreateAppSimulateConfigResponse
	(*UpdateAppSimulateConfigRequest)(nil),  // 10: order.gateway.simulate.config.v1.UpdateAppSimulateConfigRequest
	(*UpdateAppSimulateConfigResponse)(nil), // 11: order.gateway.simulate.config.v1.UpdateAppSimulateConfigResponse
	(*GetAppSimulateConfigsRequest)(nil),    // 12: order.gateway.simulate.config.v1.GetAppSimulateConfigsRequest
	(*GetAppSimulateConfigsResponse)(nil),   // 13: order.gateway.simulate.config.v1.GetAppSimulateConfigsResponse
	(v1.SendCouponMode)(0),                  // 14: basetypes.order.v1.SendCouponMode
	(*config.SimulateConfig)(nil),           // 15: order.middleware.simulate.config.v1.SimulateConfig
}
var file_npool_order_gw_v1_simulate_config_config_proto_depIdxs = []int32{
	14, // 0: order.gateway.simulate.config.v1.CreateSimulateConfigRequest.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	15, // 1: order.gateway.simulate.config.v1.CreateSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	14, // 2: order.gateway.simulate.config.v1.UpdateSimulateConfigRequest.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	15, // 3: order.gateway.simulate.config.v1.UpdateSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	15, // 4: order.gateway.simulate.config.v1.GetSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	15, // 5: order.gateway.simulate.config.v1.GetSimulateConfigsResponse.Infos:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	14, // 6: order.gateway.simulate.config.v1.CreateAppSimulateConfigRequest.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	15, // 7: order.gateway.simulate.config.v1.CreateAppSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	14, // 8: order.gateway.simulate.config.v1.UpdateAppSimulateConfigRequest.SendCouponMode:type_name -> basetypes.order.v1.SendCouponMode
	15, // 9: order.gateway.simulate.config.v1.UpdateAppSimulateConfigResponse.Info:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	15, // 10: order.gateway.simulate.config.v1.GetAppSimulateConfigsResponse.Infos:type_name -> order.middleware.simulate.config.v1.SimulateConfig
	0,  // 11: order.gateway.simulate.config.v1.Gateway.CreateSimulateConfig:input_type -> order.gateway.simulate.config.v1.CreateSimulateConfigRequest
	2,  // 12: order.gateway.simulate.config.v1.Gateway.UpdateSimulateConfig:input_type -> order.gateway.simulate.config.v1.UpdateSimulateConfigRequest
	4,  // 13: order.gateway.simulate.config.v1.Gateway.GetSimulateConfig:input_type -> order.gateway.simulate.config.v1.GetSimulateConfigRequest
	6,  // 14: order.gateway.simulate.config.v1.Gateway.GetSimulateConfigs:input_type -> order.gateway.simulate.config.v1.GetSimulateConfigsRequest
	8,  // 15: order.gateway.simulate.config.v1.Gateway.CreateAppSimulateConfig:input_type -> order.gateway.simulate.config.v1.CreateAppSimulateConfigRequest
	10, // 16: order.gateway.simulate.config.v1.Gateway.UpdateAppSimulateConfig:input_type -> order.gateway.simulate.config.v1.UpdateAppSimulateConfigRequest
	12, // 17: order.gateway.simulate.config.v1.Gateway.GetAppSimulateConfigs:input_type -> order.gateway.simulate.config.v1.GetAppSimulateConfigsRequest
	1,  // 18: order.gateway.simulate.config.v1.Gateway.CreateSimulateConfig:output_type -> order.gateway.simulate.config.v1.CreateSimulateConfigResponse
	3,  // 19: order.gateway.simulate.config.v1.Gateway.UpdateSimulateConfig:output_type -> order.gateway.simulate.config.v1.UpdateSimulateConfigResponse
	5,  // 20: order.gateway.simulate.config.v1.Gateway.GetSimulateConfig:output_type -> order.gateway.simulate.config.v1.GetSimulateConfigResponse
	7,  // 21: order.gateway.simulate.config.v1.Gateway.GetSimulateConfigs:output_type -> order.gateway.simulate.config.v1.GetSimulateConfigsResponse
	9,  // 22: order.gateway.simulate.config.v1.Gateway.CreateAppSimulateConfig:output_type -> order.gateway.simulate.config.v1.CreateAppSimulateConfigResponse
	11, // 23: order.gateway.simulate.config.v1.Gateway.UpdateAppSimulateConfig:output_type -> order.gateway.simulate.config.v1.UpdateAppSimulateConfigResponse
	13, // 24: order.gateway.simulate.config.v1.Gateway.GetAppSimulateConfigs:output_type -> order.gateway.simulate.config.v1.GetAppSimulateConfigsResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_npool_order_gw_v1_simulate_config_config_proto_init() }
func file_npool_order_gw_v1_simulate_config_config_proto_init() {
	if File_npool_order_gw_v1_simulate_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSimulateConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppSimulateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppSimulateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSimulateConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSimulateConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_npool_order_gw_v1_simulate_config_config_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_order_gw_v1_simulate_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_order_gw_v1_simulate_config_config_proto_goTypes,
		DependencyIndexes: file_npool_order_gw_v1_simulate_config_config_proto_depIdxs,
		MessageInfos:      file_npool_order_gw_v1_simulate_config_config_proto_msgTypes,
	}.Build()
	File_npool_order_gw_v1_simulate_config_config_proto = out.File
	file_npool_order_gw_v1_simulate_config_config_proto_rawDesc = nil
	file_npool_order_gw_v1_simulate_config_config_proto_goTypes = nil
	file_npool_order_gw_v1_simulate_config_config_proto_depIdxs = nil
}
