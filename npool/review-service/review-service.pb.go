// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/review-service/review-service.proto

package review_service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ObjectType string `protobuf:"bytes,20,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
	AppID      string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	ReviewerID string `protobuf:"bytes,40,opt,name=ReviewerID,proto3" json:"ReviewerID,omitempty"`
	State      string `protobuf:"bytes,50,opt,name=State,proto3" json:"State,omitempty"`
	Message    string `protobuf:"bytes,60,opt,name=Message,proto3" json:"Message,omitempty"`
	ObjectID   string `protobuf:"bytes,70,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Domain     string `protobuf:"bytes,80,opt,name=Domain,proto3" json:"Domain,omitempty"`
	CreateAt   uint32 `protobuf:"varint,90,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	Trigger    string `protobuf:"bytes,100,opt,name=Trigger,proto3" json:"Trigger,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{1}
}

func (x *Review) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Review) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *Review) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Review) GetReviewerID() string {
	if x != nil {
		return x.ReviewerID
	}
	return ""
}

func (x *Review) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Review) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Review) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Review) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Review) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Review) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

type CreateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRequest) Reset() {
	*x = CreateReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRequest) ProtoMessage() {}

func (x *CreateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReviewRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewResponse) Reset() {
	*x = CreateReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewResponse) ProtoMessage() {}

func (x *CreateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewResponse.ProtoReflect.Descriptor instead.
func (*CreateReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetReviewRequest) Reset() {
	*x = GetReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRequest) ProtoMessage() {}

func (x *GetReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetReviewRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetReviewResponse) Reset() {
	*x = GetReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewResponse) ProtoMessage() {}

func (x *GetReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewResponse.ProtoReflect.Descriptor instead.
func (*GetReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRequest) Reset() {
	*x = UpdateReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRequest) ProtoMessage() {}

func (x *UpdateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateReviewRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewResponse) Reset() {
	*x = UpdateReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewResponse) ProtoMessage() {}

func (x *UpdateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewsByDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,10,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GetReviewsByDomainRequest) Reset() {
	*x = GetReviewsByDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByDomainRequest) ProtoMessage() {}

func (x *GetReviewsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetReviewsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetReviewsByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Review `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewsByDomainResponse) Reset() {
	*x = GetReviewsByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByDomainResponse) ProtoMessage() {}

func (x *GetReviewsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetReviewsByDomainResponse) GetInfos() []*Review {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetReviewsByAppDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Domain string `protobuf:"bytes,20,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GetReviewsByAppDomainRequest) Reset() {
	*x = GetReviewsByAppDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainRequest) ProtoMessage() {}

func (x *GetReviewsByAppDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetReviewsByAppDomainRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetReviewsByAppDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetReviewsByAppDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Review `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewsByAppDomainResponse) Reset() {
	*x = GetReviewsByAppDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainResponse) ProtoMessage() {}

func (x *GetReviewsByAppDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetReviewsByAppDomainResponse) GetInfos() []*Review {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetReviewsByAppDomainObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Domain     string `protobuf:"bytes,20,opt,name=Domain,proto3" json:"Domain,omitempty"`
	ObjectType string `protobuf:"bytes,30,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
}

func (x *GetReviewsByAppDomainObjectTypeRequest) Reset() {
	*x = GetReviewsByAppDomainObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainObjectTypeRequest) ProtoMessage() {}

func (x *GetReviewsByAppDomainObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetReviewsByAppDomainObjectTypeRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetReviewsByAppDomainObjectTypeRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetReviewsByAppDomainObjectTypeRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

type GetReviewsByAppDomainObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Review `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewsByAppDomainObjectTypeResponse) Reset() {
	*x = GetReviewsByAppDomainObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainObjectTypeResponse) ProtoMessage() {}

func (x *GetReviewsByAppDomainObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetReviewsByAppDomainObjectTypeResponse) GetInfos() []*Review {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetReviewsByAppDomainObjectTypeIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Domain     string `protobuf:"bytes,20,opt,name=Domain,proto3" json:"Domain,omitempty"`
	ObjectType string `protobuf:"bytes,30,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
	ObjectID   string `protobuf:"bytes,40,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) Reset() {
	*x = GetReviewsByAppDomainObjectTypeIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainObjectTypeIDRequest) ProtoMessage() {}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainObjectTypeIDRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainObjectTypeIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *GetReviewsByAppDomainObjectTypeIDRequest) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

type GetReviewsByAppDomainObjectTypeIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Review `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewsByAppDomainObjectTypeIDResponse) Reset() {
	*x = GetReviewsByAppDomainObjectTypeIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByAppDomainObjectTypeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByAppDomainObjectTypeIDResponse) ProtoMessage() {}

func (x *GetReviewsByAppDomainObjectTypeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByAppDomainObjectTypeIDResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsByAppDomainObjectTypeIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetReviewsByAppDomainObjectTypeIDResponse) GetInfos() []*Review {
	if x != nil {
		return x.Infos
	}
	return nil
}

type SubmitReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitReviewRequest) Reset() {
	*x = SubmitReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReviewRequest) ProtoMessage() {}

func (x *SubmitReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReviewRequest.ProtoReflect.Descriptor instead.
func (*SubmitReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{16}
}

func (x *SubmitReviewRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type SubmitReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitReviewResponse) Reset() {
	*x = SubmitReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReviewResponse) ProtoMessage() {}

func (x *SubmitReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReviewResponse.ProtoReflect.Descriptor instead.
func (*SubmitReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{17}
}

func (x *SubmitReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type ReviewRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ObjectType string `protobuf:"bytes,20,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
	Domain     string `protobuf:"bytes,30,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Rules      string `protobuf:"bytes,40,opt,name=Rules,proto3" json:"Rules,omitempty"`
}

func (x *ReviewRule) Reset() {
	*x = ReviewRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewRule) ProtoMessage() {}

func (x *ReviewRule) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewRule.ProtoReflect.Descriptor instead.
func (*ReviewRule) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{18}
}

func (x *ReviewRule) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ReviewRule) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *ReviewRule) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ReviewRule) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

type CreateReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRuleRequest) Reset() {
	*x = CreateReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRuleRequest) ProtoMessage() {}

func (x *CreateReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateReviewRuleRequest) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRuleResponse) Reset() {
	*x = CreateReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRuleResponse) ProtoMessage() {}

func (x *CreateReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRuleRequest) Reset() {
	*x = UpdateReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRuleRequest) ProtoMessage() {}

func (x *UpdateReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateReviewRuleRequest) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRuleResponse) Reset() {
	*x = UpdateReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRuleResponse) ProtoMessage() {}

func (x *UpdateReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetReviewRuleRequest) Reset() {
	*x = GetReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleRequest) ProtoMessage() {}

func (x *GetReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetReviewRuleRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetReviewRuleResponse) Reset() {
	*x = GetReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleResponse) ProtoMessage() {}

func (x *GetReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*GetReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewRulesByDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,10,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GetReviewRulesByDomainRequest) Reset() {
	*x = GetReviewRulesByDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRulesByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRulesByDomainRequest) ProtoMessage() {}

func (x *GetReviewRulesByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRulesByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRulesByDomainRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetReviewRulesByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetReviewRulesByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*ReviewRule `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewRulesByDomainResponse) Reset() {
	*x = GetReviewRulesByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRulesByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRulesByDomainResponse) ProtoMessage() {}

func (x *GetReviewRulesByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRulesByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetReviewRulesByDomainResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetReviewRulesByDomainResponse) GetInfos() []*ReviewRule {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetReviewRuleByDomainObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string `protobuf:"bytes,10,opt,name=Domain,proto3" json:"Domain,omitempty"`
	ObjectType string `protobuf:"bytes,20,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
}

func (x *GetReviewRuleByDomainObjectTypeRequest) Reset() {
	*x = GetReviewRuleByDomainObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleByDomainObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleByDomainObjectTypeRequest) ProtoMessage() {}

func (x *GetReviewRuleByDomainObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleByDomainObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRuleByDomainObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetReviewRuleByDomainObjectTypeRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetReviewRuleByDomainObjectTypeRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

type GetReviewRuleByDomainObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetReviewRuleByDomainObjectTypeResponse) Reset() {
	*x = GetReviewRuleByDomainObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleByDomainObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleByDomainObjectTypeResponse) ProtoMessage() {}

func (x *GetReviewRuleByDomainObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleByDomainObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*GetReviewRuleByDomainObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetReviewRuleByDomainObjectTypeResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type SubmitReviewResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitReviewResultRequest) Reset() {
	*x = SubmitReviewResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitReviewResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReviewResultRequest) ProtoMessage() {}

func (x *SubmitReviewResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReviewResultRequest.ProtoReflect.Descriptor instead.
func (*SubmitReviewResultRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{29}
}

func (x *SubmitReviewResultRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type SubmitReviewResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitReviewResultResponse) Reset() {
	*x = SubmitReviewResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_review_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitReviewResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReviewResultResponse) ProtoMessage() {}

func (x *SubmitReviewResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_review_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReviewResultResponse.ProtoReflect.Descriptor instead.
func (*SubmitReviewResultResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_review_service_proto_rawDescGZIP(), []int{30}
}

func (x *SubmitReviewResultResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_review_service_review_service_proto protoreflect.FileDescriptor

var file_npool_review_service_review_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x88, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x44, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0x4d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0x50, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x76, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x27, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x29,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x44, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x45, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x4c, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x37, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x60, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4a, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a,
	0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x83, 0x12, 0x0a, 0x0d, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x22, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08,
	0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x71, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x7d, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x97, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x2c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42,
	0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0xa4, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2f, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70,
	0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0xce, 0x01, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a,
	0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xd7, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x12, 0x3b, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x69, 0x64, 0x12, 0x7d, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01,
	0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x8e, 0x01,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x8e,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x27, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f,
	0x72, 0x75, 0x6c, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x30, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22,
	0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0xce, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x39, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x62, 0x79, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_npool_review_service_review_service_proto_rawDescOnce sync.Once
	file_npool_review_service_review_service_proto_rawDescData = file_npool_review_service_review_service_proto_rawDesc
)

func file_npool_review_service_review_service_proto_rawDescGZIP() []byte {
	file_npool_review_service_review_service_proto_rawDescOnce.Do(func() {
		file_npool_review_service_review_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_review_service_review_service_proto_rawDescData)
	})
	return file_npool_review_service_review_service_proto_rawDescData
}

var file_npool_review_service_review_service_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_npool_review_service_review_service_proto_goTypes = []interface{}{
	(*VersionResponse)(nil),                           // 0: review.service.v1.VersionResponse
	(*Review)(nil),                                    // 1: review.service.v1.Review
	(*CreateReviewRequest)(nil),                       // 2: review.service.v1.CreateReviewRequest
	(*CreateReviewResponse)(nil),                      // 3: review.service.v1.CreateReviewResponse
	(*GetReviewRequest)(nil),                          // 4: review.service.v1.GetReviewRequest
	(*GetReviewResponse)(nil),                         // 5: review.service.v1.GetReviewResponse
	(*UpdateReviewRequest)(nil),                       // 6: review.service.v1.UpdateReviewRequest
	(*UpdateReviewResponse)(nil),                      // 7: review.service.v1.UpdateReviewResponse
	(*GetReviewsByDomainRequest)(nil),                 // 8: review.service.v1.GetReviewsByDomainRequest
	(*GetReviewsByDomainResponse)(nil),                // 9: review.service.v1.GetReviewsByDomainResponse
	(*GetReviewsByAppDomainRequest)(nil),              // 10: review.service.v1.GetReviewsByAppDomainRequest
	(*GetReviewsByAppDomainResponse)(nil),             // 11: review.service.v1.GetReviewsByAppDomainResponse
	(*GetReviewsByAppDomainObjectTypeRequest)(nil),    // 12: review.service.v1.GetReviewsByAppDomainObjectTypeRequest
	(*GetReviewsByAppDomainObjectTypeResponse)(nil),   // 13: review.service.v1.GetReviewsByAppDomainObjectTypeResponse
	(*GetReviewsByAppDomainObjectTypeIDRequest)(nil),  // 14: review.service.v1.GetReviewsByAppDomainObjectTypeIDRequest
	(*GetReviewsByAppDomainObjectTypeIDResponse)(nil), // 15: review.service.v1.GetReviewsByAppDomainObjectTypeIDResponse
	(*SubmitReviewRequest)(nil),                       // 16: review.service.v1.SubmitReviewRequest
	(*SubmitReviewResponse)(nil),                      // 17: review.service.v1.SubmitReviewResponse
	(*ReviewRule)(nil),                                // 18: review.service.v1.ReviewRule
	(*CreateReviewRuleRequest)(nil),                   // 19: review.service.v1.CreateReviewRuleRequest
	(*CreateReviewRuleResponse)(nil),                  // 20: review.service.v1.CreateReviewRuleResponse
	(*UpdateReviewRuleRequest)(nil),                   // 21: review.service.v1.UpdateReviewRuleRequest
	(*UpdateReviewRuleResponse)(nil),                  // 22: review.service.v1.UpdateReviewRuleResponse
	(*GetReviewRuleRequest)(nil),                      // 23: review.service.v1.GetReviewRuleRequest
	(*GetReviewRuleResponse)(nil),                     // 24: review.service.v1.GetReviewRuleResponse
	(*GetReviewRulesByDomainRequest)(nil),             // 25: review.service.v1.GetReviewRulesByDomainRequest
	(*GetReviewRulesByDomainResponse)(nil),            // 26: review.service.v1.GetReviewRulesByDomainResponse
	(*GetReviewRuleByDomainObjectTypeRequest)(nil),    // 27: review.service.v1.GetReviewRuleByDomainObjectTypeRequest
	(*GetReviewRuleByDomainObjectTypeResponse)(nil),   // 28: review.service.v1.GetReviewRuleByDomainObjectTypeResponse
	(*SubmitReviewResultRequest)(nil),                 // 29: review.service.v1.SubmitReviewResultRequest
	(*SubmitReviewResultResponse)(nil),                // 30: review.service.v1.SubmitReviewResultResponse
	(*emptypb.Empty)(nil),                             // 31: google.protobuf.Empty
}
var file_npool_review_service_review_service_proto_depIdxs = []int32{
	1,  // 0: review.service.v1.CreateReviewRequest.Info:type_name -> review.service.v1.Review
	1,  // 1: review.service.v1.CreateReviewResponse.Info:type_name -> review.service.v1.Review
	1,  // 2: review.service.v1.GetReviewResponse.Info:type_name -> review.service.v1.Review
	1,  // 3: review.service.v1.UpdateReviewRequest.Info:type_name -> review.service.v1.Review
	1,  // 4: review.service.v1.UpdateReviewResponse.Info:type_name -> review.service.v1.Review
	1,  // 5: review.service.v1.GetReviewsByDomainResponse.Infos:type_name -> review.service.v1.Review
	1,  // 6: review.service.v1.GetReviewsByAppDomainResponse.Infos:type_name -> review.service.v1.Review
	1,  // 7: review.service.v1.GetReviewsByAppDomainObjectTypeResponse.Infos:type_name -> review.service.v1.Review
	1,  // 8: review.service.v1.GetReviewsByAppDomainObjectTypeIDResponse.Infos:type_name -> review.service.v1.Review
	1,  // 9: review.service.v1.SubmitReviewRequest.Info:type_name -> review.service.v1.Review
	1,  // 10: review.service.v1.SubmitReviewResponse.Info:type_name -> review.service.v1.Review
	18, // 11: review.service.v1.CreateReviewRuleRequest.Info:type_name -> review.service.v1.ReviewRule
	18, // 12: review.service.v1.CreateReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	18, // 13: review.service.v1.UpdateReviewRuleRequest.Info:type_name -> review.service.v1.ReviewRule
	18, // 14: review.service.v1.UpdateReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	18, // 15: review.service.v1.GetReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	18, // 16: review.service.v1.GetReviewRulesByDomainResponse.Infos:type_name -> review.service.v1.ReviewRule
	18, // 17: review.service.v1.GetReviewRuleByDomainObjectTypeResponse.Info:type_name -> review.service.v1.ReviewRule
	1,  // 18: review.service.v1.SubmitReviewResultRequest.Info:type_name -> review.service.v1.Review
	1,  // 19: review.service.v1.SubmitReviewResultResponse.Info:type_name -> review.service.v1.Review
	31, // 20: review.service.v1.ReviewService.Version:input_type -> google.protobuf.Empty
	2,  // 21: review.service.v1.ReviewService.CreateReview:input_type -> review.service.v1.CreateReviewRequest
	4,  // 22: review.service.v1.ReviewService.GetReview:input_type -> review.service.v1.GetReviewRequest
	6,  // 23: review.service.v1.ReviewService.UpdateReview:input_type -> review.service.v1.UpdateReviewRequest
	8,  // 24: review.service.v1.ReviewService.GetReviewsByDomain:input_type -> review.service.v1.GetReviewsByDomainRequest
	10, // 25: review.service.v1.ReviewService.GetReviewsByAppDomain:input_type -> review.service.v1.GetReviewsByAppDomainRequest
	12, // 26: review.service.v1.ReviewService.GetReviewsByAppDomainObjectType:input_type -> review.service.v1.GetReviewsByAppDomainObjectTypeRequest
	14, // 27: review.service.v1.ReviewService.GetReviewsByAppDomainObjectTypeID:input_type -> review.service.v1.GetReviewsByAppDomainObjectTypeIDRequest
	16, // 28: review.service.v1.ReviewService.SubmitReview:input_type -> review.service.v1.SubmitReviewRequest
	29, // 29: review.service.v1.ReviewService.SubmitReviewResult:input_type -> review.service.v1.SubmitReviewResultRequest
	19, // 30: review.service.v1.ReviewService.CreateReviewRule:input_type -> review.service.v1.CreateReviewRuleRequest
	21, // 31: review.service.v1.ReviewService.UpdateReviewRule:input_type -> review.service.v1.UpdateReviewRuleRequest
	23, // 32: review.service.v1.ReviewService.GetReviewRule:input_type -> review.service.v1.GetReviewRuleRequest
	25, // 33: review.service.v1.ReviewService.GetReviewRulesByDomain:input_type -> review.service.v1.GetReviewRulesByDomainRequest
	27, // 34: review.service.v1.ReviewService.GetReviewRuleByDomainObjectType:input_type -> review.service.v1.GetReviewRuleByDomainObjectTypeRequest
	0,  // 35: review.service.v1.ReviewService.Version:output_type -> review.service.v1.VersionResponse
	3,  // 36: review.service.v1.ReviewService.CreateReview:output_type -> review.service.v1.CreateReviewResponse
	5,  // 37: review.service.v1.ReviewService.GetReview:output_type -> review.service.v1.GetReviewResponse
	7,  // 38: review.service.v1.ReviewService.UpdateReview:output_type -> review.service.v1.UpdateReviewResponse
	9,  // 39: review.service.v1.ReviewService.GetReviewsByDomain:output_type -> review.service.v1.GetReviewsByDomainResponse
	11, // 40: review.service.v1.ReviewService.GetReviewsByAppDomain:output_type -> review.service.v1.GetReviewsByAppDomainResponse
	13, // 41: review.service.v1.ReviewService.GetReviewsByAppDomainObjectType:output_type -> review.service.v1.GetReviewsByAppDomainObjectTypeResponse
	15, // 42: review.service.v1.ReviewService.GetReviewsByAppDomainObjectTypeID:output_type -> review.service.v1.GetReviewsByAppDomainObjectTypeIDResponse
	17, // 43: review.service.v1.ReviewService.SubmitReview:output_type -> review.service.v1.SubmitReviewResponse
	30, // 44: review.service.v1.ReviewService.SubmitReviewResult:output_type -> review.service.v1.SubmitReviewResultResponse
	20, // 45: review.service.v1.ReviewService.CreateReviewRule:output_type -> review.service.v1.CreateReviewRuleResponse
	22, // 46: review.service.v1.ReviewService.UpdateReviewRule:output_type -> review.service.v1.UpdateReviewRuleResponse
	24, // 47: review.service.v1.ReviewService.GetReviewRule:output_type -> review.service.v1.GetReviewRuleResponse
	26, // 48: review.service.v1.ReviewService.GetReviewRulesByDomain:output_type -> review.service.v1.GetReviewRulesByDomainResponse
	28, // 49: review.service.v1.ReviewService.GetReviewRuleByDomainObjectType:output_type -> review.service.v1.GetReviewRuleByDomainObjectTypeResponse
	35, // [35:50] is the sub-list for method output_type
	20, // [20:35] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_npool_review_service_review_service_proto_init() }
func file_npool_review_service_review_service_proto_init() {
	if File_npool_review_service_review_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_review_service_review_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainObjectTypeIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByAppDomainObjectTypeIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRulesByDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRulesByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleByDomainObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleByDomainObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitReviewResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_review_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitReviewResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_review_service_review_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_review_service_review_service_proto_goTypes,
		DependencyIndexes: file_npool_review_service_review_service_proto_depIdxs,
		MessageInfos:      file_npool_review_service_review_service_proto_msgTypes,
	}.Build()
	File_npool_review_service_review_service_proto = out.File
	file_npool_review_service_review_service_proto_rawDesc = nil
	file_npool_review_service_review_service_proto_goTypes = nil
	file_npool_review_service_review_service_proto_depIdxs = nil
}
