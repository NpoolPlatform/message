// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/stockmgr/stockmgr.proto

package stockmgr

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID    string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Total     uint32 `protobuf:"varint,30,opt,name=Total,proto3" json:"Total,omitempty"`
	InService uint32 `protobuf:"varint,40,opt,name=InService,proto3" json:"InService,omitempty"`
	Sold      uint32 `protobuf:"varint,50,opt,name=Sold,proto3" json:"Sold,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Stock) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Stock) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Stock) GetInService() uint32 {
	if x != nil {
		return x.InService
	}
	return 0
}

func (x *Stock) GetSold() uint32 {
	if x != nil {
		return x.Sold
	}
	return 0
}

type CreateStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateStockRequest) Reset() {
	*x = CreateStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockRequest) ProtoMessage() {}

func (x *CreateStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockRequest.ProtoReflect.Descriptor instead.
func (*CreateStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStockRequest) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateStockResponse) Reset() {
	*x = CreateStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockResponse) ProtoMessage() {}

func (x *CreateStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockResponse.ProtoReflect.Descriptor instead.
func (*CreateStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{2}
}

func (x *CreateStockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Stock `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateStocksRequest) Reset() {
	*x = CreateStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStocksRequest) ProtoMessage() {}

func (x *CreateStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStocksRequest.ProtoReflect.Descriptor instead.
func (*CreateStocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStocksRequest) GetInfos() []*Stock {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Stock `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateStocksResponse) Reset() {
	*x = CreateStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStocksResponse) ProtoMessage() {}

func (x *CreateStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStocksResponse.ProtoReflect.Descriptor instead.
func (*CreateStocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStocksResponse) GetInfos() []*Stock {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateStockRequest) Reset() {
	*x = UpdateStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockRequest) ProtoMessage() {}

func (x *UpdateStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockRequest.ProtoReflect.Descriptor instead.
func (*UpdateStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStockRequest) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateStockResponse) Reset() {
	*x = UpdateStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockResponse) ProtoMessage() {}

func (x *UpdateStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockResponse.ProtoReflect.Descriptor instead.
func (*UpdateStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateStockFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string                     `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Fields map[string]*structpb.Value `protobuf:"bytes,20,rep,name=Fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateStockFieldsRequest) Reset() {
	*x = UpdateStockFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockFieldsRequest) ProtoMessage() {}

func (x *UpdateStockFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockFieldsRequest.ProtoReflect.Descriptor instead.
func (*UpdateStockFieldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStockFieldsRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateStockFieldsRequest) GetFields() map[string]*structpb.Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UpdateStockFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateStockFieldsResponse) Reset() {
	*x = UpdateStockFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockFieldsResponse) ProtoMessage() {}

func (x *UpdateStockFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockFieldsResponse.ProtoReflect.Descriptor instead.
func (*UpdateStockFieldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateStockFieldsResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type AtomicUpdateStockFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string                     `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Fields map[string]*structpb.Value `protobuf:"bytes,20,rep,name=Fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AtomicUpdateStockFieldsRequest) Reset() {
	*x = AtomicUpdateStockFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomicUpdateStockFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomicUpdateStockFieldsRequest) ProtoMessage() {}

func (x *AtomicUpdateStockFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomicUpdateStockFieldsRequest.ProtoReflect.Descriptor instead.
func (*AtomicUpdateStockFieldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{9}
}

func (x *AtomicUpdateStockFieldsRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AtomicUpdateStockFieldsRequest) GetFields() map[string]*structpb.Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AtomicUpdateStockFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AtomicUpdateStockFieldsResponse) Reset() {
	*x = AtomicUpdateStockFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomicUpdateStockFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomicUpdateStockFieldsResponse) ProtoMessage() {}

func (x *AtomicUpdateStockFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomicUpdateStockFieldsResponse.ProtoReflect.Descriptor instead.
func (*AtomicUpdateStockFieldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{10}
}

func (x *AtomicUpdateStockFieldsResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistStockRequest) Reset() {
	*x = ExistStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockRequest) ProtoMessage() {}

func (x *ExistStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockRequest.ProtoReflect.Descriptor instead.
func (*ExistStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{11}
}

func (x *ExistStockRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistStockResponse) Reset() {
	*x = ExistStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockResponse) ProtoMessage() {}

func (x *ExistStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockResponse.ProtoReflect.Descriptor instead.
func (*ExistStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{12}
}

func (x *ExistStockResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ExistStockFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExistStockFieldsRequest) Reset() {
	*x = ExistStockFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockFieldsRequest) ProtoMessage() {}

func (x *ExistStockFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockFieldsRequest.ProtoReflect.Descriptor instead.
func (*ExistStockFieldsRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{13}
}

func (x *ExistStockFieldsRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistStockFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistStockFieldsResponse) Reset() {
	*x = ExistStockFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockFieldsResponse) ProtoMessage() {}

func (x *ExistStockFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockFieldsResponse.ProtoReflect.Descriptor instead.
func (*ExistStockFieldsResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{14}
}

func (x *ExistStockFieldsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CountStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CountStocksRequest) Reset() {
	*x = CountStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountStocksRequest) ProtoMessage() {}

func (x *CountStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountStocksRequest.ProtoReflect.Descriptor instead.
func (*CountStocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{15}
}

func (x *CountStocksRequest) GetFields() map[string]*npool.FilterCond {
	if x != nil {
		return x.Fields
	}
	return nil
}

type CountStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CountStocksResponse) Reset() {
	*x = CountStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountStocksResponse) ProtoMessage() {}

func (x *CountStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountStocksResponse.ProtoReflect.Descriptor instead.
func (*CountStocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{16}
}

func (x *CountStocksResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type DeleteStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteStockRequest) Reset() {
	*x = DeleteStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStockRequest) ProtoMessage() {}

func (x *DeleteStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStockRequest.ProtoReflect.Descriptor instead.
func (*DeleteStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteStockRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteStockResponse) Reset() {
	*x = DeleteStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStockResponse) ProtoMessage() {}

func (x *DeleteStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_stockmgr_stockmgr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStockResponse.ProtoReflect.Descriptor instead.
func (*DeleteStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_stockmgr_stockmgr_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteStockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_stockmgr_stockmgr_proto protoreflect.FileDescriptor

var file_npool_stockmgr_stockmgr_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x6d, 0x67, 0x72,
	0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x6d, 0x67, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a,
	0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x4e,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x51,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x48, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x1e,
	0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x54,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x1f, 0x41, 0x74, 0x6f, 0x6d, 0x69,
	0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x17, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x32, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x4f, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x42, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0x85, 0x0a, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x51, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x7b,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x25,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa9, 0x01, 0x0a, 0x17, 0x41, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x29, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x77, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x24, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x6d, 0x67, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_stockmgr_stockmgr_proto_rawDescOnce sync.Once
	file_npool_stockmgr_stockmgr_proto_rawDescData = file_npool_stockmgr_stockmgr_proto_rawDesc
)

func file_npool_stockmgr_stockmgr_proto_rawDescGZIP() []byte {
	file_npool_stockmgr_stockmgr_proto_rawDescOnce.Do(func() {
		file_npool_stockmgr_stockmgr_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_stockmgr_stockmgr_proto_rawDescData)
	})
	return file_npool_stockmgr_stockmgr_proto_rawDescData
}

var file_npool_stockmgr_stockmgr_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_stockmgr_stockmgr_proto_goTypes = []interface{}{
	(*Stock)(nil),                           // 0: stock.manager.v1.Stock
	(*CreateStockRequest)(nil),              // 1: stock.manager.v1.CreateStockRequest
	(*CreateStockResponse)(nil),             // 2: stock.manager.v1.CreateStockResponse
	(*CreateStocksRequest)(nil),             // 3: stock.manager.v1.CreateStocksRequest
	(*CreateStocksResponse)(nil),            // 4: stock.manager.v1.CreateStocksResponse
	(*UpdateStockRequest)(nil),              // 5: stock.manager.v1.UpdateStockRequest
	(*UpdateStockResponse)(nil),             // 6: stock.manager.v1.UpdateStockResponse
	(*UpdateStockFieldsRequest)(nil),        // 7: stock.manager.v1.UpdateStockFieldsRequest
	(*UpdateStockFieldsResponse)(nil),       // 8: stock.manager.v1.UpdateStockFieldsResponse
	(*AtomicUpdateStockFieldsRequest)(nil),  // 9: stock.manager.v1.AtomicUpdateStockFieldsRequest
	(*AtomicUpdateStockFieldsResponse)(nil), // 10: stock.manager.v1.AtomicUpdateStockFieldsResponse
	(*ExistStockRequest)(nil),               // 11: stock.manager.v1.ExistStockRequest
	(*ExistStockResponse)(nil),              // 12: stock.manager.v1.ExistStockResponse
	(*ExistStockFieldsRequest)(nil),         // 13: stock.manager.v1.ExistStockFieldsRequest
	(*ExistStockFieldsResponse)(nil),        // 14: stock.manager.v1.ExistStockFieldsResponse
	(*CountStocksRequest)(nil),              // 15: stock.manager.v1.CountStocksRequest
	(*CountStocksResponse)(nil),             // 16: stock.manager.v1.CountStocksResponse
	(*DeleteStockRequest)(nil),              // 17: stock.manager.v1.DeleteStockRequest
	(*DeleteStockResponse)(nil),             // 18: stock.manager.v1.DeleteStockResponse
	nil,                                     // 19: stock.manager.v1.UpdateStockFieldsRequest.FieldsEntry
	nil,                                     // 20: stock.manager.v1.AtomicUpdateStockFieldsRequest.FieldsEntry
	nil,                                     // 21: stock.manager.v1.ExistStockFieldsRequest.CondsEntry
	nil,                                     // 22: stock.manager.v1.CountStocksRequest.FieldsEntry
	(*structpb.Value)(nil),                  // 23: google.protobuf.Value
	(*npool.FilterCond)(nil),                // 24: npool.v1.FilterCond
	(*emptypb.Empty)(nil),                   // 25: google.protobuf.Empty
	(*npool.VersionResponse)(nil),           // 26: npool.v1.VersionResponse
}
var file_npool_stockmgr_stockmgr_proto_depIdxs = []int32{
	0,  // 0: stock.manager.v1.CreateStockRequest.Info:type_name -> stock.manager.v1.Stock
	0,  // 1: stock.manager.v1.CreateStockResponse.Info:type_name -> stock.manager.v1.Stock
	0,  // 2: stock.manager.v1.CreateStocksRequest.Infos:type_name -> stock.manager.v1.Stock
	0,  // 3: stock.manager.v1.CreateStocksResponse.Infos:type_name -> stock.manager.v1.Stock
	0,  // 4: stock.manager.v1.UpdateStockRequest.Info:type_name -> stock.manager.v1.Stock
	0,  // 5: stock.manager.v1.UpdateStockResponse.Info:type_name -> stock.manager.v1.Stock
	19, // 6: stock.manager.v1.UpdateStockFieldsRequest.Fields:type_name -> stock.manager.v1.UpdateStockFieldsRequest.FieldsEntry
	0,  // 7: stock.manager.v1.UpdateStockFieldsResponse.Info:type_name -> stock.manager.v1.Stock
	20, // 8: stock.manager.v1.AtomicUpdateStockFieldsRequest.Fields:type_name -> stock.manager.v1.AtomicUpdateStockFieldsRequest.FieldsEntry
	0,  // 9: stock.manager.v1.AtomicUpdateStockFieldsResponse.Info:type_name -> stock.manager.v1.Stock
	21, // 10: stock.manager.v1.ExistStockFieldsRequest.Conds:type_name -> stock.manager.v1.ExistStockFieldsRequest.CondsEntry
	22, // 11: stock.manager.v1.CountStocksRequest.Fields:type_name -> stock.manager.v1.CountStocksRequest.FieldsEntry
	0,  // 12: stock.manager.v1.DeleteStockResponse.Info:type_name -> stock.manager.v1.Stock
	23, // 13: stock.manager.v1.UpdateStockFieldsRequest.FieldsEntry.value:type_name -> google.protobuf.Value
	23, // 14: stock.manager.v1.AtomicUpdateStockFieldsRequest.FieldsEntry.value:type_name -> google.protobuf.Value
	24, // 15: stock.manager.v1.ExistStockFieldsRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	24, // 16: stock.manager.v1.CountStocksRequest.FieldsEntry.value:type_name -> npool.v1.FilterCond
	25, // 17: stock.manager.v1.StockManager.Version:input_type -> google.protobuf.Empty
	1,  // 18: stock.manager.v1.StockManager.CreateStock:input_type -> stock.manager.v1.CreateStockRequest
	3,  // 19: stock.manager.v1.StockManager.CreateStocks:input_type -> stock.manager.v1.CreateStocksRequest
	5,  // 20: stock.manager.v1.StockManager.UpdateStock:input_type -> stock.manager.v1.UpdateStockRequest
	7,  // 21: stock.manager.v1.StockManager.UpdateStockFields:input_type -> stock.manager.v1.UpdateStockFieldsRequest
	9,  // 22: stock.manager.v1.StockManager.AtomicUpdateStockFields:input_type -> stock.manager.v1.AtomicUpdateStockFieldsRequest
	11, // 23: stock.manager.v1.StockManager.ExistStock:input_type -> stock.manager.v1.ExistStockRequest
	13, // 24: stock.manager.v1.StockManager.ExistStockFields:input_type -> stock.manager.v1.ExistStockFieldsRequest
	15, // 25: stock.manager.v1.StockManager.CountStocks:input_type -> stock.manager.v1.CountStocksRequest
	17, // 26: stock.manager.v1.StockManager.DeleteStock:input_type -> stock.manager.v1.DeleteStockRequest
	26, // 27: stock.manager.v1.StockManager.Version:output_type -> npool.v1.VersionResponse
	2,  // 28: stock.manager.v1.StockManager.CreateStock:output_type -> stock.manager.v1.CreateStockResponse
	4,  // 29: stock.manager.v1.StockManager.CreateStocks:output_type -> stock.manager.v1.CreateStocksResponse
	6,  // 30: stock.manager.v1.StockManager.UpdateStock:output_type -> stock.manager.v1.UpdateStockResponse
	8,  // 31: stock.manager.v1.StockManager.UpdateStockFields:output_type -> stock.manager.v1.UpdateStockFieldsResponse
	10, // 32: stock.manager.v1.StockManager.AtomicUpdateStockFields:output_type -> stock.manager.v1.AtomicUpdateStockFieldsResponse
	12, // 33: stock.manager.v1.StockManager.ExistStock:output_type -> stock.manager.v1.ExistStockResponse
	14, // 34: stock.manager.v1.StockManager.ExistStockFields:output_type -> stock.manager.v1.ExistStockFieldsResponse
	16, // 35: stock.manager.v1.StockManager.CountStocks:output_type -> stock.manager.v1.CountStocksResponse
	18, // 36: stock.manager.v1.StockManager.DeleteStock:output_type -> stock.manager.v1.DeleteStockResponse
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_npool_stockmgr_stockmgr_proto_init() }
func file_npool_stockmgr_stockmgr_proto_init() {
	if File_npool_stockmgr_stockmgr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_stockmgr_stockmgr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomicUpdateStockFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomicUpdateStockFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_stockmgr_stockmgr_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_stockmgr_stockmgr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_stockmgr_stockmgr_proto_goTypes,
		DependencyIndexes: file_npool_stockmgr_stockmgr_proto_depIdxs,
		MessageInfos:      file_npool_stockmgr_stockmgr_proto_msgTypes,
	}.Build()
	File_npool_stockmgr_stockmgr_proto = out.File
	file_npool_stockmgr_stockmgr_proto_rawDesc = nil
	file_npool_stockmgr_stockmgr_proto_goTypes = nil
	file_npool_stockmgr_stockmgr_proto_depIdxs = nil
}
