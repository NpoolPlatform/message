// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/review/gw/v2/kyc/kyc.proto

package kyc

import (
	_ "github.com/NpoolPlatform/message/npool"
	v2 "github.com/NpoolPlatform/message/npool/review/mgr/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KycReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KycID        string         `protobuf:"bytes,10,opt,name=KycID,proto3" json:"KycID,omitempty"`
	ReviewID     string         `protobuf:"bytes,30,opt,name=ReviewID,proto3" json:"ReviewID,omitempty"`
	UserID       string         `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	KycState     v2.ReviewState `protobuf:"varint,50,opt,name=KycState,proto3,enum=review.manager.v2.ReviewState" json:"KycState,omitempty"`
	EmailAddress string         `protobuf:"bytes,60,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PhoneNO      string         `protobuf:"bytes,70,opt,name=PhoneNO,proto3" json:"PhoneNO,omitempty"`
	Reviewer     string         `protobuf:"bytes,80,opt,name=Reviewer,proto3" json:"Reviewer,omitempty"`
	ObjectType   string         `protobuf:"bytes,90,opt,name=ObjectType,proto3" json:"ObjectType,omitempty"`
	Domain       string         `protobuf:"bytes,100,opt,name=Domain,proto3" json:"Domain,omitempty"`
	CreatedAt    uint32         `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    uint32         `protobuf:"varint,120,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Message      string         `protobuf:"bytes,130,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *KycReview) Reset() {
	*x = KycReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KycReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KycReview) ProtoMessage() {}

func (x *KycReview) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KycReview.ProtoReflect.Descriptor instead.
func (*KycReview) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{0}
}

func (x *KycReview) GetKycID() string {
	if x != nil {
		return x.KycID
	}
	return ""
}

func (x *KycReview) GetReviewID() string {
	if x != nil {
		return x.ReviewID
	}
	return ""
}

func (x *KycReview) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *KycReview) GetKycState() v2.ReviewState {
	if x != nil {
		return x.KycState
	}
	return v2.ReviewState(0)
}

func (x *KycReview) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *KycReview) GetPhoneNO() string {
	if x != nil {
		return x.PhoneNO
	}
	return ""
}

func (x *KycReview) GetReviewer() string {
	if x != nil {
		return x.Reviewer
	}
	return ""
}

func (x *KycReview) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *KycReview) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *KycReview) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *KycReview) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *KycReview) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetKycReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetKycReviewsRequest) Reset() {
	*x = GetKycReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsRequest) ProtoMessage() {}

func (x *GetKycReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetKycReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{1}
}

func (x *GetKycReviewsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetKycReviewsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetKycReviewsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetKycReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetKycReviewsResponse) Reset() {
	*x = GetKycReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsResponse) ProtoMessage() {}

func (x *GetKycReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetKycReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{2}
}

func (x *GetKycReviewsResponse) GetInfos() []*KycReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetKycReviewsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppKycReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppKycReviewsRequest) Reset() {
	*x = GetAppKycReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppKycReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppKycReviewsRequest) ProtoMessage() {}

func (x *GetAppKycReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppKycReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetAppKycReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppKycReviewsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppKycReviewsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppKycReviewsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppKycReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppKycReviewsResponse) Reset() {
	*x = GetAppKycReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppKycReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppKycReviewsResponse) ProtoMessage() {}

func (x *GetAppKycReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppKycReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetAppKycReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppKycReviewsResponse) GetInfos() []*KycReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppKycReviewsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateKycReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewID string         `protobuf:"bytes,10,opt,name=ReviewID,proto3" json:"ReviewID,omitempty"`
	AppID    string         `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID   string         `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"` // Reviewer
	LangID   string         `protobuf:"bytes,40,opt,name=LangID,proto3" json:"LangID,omitempty"`
	State    v2.ReviewState `protobuf:"varint,50,opt,name=State,proto3,enum=review.manager.v2.ReviewState" json:"State,omitempty"`
	Message  *string        `protobuf:"bytes,60,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *UpdateKycReviewRequest) Reset() {
	*x = UpdateKycReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycReviewRequest) ProtoMessage() {}

func (x *UpdateKycReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateKycReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateKycReviewRequest) GetReviewID() string {
	if x != nil {
		return x.ReviewID
	}
	return ""
}

func (x *UpdateKycReviewRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateKycReviewRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateKycReviewRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *UpdateKycReviewRequest) GetState() v2.ReviewState {
	if x != nil {
		return x.State
	}
	return v2.ReviewState(0)
}

func (x *UpdateKycReviewRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type UpdateKycReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycReview `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateKycReviewResponse) Reset() {
	*x = UpdateKycReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycReviewResponse) ProtoMessage() {}

func (x *UpdateKycReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateKycReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateKycReviewResponse) GetInfo() *KycReview {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppKycReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewID    string         `protobuf:"bytes,10,opt,name=ReviewID,proto3" json:"ReviewID,omitempty"`
	AppID       string         `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetAppID string         `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	UserID      string         `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"` // Reviewer
	LangID      string         `protobuf:"bytes,50,opt,name=LangID,proto3" json:"LangID,omitempty"`
	State       v2.ReviewState `protobuf:"varint,60,opt,name=State,proto3,enum=review.manager.v2.ReviewState" json:"State,omitempty"`
	Message     *string        `protobuf:"bytes,70,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *UpdateAppKycReviewRequest) Reset() {
	*x = UpdateAppKycReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppKycReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppKycReviewRequest) ProtoMessage() {}

func (x *UpdateAppKycReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppKycReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppKycReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAppKycReviewRequest) GetReviewID() string {
	if x != nil {
		return x.ReviewID
	}
	return ""
}

func (x *UpdateAppKycReviewRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateAppKycReviewRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppKycReviewRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateAppKycReviewRequest) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *UpdateAppKycReviewRequest) GetState() v2.ReviewState {
	if x != nil {
		return x.State
	}
	return v2.ReviewState(0)
}

func (x *UpdateAppKycReviewRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type UpdateAppKycReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *KycReview `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppKycReviewResponse) Reset() {
	*x = UpdateAppKycReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppKycReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppKycReviewResponse) ProtoMessage() {}

func (x *UpdateAppKycReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppKycReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppKycReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppKycReviewResponse) GetInfo() *KycReview {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_review_gw_v2_kyc_kyc_proto protoreflect.FileDescriptor

var file_npool_review_gw_v2_kyc_kyc_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x67,
	0x77, 0x2f, 0x76, 0x32, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x6b, 0x79, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x1a, 0x1d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x67, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x02, 0x0a, 0x09, 0x4b, 0x79, 0x63, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x79, 0x63, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3a,
	0x0a, 0x08, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x08, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x65, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x68, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0xe3, 0x04, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x89, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x2b, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x2e,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6b, 0x79, 0x63, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f,
	0x76, 0x32, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6b, 0x79, 0x63, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x30, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6b,
	0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4b,
	0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x32, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6b, 0x79, 0x63, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x2f, 0x6b,
	0x79, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_review_gw_v2_kyc_kyc_proto_rawDescOnce sync.Once
	file_npool_review_gw_v2_kyc_kyc_proto_rawDescData = file_npool_review_gw_v2_kyc_kyc_proto_rawDesc
)

func file_npool_review_gw_v2_kyc_kyc_proto_rawDescGZIP() []byte {
	file_npool_review_gw_v2_kyc_kyc_proto_rawDescOnce.Do(func() {
		file_npool_review_gw_v2_kyc_kyc_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_review_gw_v2_kyc_kyc_proto_rawDescData)
	})
	return file_npool_review_gw_v2_kyc_kyc_proto_rawDescData
}

var file_npool_review_gw_v2_kyc_kyc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_npool_review_gw_v2_kyc_kyc_proto_goTypes = []interface{}{
	(*KycReview)(nil),                  // 0: review.gateway.kyc.v2.KycReview
	(*GetKycReviewsRequest)(nil),       // 1: review.gateway.kyc.v2.GetKycReviewsRequest
	(*GetKycReviewsResponse)(nil),      // 2: review.gateway.kyc.v2.GetKycReviewsResponse
	(*GetAppKycReviewsRequest)(nil),    // 3: review.gateway.kyc.v2.GetAppKycReviewsRequest
	(*GetAppKycReviewsResponse)(nil),   // 4: review.gateway.kyc.v2.GetAppKycReviewsResponse
	(*UpdateKycReviewRequest)(nil),     // 5: review.gateway.kyc.v2.UpdateKycReviewRequest
	(*UpdateKycReviewResponse)(nil),    // 6: review.gateway.kyc.v2.UpdateKycReviewResponse
	(*UpdateAppKycReviewRequest)(nil),  // 7: review.gateway.kyc.v2.UpdateAppKycReviewRequest
	(*UpdateAppKycReviewResponse)(nil), // 8: review.gateway.kyc.v2.UpdateAppKycReviewResponse
	(v2.ReviewState)(0),                // 9: review.manager.v2.ReviewState
}
var file_npool_review_gw_v2_kyc_kyc_proto_depIdxs = []int32{
	9,  // 0: review.gateway.kyc.v2.KycReview.KycState:type_name -> review.manager.v2.ReviewState
	0,  // 1: review.gateway.kyc.v2.GetKycReviewsResponse.Infos:type_name -> review.gateway.kyc.v2.KycReview
	0,  // 2: review.gateway.kyc.v2.GetAppKycReviewsResponse.Infos:type_name -> review.gateway.kyc.v2.KycReview
	9,  // 3: review.gateway.kyc.v2.UpdateKycReviewRequest.State:type_name -> review.manager.v2.ReviewState
	0,  // 4: review.gateway.kyc.v2.UpdateKycReviewResponse.Info:type_name -> review.gateway.kyc.v2.KycReview
	9,  // 5: review.gateway.kyc.v2.UpdateAppKycReviewRequest.State:type_name -> review.manager.v2.ReviewState
	0,  // 6: review.gateway.kyc.v2.UpdateAppKycReviewResponse.Info:type_name -> review.gateway.kyc.v2.KycReview
	1,  // 7: review.gateway.kyc.v2.Gateway.GetKycReviews:input_type -> review.gateway.kyc.v2.GetKycReviewsRequest
	3,  // 8: review.gateway.kyc.v2.Gateway.GetAppKycReviews:input_type -> review.gateway.kyc.v2.GetAppKycReviewsRequest
	5,  // 9: review.gateway.kyc.v2.Gateway.UpdateKycReview:input_type -> review.gateway.kyc.v2.UpdateKycReviewRequest
	7,  // 10: review.gateway.kyc.v2.Gateway.UpdateAppKycReview:input_type -> review.gateway.kyc.v2.UpdateAppKycReviewRequest
	2,  // 11: review.gateway.kyc.v2.Gateway.GetKycReviews:output_type -> review.gateway.kyc.v2.GetKycReviewsResponse
	4,  // 12: review.gateway.kyc.v2.Gateway.GetAppKycReviews:output_type -> review.gateway.kyc.v2.GetAppKycReviewsResponse
	6,  // 13: review.gateway.kyc.v2.Gateway.UpdateKycReview:output_type -> review.gateway.kyc.v2.UpdateKycReviewResponse
	8,  // 14: review.gateway.kyc.v2.Gateway.UpdateAppKycReview:output_type -> review.gateway.kyc.v2.UpdateAppKycReviewResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_npool_review_gw_v2_kyc_kyc_proto_init() }
func file_npool_review_gw_v2_kyc_kyc_proto_init() {
	if File_npool_review_gw_v2_kyc_kyc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KycReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppKycReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppKycReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppKycReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppKycReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_review_gw_v2_kyc_kyc_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_review_gw_v2_kyc_kyc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_review_gw_v2_kyc_kyc_proto_goTypes,
		DependencyIndexes: file_npool_review_gw_v2_kyc_kyc_proto_depIdxs,
		MessageInfos:      file_npool_review_gw_v2_kyc_kyc_proto_msgTypes,
	}.Build()
	File_npool_review_gw_v2_kyc_kyc_proto = out.File
	file_npool_review_gw_v2_kyc_kyc_proto_rawDesc = nil
	file_npool_review_gw_v2_kyc_kyc_proto_goTypes = nil
	file_npool_review_gw_v2_kyc_kyc_proto_depIdxs = nil
}
