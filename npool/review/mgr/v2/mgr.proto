syntax = "proto3";

package review.manager.v2;

option go_package = "github.com/NpoolPlatform/message/npool/review/mgr/v2";

import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateReview     (CreateReviewRequest)     returns (CreateReviewResponse)     {}
    rpc CreateReviews    (CreateReviewsRequest)    returns (CreateReviewsResponse)    {}
    rpc UpdateReview     (UpdateReviewRequest)     returns (UpdateReviewResponse)     {}
    rpc GetReview        (GetReviewRequest)        returns (GetReviewResponse)        {}
    rpc GetReviewOnly    (GetReviewOnlyRequest)    returns (GetReviewOnlyResponse)    {}
    rpc GetReviews       (GetReviewsRequest)       returns (GetReviewsResponse)       {}
    rpc ExistReview      (ExistReviewRequest)      returns (ExistReviewResponse)      {}
    rpc ExistReviewConds (ExistReviewCondsRequest) returns (ExistReviewCondsResponse) {}
    rpc CountReviews     (CountReviewsRequest)     returns (CountReviewsResponse)     {}
    rpc DeleteReview     (DeleteReviewRequest)     returns (DeleteReviewResponse)     {}
}

enum ReviewObjectType {
    DefaultObjectType     = 0;

    ObjectKyc             = 10;
    ObjectWithdrawal      = 20;
}

enum ReviewState {
    DefaultReviewState    = 0;

    Approved              = 10;
    Wait                  = 20;
    Rejected              = 30;
}

enum ReviewTriggerType {
    DefaultTriggerType    = 0;

    // Withdrawal triggers
    AutoReviewed          = 10;
    LargeAmount           = 20;
    InsufficientFunds     = 30;
    InsufficientGas       = 40;
    InsufficientFundsGas  = 50;
}

message ReviewReq {
    optional string            ID         = 10;
    optional string            AppID      = 20;
    optional string            ReviewerID = 30;
    optional string            Domain     = 40;
    optional string            ObjectID   = 50;
    optional ReviewTriggerType Trigger    = 60;
    optional ReviewObjectType  ObjectType = 70;
    optional ReviewState       State      = 80;
    optional string            Message    = 90;
}

message Review {
    string            ID         = 10;
    string            AppID      = 20;
    string            ReviewerID = 30;
    string            Domain     = 40;
    string            ObjectID   = 50;
    ReviewTriggerType Trigger    = 60;
    ReviewObjectType  ObjectType = 70;
    ReviewState       State      = 80;
    string            Message    = 90;
    uint32            CreatedAt  = 100;
    uint32            UpdatedAt  = 110;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal AppID      = 20;
    optional npool.v1.StringVal ReviewerID = 30;
    optional npool.v1.StringVal Domain     = 40;
    optional npool.v1.StringVal ObjectID   = 50;
    optional npool.v1.Int32Val  Trigger    = 60;
    optional npool.v1.Int32Val  ObjectType = 70;
    optional npool.v1.Int32Val  State      = 80;
}

message CreateReviewRequest {
    ReviewReq Info = 10;
}

message CreateReviewResponse {
    Review Info = 10;
}

message CreateReviewsRequest {
    repeated ReviewReq Infos = 10;
}

message CreateReviewsResponse {
    repeated Review Infos = 10;
}

message UpdateReviewRequest {
    ReviewReq Info = 10;
}

message UpdateReviewResponse {
    Review Info = 10;
}

message GetReviewRequest {
    string ID = 10;
}

message GetReviewResponse {
    Review Info = 10;
}

message GetReviewsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetReviewsResponse {
    repeated Review Infos = 10;
    uint32          Total = 20;
}

message GetReviewOnlyRequest {
    Conds Conds = 10;
}

message GetReviewOnlyResponse {
    Review Info = 10;
}

message ExistReviewRequest {
    string ID = 10;
}

message ExistReviewResponse {
    bool Info = 10;
}

message ExistReviewCondsRequest {
    Conds Conds = 10;
}

message ExistReviewCondsResponse {
    bool Info = 10;
}

message CountReviewsRequest {
    Conds Conds = 10;
}

message CountReviewsResponse {
    uint32 Info = 10;
}

message DeleteReviewRequest {
    string ID = 10;
}

message DeleteReviewResponse {
    Review Info = 10;
}

