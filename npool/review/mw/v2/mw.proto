syntax = "proto3";

package review.middleware.v2;

option go_package = "github.com/NpoolPlatform/message/npool/review/mw/v2";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateReview     (CreateReviewRequest)     returns (CreateReviewResponse)     {}
    rpc UpdateReview     (UpdateReviewRequest)     returns (UpdateReviewResponse)     {}
    rpc GetObjectReview  (GetObjectReviewRequest)  returns (GetObjectReviewResponse)  {}
    rpc GetObjectReviews (GetObjectReviewsRequest) returns (GetObjectReviewsResponse) {}
    rpc GetReviews       (GetReviewsRequest)       returns (GetReviewsResponse)       {}
    rpc DeleteReview     (DeleteReviewRequest)     returns (DeleteReviewResponse)     {}
    rpc GetReview        (GetReviewRequest)        returns (GetReviewResponse)     {}
}

enum ReviewObjectType {
    DefaultObjectType     = 0;
    ObjectKyc             = 10;
    ObjectWithdrawal      = 20;
}

enum ReviewState {
    DefaultReviewState    = 0;
    Approved              = 10;
    Wait                  = 20;
    Rejected              = 30;
}

enum ReviewTriggerType {
    DefaultTriggerType    = 0;
    // Withdrawal triggers
    AutoReviewed          = 10;
    LargeAmount           = 20;
    InsufficientFunds     = 30;
    InsufficientGas       = 40;
    InsufficientFundsGas  = 50;
}

message ReviewReq {
    optional string            ID         = 10;
    optional string            AppID      = 20;
    optional string            ReviewerID = 30;
    optional string            Domain     = 40;
    optional string            ObjectID   = 50;
    optional ReviewTriggerType Trigger    = 60;
    optional ReviewObjectType  ObjectType = 70;
    optional ReviewState       State      = 80;
    optional string            Message    = 90;
}

message Review {
    // @inject_tag: sql:"id"
    string            ID         = 10;
    // @inject_tag: sql:"app_id"
    string            AppID      = 20;
    // @inject_tag: sql:"reviewer_id"
    string            ReviewerID = 30;
    // @inject_tag: sql:"domain"
    string            Domain     = 40;
    // @inject_tag: sql:"object_id"
    string            ObjectID   = 50;
    // @inject_tag: sql:"trigger"
    string            TriggerStr = 51;
    ReviewTriggerType Trigger    = 60;
    // @inject_tag: sql:"object_type"
    string            ObjectTypeStr = 61;
    ReviewObjectType  ObjectType    = 70;
    // @inject_tag: sql:"state"
    string            StateStr      = 71;
    ReviewState       State         = 80;
    // @inject_tag: sql:"message"
    string            Message       = 90;
    // @inject_tag: sql:"created_at"
    uint32            CreatedAt     = 100;
    // @inject_tag: sql:"updated_at"
    uint32            UpdatedAt     = 110;
}

message Conds {
    optional basetypes.v1.StringVal ID         = 10;
    optional basetypes.v1.StringVal AppID      = 20;
    optional basetypes.v1.StringVal ReviewerID = 30;
    optional basetypes.v1.StringVal Domain     = 40;
    optional basetypes.v1.StringVal ObjectID   = 50;
    optional basetypes.v1.Int32Val  Trigger    = 60;
    optional basetypes.v1.Int32Val  ObjectType = 70;
    optional basetypes.v1.Int32Val  State      = 80;
}

message CreateReviewRequest {
    ReviewReq Info = 10;
}

message CreateReviewResponse {
    Review Info = 10;
}

message UpdateReviewRequest {
    ReviewReq Info = 10;
}

message UpdateReviewResponse {
    Review Info = 10;
}

message GetReviewsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetReviewsResponse {
    repeated Review Infos = 10;
    uint32                            Total = 20;
}

message GetObjectReviewRequest {
    string AppID     = 10;
    string Domain    = 20;
    string ObjectID  = 30;
    ReviewObjectType ObjectType = 40;
}

message GetObjectReviewResponse {
    Review Info = 10;
}

message GetObjectReviewsRequest {
    string          AppID     = 10;
    string          Domain    = 20;
    repeated string ObjectIDs = 30;
    ReviewObjectType ObjectType = 40;
}

message GetObjectReviewsResponse {
    repeated Review Infos = 10;
}

message DeleteReviewRequest {
    ReviewReq Info = 10;
}

message DeleteReviewResponse {
    Review Info = 10;
}

message GetReviewRequest {
    string id = 10;
}

message GetReviewResponse {
    Review Info = 10;
}

