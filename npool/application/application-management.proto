syntax = "proto3";

package application.management.v1;

option go_package = "github.com/NpoolPlatform/message/npool/application";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

service ApplicationManagement {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }
    /*
    Create an application.
    */
    rpc CreateApplication (CreateApplicationRequest) returns (CreateApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/create/app"
            body: "*"
        };
    };
    /*
    Update an application's basic info.
    */
    rpc UpdateApplication (UpdateApplicationRequest) returns (UpdateApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/update/app"
            body: "*"
        };
    };
    /*
    Get application.
    */
    rpc GetApplication (GetApplicationRequest) returns (GetApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/get/app"
            body: "*"
        };
    };
    /*
    Get application by owner.
    */
    rpc GetApplicationByOwner (GetApplicationByOwnerRequest) returns (GetApplicationByOwnerResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/by/owner"
            body: "*"
        };
    };

    /*
    Get all applications.
    */
    rpc GetApplications (GetApplicationsRequest) returns (GetApplicationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/apps"
            body: "*"
        };
    };
    /*
    Delete an application.
    */
    rpc DeleteApplication (DeleteApplicationRequest) returns (DeleteApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/delete/app"
            body: "*"
        };
    };
    /*
    Create a role in app.
    */
    rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse) {
        option (google.api.http) = {
            post: "/v1/create/role"
            body: "*"
        };
    };
    /*
    Update role's basic info.
    */
    rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse) {
        option (google.api.http) = {
            post: "/v1/update/role"
            body: "*"
        };
    };
    /*
    Get Role.
    */
    rpc GetRole (GetRoleRequest) returns (GetRoleResponse) {
        option (google.api.http) = {
            post: "/v1/get/role"
            body: "*"
        };
    };
    /*
    Get role by creator.
    */
    rpc GetRoleByCreator (GetRoleByCreatorRequest) returns (GetRoleByCreatorResponse) {
        option (google.api.http) = {
            post: "/v1/get/role/by/creator"
            body: "*"
        };
    };
    /*
    Get Roles.
    */
    rpc GetRoles (GetRolesRequest) returns (GetRolesResponse) {
        option (google.api.http) = {
            post: "/v1/get/roles"
            body: "*"
        };
    };
    /*
    Delete role from app.
    */
    rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse) {
        option (google.api.http) = {
            post: "/v1/delete/role"
            body: "*"
        };
    };
    /*
    Set role to user.
    */
    rpc SetUserRole (SetUserRoleRequest) returns (SetUserRoleResponse) {
        option (google.api.http) = {
            post: "/v1/set/user/role"
            body: "*"
        };
    };
    /*
    Get user role.
    */
    rpc GetUserRole (GetUserRoleRequest) returns (GetUserRoleResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/role"
            body: "*"
        };
    };
    /*
    Get role users.
    */
    rpc GetRoleUsers (GetRoleUsersRequest) returns (GetRoleUsersResponse) {
        option (google.api.http) = {
            post: "/v1/get/role/users"
            body: "*"
        };
    };
    /*
    Unset user role.
    */
    rpc UnSetUserRole (UnSetUserRoleRequest) returns (UnSetUserRoleResponse) {
        option (google.api.http) = {
            post: "/v1/unset/user/role"
            body: "*"
        };
    };
    /*
    Add users to app.
    */
    rpc AddUsersToApplication (AddUsersToApplicationRequest) returns (AddUsersToApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/add/users/to/app"
            body: "*"
        };
    };
    /*
    Get user from app.
    */
    rpc GetUserFromApplication (GetUserFromApplicationRequest) returns (GetUserFromApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/from/app"
            body: "*"
        };
    };
    /*
    Get users from app.
    */
    rpc GetUsersFromApplication (GetUsersFromApplicationRequest) returns (GetUsersFromApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/get/users/from/app"
            body: "*"
        };
    };
    // Get user's appid.
    rpc GetUserAppID (GetUserAppIDRequest) returns (GetUserAppIDResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/appid"
            body: "*"
        };
    };
    /*
    Remove users from app.
    */
    rpc RemoveUsersFromApplication (RemoveUsersFromApplicationRequest) returns (RemoveUsersFromApplicationResponse) {
        option (google.api.http) = {
            post: "/v1/remove/users/from/app"
            body: "*"
        };
    };
    /*
    Create group in an application.
    */
    rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse) {
        option (google.api.http) = {
            post: "/v1/create/group"
            body: "*"
        };
    };
    /*
    Get group info.
    */
    rpc GetGroup (GetGroupRequest) returns (GetGroupResponse) {
        option (google.api.http) = {
            post: "/v1/get/group"
            body: "*"
        };
    };
    /*
    Get group by owner.
    */
    rpc GetGroupByOwner (GetGroupByOwnerRequest) returns (GetGroupByOwnerResponse) {
        option (google.api.http) = {
            post: "/v1/get/group/by/owner"
            body: "*"
        };
    };
    /*
    Get all groups.
    */
    rpc GetAllGroups (GetAllGroupsRequest) returns (GetAllGroupsResponse) {
        option (google.api.http) = {
            post: "/v1/get/all/groups"
            body: "*"
        };
    };
    /*
    Update group info.
    */
    rpc UpdateGroup (UpdateGroupRequest) returns (UpdateGroupResponse) {
        option (google.api.http) = {
            post: "/v1/update/group"
            body: "*"
        };
    };
    /*
    Delete group.
    */
    rpc DeleteGroup (DeleteGroupRequest) returns (DeleteGroupResponse) {
        option (google.api.http) = {
            post: "/v1/delete/group"
            body: "*"
        };
    };
    /*
    Add users into group.
    */
    rpc AddGroupUsers (AddGroupUsersRequest) returns (AddGroupUsersResponse) {
        option (google.api.http) = {
            post: "/v1/add/group/users"
            body: "*"
        };
    };
    /*
    Get group users.
    */
    rpc GetGroupUsers (GetGroupUsersRequest) returns (GetGroupUsersResponse) {
        option (google.api.http) = {
            post: "/v1/get/group/users"
            body: "*"
        };
    };
    // get user group info
    rpc GetUserGroup (GetUserGroupRequest) returns (GetUserGroupResponse) {
        option (google.api.http) = {
            post: "/v1/get/user/group"
            body: "*"
        };
    };
    /*
    Remove users from group.
    */
    rpc RemoveGroupUsers (RemoveGroupUsersRequest) returns (RemoveGroupUsersResponse) {
        option (google.api.http) = {
            post: "/v1/remove/group/users"
            body: "*"
        };
    };
    /*
    Create resource for app.
    */
    rpc CreateResource (CreateResourceRequest) returns (CreateResourceResponse) {
        option (google.api.http) = {
            post: "/v1/create/resource"
            body: "*"
        };
    };
    /*
    Update resource of app.
    */
    rpc UpdateResource (UpdateResourceRequest) returns (UpdateResourceResponse) {
        option (google.api.http) = {
            post: "/v1/update/resource"
            body: "*"
        };
    };
    /*
    Get resource by ID.
    */
    rpc GetResource (GetResourceRequest) returns (GetResourceResponse) {
        option (google.api.http) = {
            post: "/v1/get/resource"
            body: "*"
        };
    };
    // get resource by name.
    rpc GetResourceByName (GetResourceByNameRequest) returns (GetResourceByNameResponse) {
        option (google.api.http) = {
            post: "/v1/get/resource/by/name"
            body: "*"
        };
    };
    /*
    Get resource by creator.
    */
    rpc GetResourceByCreator (GetResourceByCreatorRequest) returns (GetResourceByCreatorResponse) {
        option (google.api.http) = {
            post: "/v1/get/resource/by/creator"
            body: "*"
        };
    };
    /*
    Get all resources from app.
    */
    rpc GetResources (GetResourcesRequest) returns (GetResourcesResponse) {
        option (google.api.http) = {
            post: "/v1/get/resources"
            body: "*"
        };
    };
    /*
    Delete resource from app.
    */
    rpc DeleteResource (DeleteResourceRequest) returns (DeleteResourceResponse) {
        option (google.api.http) = {
            post: "/v1/delete/resource"
            body: "*"
        };
    };
    // set ga login verify option
    rpc SetGALogin (SetGALoginRequest) returns (SetGALoginResponse) {
        option (google.api.http) = {
            post: "/v1/set/ga/login"
            body: "*"
        };
    };
    // set sms login verify option
    rpc SetSMSLogin (SetSMSLoginRequest) returns (SetSMSLoginResponse) {
        option (google.api.http) = {
            post: "/v1/set/sms/login"
            body: "*"
        };
    };
    // add user login times
    rpc AddUserLoginTime (AddUserLoginTimeRequest) returns (AddUserLoginTimeResponse) {
        option (google.api.http) = {
            post: "/v1/add/user/login/time"
            body: "*"
        };
    };
    // update user google authentication status.
    rpc UpdateUserGAStatus (UpdateUserGAStatusRequest) returns (UpdateUserGAStatusResponse) {
        option (google.api.http) = {
            post: "/v1/update/user/ga/status"
            body: "*"
        };
    };
    // update user kyc status.
    rpc UpdateUserKYCStatus (UpdateUserKYCStatusRequest) returns (UpdateUserKYCStatusResponse) {
        option (google.api.http) = {
            post: "/v1/update/user/kyc/status"
            body: "*"
        };
    };
    // get application user detail info.
    rpc GetApplicationUserDetail (GetApplicationUserDetailRequest) returns (GetApplicationUserDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/user/detail"
            body: "*"
        };
    };
}

// request body and response
message ApplicationInfo {
    string ID = 10;
    string ApplicationName = 20;
    string ApplicationOwner = 30;
    string HomepageUrl = 40;
    string RedirectUrl = 50;
    string ApplicationLogo = 60;
    uint32 CreateAT = 70;
    uint32 UpdateAT = 80;
    string ClientSecret = 90;
    bool GoogleRecaptcha = 100;
    bool SmsLogin = 110;
    bool InvitationCodeMust = 120;
}

message CreateApplicationRequest {
    ApplicationInfo Info = 10;
}

message CreateApplicationResponse {
    ApplicationInfo Info = 10;
}

message UpdateApplicationRequest {
    ApplicationInfo Info = 10;
}

message UpdateApplicationResponse {
    ApplicationInfo Info = 10;
}

message GetApplicationRequest {
    string AppID = 10;
}

message GetApplicationResponse {
    ApplicationInfo Info = 10;
}

message GetApplicationByOwnerRequest {
    string Owner = 20;
}

message OwnerApplication {
    string Owner = 20;
    repeated ApplicationInfo Infos = 30;
}

message GetApplicationByOwnerResponse {
    OwnerApplication Info = 10;
}

message GetApplicationsRequest {
    npool.v1.PageInfo Info = 10;
}

message GetApplicationsResponse {
    repeated ApplicationInfo Infos = 10;
}

message DeleteApplicationRequest {
    string AppID = 10;
}

message DeleteApplicationResponse {
    string Info = 10;
}

message RoleInfo {
    string ID = 10;
    string AppID = 20;
    string RoleName = 30;
    string Creator = 40;
    uint32 CreateAT = 50;
    uint32 UpdateAT = 60;
    string Annotation = 70;
}

message CreateRoleRequest {
    RoleInfo Info = 10;
}

message CreateRoleResponse {
    RoleInfo Info = 10;
}

message UpdateRoleRequest {
    RoleInfo Info = 10;
}

message UpdateRoleResponse {
    RoleInfo Info = 10;
}

message GetRoleRequest {
    string AppID = 10;
    string RoleID = 20;
}

message GetRoleResponse {
    RoleInfo Info = 10;
}

message GetRoleByCreatorRequest {
    string AppID = 10;
    string Creator = 20;
}

message CreatorRole {
    string AppID = 10;
    string Creator = 20;
    repeated RoleInfo Infos = 30;
}

message GetRoleByCreatorResponse {
    CreatorRole Info = 10;
}

message DeleteRoleRequest {
    string RoleID = 10;
    string AppID = 20;
}

message DeleteRoleResponse {
    string Info = 10;
}

message GetRolesRequest {
    string AppID = 10;
}

message GetRolesResponse {
    repeated RoleInfo Infos = 10;
}

message RoleUserInfo {
    string ID = 10;
    string AppID = 20;
    string RoleID = 30;
    string UserID = 40;
    uint32 CreateAT = 50;
}

message SetUserRoleRequest {
    repeated string UserIDs = 10;
    string RoleID = 20;
    string AppID = 30;
}

message SetUserRoleResponse {
    repeated RoleUserInfo Infos = 10;
}

message GetUserRoleRequest {
    string UserID = 10;
    string AppID = 20;
}

message UserRole {
    repeated RoleInfo Infos = 10;
    string UserID = 20;
    string AppID = 30;
}

message GetUserRoleResponse {
    UserRole Info = 10;
}

message GetRoleUsersRequest {
    string AppID = 10;
    string RoleID = 20;
}

message GetRoleUsersResponse {
    repeated RoleUserInfo Infos  = 10;
}

message UnSetUserRoleRequest {
    repeated string UserIDs = 10;
    string RoleID = 20;
    string AppID = 30;
}

message UnSetUserRoleResponse {
    string Info = 10;
}

message ApplicationUserInfo {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    bool Original = 40;
    bool KycVerify = 50;
    bool GAVerify = 60;
    bool GALogin = 70;
    bool SMSLogin = 80;
    uint32 LoginNumber = 90;
    uint32 CreateAT = 100;
}

message ApplicationUserDetail {
    ApplicationUserInfo UserApplicationInfo = 10;
    repeated GroupUserInfo UserGroupInfos = 20;
    UserRole UserRoleInfo = 30;
}

message GetApplicationUserDetailRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetApplicationUserDetailResponse {
    ApplicationUserDetail Info = 10;
}

message AddUsersToApplicationRequest {
    repeated string UserIDs = 10;
    string AppID = 20;
    bool Original = 30;
}

message AddUsersToApplicationResponse {
    repeated ApplicationUserInfo Infos = 10;
}

message GetUserFromApplicationRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserFromApplicationResponse {
    ApplicationUserInfo Info = 10;
}

message GetUsersFromApplicationRequest {
    string AppID = 10;
}

message GetUsersFromApplicationResponse {
    repeated ApplicationUserInfo Infos = 10;
}

message RemoveUsersFromApplicationRequest {
    repeated string UserIDs = 10;
    string AppID = 20;
}

message RemoveUsersFromApplicationResponse {
    string Info = 10;
}

message GroupInfo {
    string ID = 10;
    string AppID = 20;
    string GroupName = 30;
    string GroupOwner = 40;
    string GroupLogo = 50;
    string Annotation = 60;
    uint32 CreateAT = 70;
    uint32 UpdateAT = 80;
}

message CreateGroupRequest {
    GroupInfo Info = 10;
}

message CreateGroupResponse {
    GroupInfo Info = 10;
}

message GetGroupRequest {
    string GroupID = 10;
    string AppID = 20;
}

message GetGroupResponse {
    GroupInfo Info = 10;
}

message GetGroupByOwnerRequest {
    string AppID = 10;
    string Owner = 20;
}

message OwnerGroup {
    string AppID = 10;
    string Owner = 20;
    repeated GroupInfo Infos = 30;
}

message GetGroupByOwnerResponse {
    OwnerGroup Info = 10;
}

message GetAllGroupsRequest {
    string AppID = 10;
}

message GetAllGroupsResponse {
    repeated GroupInfo Infos = 10;
}

message UpdateGroupRequest {
    GroupInfo Info = 10;
}

message UpdateGroupResponse {
    GroupInfo Info = 10;
}

message DeleteGroupRequest {
    string GroupID = 10;
    string AppID = 20;
}

message DeleteGroupResponse {
    string Info = 10;
}

message GroupUserInfo {
    string ID = 10;
    string GroupID = 20;
    string AppID = 30;
    string UserID = 40;
    string Annotation = 50;
    uint32 CreateAT = 60;
}

message AddGroupUsersRequest {
    repeated string UserIDs = 10;
    string GroupID = 20;
    string AppID = 30;
}

message AddGroupUsersResponse {
    repeated GroupUserInfo Infos = 10;
}

message GetGroupUsersRequest {
    string GroupID = 10;
    string AppID = 20;
}

message GetGroupUsersResponse {
    repeated GroupUserInfo Infos = 10;
}

message RemoveGroupUsersRequest {
    repeated string UserIDs = 10;
    string GroupID = 20;
    string AppID = 30;
}

message RemoveGroupUsersResponse {
    string Info = 10;
}

message ResourceInfo {
    string ID = 10;
    string AppID = 20;
    string ResourceName = 30;
    string ResourceDescription = 40;
    string Type = 50;
    string Creator = 60;
    uint32 CreateAT = 70;
    uint32 UpdateAT = 80;
}

message CreateResourceRequest {
    ResourceInfo Info = 10;
}

message CreateResourceResponse {
    ResourceInfo Info = 10;
}

message UpdateResourceRequest {
    ResourceInfo Info = 10;
}

message UpdateResourceResponse {
    ResourceInfo Info = 10;
}

message GetResourceRequest {
    string ResourceID = 10;
    string AppID = 20;
}

message GetResourceResponse {
    ResourceInfo Info = 10;
}

message GetResourceByCreatorRequest {
    string AppID = 10;
    string Creator = 20;
}

message CreatorResource {
    string AppID = 10;
    string Creator = 20;
    repeated ResourceInfo Infos = 30;
}

message GetResourceByCreatorResponse {
    CreatorResource Info = 10;
}

message GetResourcesRequest {
    string AppID = 10;
}

message GetResourcesResponse {
    repeated ResourceInfo Infos = 10;
}

message DeleteResourceRequest {
    string ResourceID = 10;
    string AppID = 20;
}

message DeleteResourceResponse {
    string Info = 10;
}

message SetGALoginRequest {
    string AppID = 10;
    string UserID = 20;
    bool Set = 30;
}

message SetGALoginResponse {
    string Info = 10;
}

message AddUserLoginTimeRequest {
    string UserID = 10;
    string AppID = 20;
}

message AddUserLoginTimeResponse {
    uint32 Info = 10;
}

message UpdateUserGAStatusRequest {
    string UserID = 10;
    string AppID = 20;
    bool Status = 30;
}

message UpdateUserGAStatusResponse {
    string Info = 10;
}

message UpdateUserKYCStatusRequest {
    string UserID = 10;
    string AppID = 20;
    bool Status = 30;
}

message UpdateUserKYCStatusResponse {
    string Info = 10;
}

message GetUserGroupRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetUserGroupResponse {
    repeated GroupUserInfo Infos = 10;
}

message SetSMSLoginRequest {
    string AppID = 10;
    string UserID = 20;
    bool Set = 30;
}

message SetSMSLoginResponse {
    string Info = 10;
}

message GetResourceByNameRequest {
    string ResourceName = 10;
    string AppID = 20;
}

message GetResourceByNameResponse {
    ResourceInfo Info = 10;
}

message GetUserAppIDRequest {
    string UserID = 10;
}

message GetUserAppIDResponse {
    repeated string Infos = 10;
}
