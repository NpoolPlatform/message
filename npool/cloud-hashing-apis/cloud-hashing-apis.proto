syntax = "proto3";

package cloud.hashing.apis.v1;

option go_package = "github.com/NpoolPlatform/message/npool/cloud-hashing-apis";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "npool/npool.proto";
import "npool/cloud-hashing-goods/cloud-hashing-goods.proto";
import "npool/cloud-hashing-order/cloud-hashing-order.proto";
import "npool/cloud-hashing-billing/cloud-hashing-billing.proto";
import "npool/cloud-hashing-inspire/cloud-hashing-inspire.proto";
import "npool/kyc/kyc-management.proto";
import "npool/review-service/review-service.proto";
import "npool/user/user-management.proto";
import "npool/coininfo/coininfo.proto";

// Cloud Hashing Goods
service CloudHashingApis {
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc GetGoods(GetGoodsRequest) returns (GetGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods"
            body: "*"
        };
    }
    rpc CreateGood(CreateGoodRequest) returns (CreateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/good"
            body: "*"
        };
    }
    rpc GetGood(GetGoodRequest) returns (GetGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good"
            body: "*"
        };
    }
    rpc GetRecommendGoodsByApp(GetRecommendGoodsByAppRequest) returns (GetRecommendGoodsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommend/goods/by/app"
            body: "*"
        };
    }

    rpc SubmitOrder(SubmitOrderRequest) returns (SubmitOrderResponse) {
        option (google.api.http) = {
            post: "/v1/submit/order"
            body: "*"
        };
    }
    rpc CreateOrderPayment(CreateOrderPaymentRequest) returns (CreateOrderPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/create/order/payment"
            body: "*"
        };
    }

    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
        option (google.api.http) = {
            post: "/v1/get/order"
            body: "*"
        };
    }

    rpc GetOrdersByAppUser(GetOrdersByAppUserRequest) returns (GetOrdersByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/app/user"
            body: "*"
        };
    }
    rpc GetOrdersByApp(GetOrdersByAppRequest) returns (GetOrdersByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/app"
            body: "*"
        };
    }
    rpc GetOrdersByGood(GetOrdersByGoodRequest) returns (GetOrdersByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/by/good"
            body: "*"
        };
    }

    rpc Signup(SignupRequest) returns (SignupResponse) {
        option (google.api.http) = {
            post: "/v1/signup"
            body: "*"
        };
    }

    rpc GetMyInvitations(GetMyInvitationsRequest) returns (GetMyInvitationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/my/invitations"
            body: "*"
        };
    }
    rpc GetMyDirectInvitations(GetMyDirectInvitationsRequest) returns (GetMyDirectInvitationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/my/direct/invitations"
            body: "*"
        };
    }

    rpc GetKycReviews(GetKycReviewsRequest) returns (GetKycReviewsResponse) {
        option (google.api.http) = {
            post: "/v1/get/kyc/reviews"
            body: "*"
        };
    }
    rpc GetGoodReviews(GetGoodReviewsRequest) returns (GetGoodReviewsResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/reviews"
            body: "*"
        };
    }

    rpc CreateKyc (CreateKycRequest) returns (CreateKycResponse) {
        option (google.api.http) = {
            post: "/v1/create/kyc"
            body: "*"
        };
    }
    rpc UpdateKyc (UpdateKycRequest) returns (UpdateKycResponse) {
        option (google.api.http) = {
            post: "/v1/update/kyc"
            body: "*"
        };
    }
    rpc GetKycByAppUser(GetKycByAppUserRequest) returns (GetKycByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/kyc/by/app/user"
            body: "*"
        };
    }
}

// Request body and response
message Good {
    cloud.hashing.goods.v1.GoodDetail Good = 10;
    sphinx.coininfo.v1.CoinInfo Main = 20;
    repeated sphinx.coininfo.v1.CoinInfo SupportCoins = 30;
    repeated review.service.v1.Review Reviews = 40;
}

message RecommendGood {
    Good Good = 10;
    cloud.hashing.goods.v1.Recommend Recommend = 20;
}

message CreateGoodRequest {
    cloud.hashing.goods.v1.GoodInfo Info = 10;
}

message CreateGoodResponse {
    Good Info = 10;
}

message GetGoodRequest {
    string ID = 10;
}

message GetGoodResponse {
    Good Info = 10;
}


message GetGoodsRequest {
    npool.v1.PageInfo PageInfo = 10;
}

message GetGoodsResponse {
    repeated Good Infos = 10;
    int32 Total = 20;
}

message GetRecommendGoodsByAppRequest {
    string AppID = 10;
}

message GetRecommendGoodsByAppResponse {
    repeated RecommendGood Infos = 10;
}

message Order {
    cloud.hashing.order.v1.OrderDetail Order = 10;
    cloud.hashing.billing.v1.CoinAccountInfo PayToAccount = 20;
    Good Good = 30;
    sphinx.coininfo.v1.CoinInfo PayWithCoin = 40;
    cloud.hashing.inspire.v1.CouponAllocatedDetail FixAmountCoupon = 50;
    cloud.hashing.inspire.v1.CouponAllocatedDetail DiscountCoupon = 60;
    cloud.hashing.inspire.v1.UserSpecialReduction UserSpecialReduction = 70;
}

message GetOrderRequest {
    string ID = 10;
}

message GetOrderResponse {
    Order Info = 10;
}

message GetOrdersByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetOrdersByAppUserResponse {
    repeated Order Infos = 10;
}

message GetOrdersByAppRequest {
    string AppID = 10;
}

message GetOrdersByAppResponse {
    repeated Order Infos = 10;
}

message GetOrdersByGoodRequest {
    string GoodID = 10;
}

message GetOrdersByGoodResponse {
    repeated Order Infos = 10;
}

message OrderFee {
    string ID = 10;
    uint32 DurationDays = 20;
}

message SubmitOrderRequest {
    string GoodID = 10;
    uint32 Units = 20;
    string UserID = 30;
    string AppID = 40;
    string CouponID = 50;
    string DiscountCouponID = 60;
    string UserSpecialReductionID = 70;
}

message SubmitOrderResponse {
    Order Info = 10;
}

message CreateOrderPaymentRequest {
    string OrderID = 10;
    string PaymentCoinTypeID = 20;
    repeated OrderFee Fees = 30;
}

message CreateOrderPaymentResponse {
    Order Info = 10;
}

message SignupRequest {
    string Username = 10;
    string Password = 20;
    string EmailAddress = 30;
    string PhoneNumber = 40;
    string VerificationCode = 50;
    string AppID = 60;
    string InvitationCode = 70;
}

message SignupResponse {
    user.v1.UserBasicInfo Info = 10;
}

message InvitationSummary {
    uint32 Units = 10;
    double Amount = 20;
}

message InvitationUserInfo {
    string UserID = 10;
    string Username = 20;
    string Avatar = 30;
    string EmailAddress = 40;
    bool Kol = 50;
    map<string, InvitationSummary> Summarys = 60;
    map<string, InvitationSummary> MySummarys = 70;
    uint32 InvitedCount = 80;
    uint32 JoinDate = 90;
}

message Invitation {
    repeated InvitationUserInfo Invitees = 10;
}

message GetMyInvitationsRequest {
    string AppID = 10;
    string InviterID = 20;
}

message GetMyInvitationsResponse {
    InvitationUserInfo MySelf = 10;
    map<string, Invitation> Infos = 20;
}

message GetMyDirectInvitationsRequest {
    string AppID = 10;
    string InviterID = 20;
}

message GetMyDirectInvitationsResponse {
    InvitationUserInfo MySelf = 10;
    map<string, Invitation> Infos = 20;
}

message KycReview {
    review.service.v1.Review Review = 10;
    user.v1.UserBasicInfo User = 20;
    kyc.management.v1.KycInfo Kyc = 30;
}

message GetKycReviewsRequest {
    string AppID = 10;
}

message GetKycReviewsResponse {
    repeated  KycReview Infos = 10;
}

message GoodReview {
    review.service.v1.Review Review = 10;
    user.v1.UserBasicInfo User = 20;
    cloud.hashing.goods.v1.GoodDetail Good = 30;
}

message GetGoodReviewsRequest {
}

message GetGoodReviewsResponse {
    repeated GoodReview Infos = 10;
}

message Kyc {
    kyc.management.v1.KycInfo Kyc = 10;
    string State = 20;
    string Message = 30;
}

message GetKycByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetKycByAppUserResponse {
    Kyc Info = 10;
}

message CreateKycRequest {
    kyc.management.v1.KycInfo Info = 10;
}

message CreateKycResponse {
    Kyc Info = 10;
}

message UpdateKycRequest {
    kyc.management.v1.KycInfo Info = 10;
}

message UpdateKycResponse {
    Kyc Info = 10;
}
