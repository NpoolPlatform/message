// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/cloud-hashing-apis/cloud-hashing-apis.proto

package cloud_hashing_apis

import (
	npool "github.com/NpoolPlatform/message/npool"
	appusermgr "github.com/NpoolPlatform/message/npool/appusermgr"
	cloud_hashing_billing "github.com/NpoolPlatform/message/npool/cloud-hashing-billing"
	cloud_hashing_goods "github.com/NpoolPlatform/message/npool/cloud-hashing-goods"
	cloud_hashing_inspire "github.com/NpoolPlatform/message/npool/cloud-hashing-inspire"
	cloud_hashing_order "github.com/NpoolPlatform/message/npool/cloud-hashing-order"
	coininfo "github.com/NpoolPlatform/message/npool/coininfo"
	kyc "github.com/NpoolPlatform/message/npool/kyc"
	review_service "github.com/NpoolPlatform/message/npool/review-service"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request body and response
type Good struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Good         *cloud_hashing_goods.GoodDetail `protobuf:"bytes,10,opt,name=Good,proto3" json:"Good,omitempty"`
	Main         *coininfo.CoinInfo              `protobuf:"bytes,20,opt,name=Main,proto3" json:"Main,omitempty"`
	SupportCoins []*coininfo.CoinInfo            `protobuf:"bytes,30,rep,name=SupportCoins,proto3" json:"SupportCoins,omitempty"`
	Reviews      []*review_service.Review        `protobuf:"bytes,40,rep,name=Reviews,proto3" json:"Reviews,omitempty"`
}

func (x *Good) Reset() {
	*x = Good{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Good) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Good) ProtoMessage() {}

func (x *Good) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Good.ProtoReflect.Descriptor instead.
func (*Good) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{0}
}

func (x *Good) GetGood() *cloud_hashing_goods.GoodDetail {
	if x != nil {
		return x.Good
	}
	return nil
}

func (x *Good) GetMain() *coininfo.CoinInfo {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *Good) GetSupportCoins() []*coininfo.CoinInfo {
	if x != nil {
		return x.SupportCoins
	}
	return nil
}

func (x *Good) GetReviews() []*review_service.Review {
	if x != nil {
		return x.Reviews
	}
	return nil
}

type RecommendGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Good      *Good                          `protobuf:"bytes,10,opt,name=Good,proto3" json:"Good,omitempty"`
	Recommend *cloud_hashing_goods.Recommend `protobuf:"bytes,20,opt,name=Recommend,proto3" json:"Recommend,omitempty"`
}

func (x *RecommendGood) Reset() {
	*x = RecommendGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendGood) ProtoMessage() {}

func (x *RecommendGood) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendGood.ProtoReflect.Descriptor instead.
func (*RecommendGood) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{1}
}

func (x *RecommendGood) GetGood() *Good {
	if x != nil {
		return x.Good
	}
	return nil
}

func (x *RecommendGood) GetRecommend() *cloud_hashing_goods.Recommend {
	if x != nil {
		return x.Recommend
	}
	return nil
}

type CreateGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *cloud_hashing_goods.GoodInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodRequest) Reset() {
	*x = CreateGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodRequest) ProtoMessage() {}

func (x *CreateGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGoodRequest) GetInfo() *cloud_hashing_goods.GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Good `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodResponse) Reset() {
	*x = CreateGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodResponse) ProtoMessage() {}

func (x *CreateGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodResponse.ProtoReflect.Descriptor instead.
func (*CreateGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGoodResponse) GetInfo() *Good {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetGoodRequest) Reset() {
	*x = GetGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodRequest) ProtoMessage() {}

func (x *GetGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodRequest.ProtoReflect.Descriptor instead.
func (*GetGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{4}
}

func (x *GetGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Good `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGoodResponse) Reset() {
	*x = GetGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodResponse) ProtoMessage() {}

func (x *GetGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodResponse.ProtoReflect.Descriptor instead.
func (*GetGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{5}
}

func (x *GetGoodResponse) GetInfo() *Good {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *npool.PageInfo `protobuf:"bytes,10,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
}

func (x *GetGoodsRequest) Reset() {
	*x = GetGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsRequest) ProtoMessage() {}

func (x *GetGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{6}
}

func (x *GetGoodsRequest) GetPageInfo() *npool.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type GetGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Good `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total int32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetGoodsResponse) Reset() {
	*x = GetGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsResponse) ProtoMessage() {}

func (x *GetGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{7}
}

func (x *GetGoodsResponse) GetInfos() []*Good {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetGoodsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetRecommendGoodsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetRecommendGoodsByAppRequest) Reset() {
	*x = GetRecommendGoodsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendGoodsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendGoodsByAppRequest) ProtoMessage() {}

func (x *GetRecommendGoodsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendGoodsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendGoodsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecommendGoodsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetRecommendGoodsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*RecommendGood `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetRecommendGoodsByAppResponse) Reset() {
	*x = GetRecommendGoodsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendGoodsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendGoodsByAppResponse) ProtoMessage() {}

func (x *GetRecommendGoodsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendGoodsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendGoodsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecommendGoodsByAppResponse) GetInfos() []*RecommendGood {
	if x != nil {
		return x.Infos
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order                *cloud_hashing_order.OrderDetail             `protobuf:"bytes,10,opt,name=Order,proto3" json:"Order,omitempty"`
	PayToAccount         *cloud_hashing_billing.CoinAccountInfo       `protobuf:"bytes,20,opt,name=PayToAccount,proto3" json:"PayToAccount,omitempty"`
	Good                 *Good                                        `protobuf:"bytes,30,opt,name=Good,proto3" json:"Good,omitempty"`
	PayWithCoin          *coininfo.CoinInfo                           `protobuf:"bytes,40,opt,name=PayWithCoin,proto3" json:"PayWithCoin,omitempty"`
	FixAmountCoupon      *cloud_hashing_inspire.CouponAllocatedDetail `protobuf:"bytes,50,opt,name=FixAmountCoupon,proto3" json:"FixAmountCoupon,omitempty"`
	DiscountCoupon       *cloud_hashing_inspire.CouponAllocatedDetail `protobuf:"bytes,60,opt,name=DiscountCoupon,proto3" json:"DiscountCoupon,omitempty"`
	UserSpecialReduction *cloud_hashing_inspire.UserSpecialReduction  `protobuf:"bytes,70,opt,name=UserSpecialReduction,proto3" json:"UserSpecialReduction,omitempty"`
	PaymentDeadline      uint32                                       `protobuf:"varint,80,opt,name=PaymentDeadline,proto3" json:"PaymentDeadline,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{10}
}

func (x *Order) GetOrder() *cloud_hashing_order.OrderDetail {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Order) GetPayToAccount() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.PayToAccount
	}
	return nil
}

func (x *Order) GetGood() *Good {
	if x != nil {
		return x.Good
	}
	return nil
}

func (x *Order) GetPayWithCoin() *coininfo.CoinInfo {
	if x != nil {
		return x.PayWithCoin
	}
	return nil
}

func (x *Order) GetFixAmountCoupon() *cloud_hashing_inspire.CouponAllocatedDetail {
	if x != nil {
		return x.FixAmountCoupon
	}
	return nil
}

func (x *Order) GetDiscountCoupon() *cloud_hashing_inspire.CouponAllocatedDetail {
	if x != nil {
		return x.DiscountCoupon
	}
	return nil
}

func (x *Order) GetUserSpecialReduction() *cloud_hashing_inspire.UserSpecialReduction {
	if x != nil {
		return x.UserSpecialReduction
	}
	return nil
}

func (x *Order) GetPaymentDeadline() uint32 {
	if x != nil {
		return x.PaymentDeadline
	}
	return 0
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrderRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOrdersByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetOrdersByAppUserRequest) Reset() {
	*x = GetOrdersByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByAppUserRequest) ProtoMessage() {}

func (x *GetOrdersByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrdersByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetOrdersByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetOrdersByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetOrdersByAppUserResponse) Reset() {
	*x = GetOrdersByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByAppUserResponse) ProtoMessage() {}

func (x *GetOrdersByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{14}
}

func (x *GetOrdersByAppUserResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetOrdersByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetOrdersByAppRequest) Reset() {
	*x = GetOrdersByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByAppRequest) ProtoMessage() {}

func (x *GetOrdersByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByAppRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{15}
}

func (x *GetOrdersByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetOrdersByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetOrdersByAppResponse) Reset() {
	*x = GetOrdersByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByAppResponse) ProtoMessage() {}

func (x *GetOrdersByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByAppResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{16}
}

func (x *GetOrdersByAppResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetOrdersByGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetOrdersByGoodRequest) Reset() {
	*x = GetOrdersByGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByGoodRequest) ProtoMessage() {}

func (x *GetOrdersByGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByGoodRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersByGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{17}
}

func (x *GetOrdersByGoodRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetOrdersByGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Order `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetOrdersByGoodResponse) Reset() {
	*x = GetOrdersByGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersByGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersByGoodResponse) ProtoMessage() {}

func (x *GetOrdersByGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersByGoodResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersByGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{18}
}

func (x *GetOrdersByGoodResponse) GetInfos() []*Order {
	if x != nil {
		return x.Infos
	}
	return nil
}

type OrderFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	DurationDays uint32 `protobuf:"varint,20,opt,name=DurationDays,proto3" json:"DurationDays,omitempty"`
}

func (x *OrderFee) Reset() {
	*x = OrderFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFee) ProtoMessage() {}

func (x *OrderFee) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFee.ProtoReflect.Descriptor instead.
func (*OrderFee) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{19}
}

func (x *OrderFee) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *OrderFee) GetDurationDays() uint32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

type SubmitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID                 string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Units                  uint32 `protobuf:"varint,20,opt,name=Units,proto3" json:"Units,omitempty"`
	UserID                 string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID                  string `protobuf:"bytes,40,opt,name=AppID,proto3" json:"AppID,omitempty"`
	CouponID               string `protobuf:"bytes,50,opt,name=CouponID,proto3" json:"CouponID,omitempty"`
	DiscountCouponID       string `protobuf:"bytes,60,opt,name=DiscountCouponID,proto3" json:"DiscountCouponID,omitempty"`
	UserSpecialReductionID string `protobuf:"bytes,70,opt,name=UserSpecialReductionID,proto3" json:"UserSpecialReductionID,omitempty"`
}

func (x *SubmitOrderRequest) Reset() {
	*x = SubmitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOrderRequest) ProtoMessage() {}

func (x *SubmitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitOrderRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{20}
}

func (x *SubmitOrderRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *SubmitOrderRequest) GetUnits() uint32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *SubmitOrderRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SubmitOrderRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SubmitOrderRequest) GetCouponID() string {
	if x != nil {
		return x.CouponID
	}
	return ""
}

func (x *SubmitOrderRequest) GetDiscountCouponID() string {
	if x != nil {
		return x.DiscountCouponID
	}
	return ""
}

func (x *SubmitOrderRequest) GetUserSpecialReductionID() string {
	if x != nil {
		return x.UserSpecialReductionID
	}
	return ""
}

type SubmitOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitOrderResponse) Reset() {
	*x = SubmitOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOrderResponse) ProtoMessage() {}

func (x *SubmitOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOrderResponse.ProtoReflect.Descriptor instead.
func (*SubmitOrderResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{21}
}

func (x *SubmitOrderResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateOrderPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID           string      `protobuf:"bytes,10,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	PaymentCoinTypeID string      `protobuf:"bytes,20,opt,name=PaymentCoinTypeID,proto3" json:"PaymentCoinTypeID,omitempty"`
	Fees              []*OrderFee `protobuf:"bytes,30,rep,name=Fees,proto3" json:"Fees,omitempty"`
}

func (x *CreateOrderPaymentRequest) Reset() {
	*x = CreateOrderPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderPaymentRequest) ProtoMessage() {}

func (x *CreateOrderPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderPaymentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderPaymentRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{22}
}

func (x *CreateOrderPaymentRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *CreateOrderPaymentRequest) GetPaymentCoinTypeID() string {
	if x != nil {
		return x.PaymentCoinTypeID
	}
	return ""
}

func (x *CreateOrderPaymentRequest) GetFees() []*OrderFee {
	if x != nil {
		return x.Fees
	}
	return nil
}

type CreateOrderPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Order `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateOrderPaymentResponse) Reset() {
	*x = CreateOrderPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderPaymentResponse) ProtoMessage() {}

func (x *CreateOrderPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderPaymentResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderPaymentResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{23}
}

func (x *CreateOrderPaymentResponse) GetInfo() *Order {
	if x != nil {
		return x.Info
	}
	return nil
}

type SignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,10,opt,name=Username,proto3" json:"Username,omitempty"`
	PasswordHash     string `protobuf:"bytes,20,opt,name=PasswordHash,proto3" json:"PasswordHash,omitempty"`
	Account          string `protobuf:"bytes,30,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountType      string `protobuf:"bytes,40,opt,name=AccountType,proto3" json:"AccountType,omitempty"`
	VerificationCode string `protobuf:"bytes,50,opt,name=VerificationCode,proto3" json:"VerificationCode,omitempty"`
	AppID            string `protobuf:"bytes,60,opt,name=AppID,proto3" json:"AppID,omitempty"`
	InvitationCode   string `protobuf:"bytes,70,opt,name=InvitationCode,proto3" json:"InvitationCode,omitempty"`
}

func (x *SignupRequest) Reset() {
	*x = SignupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupRequest) ProtoMessage() {}

func (x *SignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupRequest.ProtoReflect.Descriptor instead.
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{24}
}

func (x *SignupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignupRequest) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *SignupRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SignupRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *SignupRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *SignupRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SignupRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

type SignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *appusermgr.AppUser `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SignupResponse) Reset() {
	*x = SignupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupResponse) ProtoMessage() {}

func (x *SignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupResponse.ProtoReflect.Descriptor instead.
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{25}
}

func (x *SignupResponse) GetInfo() *appusermgr.AppUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID            string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Account          string `protobuf:"bytes,20,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountType      string `protobuf:"bytes,30,opt,name=AccountType,proto3" json:"AccountType,omitempty"`
	PasswordHash     string `protobuf:"bytes,40,opt,name=PasswordHash,proto3" json:"PasswordHash,omitempty"`
	VerificationCode string `protobuf:"bytes,50,opt,name=VerificationCode,proto3" json:"VerificationCode,omitempty"`
}

func (x *UpdatePasswordRequest) Reset() {
	*x = UpdatePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordRequest) ProtoMessage() {}

func (x *UpdatePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{26}
}

func (x *UpdatePasswordRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdatePasswordRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdatePasswordRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UpdatePasswordRequest) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *UpdatePasswordRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

type UpdatePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *appusermgr.AppUserSecret `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePasswordResponse) Reset() {
	*x = UpdatePasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordResponse) ProtoMessage() {}

func (x *UpdatePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdatePasswordResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePasswordResponse) GetInfo() *appusermgr.AppUserSecret {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePasswordByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID            string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID           string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Account          string `protobuf:"bytes,30,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountType      string `protobuf:"bytes,40,opt,name=AccountType,proto3" json:"AccountType,omitempty"`
	OldPasswordHash  string `protobuf:"bytes,50,opt,name=OldPasswordHash,proto3" json:"OldPasswordHash,omitempty"`
	PasswordHash     string `protobuf:"bytes,60,opt,name=PasswordHash,proto3" json:"PasswordHash,omitempty"`
	VerificationCode string `protobuf:"bytes,70,opt,name=VerificationCode,proto3" json:"VerificationCode,omitempty"`
}

func (x *UpdatePasswordByAppUserRequest) Reset() {
	*x = UpdatePasswordByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordByAppUserRequest) ProtoMessage() {}

func (x *UpdatePasswordByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordByAppUserRequest.ProtoReflect.Descriptor instead.
func (*UpdatePasswordByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{28}
}

func (x *UpdatePasswordByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetOldPasswordHash() string {
	if x != nil {
		return x.OldPasswordHash
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *UpdatePasswordByAppUserRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

type UpdatePasswordByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *appusermgr.AppUserSecret `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePasswordByAppUserResponse) Reset() {
	*x = UpdatePasswordByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordByAppUserResponse) ProtoMessage() {}

func (x *UpdatePasswordByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordByAppUserResponse.ProtoReflect.Descriptor instead.
func (*UpdatePasswordByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{29}
}

func (x *UpdatePasswordByAppUserResponse) GetInfo() *appusermgr.AppUserSecret {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateEmailAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                    string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                   string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OldVerificationCode      string `protobuf:"bytes,30,opt,name=OldVerificationCode,proto3" json:"OldVerificationCode,omitempty"`
	OldAccount               string `protobuf:"bytes,40,opt,name=OldAccount,proto3" json:"OldAccount,omitempty"`
	OldAccountType           string `protobuf:"bytes,50,opt,name=OldAccountType,proto3" json:"OldAccountType,omitempty"`
	NewEmailAddress          string `protobuf:"bytes,60,opt,name=NewEmailAddress,proto3" json:"NewEmailAddress,omitempty"`
	NewEmailVerificationCode string `protobuf:"bytes,70,opt,name=NewEmailVerificationCode,proto3" json:"NewEmailVerificationCode,omitempty"`
}

func (x *UpdateEmailAddressRequest) Reset() {
	*x = UpdateEmailAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailAddressRequest) ProtoMessage() {}

func (x *UpdateEmailAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmailAddressRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateEmailAddressRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetOldVerificationCode() string {
	if x != nil {
		return x.OldVerificationCode
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetOldAccount() string {
	if x != nil {
		return x.OldAccount
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetOldAccountType() string {
	if x != nil {
		return x.OldAccountType
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetNewEmailAddress() string {
	if x != nil {
		return x.NewEmailAddress
	}
	return ""
}

func (x *UpdateEmailAddressRequest) GetNewEmailVerificationCode() string {
	if x != nil {
		return x.NewEmailVerificationCode
	}
	return ""
}

type UpdateEmailAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *appusermgr.AppUserInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateEmailAddressResponse) Reset() {
	*x = UpdateEmailAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailAddressResponse) ProtoMessage() {}

func (x *UpdateEmailAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateEmailAddressResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateEmailAddressResponse) GetInfo() *appusermgr.AppUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdatePhoneNORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID                    string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID                   string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OldVerificationCode      string `protobuf:"bytes,30,opt,name=OldVerificationCode,proto3" json:"OldVerificationCode,omitempty"`
	OldAccount               string `protobuf:"bytes,40,opt,name=OldAccount,proto3" json:"OldAccount,omitempty"`
	OldAccountType           string `protobuf:"bytes,50,opt,name=OldAccountType,proto3" json:"OldAccountType,omitempty"`
	NewPhoneNO               string `protobuf:"bytes,60,opt,name=NewPhoneNO,proto3" json:"NewPhoneNO,omitempty"`
	NewPhoneVerificationCode string `protobuf:"bytes,70,opt,name=NewPhoneVerificationCode,proto3" json:"NewPhoneVerificationCode,omitempty"`
}

func (x *UpdatePhoneNORequest) Reset() {
	*x = UpdatePhoneNORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneNORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneNORequest) ProtoMessage() {}

func (x *UpdatePhoneNORequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneNORequest.ProtoReflect.Descriptor instead.
func (*UpdatePhoneNORequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{32}
}

func (x *UpdatePhoneNORequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetOldVerificationCode() string {
	if x != nil {
		return x.OldVerificationCode
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetOldAccount() string {
	if x != nil {
		return x.OldAccount
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetOldAccountType() string {
	if x != nil {
		return x.OldAccountType
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetNewPhoneNO() string {
	if x != nil {
		return x.NewPhoneNO
	}
	return ""
}

func (x *UpdatePhoneNORequest) GetNewPhoneVerificationCode() string {
	if x != nil {
		return x.NewPhoneVerificationCode
	}
	return ""
}

type UpdatePhoneNOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *appusermgr.AppUserInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdatePhoneNOResponse) Reset() {
	*x = UpdatePhoneNOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneNOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneNOResponse) ProtoMessage() {}

func (x *UpdatePhoneNOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneNOResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhoneNOResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{33}
}

func (x *UpdatePhoneNOResponse) GetInfo() *appusermgr.AppUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type InvitationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units  uint32  `protobuf:"varint,10,opt,name=Units,proto3" json:"Units,omitempty"`
	Amount float64 `protobuf:"fixed64,20,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *InvitationSummary) Reset() {
	*x = InvitationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationSummary) ProtoMessage() {}

func (x *InvitationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationSummary.ProtoReflect.Descriptor instead.
func (*InvitationSummary) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{34}
}

func (x *InvitationSummary) GetUnits() uint32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *InvitationSummary) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InvitationUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string                        `protobuf:"bytes,10,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Username     string                        `protobuf:"bytes,20,opt,name=Username,proto3" json:"Username,omitempty"`
	Avatar       string                        `protobuf:"bytes,30,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	EmailAddress string                        `protobuf:"bytes,40,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	Kol          bool                          `protobuf:"varint,50,opt,name=Kol,proto3" json:"Kol,omitempty"`
	Summarys     map[string]*InvitationSummary `protobuf:"bytes,60,rep,name=Summarys,proto3" json:"Summarys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MySummarys   map[string]*InvitationSummary `protobuf:"bytes,70,rep,name=MySummarys,proto3" json:"MySummarys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InvitedCount uint32                        `protobuf:"varint,80,opt,name=InvitedCount,proto3" json:"InvitedCount,omitempty"`
	JoinDate     uint32                        `protobuf:"varint,90,opt,name=JoinDate,proto3" json:"JoinDate,omitempty"`
}

func (x *InvitationUserInfo) Reset() {
	*x = InvitationUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationUserInfo) ProtoMessage() {}

func (x *InvitationUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationUserInfo.ProtoReflect.Descriptor instead.
func (*InvitationUserInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{35}
}

func (x *InvitationUserInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *InvitationUserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *InvitationUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *InvitationUserInfo) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *InvitationUserInfo) GetKol() bool {
	if x != nil {
		return x.Kol
	}
	return false
}

func (x *InvitationUserInfo) GetSummarys() map[string]*InvitationSummary {
	if x != nil {
		return x.Summarys
	}
	return nil
}

func (x *InvitationUserInfo) GetMySummarys() map[string]*InvitationSummary {
	if x != nil {
		return x.MySummarys
	}
	return nil
}

func (x *InvitationUserInfo) GetInvitedCount() uint32 {
	if x != nil {
		return x.InvitedCount
	}
	return 0
}

func (x *InvitationUserInfo) GetJoinDate() uint32 {
	if x != nil {
		return x.JoinDate
	}
	return 0
}

type Invitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invitees []*InvitationUserInfo `protobuf:"bytes,10,rep,name=Invitees,proto3" json:"Invitees,omitempty"`
}

func (x *Invitation) Reset() {
	*x = Invitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitation) ProtoMessage() {}

func (x *Invitation) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitation.ProtoReflect.Descriptor instead.
func (*Invitation) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{36}
}

func (x *Invitation) GetInvitees() []*InvitationUserInfo {
	if x != nil {
		return x.Invitees
	}
	return nil
}

type GetMyInvitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetMyInvitationsRequest) Reset() {
	*x = GetMyInvitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyInvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyInvitationsRequest) ProtoMessage() {}

func (x *GetMyInvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyInvitationsRequest.ProtoReflect.Descriptor instead.
func (*GetMyInvitationsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{37}
}

func (x *GetMyInvitationsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMyInvitationsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetMyInvitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MySelf *InvitationUserInfo    `protobuf:"bytes,10,opt,name=MySelf,proto3" json:"MySelf,omitempty"`
	Infos  map[string]*Invitation `protobuf:"bytes,20,rep,name=Infos,proto3" json:"Infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMyInvitationsResponse) Reset() {
	*x = GetMyInvitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyInvitationsResponse) ProtoMessage() {}

func (x *GetMyInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyInvitationsResponse.ProtoReflect.Descriptor instead.
func (*GetMyInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{38}
}

func (x *GetMyInvitationsResponse) GetMySelf() *InvitationUserInfo {
	if x != nil {
		return x.MySelf
	}
	return nil
}

func (x *GetMyInvitationsResponse) GetInfos() map[string]*Invitation {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetMyDirectInvitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetMyDirectInvitationsRequest) Reset() {
	*x = GetMyDirectInvitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyDirectInvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyDirectInvitationsRequest) ProtoMessage() {}

func (x *GetMyDirectInvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyDirectInvitationsRequest.ProtoReflect.Descriptor instead.
func (*GetMyDirectInvitationsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{39}
}

func (x *GetMyDirectInvitationsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMyDirectInvitationsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetMyDirectInvitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MySelf *InvitationUserInfo    `protobuf:"bytes,10,opt,name=MySelf,proto3" json:"MySelf,omitempty"`
	Infos  map[string]*Invitation `protobuf:"bytes,20,rep,name=Infos,proto3" json:"Infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMyDirectInvitationsResponse) Reset() {
	*x = GetMyDirectInvitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyDirectInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyDirectInvitationsResponse) ProtoMessage() {}

func (x *GetMyDirectInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyDirectInvitationsResponse.ProtoReflect.Descriptor instead.
func (*GetMyDirectInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{40}
}

func (x *GetMyDirectInvitationsResponse) GetMySelf() *InvitationUserInfo {
	if x != nil {
		return x.MySelf
	}
	return nil
}

func (x *GetMyDirectInvitationsResponse) GetInfos() map[string]*Invitation {
	if x != nil {
		return x.Infos
	}
	return nil
}

type KycReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review *review_service.Review  `protobuf:"bytes,10,opt,name=Review,proto3" json:"Review,omitempty"`
	User   *appusermgr.AppUserInfo `protobuf:"bytes,20,opt,name=User,proto3" json:"User,omitempty"`
	Kyc    *kyc.KycInfo            `protobuf:"bytes,30,opt,name=Kyc,proto3" json:"Kyc,omitempty"`
}

func (x *KycReview) Reset() {
	*x = KycReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KycReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KycReview) ProtoMessage() {}

func (x *KycReview) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KycReview.ProtoReflect.Descriptor instead.
func (*KycReview) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{41}
}

func (x *KycReview) GetReview() *review_service.Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *KycReview) GetUser() *appusermgr.AppUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *KycReview) GetKyc() *kyc.KycInfo {
	if x != nil {
		return x.Kyc
	}
	return nil
}

type GetKycReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetKycReviewsRequest) Reset() {
	*x = GetKycReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsRequest) ProtoMessage() {}

func (x *GetKycReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetKycReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{42}
}

func (x *GetKycReviewsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetKycReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetKycReviewsResponse) Reset() {
	*x = GetKycReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsResponse) ProtoMessage() {}

func (x *GetKycReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetKycReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{43}
}

func (x *GetKycReviewsResponse) GetInfos() []*KycReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetKycReviewsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetKycReviewsByAppRequest) Reset() {
	*x = GetKycReviewsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsByAppRequest) ProtoMessage() {}

func (x *GetKycReviewsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetKycReviewsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{44}
}

func (x *GetKycReviewsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetKycReviewsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetKycReviewsByAppResponse) Reset() {
	*x = GetKycReviewsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsByAppResponse) ProtoMessage() {}

func (x *GetKycReviewsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetKycReviewsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{45}
}

func (x *GetKycReviewsByAppResponse) GetInfos() []*KycReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetKycReviewsByOtherAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *GetKycReviewsByOtherAppRequest) Reset() {
	*x = GetKycReviewsByOtherAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsByOtherAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsByOtherAppRequest) ProtoMessage() {}

func (x *GetKycReviewsByOtherAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsByOtherAppRequest.ProtoReflect.Descriptor instead.
func (*GetKycReviewsByOtherAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{46}
}

func (x *GetKycReviewsByOtherAppRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type GetKycReviewsByOtherAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*KycReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetKycReviewsByOtherAppResponse) Reset() {
	*x = GetKycReviewsByOtherAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycReviewsByOtherAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycReviewsByOtherAppResponse) ProtoMessage() {}

func (x *GetKycReviewsByOtherAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycReviewsByOtherAppResponse.ProtoReflect.Descriptor instead.
func (*GetKycReviewsByOtherAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{47}
}

func (x *GetKycReviewsByOtherAppResponse) GetInfos() []*KycReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GoodReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review    *review_service.Review          `protobuf:"bytes,10,opt,name=Review,proto3" json:"Review,omitempty"`
	CreatedBy *appusermgr.AppUserInfo         `protobuf:"bytes,20,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	Good      *cloud_hashing_goods.GoodDetail `protobuf:"bytes,30,opt,name=Good,proto3" json:"Good,omitempty"`
}

func (x *GoodReview) Reset() {
	*x = GoodReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodReview) ProtoMessage() {}

func (x *GoodReview) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodReview.ProtoReflect.Descriptor instead.
func (*GoodReview) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{48}
}

func (x *GoodReview) GetReview() *review_service.Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *GoodReview) GetCreatedBy() *appusermgr.AppUserInfo {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *GoodReview) GetGood() *cloud_hashing_goods.GoodDetail {
	if x != nil {
		return x.Good
	}
	return nil
}

type GetGoodReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGoodReviewsRequest) Reset() {
	*x = GetGoodReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodReviewsRequest) ProtoMessage() {}

func (x *GetGoodReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetGoodReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{49}
}

type GetGoodReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetGoodReviewsResponse) Reset() {
	*x = GetGoodReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodReviewsResponse) ProtoMessage() {}

func (x *GetGoodReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetGoodReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{50}
}

func (x *GetGoodReviewsResponse) GetInfos() []*GoodReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type Kyc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kyc     *kyc.KycInfo `protobuf:"bytes,10,opt,name=Kyc,proto3" json:"Kyc,omitempty"`
	State   string       `protobuf:"bytes,20,opt,name=State,proto3" json:"State,omitempty"`
	Message string       `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Kyc) Reset() {
	*x = Kyc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kyc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kyc) ProtoMessage() {}

func (x *Kyc) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kyc.ProtoReflect.Descriptor instead.
func (*Kyc) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{51}
}

func (x *Kyc) GetKyc() *kyc.KycInfo {
	if x != nil {
		return x.Kyc
	}
	return nil
}

func (x *Kyc) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Kyc) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetKycByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetKycByAppUserRequest) Reset() {
	*x = GetKycByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByAppUserRequest) ProtoMessage() {}

func (x *GetKycByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetKycByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{52}
}

func (x *GetKycByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetKycByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetKycByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Kyc `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetKycByAppUserResponse) Reset() {
	*x = GetKycByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycByAppUserResponse) ProtoMessage() {}

func (x *GetKycByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetKycByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{53}
}

func (x *GetKycByAppUserResponse) GetInfo() *Kyc {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *kyc.KycInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateKycRequest) Reset() {
	*x = CreateKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKycRequest) ProtoMessage() {}

func (x *CreateKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKycRequest.ProtoReflect.Descriptor instead.
func (*CreateKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{54}
}

func (x *CreateKycRequest) GetInfo() *kyc.KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Kyc `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateKycResponse) Reset() {
	*x = CreateKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKycResponse) ProtoMessage() {}

func (x *CreateKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKycResponse.ProtoReflect.Descriptor instead.
func (*CreateKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{55}
}

func (x *CreateKycResponse) GetInfo() *Kyc {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *kyc.KycInfo `protobuf:"bytes,30,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateKycRequest) Reset() {
	*x = UpdateKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycRequest) ProtoMessage() {}

func (x *UpdateKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycRequest.ProtoReflect.Descriptor instead.
func (*UpdateKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateKycRequest) GetInfo() *kyc.KycInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Kyc `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateKycResponse) Reset() {
	*x = UpdateKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKycResponse) ProtoMessage() {}

func (x *UpdateKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKycResponse.ProtoReflect.Descriptor instead.
func (*UpdateKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateKycResponse) GetInfo() *Kyc {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreatePlatformCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinTypeID string `protobuf:"bytes,10,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
}

func (x *CreatePlatformCoinAccountRequest) Reset() {
	*x = CreatePlatformCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformCoinAccountRequest) ProtoMessage() {}

func (x *CreatePlatformCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*CreatePlatformCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{58}
}

func (x *CreatePlatformCoinAccountRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

type CreatePlatformCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *cloud_hashing_billing.CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreatePlatformCoinAccountResponse) Reset() {
	*x = CreatePlatformCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformCoinAccountResponse) ProtoMessage() {}

func (x *CreatePlatformCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*CreatePlatformCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{59}
}

func (x *CreatePlatformCoinAccountResponse) GetInfo() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserCoinAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *cloud_hashing_billing.CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserCoinAccountRequest) Reset() {
	*x = CreateUserCoinAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserCoinAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserCoinAccountRequest) ProtoMessage() {}

func (x *CreateUserCoinAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserCoinAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateUserCoinAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{60}
}

func (x *CreateUserCoinAccountRequest) GetInfo() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserCoinAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *cloud_hashing_billing.CoinAccountInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserCoinAccountResponse) Reset() {
	*x = CreateUserCoinAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserCoinAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserCoinAccountResponse) ProtoMessage() {}

func (x *CreateUserCoinAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserCoinAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateUserCoinAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{61}
}

func (x *CreateUserCoinAccountResponse) GetInfo() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SubmitUserWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *cloud_hashing_billing.UserWithdrawItem `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitUserWithdrawRequest) Reset() {
	*x = SubmitUserWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitUserWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUserWithdrawRequest) ProtoMessage() {}

func (x *SubmitUserWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUserWithdrawRequest.ProtoReflect.Descriptor instead.
func (*SubmitUserWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{62}
}

func (x *SubmitUserWithdrawRequest) GetInfo() *cloud_hashing_billing.UserWithdrawItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Withdraw *cloud_hashing_billing.UserWithdrawItem `protobuf:"bytes,10,opt,name=Withdraw,proto3" json:"Withdraw,omitempty"`
	State    string                                  `protobuf:"bytes,20,opt,name=State,proto3" json:"State,omitempty"`
	Message  string                                  `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UserWithdraw) Reset() {
	*x = UserWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdraw) ProtoMessage() {}

func (x *UserWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdraw.ProtoReflect.Descriptor instead.
func (*UserWithdraw) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{63}
}

func (x *UserWithdraw) GetWithdraw() *cloud_hashing_billing.UserWithdrawItem {
	if x != nil {
		return x.Withdraw
	}
	return nil
}

func (x *UserWithdraw) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UserWithdraw) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitUserWithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SubmitUserWithdrawResponse) Reset() {
	*x = SubmitUserWithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitUserWithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUserWithdrawResponse) ProtoMessage() {}

func (x *SubmitUserWithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUserWithdrawResponse.ProtoReflect.Descriptor instead.
func (*SubmitUserWithdrawResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{64}
}

func (x *SubmitUserWithdrawResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserWithdrawReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string                 `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string                 `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Review *review_service.Review `protobuf:"bytes,30,opt,name=Review,proto3" json:"Review,omitempty"`
}

func (x *UpdateUserWithdrawReviewRequest) Reset() {
	*x = UpdateUserWithdrawReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawReviewRequest) ProtoMessage() {}

func (x *UpdateUserWithdrawReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateUserWithdrawReviewRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateUserWithdrawReviewRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateUserWithdrawReviewRequest) GetReview() *review_service.Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type UpdateUserWithdrawReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserWithdraw `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserWithdrawReviewResponse) Reset() {
	*x = UpdateUserWithdrawReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserWithdrawReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWithdrawReviewResponse) ProtoMessage() {}

func (x *UpdateUserWithdrawReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWithdrawReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserWithdrawReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateUserWithdrawReviewResponse) GetInfo() *UserWithdraw {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserWithdrawsByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserWithdrawsByAppUserRequest) Reset() {
	*x = GetUserWithdrawsByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByAppUserRequest) ProtoMessage() {}

func (x *GetUserWithdrawsByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{67}
}

func (x *GetUserWithdrawsByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserWithdrawsByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserWithdrawsByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserWithdraw `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserWithdrawsByAppUserResponse) Reset() {
	*x = GetUserWithdrawsByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithdrawsByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithdrawsByAppUserResponse) ProtoMessage() {}

func (x *GetUserWithdrawsByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithdrawsByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserWithdrawsByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{68}
}

func (x *GetUserWithdrawsByAppUserResponse) GetInfos() []*UserWithdraw {
	if x != nil {
		return x.Infos
	}
	return nil
}

type WithdrawReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review   *review_service.Review                  `protobuf:"bytes,10,opt,name=Review,proto3" json:"Review,omitempty"`
	User     *appusermgr.AppUserInfo                 `protobuf:"bytes,20,opt,name=User,proto3" json:"User,omitempty"`
	Withdraw *cloud_hashing_billing.UserWithdrawItem `protobuf:"bytes,30,opt,name=Withdraw,proto3" json:"Withdraw,omitempty"`
}

func (x *WithdrawReview) Reset() {
	*x = WithdrawReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawReview) ProtoMessage() {}

func (x *WithdrawReview) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawReview.ProtoReflect.Descriptor instead.
func (*WithdrawReview) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{69}
}

func (x *WithdrawReview) GetReview() *review_service.Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *WithdrawReview) GetUser() *appusermgr.AppUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *WithdrawReview) GetWithdraw() *cloud_hashing_billing.UserWithdrawItem {
	if x != nil {
		return x.Withdraw
	}
	return nil
}

type GetWithdrawReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetWithdrawReviewsRequest) Reset() {
	*x = GetWithdrawReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsRequest) ProtoMessage() {}

func (x *GetWithdrawReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{70}
}

func (x *GetWithdrawReviewsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetWithdrawReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawReviewsResponse) Reset() {
	*x = GetWithdrawReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsResponse) ProtoMessage() {}

func (x *GetWithdrawReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{71}
}

func (x *GetWithdrawReviewsResponse) GetInfos() []*WithdrawReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetWithdrawReviewsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetWithdrawReviewsByAppRequest) Reset() {
	*x = GetWithdrawReviewsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsByAppRequest) ProtoMessage() {}

func (x *GetWithdrawReviewsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{72}
}

func (x *GetWithdrawReviewsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetWithdrawReviewsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawReviewsByAppResponse) Reset() {
	*x = GetWithdrawReviewsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsByAppResponse) ProtoMessage() {}

func (x *GetWithdrawReviewsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{73}
}

func (x *GetWithdrawReviewsByAppResponse) GetInfos() []*WithdrawReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetWithdrawReviewsByOtherAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *GetWithdrawReviewsByOtherAppRequest) Reset() {
	*x = GetWithdrawReviewsByOtherAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsByOtherAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsByOtherAppRequest) ProtoMessage() {}

func (x *GetWithdrawReviewsByOtherAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsByOtherAppRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsByOtherAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{74}
}

func (x *GetWithdrawReviewsByOtherAppRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type GetWithdrawReviewsByOtherAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawReviewsByOtherAppResponse) Reset() {
	*x = GetWithdrawReviewsByOtherAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawReviewsByOtherAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawReviewsByOtherAppResponse) ProtoMessage() {}

func (x *GetWithdrawReviewsByOtherAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawReviewsByOtherAppResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawReviewsByOtherAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{75}
}

func (x *GetWithdrawReviewsByOtherAppResponse) GetInfos() []*WithdrawReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type WithdrawAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *cloud_hashing_billing.UserWithdraw    `protobuf:"bytes,10,opt,name=Address,proto3" json:"Address,omitempty"`
	State   string                                 `protobuf:"bytes,20,opt,name=State,proto3" json:"State,omitempty"`
	Message string                                 `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`
	Account *cloud_hashing_billing.CoinAccountInfo `protobuf:"bytes,40,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *WithdrawAddress) Reset() {
	*x = WithdrawAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawAddress) ProtoMessage() {}

func (x *WithdrawAddress) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawAddress.ProtoReflect.Descriptor instead.
func (*WithdrawAddress) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{76}
}

func (x *WithdrawAddress) GetAddress() *cloud_hashing_billing.UserWithdraw {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WithdrawAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WithdrawAddress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WithdrawAddress) GetAccount() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

type SetWithdrawAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID     string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoinTypeID string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Address    string `protobuf:"bytes,40,opt,name=Address,proto3" json:"Address,omitempty"`
	Name       string `protobuf:"bytes,50,opt,name=Name,proto3" json:"Name,omitempty"`
	Message    string `protobuf:"bytes,60,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SetWithdrawAddressRequest) Reset() {
	*x = SetWithdrawAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWithdrawAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWithdrawAddressRequest) ProtoMessage() {}

func (x *SetWithdrawAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWithdrawAddressRequest.ProtoReflect.Descriptor instead.
func (*SetWithdrawAddressRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{77}
}

func (x *SetWithdrawAddressRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SetWithdrawAddressRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetWithdrawAddressRequest) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *SetWithdrawAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetWithdrawAddressRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetWithdrawAddressRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetWithdrawAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WithdrawAddress `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SetWithdrawAddressResponse) Reset() {
	*x = SetWithdrawAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWithdrawAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWithdrawAddressResponse) ProtoMessage() {}

func (x *SetWithdrawAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWithdrawAddressResponse.ProtoReflect.Descriptor instead.
func (*SetWithdrawAddressResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{78}
}

func (x *SetWithdrawAddressResponse) GetInfo() *WithdrawAddress {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetWithdrawAddressesByAppUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetWithdrawAddressesByAppUserRequest) Reset() {
	*x = GetWithdrawAddressesByAppUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressesByAppUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressesByAppUserRequest) ProtoMessage() {}

func (x *GetWithdrawAddressesByAppUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressesByAppUserRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressesByAppUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{79}
}

func (x *GetWithdrawAddressesByAppUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetWithdrawAddressesByAppUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetWithdrawAddressesByAppUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawAddress `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawAddressesByAppUserResponse) Reset() {
	*x = GetWithdrawAddressesByAppUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressesByAppUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressesByAppUserResponse) ProtoMessage() {}

func (x *GetWithdrawAddressesByAppUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressesByAppUserResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressesByAppUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{80}
}

func (x *GetWithdrawAddressesByAppUserResponse) GetInfos() []*WithdrawAddress {
	if x != nil {
		return x.Infos
	}
	return nil
}

type WithdrawAddressReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review  *review_service.Review                 `protobuf:"bytes,10,opt,name=Review,proto3" json:"Review,omitempty"`
	User    *appusermgr.AppUserInfo                `protobuf:"bytes,20,opt,name=User,proto3" json:"User,omitempty"`
	Address *cloud_hashing_billing.UserWithdraw    `protobuf:"bytes,30,opt,name=Address,proto3" json:"Address,omitempty"`
	Account *cloud_hashing_billing.CoinAccountInfo `protobuf:"bytes,40,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *WithdrawAddressReview) Reset() {
	*x = WithdrawAddressReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawAddressReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawAddressReview) ProtoMessage() {}

func (x *WithdrawAddressReview) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawAddressReview.ProtoReflect.Descriptor instead.
func (*WithdrawAddressReview) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{81}
}

func (x *WithdrawAddressReview) GetReview() *review_service.Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *WithdrawAddressReview) GetUser() *appusermgr.AppUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *WithdrawAddressReview) GetAddress() *cloud_hashing_billing.UserWithdraw {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WithdrawAddressReview) GetAccount() *cloud_hashing_billing.CoinAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetWithdrawAddressReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetWithdrawAddressReviewsRequest) Reset() {
	*x = GetWithdrawAddressReviewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsRequest) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{82}
}

func (x *GetWithdrawAddressReviewsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetWithdrawAddressReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawAddressReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawAddressReviewsResponse) Reset() {
	*x = GetWithdrawAddressReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsResponse) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{83}
}

func (x *GetWithdrawAddressReviewsResponse) GetInfos() []*WithdrawAddressReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetWithdrawAddressReviewsByAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetWithdrawAddressReviewsByAppRequest) Reset() {
	*x = GetWithdrawAddressReviewsByAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsByAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsByAppRequest) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsByAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsByAppRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsByAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{84}
}

func (x *GetWithdrawAddressReviewsByAppRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetWithdrawAddressReviewsByAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawAddressReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawAddressReviewsByAppResponse) Reset() {
	*x = GetWithdrawAddressReviewsByAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsByAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsByAppResponse) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsByAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsByAppResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsByAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{85}
}

func (x *GetWithdrawAddressReviewsByAppResponse) GetInfos() []*WithdrawAddressReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetWithdrawAddressReviewsByOtherAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *GetWithdrawAddressReviewsByOtherAppRequest) Reset() {
	*x = GetWithdrawAddressReviewsByOtherAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsByOtherAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsByOtherAppRequest) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsByOtherAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsByOtherAppRequest.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsByOtherAppRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{86}
}

func (x *GetWithdrawAddressReviewsByOtherAppRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type GetWithdrawAddressReviewsByOtherAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*WithdrawAddressReview `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetWithdrawAddressReviewsByOtherAppResponse) Reset() {
	*x = GetWithdrawAddressReviewsByOtherAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawAddressReviewsByOtherAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawAddressReviewsByOtherAppResponse) ProtoMessage() {}

func (x *GetWithdrawAddressReviewsByOtherAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawAddressReviewsByOtherAppResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawAddressReviewsByOtherAppResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP(), []int{87}
}

func (x *GetWithdrawAddressReviewsByOtherAppResponse) GetInfos() []*WithdrawAddressReview {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_cloud_hashing_apis_cloud_hashing_apis_proto protoreflect.FileDescriptor

var file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x37, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2d, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6b, 0x79, 0x63, 0x2f,
	0x6b, 0x79, 0x63, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x72, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e,
	0x66, 0x6f, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x47, 0x6f,
	0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x47, 0x6f,
	0x6f, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x4d, 0x61, 0x69, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x68,
	0x69, 0x6e, 0x78, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x07, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x2f, 0x0a,
	0x04, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x3f,
	0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22,
	0x49, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x79, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x5c,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc4, 0x04, 0x0a,
	0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x4d, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x50, 0x61, 0x79, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x47, 0x6f, 0x6f,
	0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x69, 0x6e,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x69,
	0x6e, 0x12, 0x59, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x46, 0x69, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3e, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x46, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x36, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x04, 0x46, 0x65, 0x65,
	0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x04, 0x46, 0x65, 0x65, 0x73, 0x22, 0x4e,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf5,
	0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x59, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa9, 0x02, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x6c, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x6c,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x6c, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x65, 0x77, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x4e, 0x65,
	0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x4e, 0x65,
	0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x02, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x6c, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e,
	0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4e, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x3a, 0x0a, 0x18, 0x4e,
	0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x4e,
	0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd6, 0x04, 0x0a, 0x12, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x6f, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x4b,
	0x6f, 0x6c, 0x12, 0x53, 0x0a, 0x08, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x18, 0x3c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x12, 0x59, 0x0a, 0x0a, 0x4d, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x4d, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x1a, 0x65, 0x0a, 0x0d, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x67, 0x0a, 0x0f, 0x4d, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x53, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x8c, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x4d, 0x79, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79, 0x53, 0x65, 0x6c, 0x66,
	0x12, 0x50, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x1a, 0x5b, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x98,
	0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x4d, 0x79, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4d, 0x79,
	0x53, 0x65, 0x6c, 0x66, 0x12, 0x56, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x5b, 0x0a, 0x0a,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x4b, 0x79,
	0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x03, 0x4b, 0x79, 0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x4b, 0x79, 0x63, 0x22, 0x2c,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x31, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x22, 0x54, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x42, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x3e, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x63, 0x0a, 0x03, 0x4b,
	0x79, 0x63, 0x12, 0x2c, 0x0a, 0x03, 0x4b, 0x79, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x4b, 0x79, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b,
	0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6b, 0x79, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x43, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x63, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x21, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x19,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x46, 0x0a, 0x08, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x06, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x5b,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5e, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc1, 0x01,
	0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x08, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x36, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x47, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x22, 0x63, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xb1, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x15,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x43, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22,
	0x67, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3d, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4e, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x71, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xae, 0x2f, 0x0a, 0x10, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x73, 0x12, 0x51, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a,
	0x12, 0x75, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x26, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xb0, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a,
	0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x01, 0x2a,
	0x12, 0x9e, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x75, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x62, 0x79, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x8f, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x2c,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x93, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x24, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x3a, 0x01,
	0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01,
	0x2a, 0x12, 0xb4, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x9d, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x12, 0x2b, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6e,
	0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d, 0x79, 0x2f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xaf, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x8a, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79,
	0x63, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79,
	0x41, 0x70, 0x70, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b,
	0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12,
	0xb5, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x35, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79,
	0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x8e, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xb4, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a,
	0x12, 0xc9, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x12, 0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0xbb, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x37, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xd1, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x3c, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0xe6,
	0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x41, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x79, 0x63, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22,
	0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6b, 0x79, 0x63, 0x3a,
	0x01, 0x2a, 0x12, 0x79, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x12,
	0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6b, 0x79, 0x63, 0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6b, 0x79, 0x63, 0x2f, 0x62, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x3a, 0x01, 0x2a, 0x12, 0xbb, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0xab, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x9e, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x3a, 0x01,
	0x2a, 0x12, 0xb7, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x36,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0xbd, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xca, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x62, 0x79,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescOnce sync.Once
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescData = file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDesc
)

func file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescGZIP() []byte {
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescOnce.Do(func() {
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescData)
	})
	return file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDescData
}

var file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_goTypes = []interface{}{
	(*Good)(nil),                                        // 0: cloud.hashing.apis.v1.Good
	(*RecommendGood)(nil),                               // 1: cloud.hashing.apis.v1.RecommendGood
	(*CreateGoodRequest)(nil),                           // 2: cloud.hashing.apis.v1.CreateGoodRequest
	(*CreateGoodResponse)(nil),                          // 3: cloud.hashing.apis.v1.CreateGoodResponse
	(*GetGoodRequest)(nil),                              // 4: cloud.hashing.apis.v1.GetGoodRequest
	(*GetGoodResponse)(nil),                             // 5: cloud.hashing.apis.v1.GetGoodResponse
	(*GetGoodsRequest)(nil),                             // 6: cloud.hashing.apis.v1.GetGoodsRequest
	(*GetGoodsResponse)(nil),                            // 7: cloud.hashing.apis.v1.GetGoodsResponse
	(*GetRecommendGoodsByAppRequest)(nil),               // 8: cloud.hashing.apis.v1.GetRecommendGoodsByAppRequest
	(*GetRecommendGoodsByAppResponse)(nil),              // 9: cloud.hashing.apis.v1.GetRecommendGoodsByAppResponse
	(*Order)(nil),                                       // 10: cloud.hashing.apis.v1.Order
	(*GetOrderRequest)(nil),                             // 11: cloud.hashing.apis.v1.GetOrderRequest
	(*GetOrderResponse)(nil),                            // 12: cloud.hashing.apis.v1.GetOrderResponse
	(*GetOrdersByAppUserRequest)(nil),                   // 13: cloud.hashing.apis.v1.GetOrdersByAppUserRequest
	(*GetOrdersByAppUserResponse)(nil),                  // 14: cloud.hashing.apis.v1.GetOrdersByAppUserResponse
	(*GetOrdersByAppRequest)(nil),                       // 15: cloud.hashing.apis.v1.GetOrdersByAppRequest
	(*GetOrdersByAppResponse)(nil),                      // 16: cloud.hashing.apis.v1.GetOrdersByAppResponse
	(*GetOrdersByGoodRequest)(nil),                      // 17: cloud.hashing.apis.v1.GetOrdersByGoodRequest
	(*GetOrdersByGoodResponse)(nil),                     // 18: cloud.hashing.apis.v1.GetOrdersByGoodResponse
	(*OrderFee)(nil),                                    // 19: cloud.hashing.apis.v1.OrderFee
	(*SubmitOrderRequest)(nil),                          // 20: cloud.hashing.apis.v1.SubmitOrderRequest
	(*SubmitOrderResponse)(nil),                         // 21: cloud.hashing.apis.v1.SubmitOrderResponse
	(*CreateOrderPaymentRequest)(nil),                   // 22: cloud.hashing.apis.v1.CreateOrderPaymentRequest
	(*CreateOrderPaymentResponse)(nil),                  // 23: cloud.hashing.apis.v1.CreateOrderPaymentResponse
	(*SignupRequest)(nil),                               // 24: cloud.hashing.apis.v1.SignupRequest
	(*SignupResponse)(nil),                              // 25: cloud.hashing.apis.v1.SignupResponse
	(*UpdatePasswordRequest)(nil),                       // 26: cloud.hashing.apis.v1.UpdatePasswordRequest
	(*UpdatePasswordResponse)(nil),                      // 27: cloud.hashing.apis.v1.UpdatePasswordResponse
	(*UpdatePasswordByAppUserRequest)(nil),              // 28: cloud.hashing.apis.v1.UpdatePasswordByAppUserRequest
	(*UpdatePasswordByAppUserResponse)(nil),             // 29: cloud.hashing.apis.v1.UpdatePasswordByAppUserResponse
	(*UpdateEmailAddressRequest)(nil),                   // 30: cloud.hashing.apis.v1.UpdateEmailAddressRequest
	(*UpdateEmailAddressResponse)(nil),                  // 31: cloud.hashing.apis.v1.UpdateEmailAddressResponse
	(*UpdatePhoneNORequest)(nil),                        // 32: cloud.hashing.apis.v1.UpdatePhoneNORequest
	(*UpdatePhoneNOResponse)(nil),                       // 33: cloud.hashing.apis.v1.UpdatePhoneNOResponse
	(*InvitationSummary)(nil),                           // 34: cloud.hashing.apis.v1.InvitationSummary
	(*InvitationUserInfo)(nil),                          // 35: cloud.hashing.apis.v1.InvitationUserInfo
	(*Invitation)(nil),                                  // 36: cloud.hashing.apis.v1.Invitation
	(*GetMyInvitationsRequest)(nil),                     // 37: cloud.hashing.apis.v1.GetMyInvitationsRequest
	(*GetMyInvitationsResponse)(nil),                    // 38: cloud.hashing.apis.v1.GetMyInvitationsResponse
	(*GetMyDirectInvitationsRequest)(nil),               // 39: cloud.hashing.apis.v1.GetMyDirectInvitationsRequest
	(*GetMyDirectInvitationsResponse)(nil),              // 40: cloud.hashing.apis.v1.GetMyDirectInvitationsResponse
	(*KycReview)(nil),                                   // 41: cloud.hashing.apis.v1.KycReview
	(*GetKycReviewsRequest)(nil),                        // 42: cloud.hashing.apis.v1.GetKycReviewsRequest
	(*GetKycReviewsResponse)(nil),                       // 43: cloud.hashing.apis.v1.GetKycReviewsResponse
	(*GetKycReviewsByAppRequest)(nil),                   // 44: cloud.hashing.apis.v1.GetKycReviewsByAppRequest
	(*GetKycReviewsByAppResponse)(nil),                  // 45: cloud.hashing.apis.v1.GetKycReviewsByAppResponse
	(*GetKycReviewsByOtherAppRequest)(nil),              // 46: cloud.hashing.apis.v1.GetKycReviewsByOtherAppRequest
	(*GetKycReviewsByOtherAppResponse)(nil),             // 47: cloud.hashing.apis.v1.GetKycReviewsByOtherAppResponse
	(*GoodReview)(nil),                                  // 48: cloud.hashing.apis.v1.GoodReview
	(*GetGoodReviewsRequest)(nil),                       // 49: cloud.hashing.apis.v1.GetGoodReviewsRequest
	(*GetGoodReviewsResponse)(nil),                      // 50: cloud.hashing.apis.v1.GetGoodReviewsResponse
	(*Kyc)(nil),                                         // 51: cloud.hashing.apis.v1.Kyc
	(*GetKycByAppUserRequest)(nil),                      // 52: cloud.hashing.apis.v1.GetKycByAppUserRequest
	(*GetKycByAppUserResponse)(nil),                     // 53: cloud.hashing.apis.v1.GetKycByAppUserResponse
	(*CreateKycRequest)(nil),                            // 54: cloud.hashing.apis.v1.CreateKycRequest
	(*CreateKycResponse)(nil),                           // 55: cloud.hashing.apis.v1.CreateKycResponse
	(*UpdateKycRequest)(nil),                            // 56: cloud.hashing.apis.v1.UpdateKycRequest
	(*UpdateKycResponse)(nil),                           // 57: cloud.hashing.apis.v1.UpdateKycResponse
	(*CreatePlatformCoinAccountRequest)(nil),            // 58: cloud.hashing.apis.v1.CreatePlatformCoinAccountRequest
	(*CreatePlatformCoinAccountResponse)(nil),           // 59: cloud.hashing.apis.v1.CreatePlatformCoinAccountResponse
	(*CreateUserCoinAccountRequest)(nil),                // 60: cloud.hashing.apis.v1.CreateUserCoinAccountRequest
	(*CreateUserCoinAccountResponse)(nil),               // 61: cloud.hashing.apis.v1.CreateUserCoinAccountResponse
	(*SubmitUserWithdrawRequest)(nil),                   // 62: cloud.hashing.apis.v1.SubmitUserWithdrawRequest
	(*UserWithdraw)(nil),                                // 63: cloud.hashing.apis.v1.UserWithdraw
	(*SubmitUserWithdrawResponse)(nil),                  // 64: cloud.hashing.apis.v1.SubmitUserWithdrawResponse
	(*UpdateUserWithdrawReviewRequest)(nil),             // 65: cloud.hashing.apis.v1.UpdateUserWithdrawReviewRequest
	(*UpdateUserWithdrawReviewResponse)(nil),            // 66: cloud.hashing.apis.v1.UpdateUserWithdrawReviewResponse
	(*GetUserWithdrawsByAppUserRequest)(nil),            // 67: cloud.hashing.apis.v1.GetUserWithdrawsByAppUserRequest
	(*GetUserWithdrawsByAppUserResponse)(nil),           // 68: cloud.hashing.apis.v1.GetUserWithdrawsByAppUserResponse
	(*WithdrawReview)(nil),                              // 69: cloud.hashing.apis.v1.WithdrawReview
	(*GetWithdrawReviewsRequest)(nil),                   // 70: cloud.hashing.apis.v1.GetWithdrawReviewsRequest
	(*GetWithdrawReviewsResponse)(nil),                  // 71: cloud.hashing.apis.v1.GetWithdrawReviewsResponse
	(*GetWithdrawReviewsByAppRequest)(nil),              // 72: cloud.hashing.apis.v1.GetWithdrawReviewsByAppRequest
	(*GetWithdrawReviewsByAppResponse)(nil),             // 73: cloud.hashing.apis.v1.GetWithdrawReviewsByAppResponse
	(*GetWithdrawReviewsByOtherAppRequest)(nil),         // 74: cloud.hashing.apis.v1.GetWithdrawReviewsByOtherAppRequest
	(*GetWithdrawReviewsByOtherAppResponse)(nil),        // 75: cloud.hashing.apis.v1.GetWithdrawReviewsByOtherAppResponse
	(*WithdrawAddress)(nil),                             // 76: cloud.hashing.apis.v1.WithdrawAddress
	(*SetWithdrawAddressRequest)(nil),                   // 77: cloud.hashing.apis.v1.SetWithdrawAddressRequest
	(*SetWithdrawAddressResponse)(nil),                  // 78: cloud.hashing.apis.v1.SetWithdrawAddressResponse
	(*GetWithdrawAddressesByAppUserRequest)(nil),        // 79: cloud.hashing.apis.v1.GetWithdrawAddressesByAppUserRequest
	(*GetWithdrawAddressesByAppUserResponse)(nil),       // 80: cloud.hashing.apis.v1.GetWithdrawAddressesByAppUserResponse
	(*WithdrawAddressReview)(nil),                       // 81: cloud.hashing.apis.v1.WithdrawAddressReview
	(*GetWithdrawAddressReviewsRequest)(nil),            // 82: cloud.hashing.apis.v1.GetWithdrawAddressReviewsRequest
	(*GetWithdrawAddressReviewsResponse)(nil),           // 83: cloud.hashing.apis.v1.GetWithdrawAddressReviewsResponse
	(*GetWithdrawAddressReviewsByAppRequest)(nil),       // 84: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByAppRequest
	(*GetWithdrawAddressReviewsByAppResponse)(nil),      // 85: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByAppResponse
	(*GetWithdrawAddressReviewsByOtherAppRequest)(nil),  // 86: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByOtherAppRequest
	(*GetWithdrawAddressReviewsByOtherAppResponse)(nil), // 87: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByOtherAppResponse
	nil,                                     // 88: cloud.hashing.apis.v1.InvitationUserInfo.SummarysEntry
	nil,                                     // 89: cloud.hashing.apis.v1.InvitationUserInfo.MySummarysEntry
	nil,                                     // 90: cloud.hashing.apis.v1.GetMyInvitationsResponse.InfosEntry
	nil,                                     // 91: cloud.hashing.apis.v1.GetMyDirectInvitationsResponse.InfosEntry
	(*cloud_hashing_goods.GoodDetail)(nil),  // 92: cloud.hashing.goods.v1.GoodDetail
	(*coininfo.CoinInfo)(nil),               // 93: sphinx.coininfo.v1.CoinInfo
	(*review_service.Review)(nil),           // 94: review.service.v1.Review
	(*cloud_hashing_goods.Recommend)(nil),   // 95: cloud.hashing.goods.v1.Recommend
	(*cloud_hashing_goods.GoodInfo)(nil),    // 96: cloud.hashing.goods.v1.GoodInfo
	(*npool.PageInfo)(nil),                  // 97: npool.v1.PageInfo
	(*cloud_hashing_order.OrderDetail)(nil), // 98: cloud.hashing.order.v1.OrderDetail
	(*cloud_hashing_billing.CoinAccountInfo)(nil),       // 99: cloud.hashing.billing.v1.CoinAccountInfo
	(*cloud_hashing_inspire.CouponAllocatedDetail)(nil), // 100: cloud.hashing.inspire.v1.CouponAllocatedDetail
	(*cloud_hashing_inspire.UserSpecialReduction)(nil),  // 101: cloud.hashing.inspire.v1.UserSpecialReduction
	(*appusermgr.AppUser)(nil),                          // 102: app.user.manager.v1.AppUser
	(*appusermgr.AppUserSecret)(nil),                    // 103: app.user.manager.v1.AppUserSecret
	(*appusermgr.AppUserInfo)(nil),                      // 104: app.user.manager.v1.AppUserInfo
	(*kyc.KycInfo)(nil),                                 // 105: kyc.management.v1.KycInfo
	(*cloud_hashing_billing.UserWithdrawItem)(nil),      // 106: cloud.hashing.billing.v1.UserWithdrawItem
	(*cloud_hashing_billing.UserWithdraw)(nil),          // 107: cloud.hashing.billing.v1.UserWithdraw
	(*emptypb.Empty)(nil),                               // 108: google.protobuf.Empty
	(*npool.VersionResponse)(nil),                       // 109: npool.v1.VersionResponse
}
var file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_depIdxs = []int32{
	92,  // 0: cloud.hashing.apis.v1.Good.Good:type_name -> cloud.hashing.goods.v1.GoodDetail
	93,  // 1: cloud.hashing.apis.v1.Good.Main:type_name -> sphinx.coininfo.v1.CoinInfo
	93,  // 2: cloud.hashing.apis.v1.Good.SupportCoins:type_name -> sphinx.coininfo.v1.CoinInfo
	94,  // 3: cloud.hashing.apis.v1.Good.Reviews:type_name -> review.service.v1.Review
	0,   // 4: cloud.hashing.apis.v1.RecommendGood.Good:type_name -> cloud.hashing.apis.v1.Good
	95,  // 5: cloud.hashing.apis.v1.RecommendGood.Recommend:type_name -> cloud.hashing.goods.v1.Recommend
	96,  // 6: cloud.hashing.apis.v1.CreateGoodRequest.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	0,   // 7: cloud.hashing.apis.v1.CreateGoodResponse.Info:type_name -> cloud.hashing.apis.v1.Good
	0,   // 8: cloud.hashing.apis.v1.GetGoodResponse.Info:type_name -> cloud.hashing.apis.v1.Good
	97,  // 9: cloud.hashing.apis.v1.GetGoodsRequest.PageInfo:type_name -> npool.v1.PageInfo
	0,   // 10: cloud.hashing.apis.v1.GetGoodsResponse.Infos:type_name -> cloud.hashing.apis.v1.Good
	1,   // 11: cloud.hashing.apis.v1.GetRecommendGoodsByAppResponse.Infos:type_name -> cloud.hashing.apis.v1.RecommendGood
	98,  // 12: cloud.hashing.apis.v1.Order.Order:type_name -> cloud.hashing.order.v1.OrderDetail
	99,  // 13: cloud.hashing.apis.v1.Order.PayToAccount:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	0,   // 14: cloud.hashing.apis.v1.Order.Good:type_name -> cloud.hashing.apis.v1.Good
	93,  // 15: cloud.hashing.apis.v1.Order.PayWithCoin:type_name -> sphinx.coininfo.v1.CoinInfo
	100, // 16: cloud.hashing.apis.v1.Order.FixAmountCoupon:type_name -> cloud.hashing.inspire.v1.CouponAllocatedDetail
	100, // 17: cloud.hashing.apis.v1.Order.DiscountCoupon:type_name -> cloud.hashing.inspire.v1.CouponAllocatedDetail
	101, // 18: cloud.hashing.apis.v1.Order.UserSpecialReduction:type_name -> cloud.hashing.inspire.v1.UserSpecialReduction
	10,  // 19: cloud.hashing.apis.v1.GetOrderResponse.Info:type_name -> cloud.hashing.apis.v1.Order
	10,  // 20: cloud.hashing.apis.v1.GetOrdersByAppUserResponse.Infos:type_name -> cloud.hashing.apis.v1.Order
	10,  // 21: cloud.hashing.apis.v1.GetOrdersByAppResponse.Infos:type_name -> cloud.hashing.apis.v1.Order
	10,  // 22: cloud.hashing.apis.v1.GetOrdersByGoodResponse.Infos:type_name -> cloud.hashing.apis.v1.Order
	10,  // 23: cloud.hashing.apis.v1.SubmitOrderResponse.Info:type_name -> cloud.hashing.apis.v1.Order
	19,  // 24: cloud.hashing.apis.v1.CreateOrderPaymentRequest.Fees:type_name -> cloud.hashing.apis.v1.OrderFee
	10,  // 25: cloud.hashing.apis.v1.CreateOrderPaymentResponse.Info:type_name -> cloud.hashing.apis.v1.Order
	102, // 26: cloud.hashing.apis.v1.SignupResponse.Info:type_name -> app.user.manager.v1.AppUser
	103, // 27: cloud.hashing.apis.v1.UpdatePasswordResponse.Info:type_name -> app.user.manager.v1.AppUserSecret
	103, // 28: cloud.hashing.apis.v1.UpdatePasswordByAppUserResponse.Info:type_name -> app.user.manager.v1.AppUserSecret
	104, // 29: cloud.hashing.apis.v1.UpdateEmailAddressResponse.Info:type_name -> app.user.manager.v1.AppUserInfo
	104, // 30: cloud.hashing.apis.v1.UpdatePhoneNOResponse.Info:type_name -> app.user.manager.v1.AppUserInfo
	88,  // 31: cloud.hashing.apis.v1.InvitationUserInfo.Summarys:type_name -> cloud.hashing.apis.v1.InvitationUserInfo.SummarysEntry
	89,  // 32: cloud.hashing.apis.v1.InvitationUserInfo.MySummarys:type_name -> cloud.hashing.apis.v1.InvitationUserInfo.MySummarysEntry
	35,  // 33: cloud.hashing.apis.v1.Invitation.Invitees:type_name -> cloud.hashing.apis.v1.InvitationUserInfo
	35,  // 34: cloud.hashing.apis.v1.GetMyInvitationsResponse.MySelf:type_name -> cloud.hashing.apis.v1.InvitationUserInfo
	90,  // 35: cloud.hashing.apis.v1.GetMyInvitationsResponse.Infos:type_name -> cloud.hashing.apis.v1.GetMyInvitationsResponse.InfosEntry
	35,  // 36: cloud.hashing.apis.v1.GetMyDirectInvitationsResponse.MySelf:type_name -> cloud.hashing.apis.v1.InvitationUserInfo
	91,  // 37: cloud.hashing.apis.v1.GetMyDirectInvitationsResponse.Infos:type_name -> cloud.hashing.apis.v1.GetMyDirectInvitationsResponse.InfosEntry
	94,  // 38: cloud.hashing.apis.v1.KycReview.Review:type_name -> review.service.v1.Review
	104, // 39: cloud.hashing.apis.v1.KycReview.User:type_name -> app.user.manager.v1.AppUserInfo
	105, // 40: cloud.hashing.apis.v1.KycReview.Kyc:type_name -> kyc.management.v1.KycInfo
	41,  // 41: cloud.hashing.apis.v1.GetKycReviewsResponse.Infos:type_name -> cloud.hashing.apis.v1.KycReview
	41,  // 42: cloud.hashing.apis.v1.GetKycReviewsByAppResponse.Infos:type_name -> cloud.hashing.apis.v1.KycReview
	41,  // 43: cloud.hashing.apis.v1.GetKycReviewsByOtherAppResponse.Infos:type_name -> cloud.hashing.apis.v1.KycReview
	94,  // 44: cloud.hashing.apis.v1.GoodReview.Review:type_name -> review.service.v1.Review
	104, // 45: cloud.hashing.apis.v1.GoodReview.CreatedBy:type_name -> app.user.manager.v1.AppUserInfo
	92,  // 46: cloud.hashing.apis.v1.GoodReview.Good:type_name -> cloud.hashing.goods.v1.GoodDetail
	48,  // 47: cloud.hashing.apis.v1.GetGoodReviewsResponse.Infos:type_name -> cloud.hashing.apis.v1.GoodReview
	105, // 48: cloud.hashing.apis.v1.Kyc.Kyc:type_name -> kyc.management.v1.KycInfo
	51,  // 49: cloud.hashing.apis.v1.GetKycByAppUserResponse.Info:type_name -> cloud.hashing.apis.v1.Kyc
	105, // 50: cloud.hashing.apis.v1.CreateKycRequest.Info:type_name -> kyc.management.v1.KycInfo
	51,  // 51: cloud.hashing.apis.v1.CreateKycResponse.Info:type_name -> cloud.hashing.apis.v1.Kyc
	105, // 52: cloud.hashing.apis.v1.UpdateKycRequest.Info:type_name -> kyc.management.v1.KycInfo
	51,  // 53: cloud.hashing.apis.v1.UpdateKycResponse.Info:type_name -> cloud.hashing.apis.v1.Kyc
	99,  // 54: cloud.hashing.apis.v1.CreatePlatformCoinAccountResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	99,  // 55: cloud.hashing.apis.v1.CreateUserCoinAccountRequest.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	99,  // 56: cloud.hashing.apis.v1.CreateUserCoinAccountResponse.Info:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	106, // 57: cloud.hashing.apis.v1.SubmitUserWithdrawRequest.Info:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	106, // 58: cloud.hashing.apis.v1.UserWithdraw.Withdraw:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	63,  // 59: cloud.hashing.apis.v1.SubmitUserWithdrawResponse.Info:type_name -> cloud.hashing.apis.v1.UserWithdraw
	94,  // 60: cloud.hashing.apis.v1.UpdateUserWithdrawReviewRequest.Review:type_name -> review.service.v1.Review
	63,  // 61: cloud.hashing.apis.v1.UpdateUserWithdrawReviewResponse.Info:type_name -> cloud.hashing.apis.v1.UserWithdraw
	63,  // 62: cloud.hashing.apis.v1.GetUserWithdrawsByAppUserResponse.Infos:type_name -> cloud.hashing.apis.v1.UserWithdraw
	94,  // 63: cloud.hashing.apis.v1.WithdrawReview.Review:type_name -> review.service.v1.Review
	104, // 64: cloud.hashing.apis.v1.WithdrawReview.User:type_name -> app.user.manager.v1.AppUserInfo
	106, // 65: cloud.hashing.apis.v1.WithdrawReview.Withdraw:type_name -> cloud.hashing.billing.v1.UserWithdrawItem
	69,  // 66: cloud.hashing.apis.v1.GetWithdrawReviewsResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawReview
	69,  // 67: cloud.hashing.apis.v1.GetWithdrawReviewsByAppResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawReview
	69,  // 68: cloud.hashing.apis.v1.GetWithdrawReviewsByOtherAppResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawReview
	107, // 69: cloud.hashing.apis.v1.WithdrawAddress.Address:type_name -> cloud.hashing.billing.v1.UserWithdraw
	99,  // 70: cloud.hashing.apis.v1.WithdrawAddress.Account:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	76,  // 71: cloud.hashing.apis.v1.SetWithdrawAddressResponse.Info:type_name -> cloud.hashing.apis.v1.WithdrawAddress
	76,  // 72: cloud.hashing.apis.v1.GetWithdrawAddressesByAppUserResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawAddress
	94,  // 73: cloud.hashing.apis.v1.WithdrawAddressReview.Review:type_name -> review.service.v1.Review
	104, // 74: cloud.hashing.apis.v1.WithdrawAddressReview.User:type_name -> app.user.manager.v1.AppUserInfo
	107, // 75: cloud.hashing.apis.v1.WithdrawAddressReview.Address:type_name -> cloud.hashing.billing.v1.UserWithdraw
	99,  // 76: cloud.hashing.apis.v1.WithdrawAddressReview.Account:type_name -> cloud.hashing.billing.v1.CoinAccountInfo
	81,  // 77: cloud.hashing.apis.v1.GetWithdrawAddressReviewsResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawAddressReview
	81,  // 78: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByAppResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawAddressReview
	81,  // 79: cloud.hashing.apis.v1.GetWithdrawAddressReviewsByOtherAppResponse.Infos:type_name -> cloud.hashing.apis.v1.WithdrawAddressReview
	34,  // 80: cloud.hashing.apis.v1.InvitationUserInfo.SummarysEntry.value:type_name -> cloud.hashing.apis.v1.InvitationSummary
	34,  // 81: cloud.hashing.apis.v1.InvitationUserInfo.MySummarysEntry.value:type_name -> cloud.hashing.apis.v1.InvitationSummary
	36,  // 82: cloud.hashing.apis.v1.GetMyInvitationsResponse.InfosEntry.value:type_name -> cloud.hashing.apis.v1.Invitation
	36,  // 83: cloud.hashing.apis.v1.GetMyDirectInvitationsResponse.InfosEntry.value:type_name -> cloud.hashing.apis.v1.Invitation
	108, // 84: cloud.hashing.apis.v1.CloudHashingApis.Version:input_type -> google.protobuf.Empty
	6,   // 85: cloud.hashing.apis.v1.CloudHashingApis.GetGoods:input_type -> cloud.hashing.apis.v1.GetGoodsRequest
	2,   // 86: cloud.hashing.apis.v1.CloudHashingApis.CreateGood:input_type -> cloud.hashing.apis.v1.CreateGoodRequest
	4,   // 87: cloud.hashing.apis.v1.CloudHashingApis.GetGood:input_type -> cloud.hashing.apis.v1.GetGoodRequest
	8,   // 88: cloud.hashing.apis.v1.CloudHashingApis.GetRecommendGoodsByApp:input_type -> cloud.hashing.apis.v1.GetRecommendGoodsByAppRequest
	20,  // 89: cloud.hashing.apis.v1.CloudHashingApis.SubmitOrder:input_type -> cloud.hashing.apis.v1.SubmitOrderRequest
	22,  // 90: cloud.hashing.apis.v1.CloudHashingApis.CreateOrderPayment:input_type -> cloud.hashing.apis.v1.CreateOrderPaymentRequest
	11,  // 91: cloud.hashing.apis.v1.CloudHashingApis.GetOrder:input_type -> cloud.hashing.apis.v1.GetOrderRequest
	13,  // 92: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByAppUser:input_type -> cloud.hashing.apis.v1.GetOrdersByAppUserRequest
	15,  // 93: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByApp:input_type -> cloud.hashing.apis.v1.GetOrdersByAppRequest
	17,  // 94: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByGood:input_type -> cloud.hashing.apis.v1.GetOrdersByGoodRequest
	24,  // 95: cloud.hashing.apis.v1.CloudHashingApis.Signup:input_type -> cloud.hashing.apis.v1.SignupRequest
	26,  // 96: cloud.hashing.apis.v1.CloudHashingApis.UpdatePassword:input_type -> cloud.hashing.apis.v1.UpdatePasswordRequest
	28,  // 97: cloud.hashing.apis.v1.CloudHashingApis.UpdatePasswordByAppUser:input_type -> cloud.hashing.apis.v1.UpdatePasswordByAppUserRequest
	30,  // 98: cloud.hashing.apis.v1.CloudHashingApis.UpdateEmailAddress:input_type -> cloud.hashing.apis.v1.UpdateEmailAddressRequest
	32,  // 99: cloud.hashing.apis.v1.CloudHashingApis.UpdatePhoneNO:input_type -> cloud.hashing.apis.v1.UpdatePhoneNORequest
	37,  // 100: cloud.hashing.apis.v1.CloudHashingApis.GetMyInvitations:input_type -> cloud.hashing.apis.v1.GetMyInvitationsRequest
	39,  // 101: cloud.hashing.apis.v1.CloudHashingApis.GetMyDirectInvitations:input_type -> cloud.hashing.apis.v1.GetMyDirectInvitationsRequest
	42,  // 102: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviews:input_type -> cloud.hashing.apis.v1.GetKycReviewsRequest
	44,  // 103: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviewsByApp:input_type -> cloud.hashing.apis.v1.GetKycReviewsByAppRequest
	46,  // 104: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviewsByOtherApp:input_type -> cloud.hashing.apis.v1.GetKycReviewsByOtherAppRequest
	49,  // 105: cloud.hashing.apis.v1.CloudHashingApis.GetGoodReviews:input_type -> cloud.hashing.apis.v1.GetGoodReviewsRequest
	70,  // 106: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviews:input_type -> cloud.hashing.apis.v1.GetWithdrawReviewsRequest
	72,  // 107: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviewsByApp:input_type -> cloud.hashing.apis.v1.GetWithdrawReviewsByAppRequest
	74,  // 108: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviewsByOtherApp:input_type -> cloud.hashing.apis.v1.GetWithdrawReviewsByOtherAppRequest
	82,  // 109: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviews:input_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsRequest
	84,  // 110: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviewsByApp:input_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsByAppRequest
	86,  // 111: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviewsByOtherApp:input_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsByOtherAppRequest
	54,  // 112: cloud.hashing.apis.v1.CloudHashingApis.CreateKyc:input_type -> cloud.hashing.apis.v1.CreateKycRequest
	56,  // 113: cloud.hashing.apis.v1.CloudHashingApis.UpdateKyc:input_type -> cloud.hashing.apis.v1.UpdateKycRequest
	52,  // 114: cloud.hashing.apis.v1.CloudHashingApis.GetKycByAppUser:input_type -> cloud.hashing.apis.v1.GetKycByAppUserRequest
	58,  // 115: cloud.hashing.apis.v1.CloudHashingApis.CreatePlatformCoinAccount:input_type -> cloud.hashing.apis.v1.CreatePlatformCoinAccountRequest
	60,  // 116: cloud.hashing.apis.v1.CloudHashingApis.CreateUserCoinAccount:input_type -> cloud.hashing.apis.v1.CreateUserCoinAccountRequest
	62,  // 117: cloud.hashing.apis.v1.CloudHashingApis.SubmitUserWithdraw:input_type -> cloud.hashing.apis.v1.SubmitUserWithdrawRequest
	65,  // 118: cloud.hashing.apis.v1.CloudHashingApis.UpdateUserWithdrawReview:input_type -> cloud.hashing.apis.v1.UpdateUserWithdrawReviewRequest
	67,  // 119: cloud.hashing.apis.v1.CloudHashingApis.GetUserWithdrawsByAppUser:input_type -> cloud.hashing.apis.v1.GetUserWithdrawsByAppUserRequest
	77,  // 120: cloud.hashing.apis.v1.CloudHashingApis.SetWithdrawAddress:input_type -> cloud.hashing.apis.v1.SetWithdrawAddressRequest
	79,  // 121: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressesByAppUser:input_type -> cloud.hashing.apis.v1.GetWithdrawAddressesByAppUserRequest
	109, // 122: cloud.hashing.apis.v1.CloudHashingApis.Version:output_type -> npool.v1.VersionResponse
	7,   // 123: cloud.hashing.apis.v1.CloudHashingApis.GetGoods:output_type -> cloud.hashing.apis.v1.GetGoodsResponse
	3,   // 124: cloud.hashing.apis.v1.CloudHashingApis.CreateGood:output_type -> cloud.hashing.apis.v1.CreateGoodResponse
	5,   // 125: cloud.hashing.apis.v1.CloudHashingApis.GetGood:output_type -> cloud.hashing.apis.v1.GetGoodResponse
	9,   // 126: cloud.hashing.apis.v1.CloudHashingApis.GetRecommendGoodsByApp:output_type -> cloud.hashing.apis.v1.GetRecommendGoodsByAppResponse
	21,  // 127: cloud.hashing.apis.v1.CloudHashingApis.SubmitOrder:output_type -> cloud.hashing.apis.v1.SubmitOrderResponse
	23,  // 128: cloud.hashing.apis.v1.CloudHashingApis.CreateOrderPayment:output_type -> cloud.hashing.apis.v1.CreateOrderPaymentResponse
	12,  // 129: cloud.hashing.apis.v1.CloudHashingApis.GetOrder:output_type -> cloud.hashing.apis.v1.GetOrderResponse
	14,  // 130: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByAppUser:output_type -> cloud.hashing.apis.v1.GetOrdersByAppUserResponse
	16,  // 131: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByApp:output_type -> cloud.hashing.apis.v1.GetOrdersByAppResponse
	18,  // 132: cloud.hashing.apis.v1.CloudHashingApis.GetOrdersByGood:output_type -> cloud.hashing.apis.v1.GetOrdersByGoodResponse
	25,  // 133: cloud.hashing.apis.v1.CloudHashingApis.Signup:output_type -> cloud.hashing.apis.v1.SignupResponse
	27,  // 134: cloud.hashing.apis.v1.CloudHashingApis.UpdatePassword:output_type -> cloud.hashing.apis.v1.UpdatePasswordResponse
	29,  // 135: cloud.hashing.apis.v1.CloudHashingApis.UpdatePasswordByAppUser:output_type -> cloud.hashing.apis.v1.UpdatePasswordByAppUserResponse
	31,  // 136: cloud.hashing.apis.v1.CloudHashingApis.UpdateEmailAddress:output_type -> cloud.hashing.apis.v1.UpdateEmailAddressResponse
	33,  // 137: cloud.hashing.apis.v1.CloudHashingApis.UpdatePhoneNO:output_type -> cloud.hashing.apis.v1.UpdatePhoneNOResponse
	38,  // 138: cloud.hashing.apis.v1.CloudHashingApis.GetMyInvitations:output_type -> cloud.hashing.apis.v1.GetMyInvitationsResponse
	40,  // 139: cloud.hashing.apis.v1.CloudHashingApis.GetMyDirectInvitations:output_type -> cloud.hashing.apis.v1.GetMyDirectInvitationsResponse
	43,  // 140: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviews:output_type -> cloud.hashing.apis.v1.GetKycReviewsResponse
	45,  // 141: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviewsByApp:output_type -> cloud.hashing.apis.v1.GetKycReviewsByAppResponse
	47,  // 142: cloud.hashing.apis.v1.CloudHashingApis.GetKycReviewsByOtherApp:output_type -> cloud.hashing.apis.v1.GetKycReviewsByOtherAppResponse
	50,  // 143: cloud.hashing.apis.v1.CloudHashingApis.GetGoodReviews:output_type -> cloud.hashing.apis.v1.GetGoodReviewsResponse
	71,  // 144: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviews:output_type -> cloud.hashing.apis.v1.GetWithdrawReviewsResponse
	73,  // 145: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviewsByApp:output_type -> cloud.hashing.apis.v1.GetWithdrawReviewsByAppResponse
	75,  // 146: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawReviewsByOtherApp:output_type -> cloud.hashing.apis.v1.GetWithdrawReviewsByOtherAppResponse
	83,  // 147: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviews:output_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsResponse
	85,  // 148: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviewsByApp:output_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsByAppResponse
	87,  // 149: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressReviewsByOtherApp:output_type -> cloud.hashing.apis.v1.GetWithdrawAddressReviewsByOtherAppResponse
	55,  // 150: cloud.hashing.apis.v1.CloudHashingApis.CreateKyc:output_type -> cloud.hashing.apis.v1.CreateKycResponse
	57,  // 151: cloud.hashing.apis.v1.CloudHashingApis.UpdateKyc:output_type -> cloud.hashing.apis.v1.UpdateKycResponse
	53,  // 152: cloud.hashing.apis.v1.CloudHashingApis.GetKycByAppUser:output_type -> cloud.hashing.apis.v1.GetKycByAppUserResponse
	59,  // 153: cloud.hashing.apis.v1.CloudHashingApis.CreatePlatformCoinAccount:output_type -> cloud.hashing.apis.v1.CreatePlatformCoinAccountResponse
	61,  // 154: cloud.hashing.apis.v1.CloudHashingApis.CreateUserCoinAccount:output_type -> cloud.hashing.apis.v1.CreateUserCoinAccountResponse
	64,  // 155: cloud.hashing.apis.v1.CloudHashingApis.SubmitUserWithdraw:output_type -> cloud.hashing.apis.v1.SubmitUserWithdrawResponse
	66,  // 156: cloud.hashing.apis.v1.CloudHashingApis.UpdateUserWithdrawReview:output_type -> cloud.hashing.apis.v1.UpdateUserWithdrawReviewResponse
	68,  // 157: cloud.hashing.apis.v1.CloudHashingApis.GetUserWithdrawsByAppUser:output_type -> cloud.hashing.apis.v1.GetUserWithdrawsByAppUserResponse
	78,  // 158: cloud.hashing.apis.v1.CloudHashingApis.SetWithdrawAddress:output_type -> cloud.hashing.apis.v1.SetWithdrawAddressResponse
	80,  // 159: cloud.hashing.apis.v1.CloudHashingApis.GetWithdrawAddressesByAppUser:output_type -> cloud.hashing.apis.v1.GetWithdrawAddressesByAppUserResponse
	122, // [122:160] is the sub-list for method output_type
	84,  // [84:122] is the sub-list for method input_type
	84,  // [84:84] is the sub-list for extension type_name
	84,  // [84:84] is the sub-list for extension extendee
	0,   // [0:84] is the sub-list for field type_name
}

func init() { file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_init() }
func file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_init() {
	if File_npool_cloud_hashing_apis_cloud_hashing_apis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Good); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendGoodsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendGoodsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersByGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneNORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneNOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyInvitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyInvitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyDirectInvitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyDirectInvitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KycReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsByOtherAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycReviewsByOtherAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kyc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlatformCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserCoinAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserCoinAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitUserWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitUserWithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserWithdrawReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithdrawsByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsByOtherAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawReviewsByOtherAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWithdrawAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWithdrawAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressesByAppUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressesByAppUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawAddressReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsByAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsByAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsByOtherAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawAddressReviewsByOtherAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_goTypes,
		DependencyIndexes: file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_depIdxs,
		MessageInfos:      file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_msgTypes,
	}.Build()
	File_npool_cloud_hashing_apis_cloud_hashing_apis_proto = out.File
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_rawDesc = nil
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_goTypes = nil
	file_npool_cloud_hashing_apis_cloud_hashing_apis_proto_depIdxs = nil
}
