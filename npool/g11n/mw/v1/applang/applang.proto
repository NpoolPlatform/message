syntax = "proto3";

package g11n.middleware.applang.v1;

option go_package = "github.com/NpoolPlatform/message/npool/g11n/mw/v1/applang";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateLang     (CreateLangRequest)     returns (CreateLangResponse)     {}
    rpc CreateLangs    (CreateLangsRequest)    returns (CreateLangsResponse)    {}
    rpc UpdateLang     (UpdateLangRequest)     returns (UpdateLangResponse)     {}
    rpc GetLangOnly    (GetLangOnlyRequest)    returns (GetLangOnlyResponse)    {}
    rpc GetLangs       (GetLangsRequest)       returns (GetLangsResponse)       {}
    rpc DeleteLang     (DeleteLangRequest)     returns (DeleteLangResponse)     {}
}

message LangReq {
    optional string ID     = 10;
    optional string AppID  = 20;
    optional string LangID = 30;
    optional bool   Main   = 40;
}

message Lang {
    // @inject_tag: sql:"id"
    string ID      = 10;
    // @inject_tag: sql:"app_id"
    string AppID   = 20;
    // @inject_tag: sql:"lang_id"
    string LangID  = 30;
    // @inject_tag: sql:"lang"
    string Lang    = 40;
    // @inject_tag: sql:"logo"
    string Logo    = 50;
    // @inject_tag: sql:"name"
    string Name    = 60;
    // @inject_tag: sql:"short"
    string Short   = 70;
    // @inject_tag: sql:"main"
    bool   Main    = 80;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 90;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 100;
}

message Conds {
    basetypes.v1.StringVal ID      = 10;
    basetypes.v1.StringVal AppID   = 20;
    basetypes.v1.StringVal LangID  = 30;
    basetypes.v1.BoolVal   Main    = 40;
    basetypes.v1.StringSliceVal LangIDs = 50;
}


message CreateLangRequest {
    LangReq Info = 10;
}

message CreateLangResponse {
    Lang Info = 10;
}

message CreateLangsRequest {
    repeated LangReq Infos = 10;
}

message CreateLangsResponse {
    repeated Lang Infos = 10;
}

message UpdateLangRequest {
    LangReq Info = 10;
}

message UpdateLangResponse {
    Lang Info = 10;
}

message GetLangOnlyRequest {
    Conds Conds  = 10;
}

message GetLangOnlyResponse {
    Lang Info = 10;
}

message GetLangsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetLangsResponse {
    repeated Lang Infos = 10;
    uint32        Total = 20;
}

message DeleteLangRequest {
    LangReq Info = 10;
}

message DeleteLangResponse {
    Lang Info = 10;
}

