syntax = "proto3";

package g11n.middleware.appcountry.v1;

option go_package = "github.com/NpoolPlatform/message/npool/g11n/mw/v1/appcountry";

import "google/protobuf/empty.proto";
import "npool/npool.proto";
import "npool/g11n/mgr/v1/appcountry/appcountry.proto";

// Service Name
service Middleware {
    rpc CreateCountry     (CreateCountryRequest)     returns (CreateCountryResponse)     {}
    rpc CreateCountries   (CreateCountriesRequest)   returns (CreateCountriesResponse)   {}
    rpc GetCountries      (GetCountriesRequest)      returns (GetCountriesResponse)      {}
    rpc DeleteCountry     (DeleteCountryRequest)     returns (DeleteCountryResponse)     {}
}

message Country {
    // @inject_tag: sql:"id"
    string ID         = 10;
    // @inject_tag: sql:"app_id"
    string AppID      = 20;
    // @inject_tag: sql:"country_id"
    string CountryID  = 30;
    // @inject_tag: sql:"country"
    string Country    = 40;
    // @inject_tag: sql:"flag"
    string Flag       = 50;
    // @inject_tag: sql:"code"
    string Code       = 60;
    // @inject_tag: sql:"short"
    string Short      = 70;
}

message CreateCountryRequest {
    g11n.manager.appcountry.v1.CountryReq Info = 10;
}

message CreateCountryResponse {
    Country Info = 10;
}

message CreateCountriesRequest {
    repeated g11n.manager.appcountry.v1.CountryReq Infos = 10;
}

message CreateCountriesResponse {
    repeated Country Info = 10;
}

message GetCountriesRequest {
    g11n.manager.appcountry.v1.Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCountriesResponse {
    repeated Country Infos = 10;
    uint32           Total = 20;
}

message DeleteCountryRequest {
    string ID = 10;
}

message DeleteCountryResponse {
    Country Info = 10;
}

