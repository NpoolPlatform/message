// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: npool/g11n/mgr/v1/applang/applang.proto

package applang

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LangReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID  *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID *string `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	Main   *bool   `protobuf:"varint,40,opt,name=Main,proto3,oneof" json:"Main,omitempty"`
}

func (x *LangReq) Reset() {
	*x = LangReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangReq) ProtoMessage() {}

func (x *LangReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangReq.ProtoReflect.Descriptor instead.
func (*LangReq) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{0}
}

func (x *LangReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *LangReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *LangReq) GetLangID() string {
	if x != nil && x.LangID != nil {
		return *x.LangID
	}
	return ""
}

func (x *LangReq) GetMain() bool {
	if x != nil && x.Main != nil {
		return *x.Main
	}
	return false
}

type Lang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID     string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	LangID    string `protobuf:"bytes,30,opt,name=LangID,proto3" json:"LangID,omitempty"`
	Main      bool   `protobuf:"varint,40,opt,name=Main,proto3" json:"Main,omitempty"`
	CreatedAt uint32 `protobuf:"varint,50,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt uint32 `protobuf:"varint,60,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Lang) Reset() {
	*x = Lang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lang) ProtoMessage() {}

func (x *Lang) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lang.ProtoReflect.Descriptor instead.
func (*Lang) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{1}
}

func (x *Lang) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Lang) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Lang) GetLangID() string {
	if x != nil {
		return x.LangID
	}
	return ""
}

func (x *Lang) GetMain() bool {
	if x != nil {
		return x.Main
	}
	return false
}

func (x *Lang) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Lang) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID  *npool.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	LangID *npool.StringVal `protobuf:"bytes,30,opt,name=LangID,proto3,oneof" json:"LangID,omitempty"`
	Main   *npool.BoolVal   `protobuf:"bytes,40,opt,name=Main,proto3,oneof" json:"Main,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetLangID() *npool.StringVal {
	if x != nil {
		return x.LangID
	}
	return nil
}

func (x *Conds) GetMain() *npool.BoolVal {
	if x != nil {
		return x.Main
	}
	return nil
}

type CreateLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LangReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLangRequest) Reset() {
	*x = CreateLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLangRequest) ProtoMessage() {}

func (x *CreateLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLangRequest.ProtoReflect.Descriptor instead.
func (*CreateLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLangRequest) GetInfo() *LangReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLangResponse) Reset() {
	*x = CreateLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLangResponse) ProtoMessage() {}

func (x *CreateLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLangResponse.ProtoReflect.Descriptor instead.
func (*CreateLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateLangsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*LangReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateLangsRequest) Reset() {
	*x = CreateLangsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLangsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLangsRequest) ProtoMessage() {}

func (x *CreateLangsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLangsRequest.ProtoReflect.Descriptor instead.
func (*CreateLangsRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLangsRequest) GetInfos() []*LangReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateLangsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Lang `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateLangsResponse) Reset() {
	*x = CreateLangsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLangsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLangsResponse) ProtoMessage() {}

func (x *CreateLangsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLangsResponse.ProtoReflect.Descriptor instead.
func (*CreateLangsResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLangsResponse) GetInfos() []*Lang {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LangReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLangRequest) Reset() {
	*x = UpdateLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLangRequest) ProtoMessage() {}

func (x *UpdateLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLangRequest.ProtoReflect.Descriptor instead.
func (*UpdateLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateLangRequest) GetInfo() *LangReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLangResponse) Reset() {
	*x = UpdateLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLangResponse) ProtoMessage() {}

func (x *UpdateLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLangResponse.ProtoReflect.Descriptor instead.
func (*UpdateLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetLangRequest) Reset() {
	*x = GetLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangRequest) ProtoMessage() {}

func (x *GetLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangRequest.ProtoReflect.Descriptor instead.
func (*GetLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{9}
}

func (x *GetLangRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLangResponse) Reset() {
	*x = GetLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangResponse) ProtoMessage() {}

func (x *GetLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangResponse.ProtoReflect.Descriptor instead.
func (*GetLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{10}
}

func (x *GetLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLangsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetLangsRequest) Reset() {
	*x = GetLangsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsRequest) ProtoMessage() {}

func (x *GetLangsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsRequest.ProtoReflect.Descriptor instead.
func (*GetLangsRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{11}
}

func (x *GetLangsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetLangsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLangsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLangsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Lang `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32  `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetLangsResponse) Reset() {
	*x = GetLangsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangsResponse) ProtoMessage() {}

func (x *GetLangsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangsResponse.ProtoReflect.Descriptor instead.
func (*GetLangsResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{12}
}

func (x *GetLangsResponse) GetInfos() []*Lang {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetLangsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetLangOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetLangOnlyRequest) Reset() {
	*x = GetLangOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangOnlyRequest) ProtoMessage() {}

func (x *GetLangOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetLangOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{13}
}

func (x *GetLangOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetLangOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLangOnlyResponse) Reset() {
	*x = GetLangOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangOnlyResponse) ProtoMessage() {}

func (x *GetLangOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetLangOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{14}
}

func (x *GetLangOnlyResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistLangRequest) Reset() {
	*x = ExistLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLangRequest) ProtoMessage() {}

func (x *ExistLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLangRequest.ProtoReflect.Descriptor instead.
func (*ExistLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{15}
}

func (x *ExistLangRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistLangResponse) Reset() {
	*x = ExistLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLangResponse) ProtoMessage() {}

func (x *ExistLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLangResponse.ProtoReflect.Descriptor instead.
func (*ExistLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{16}
}

func (x *ExistLangResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistLangCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistLangCondsRequest) Reset() {
	*x = ExistLangCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLangCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLangCondsRequest) ProtoMessage() {}

func (x *ExistLangCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLangCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistLangCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{17}
}

func (x *ExistLangCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistLangCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistLangCondsResponse) Reset() {
	*x = ExistLangCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLangCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLangCondsResponse) ProtoMessage() {}

func (x *ExistLangCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLangCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistLangCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{18}
}

func (x *ExistLangCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountLangsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountLangsRequest) Reset() {
	*x = CountLangsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountLangsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountLangsRequest) ProtoMessage() {}

func (x *CountLangsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountLangsRequest.ProtoReflect.Descriptor instead.
func (*CountLangsRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{19}
}

func (x *CountLangsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountLangsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountLangsResponse) Reset() {
	*x = CountLangsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountLangsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountLangsResponse) ProtoMessage() {}

func (x *CountLangsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountLangsResponse.ProtoReflect.Descriptor instead.
func (*CountLangsResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{20}
}

func (x *CountLangsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteLangRequest) Reset() {
	*x = DeleteLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLangRequest) ProtoMessage() {}

func (x *DeleteLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLangRequest.ProtoReflect.Descriptor instead.
func (*DeleteLangRequest) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteLangRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Lang `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteLangResponse) Reset() {
	*x = DeleteLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLangResponse) ProtoMessage() {}

func (x *DeleteLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLangResponse.ProtoReflect.Descriptor instead.
func (*DeleteLangResponse) Descriptor() ([]byte, []int) {
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteLangResponse) GetInfo() *Lang {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_g11n_mgr_v1_applang_applang_proto protoreflect.FileDescriptor

var file_npool_g11n_mgr_v1_applang_applang_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x31, 0x31, 0x6e, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x31, 0x31, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x13,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4d,
	0x61, 0x69, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x04, 0x4d, 0x61, 0x69,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x04, 0x4c, 0x61,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67,
	0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x4d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xe4, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6e,
	0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x49, 0x44, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x31, 0x31,
	0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x47, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4a, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x47, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x75, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x22, 0x0a,
	0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x27, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x47, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xa3, 0x08, 0x0a, 0x07, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x2b,
	0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x67, 0x31, 0x31, 0x6e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x12,
	0x27, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x2b, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x67,
	0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x12, 0x29, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x31,
	0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x2e, 0x67,
	0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x31, 0x31, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x31, 0x31, 0x6e, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_g11n_mgr_v1_applang_applang_proto_rawDescOnce sync.Once
	file_npool_g11n_mgr_v1_applang_applang_proto_rawDescData = file_npool_g11n_mgr_v1_applang_applang_proto_rawDesc
)

func file_npool_g11n_mgr_v1_applang_applang_proto_rawDescGZIP() []byte {
	file_npool_g11n_mgr_v1_applang_applang_proto_rawDescOnce.Do(func() {
		file_npool_g11n_mgr_v1_applang_applang_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_g11n_mgr_v1_applang_applang_proto_rawDescData)
	})
	return file_npool_g11n_mgr_v1_applang_applang_proto_rawDescData
}

var file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_g11n_mgr_v1_applang_applang_proto_goTypes = []interface{}{
	(*LangReq)(nil),                // 0: g11n.manager.applang.v1.LangReq
	(*Lang)(nil),                   // 1: g11n.manager.applang.v1.Lang
	(*Conds)(nil),                  // 2: g11n.manager.applang.v1.Conds
	(*CreateLangRequest)(nil),      // 3: g11n.manager.applang.v1.CreateLangRequest
	(*CreateLangResponse)(nil),     // 4: g11n.manager.applang.v1.CreateLangResponse
	(*CreateLangsRequest)(nil),     // 5: g11n.manager.applang.v1.CreateLangsRequest
	(*CreateLangsResponse)(nil),    // 6: g11n.manager.applang.v1.CreateLangsResponse
	(*UpdateLangRequest)(nil),      // 7: g11n.manager.applang.v1.UpdateLangRequest
	(*UpdateLangResponse)(nil),     // 8: g11n.manager.applang.v1.UpdateLangResponse
	(*GetLangRequest)(nil),         // 9: g11n.manager.applang.v1.GetLangRequest
	(*GetLangResponse)(nil),        // 10: g11n.manager.applang.v1.GetLangResponse
	(*GetLangsRequest)(nil),        // 11: g11n.manager.applang.v1.GetLangsRequest
	(*GetLangsResponse)(nil),       // 12: g11n.manager.applang.v1.GetLangsResponse
	(*GetLangOnlyRequest)(nil),     // 13: g11n.manager.applang.v1.GetLangOnlyRequest
	(*GetLangOnlyResponse)(nil),    // 14: g11n.manager.applang.v1.GetLangOnlyResponse
	(*ExistLangRequest)(nil),       // 15: g11n.manager.applang.v1.ExistLangRequest
	(*ExistLangResponse)(nil),      // 16: g11n.manager.applang.v1.ExistLangResponse
	(*ExistLangCondsRequest)(nil),  // 17: g11n.manager.applang.v1.ExistLangCondsRequest
	(*ExistLangCondsResponse)(nil), // 18: g11n.manager.applang.v1.ExistLangCondsResponse
	(*CountLangsRequest)(nil),      // 19: g11n.manager.applang.v1.CountLangsRequest
	(*CountLangsResponse)(nil),     // 20: g11n.manager.applang.v1.CountLangsResponse
	(*DeleteLangRequest)(nil),      // 21: g11n.manager.applang.v1.DeleteLangRequest
	(*DeleteLangResponse)(nil),     // 22: g11n.manager.applang.v1.DeleteLangResponse
	(*npool.StringVal)(nil),        // 23: npool.v1.StringVal
	(*npool.BoolVal)(nil),          // 24: npool.v1.BoolVal
}
var file_npool_g11n_mgr_v1_applang_applang_proto_depIdxs = []int32{
	23, // 0: g11n.manager.applang.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: g11n.manager.applang.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: g11n.manager.applang.v1.Conds.LangID:type_name -> npool.v1.StringVal
	24, // 3: g11n.manager.applang.v1.Conds.Main:type_name -> npool.v1.BoolVal
	0,  // 4: g11n.manager.applang.v1.CreateLangRequest.Info:type_name -> g11n.manager.applang.v1.LangReq
	1,  // 5: g11n.manager.applang.v1.CreateLangResponse.Info:type_name -> g11n.manager.applang.v1.Lang
	0,  // 6: g11n.manager.applang.v1.CreateLangsRequest.Infos:type_name -> g11n.manager.applang.v1.LangReq
	1,  // 7: g11n.manager.applang.v1.CreateLangsResponse.Infos:type_name -> g11n.manager.applang.v1.Lang
	0,  // 8: g11n.manager.applang.v1.UpdateLangRequest.Info:type_name -> g11n.manager.applang.v1.LangReq
	1,  // 9: g11n.manager.applang.v1.UpdateLangResponse.Info:type_name -> g11n.manager.applang.v1.Lang
	1,  // 10: g11n.manager.applang.v1.GetLangResponse.Info:type_name -> g11n.manager.applang.v1.Lang
	2,  // 11: g11n.manager.applang.v1.GetLangsRequest.Conds:type_name -> g11n.manager.applang.v1.Conds
	1,  // 12: g11n.manager.applang.v1.GetLangsResponse.Infos:type_name -> g11n.manager.applang.v1.Lang
	2,  // 13: g11n.manager.applang.v1.GetLangOnlyRequest.Conds:type_name -> g11n.manager.applang.v1.Conds
	1,  // 14: g11n.manager.applang.v1.GetLangOnlyResponse.Info:type_name -> g11n.manager.applang.v1.Lang
	2,  // 15: g11n.manager.applang.v1.ExistLangCondsRequest.Conds:type_name -> g11n.manager.applang.v1.Conds
	2,  // 16: g11n.manager.applang.v1.CountLangsRequest.Conds:type_name -> g11n.manager.applang.v1.Conds
	1,  // 17: g11n.manager.applang.v1.DeleteLangResponse.Info:type_name -> g11n.manager.applang.v1.Lang
	3,  // 18: g11n.manager.applang.v1.Manager.CreateLang:input_type -> g11n.manager.applang.v1.CreateLangRequest
	5,  // 19: g11n.manager.applang.v1.Manager.CreateLangs:input_type -> g11n.manager.applang.v1.CreateLangsRequest
	7,  // 20: g11n.manager.applang.v1.Manager.UpdateLang:input_type -> g11n.manager.applang.v1.UpdateLangRequest
	9,  // 21: g11n.manager.applang.v1.Manager.GetLang:input_type -> g11n.manager.applang.v1.GetLangRequest
	13, // 22: g11n.manager.applang.v1.Manager.GetLangOnly:input_type -> g11n.manager.applang.v1.GetLangOnlyRequest
	11, // 23: g11n.manager.applang.v1.Manager.GetLangs:input_type -> g11n.manager.applang.v1.GetLangsRequest
	15, // 24: g11n.manager.applang.v1.Manager.ExistLang:input_type -> g11n.manager.applang.v1.ExistLangRequest
	17, // 25: g11n.manager.applang.v1.Manager.ExistLangConds:input_type -> g11n.manager.applang.v1.ExistLangCondsRequest
	19, // 26: g11n.manager.applang.v1.Manager.CountLangs:input_type -> g11n.manager.applang.v1.CountLangsRequest
	21, // 27: g11n.manager.applang.v1.Manager.DeleteLang:input_type -> g11n.manager.applang.v1.DeleteLangRequest
	4,  // 28: g11n.manager.applang.v1.Manager.CreateLang:output_type -> g11n.manager.applang.v1.CreateLangResponse
	6,  // 29: g11n.manager.applang.v1.Manager.CreateLangs:output_type -> g11n.manager.applang.v1.CreateLangsResponse
	8,  // 30: g11n.manager.applang.v1.Manager.UpdateLang:output_type -> g11n.manager.applang.v1.UpdateLangResponse
	10, // 31: g11n.manager.applang.v1.Manager.GetLang:output_type -> g11n.manager.applang.v1.GetLangResponse
	14, // 32: g11n.manager.applang.v1.Manager.GetLangOnly:output_type -> g11n.manager.applang.v1.GetLangOnlyResponse
	12, // 33: g11n.manager.applang.v1.Manager.GetLangs:output_type -> g11n.manager.applang.v1.GetLangsResponse
	16, // 34: g11n.manager.applang.v1.Manager.ExistLang:output_type -> g11n.manager.applang.v1.ExistLangResponse
	18, // 35: g11n.manager.applang.v1.Manager.ExistLangConds:output_type -> g11n.manager.applang.v1.ExistLangCondsResponse
	20, // 36: g11n.manager.applang.v1.Manager.CountLangs:output_type -> g11n.manager.applang.v1.CountLangsResponse
	22, // 37: g11n.manager.applang.v1.Manager.DeleteLang:output_type -> g11n.manager.applang.v1.DeleteLangResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_npool_g11n_mgr_v1_applang_applang_proto_init() }
func file_npool_g11n_mgr_v1_applang_applang_proto_init() {
	if File_npool_g11n_mgr_v1_applang_applang_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLangsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLangsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLangCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLangCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountLangsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountLangsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_g11n_mgr_v1_applang_applang_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_g11n_mgr_v1_applang_applang_proto_goTypes,
		DependencyIndexes: file_npool_g11n_mgr_v1_applang_applang_proto_depIdxs,
		MessageInfos:      file_npool_g11n_mgr_v1_applang_applang_proto_msgTypes,
	}.Build()
	File_npool_g11n_mgr_v1_applang_applang_proto = out.File
	file_npool_g11n_mgr_v1_applang_applang_proto_rawDesc = nil
	file_npool_g11n_mgr_v1_applang_applang_proto_goTypes = nil
	file_npool_g11n_mgr_v1_applang_applang_proto_depIdxs = nil
}
