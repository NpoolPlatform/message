// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appusergw/appuserextra/appuserextra.proto

package appuserextra

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserGatewayExtraClient is the client API for AppUserGatewayExtra service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserGatewayExtraClient interface {
	CreateExtra(ctx context.Context, in *CreateExtraRequest, opts ...grpc.CallOption) (*CreateExtraResponse, error)
	GetExtra(ctx context.Context, in *GetExtraRequest, opts ...grpc.CallOption) (*GetExtraResponse, error)
	GetAppUserExtraAppUser(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error)
	UpdateExtra(ctx context.Context, in *UpdateExtraRequest, opts ...grpc.CallOption) (*UpdateExtraResponse, error)
}

type appUserGatewayExtraClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserGatewayExtraClient(cc grpc.ClientConnInterface) AppUserGatewayExtraClient {
	return &appUserGatewayExtraClient{cc}
}

func (c *appUserGatewayExtraClient) CreateExtra(ctx context.Context, in *CreateExtraRequest, opts ...grpc.CallOption) (*CreateExtraResponse, error) {
	out := new(CreateExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/CreateExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayExtraClient) GetExtra(ctx context.Context, in *GetExtraRequest, opts ...grpc.CallOption) (*GetExtraResponse, error) {
	out := new(GetExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/GetExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayExtraClient) GetAppUserExtraAppUser(ctx context.Context, in *GetAppUserExtraRequest, opts ...grpc.CallOption) (*GetAppUserExtraResponse, error) {
	out := new(GetAppUserExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/GetAppUserExtraAppUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayExtraClient) UpdateExtra(ctx context.Context, in *UpdateExtraRequest, opts ...grpc.CallOption) (*UpdateExtraResponse, error) {
	out := new(UpdateExtraResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/UpdateExtra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserGatewayExtraServer is the server API for AppUserGatewayExtra service.
// All implementations must embed UnimplementedAppUserGatewayExtraServer
// for forward compatibility
type AppUserGatewayExtraServer interface {
	CreateExtra(context.Context, *CreateExtraRequest) (*CreateExtraResponse, error)
	GetExtra(context.Context, *GetExtraRequest) (*GetExtraResponse, error)
	GetAppUserExtraAppUser(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error)
	UpdateExtra(context.Context, *UpdateExtraRequest) (*UpdateExtraResponse, error)
	mustEmbedUnimplementedAppUserGatewayExtraServer()
}

// UnimplementedAppUserGatewayExtraServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserGatewayExtraServer struct {
}

func (UnimplementedAppUserGatewayExtraServer) CreateExtra(context.Context, *CreateExtraRequest) (*CreateExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExtra not implemented")
}
func (UnimplementedAppUserGatewayExtraServer) GetExtra(context.Context, *GetExtraRequest) (*GetExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExtra not implemented")
}
func (UnimplementedAppUserGatewayExtraServer) GetAppUserExtraAppUser(context.Context, *GetAppUserExtraRequest) (*GetAppUserExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppUserExtraAppUser not implemented")
}
func (UnimplementedAppUserGatewayExtraServer) UpdateExtra(context.Context, *UpdateExtraRequest) (*UpdateExtraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExtra not implemented")
}
func (UnimplementedAppUserGatewayExtraServer) mustEmbedUnimplementedAppUserGatewayExtraServer() {}

// UnsafeAppUserGatewayExtraServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserGatewayExtraServer will
// result in compilation errors.
type UnsafeAppUserGatewayExtraServer interface {
	mustEmbedUnimplementedAppUserGatewayExtraServer()
}

func RegisterAppUserGatewayExtraServer(s grpc.ServiceRegistrar, srv AppUserGatewayExtraServer) {
	s.RegisterService(&AppUserGatewayExtra_ServiceDesc, srv)
}

func _AppUserGatewayExtra_CreateExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayExtraServer).CreateExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/CreateExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayExtraServer).CreateExtra(ctx, req.(*CreateExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayExtra_GetExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayExtraServer).GetExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/GetExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayExtraServer).GetExtra(ctx, req.(*GetExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayExtra_GetAppUserExtraAppUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppUserExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayExtraServer).GetAppUserExtraAppUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/GetAppUserExtraAppUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayExtraServer).GetAppUserExtraAppUser(ctx, req.(*GetAppUserExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayExtra_UpdateExtra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExtraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayExtraServer).UpdateExtra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.appuserextra.v1.AppUserGatewayExtra/UpdateExtra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayExtraServer).UpdateExtra(ctx, req.(*UpdateExtraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserGatewayExtra_ServiceDesc is the grpc.ServiceDesc for AppUserGatewayExtra service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserGatewayExtra_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.gateway.appuserextra.v1.AppUserGatewayExtra",
	HandlerType: (*AppUserGatewayExtraServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExtra",
			Handler:    _AppUserGatewayExtra_CreateExtra_Handler,
		},
		{
			MethodName: "GetExtra",
			Handler:    _AppUserGatewayExtra_GetExtra_Handler,
		},
		{
			MethodName: "GetAppUserExtraAppUser",
			Handler:    _AppUserGatewayExtra_GetAppUserExtraAppUser_Handler,
		},
		{
			MethodName: "UpdateExtra",
			Handler:    _AppUserGatewayExtra_UpdateExtra_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appusergw/appuserextra/appuserextra.proto",
}
