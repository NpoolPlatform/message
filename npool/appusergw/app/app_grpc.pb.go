// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: npool/appusergw/app/app.proto

package app

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AppUserGatewayAppClient is the client API for AppUserGatewayApp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AppUserGatewayAppClient interface {
	CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error)
	GetApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (*GetAppResponse, error)
	GetApps(ctx context.Context, in *GetAppsRequest, opts ...grpc.CallOption) (*GetAppsResponse, error)
	GetAppsByCreator(ctx context.Context, in *GetAppsByCreatorRequest, opts ...grpc.CallOption) (*GetAppsByCreatorResponse, error)
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*UpdateAppResponse, error)
	GetAppInfo(ctx context.Context, in *GetAppInfoRequest, opts ...grpc.CallOption) (*GetAppInfoResponse, error)
	GetAppInfos(ctx context.Context, in *GetAppInfosRequest, opts ...grpc.CallOption) (*GetAppInfosResponse, error)
	GetAppInfosByCreator(ctx context.Context, in *GetAppInfosByCreatorRequest, opts ...grpc.CallOption) (*GetAppInfosByCreatorResponse, error)
}

type appUserGatewayAppClient struct {
	cc grpc.ClientConnInterface
}

func NewAppUserGatewayAppClient(cc grpc.ClientConnInterface) AppUserGatewayAppClient {
	return &appUserGatewayAppClient{cc}
}

func (c *appUserGatewayAppClient) CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error) {
	out := new(CreateAppResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/CreateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (*GetAppResponse, error) {
	out := new(GetAppResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetApps(ctx context.Context, in *GetAppsRequest, opts ...grpc.CallOption) (*GetAppsResponse, error) {
	out := new(GetAppsResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetAppsByCreator(ctx context.Context, in *GetAppsByCreatorRequest, opts ...grpc.CallOption) (*GetAppsByCreatorResponse, error) {
	out := new(GetAppsByCreatorResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppsByCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*UpdateAppResponse, error) {
	out := new(UpdateAppResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetAppInfo(ctx context.Context, in *GetAppInfoRequest, opts ...grpc.CallOption) (*GetAppInfoResponse, error) {
	out := new(GetAppInfoResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetAppInfos(ctx context.Context, in *GetAppInfosRequest, opts ...grpc.CallOption) (*GetAppInfosResponse, error) {
	out := new(GetAppInfosResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appUserGatewayAppClient) GetAppInfosByCreator(ctx context.Context, in *GetAppInfosByCreatorRequest, opts ...grpc.CallOption) (*GetAppInfosByCreatorResponse, error) {
	out := new(GetAppInfosByCreatorResponse)
	err := c.cc.Invoke(ctx, "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfosByCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppUserGatewayAppServer is the server API for AppUserGatewayApp service.
// All implementations must embed UnimplementedAppUserGatewayAppServer
// for forward compatibility
type AppUserGatewayAppServer interface {
	CreateApp(context.Context, *CreateAppRequest) (*CreateAppResponse, error)
	GetApp(context.Context, *GetAppRequest) (*GetAppResponse, error)
	GetApps(context.Context, *GetAppsRequest) (*GetAppsResponse, error)
	GetAppsByCreator(context.Context, *GetAppsByCreatorRequest) (*GetAppsByCreatorResponse, error)
	UpdateApp(context.Context, *UpdateAppRequest) (*UpdateAppResponse, error)
	GetAppInfo(context.Context, *GetAppInfoRequest) (*GetAppInfoResponse, error)
	GetAppInfos(context.Context, *GetAppInfosRequest) (*GetAppInfosResponse, error)
	GetAppInfosByCreator(context.Context, *GetAppInfosByCreatorRequest) (*GetAppInfosByCreatorResponse, error)
	mustEmbedUnimplementedAppUserGatewayAppServer()
}

// UnimplementedAppUserGatewayAppServer must be embedded to have forward compatible implementations.
type UnimplementedAppUserGatewayAppServer struct {
}

func (UnimplementedAppUserGatewayAppServer) CreateApp(context.Context, *CreateAppRequest) (*CreateAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApp not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetApp(context.Context, *GetAppRequest) (*GetAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApp not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetApps(context.Context, *GetAppsRequest) (*GetAppsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApps not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetAppsByCreator(context.Context, *GetAppsByCreatorRequest) (*GetAppsByCreatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppsByCreator not implemented")
}
func (UnimplementedAppUserGatewayAppServer) UpdateApp(context.Context, *UpdateAppRequest) (*UpdateAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApp not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetAppInfo(context.Context, *GetAppInfoRequest) (*GetAppInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInfo not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetAppInfos(context.Context, *GetAppInfosRequest) (*GetAppInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInfos not implemented")
}
func (UnimplementedAppUserGatewayAppServer) GetAppInfosByCreator(context.Context, *GetAppInfosByCreatorRequest) (*GetAppInfosByCreatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppInfosByCreator not implemented")
}
func (UnimplementedAppUserGatewayAppServer) mustEmbedUnimplementedAppUserGatewayAppServer() {}

// UnsafeAppUserGatewayAppServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AppUserGatewayAppServer will
// result in compilation errors.
type UnsafeAppUserGatewayAppServer interface {
	mustEmbedUnimplementedAppUserGatewayAppServer()
}

func RegisterAppUserGatewayAppServer(s grpc.ServiceRegistrar, srv AppUserGatewayAppServer) {
	s.RegisterService(&AppUserGatewayApp_ServiceDesc, srv)
}

func _AppUserGatewayApp_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).CreateApp(ctx, req.(*CreateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetApp(ctx, req.(*GetAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetApps(ctx, req.(*GetAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetAppsByCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppsByCreatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetAppsByCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppsByCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetAppsByCreator(ctx, req.(*GetAppsByCreatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).UpdateApp(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetAppInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetAppInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetAppInfo(ctx, req.(*GetAppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetAppInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetAppInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetAppInfos(ctx, req.(*GetAppInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppUserGatewayApp_GetAppInfosByCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppInfosByCreatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppUserGatewayAppServer).GetAppInfosByCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.user.gateway.app.v1.AppUserGatewayApp/GetAppInfosByCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppUserGatewayAppServer).GetAppInfosByCreator(ctx, req.(*GetAppInfosByCreatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AppUserGatewayApp_ServiceDesc is the grpc.ServiceDesc for AppUserGatewayApp service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AppUserGatewayApp_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "app.user.gateway.app.v1.AppUserGatewayApp",
	HandlerType: (*AppUserGatewayAppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApp",
			Handler:    _AppUserGatewayApp_CreateApp_Handler,
		},
		{
			MethodName: "GetApp",
			Handler:    _AppUserGatewayApp_GetApp_Handler,
		},
		{
			MethodName: "GetApps",
			Handler:    _AppUserGatewayApp_GetApps_Handler,
		},
		{
			MethodName: "GetAppsByCreator",
			Handler:    _AppUserGatewayApp_GetAppsByCreator_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _AppUserGatewayApp_UpdateApp_Handler,
		},
		{
			MethodName: "GetAppInfo",
			Handler:    _AppUserGatewayApp_GetAppInfo_Handler,
		},
		{
			MethodName: "GetAppInfos",
			Handler:    _AppUserGatewayApp_GetAppInfos_Handler,
		},
		{
			MethodName: "GetAppInfosByCreator",
			Handler:    _AppUserGatewayApp_GetAppInfosByCreator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "npool/appusergw/app/app.proto",
}
