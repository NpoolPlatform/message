// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: npool/trading/trading.proto

package trading

import (
	signproxy "github.com/NpoolPlatform/message/npool/signproxy"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// share account structure
type EntAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 币种名称(唯一)
	CoinName string `protobuf:"bytes,1,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	// 钱包地址，创建时填空
	Address string `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *EntAccount) Reset() {
	*x = EntAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntAccount) ProtoMessage() {}

func (x *EntAccount) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntAccount.ProtoReflect.Descriptor instead.
func (*EntAccount) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{0}
}

func (x *EntAccount) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *EntAccount) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// CreateAccount 参数
type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 币种名称(唯一)
	CoinName string `protobuf:"bytes,1,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	// 当前取UserID
	UUID string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *CreateAccountRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

// CreateAccount 返回
type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *EntAccount `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountResponse) GetInfo() *EntAccount {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetBalance 参数
type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *EntAccount `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{3}
}

func (x *GetBalanceRequest) GetInfo() *EntAccount {
	if x != nil {
		return x.Info
	}
	return nil
}

// GetBalance 返回
type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *EntAccount `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	AmountFloat64 float64     `protobuf:"fixed64,4,opt,name=AmountFloat64,proto3" json:"AmountFloat64,omitempty"` // 长整型金额
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{4}
}

func (x *GetBalanceResponse) GetInfo() *EntAccount {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetBalanceResponse) GetAmountFloat64() float64 {
	if x != nil {
		return x.AmountFloat64
	}
	return 0
}

// share transaction structure
type BaseTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 站内交易ID
	TransactionIDInsite string `protobuf:"bytes,1,opt,name=TransactionIDInsite,proto3" json:"TransactionIDInsite,omitempty"`
	// 币种名称(唯一)
	CoinName string `protobuf:"bytes,2,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	// 不入库的参考金额
	AmountFloat64 float64 `protobuf:"fixed64,3,opt,name=AmountFloat64,proto3" json:"AmountFloat64,omitempty"`
	// 发送方
	AddressFrom string `protobuf:"bytes,4,opt,name=AddressFrom,proto3" json:"AddressFrom,omitempty"`
	// 接收方
	AddressTo string `protobuf:"bytes,5,opt,name=AddressTo,proto3" json:"AddressTo,omitempty"`
	// sql enum: recharge, payment, withdraw, unknown
	InsiteTxType string `protobuf:"bytes,6,opt,name=InsiteTxType,proto3" json:"InsiteTxType,omitempty"`
	// 用户提交请求时的时间戳，与2FA绑定
	CreatetimeUTC int64 `protobuf:"varint,12,opt,name=CreatetimeUTC,proto3" json:"CreatetimeUTC,omitempty"`
}

func (x *BaseTx) Reset() {
	*x = BaseTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseTx) ProtoMessage() {}

func (x *BaseTx) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseTx.ProtoReflect.Descriptor instead.
func (*BaseTx) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{5}
}

func (x *BaseTx) GetTransactionIDInsite() string {
	if x != nil {
		return x.TransactionIDInsite
	}
	return ""
}

func (x *BaseTx) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *BaseTx) GetAmountFloat64() float64 {
	if x != nil {
		return x.AmountFloat64
	}
	return 0
}

func (x *BaseTx) GetAddressFrom() string {
	if x != nil {
		return x.AddressFrom
	}
	return ""
}

func (x *BaseTx) GetAddressTo() string {
	if x != nil {
		return x.AddressTo
	}
	return ""
}

func (x *BaseTx) GetInsiteTxType() string {
	if x != nil {
		return x.InsiteTxType
	}
	return ""
}

func (x *BaseTx) GetCreatetimeUTC() int64 {
	if x != nil {
		return x.CreatetimeUTC
	}
	return 0
}

// GetInsiteTxStatus 参数
type GetInsiteTxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 站内交易ID
	TransactionIDInsite string `protobuf:"bytes,1,opt,name=TransactionIDInsite,proto3" json:"TransactionIDInsite,omitempty"`
}

func (x *GetInsiteTxStatusRequest) Reset() {
	*x = GetInsiteTxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsiteTxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsiteTxStatusRequest) ProtoMessage() {}

func (x *GetInsiteTxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsiteTxStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInsiteTxStatusRequest) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{6}
}

func (x *GetInsiteTxStatusRequest) GetTransactionIDInsite() string {
	if x != nil {
		return x.TransactionIDInsite
	}
	return ""
}

// GetInsiteTxStatus 返回
type GetInsiteTxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BaseTx `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	// 上次更新时间
	UpdatetimeUTC int64 `protobuf:"varint,13,opt,name=UpdatetimeUTC,proto3" json:"UpdatetimeUTC,omitempty"`
	// bool, 便于调用方判断
	Succeeded bool `protobuf:"varint,14,opt,name=Succeeded,proto3" json:"Succeeded,omitempty"`
	// 不success不fail就是pending了
	Failed bool `protobuf:"varint,15,opt,name=Failed,proto3" json:"Failed,omitempty"`
	// 公链交易ID（如有）
	TransactionIDChain string `protobuf:"bytes,7,opt,name=TransactionIDChain,proto3" json:"TransactionIDChain,omitempty"`
	// 为done则成功；全部状态："pending_review", "pending_process", "pending_signinfo", "pending_sign", "pending_broadcast", "pending_confirm", "done", "rejected", "error", "error_expected"
	Status string `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *GetInsiteTxStatusResponse) Reset() {
	*x = GetInsiteTxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsiteTxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsiteTxStatusResponse) ProtoMessage() {}

func (x *GetInsiteTxStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsiteTxStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInsiteTxStatusResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{7}
}

func (x *GetInsiteTxStatusResponse) GetInfo() *BaseTx {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetInsiteTxStatusResponse) GetUpdatetimeUTC() int64 {
	if x != nil {
		return x.UpdatetimeUTC
	}
	return 0
}

func (x *GetInsiteTxStatusResponse) GetSucceeded() bool {
	if x != nil {
		return x.Succeeded
	}
	return false
}

func (x *GetInsiteTxStatusResponse) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

func (x *GetInsiteTxStatusResponse) GetTransactionIDChain() string {
	if x != nil {
		return x.TransactionIDChain
	}
	return ""
}

func (x *GetInsiteTxStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// CreateTransaction 参数
type CreateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 交易基本信息
	Info *BaseTx `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	// 2FA的时效性验证码，前期可以留空
	UUIDSignature string `protobuf:"bytes,2,opt,name=UUIDSignature,proto3" json:"UUIDSignature,omitempty"`
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTransactionRequest) GetInfo() *BaseTx {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateTransactionRequest) GetUUIDSignature() string {
	if x != nil {
		return x.UUIDSignature
	}
	return ""
}

type ACKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType     signproxy.TransactionType `protobuf:"varint,1,opt,name=transaction_type,json=transactionType,proto3,enum=sphinx.proxy.v1.TransactionType" json:"transaction_type,omitempty"` // 交易类型： WalletNew, Signature, Balance, PreSign, Broadcast ； 创建账号、查询余额、交易状态更新
	CoinTypeId          int32                     `protobuf:"varint,2,opt,name=coin_type_id,json=coinTypeId,proto3" json:"coin_type_id,omitempty"`
	TransactionIdInsite string                    `protobuf:"bytes,3,opt,name=transaction_id_insite,json=transactionIdInsite,proto3" json:"transaction_id_insite,omitempty"` // 交易ID
	TransactionIdChain  string                    `protobuf:"bytes,4,opt,name=transaction_id_chain,json=transactionIdChain,proto3" json:"transaction_id_chain,omitempty"`    // 交易链上ID （如有）
	Address             string                    `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`                                                      // 创建账号的地址
	Balance             float64                   `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`                                                    // 查询账号的余额
	IsOkay              bool                      `protobuf:"varint,7,opt,name=is_okay,json=isOkay,proto3" json:"is_okay,omitempty"`                                         // 交易请求是否成功
	ErrorMessage        string                    `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                        // 报错或调试时返回信息
}

func (x *ACKRequest) Reset() {
	*x = ACKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACKRequest) ProtoMessage() {}

func (x *ACKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACKRequest.ProtoReflect.Descriptor instead.
func (*ACKRequest) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{9}
}

func (x *ACKRequest) GetTransactionType() signproxy.TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return signproxy.TransactionType(0)
}

func (x *ACKRequest) GetCoinTypeId() int32 {
	if x != nil {
		return x.CoinTypeId
	}
	return 0
}

func (x *ACKRequest) GetTransactionIdInsite() string {
	if x != nil {
		return x.TransactionIdInsite
	}
	return ""
}

func (x *ACKRequest) GetTransactionIdChain() string {
	if x != nil {
		return x.TransactionIdChain
	}
	return ""
}

func (x *ACKRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ACKRequest) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *ACKRequest) GetIsOkay() bool {
	if x != nil {
		return x.IsOkay
	}
	return false
}

func (x *ACKRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ACKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否收到请求
	IsOkay bool `protobuf:"varint,1,opt,name=is_okay,json=isOkay,proto3" json:"is_okay,omitempty"`
}

func (x *ACKResponse) Reset() {
	*x = ACKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACKResponse) ProtoMessage() {}

func (x *ACKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACKResponse.ProtoReflect.Descriptor instead.
func (*ACKResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{10}
}

func (x *ACKResponse) GetIsOkay() bool {
	if x != nil {
		return x.IsOkay
	}
	return false
}

type CreateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BaseTx `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTransactionResponse) Reset() {
	*x = CreateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionResponse) ProtoMessage() {}

func (x *CreateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTransactionResponse) GetInfo() *BaseTx {
	if x != nil {
		return x.Info
	}
	return nil
}

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_trading_trading_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_trading_trading_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_trading_trading_proto_rawDescGZIP(), []int{12}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_npool_trading_trading_proto protoreflect.FileDescriptor

var file_npool_trading_trading_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73,
	0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x73, 0x69,
	0x67, 0x6e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x22, 0x42, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x22, 0x86, 0x02, 0x0a, 0x06,
	0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x54, 0x43, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x54, 0x43, 0x22, 0x4c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74,
	0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x49, 0x6e, 0x73, 0x69,
	0x74, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x54,
	0x78, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x54, 0x43, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x54, 0x43, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x0a, 0x0d, 0x55, 0x55, 0x49, 0x44, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x55, 0x49, 0x44, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x0a, 0x41, 0x43, 0x4b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6f, 0x6b, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4f, 0x6b, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x0b, 0x41, 0x43,
	0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6f, 0x6b, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x6b,
	0x61, 0x79, 0x22, 0x42, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x78,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x94, 0x05,
	0x0a, 0x07, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x70, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x68,
	0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70,
	0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x68, 0x69,
	0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a,
	0x03, 0x41, 0x43, 0x4b, 0x12, 0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x43, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70,
	0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a,
	0x12, 0x52, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x01, 0x2a, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_trading_trading_proto_rawDescOnce sync.Once
	file_npool_trading_trading_proto_rawDescData = file_npool_trading_trading_proto_rawDesc
)

func file_npool_trading_trading_proto_rawDescGZIP() []byte {
	file_npool_trading_trading_proto_rawDescOnce.Do(func() {
		file_npool_trading_trading_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_trading_trading_proto_rawDescData)
	})
	return file_npool_trading_trading_proto_rawDescData
}

var file_npool_trading_trading_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_trading_trading_proto_goTypes = []interface{}{
	(*EntAccount)(nil),                // 0: sphinx.v1.EntAccount
	(*CreateAccountRequest)(nil),      // 1: sphinx.v1.CreateAccountRequest
	(*CreateAccountResponse)(nil),     // 2: sphinx.v1.CreateAccountResponse
	(*GetBalanceRequest)(nil),         // 3: sphinx.v1.GetBalanceRequest
	(*GetBalanceResponse)(nil),        // 4: sphinx.v1.GetBalanceResponse
	(*BaseTx)(nil),                    // 5: sphinx.v1.BaseTx
	(*GetInsiteTxStatusRequest)(nil),  // 6: sphinx.v1.GetInsiteTxStatusRequest
	(*GetInsiteTxStatusResponse)(nil), // 7: sphinx.v1.GetInsiteTxStatusResponse
	(*CreateTransactionRequest)(nil),  // 8: sphinx.v1.CreateTransactionRequest
	(*ACKRequest)(nil),                // 9: sphinx.v1.ACKRequest
	(*ACKResponse)(nil),               // 10: sphinx.v1.ACKResponse
	(*CreateTransactionResponse)(nil), // 11: sphinx.v1.CreateTransactionResponse
	(*VersionResponse)(nil),           // 12: sphinx.v1.VersionResponse
	(signproxy.TransactionType)(0),    // 13: sphinx.proxy.v1.TransactionType
	(*emptypb.Empty)(nil),             // 14: google.protobuf.Empty
}
var file_npool_trading_trading_proto_depIdxs = []int32{
	0,  // 0: sphinx.v1.CreateAccountResponse.Info:type_name -> sphinx.v1.EntAccount
	0,  // 1: sphinx.v1.GetBalanceRequest.Info:type_name -> sphinx.v1.EntAccount
	0,  // 2: sphinx.v1.GetBalanceResponse.Info:type_name -> sphinx.v1.EntAccount
	5,  // 3: sphinx.v1.GetInsiteTxStatusResponse.Info:type_name -> sphinx.v1.BaseTx
	5,  // 4: sphinx.v1.CreateTransactionRequest.Info:type_name -> sphinx.v1.BaseTx
	13, // 5: sphinx.v1.ACKRequest.transaction_type:type_name -> sphinx.proxy.v1.TransactionType
	5,  // 6: sphinx.v1.CreateTransactionResponse.Info:type_name -> sphinx.v1.BaseTx
	1,  // 7: sphinx.v1.Trading.CreateAccount:input_type -> sphinx.v1.CreateAccountRequest
	3,  // 8: sphinx.v1.Trading.GetBalance:input_type -> sphinx.v1.GetBalanceRequest
	8,  // 9: sphinx.v1.Trading.CreateTransaction:input_type -> sphinx.v1.CreateTransactionRequest
	6,  // 10: sphinx.v1.Trading.GetInsiteTxStatus:input_type -> sphinx.v1.GetInsiteTxStatusRequest
	9,  // 11: sphinx.v1.Trading.ACK:input_type -> sphinx.v1.ACKRequest
	14, // 12: sphinx.v1.Trading.Version:input_type -> google.protobuf.Empty
	2,  // 13: sphinx.v1.Trading.CreateAccount:output_type -> sphinx.v1.CreateAccountResponse
	4,  // 14: sphinx.v1.Trading.GetBalance:output_type -> sphinx.v1.GetBalanceResponse
	11, // 15: sphinx.v1.Trading.CreateTransaction:output_type -> sphinx.v1.CreateTransactionResponse
	7,  // 16: sphinx.v1.Trading.GetInsiteTxStatus:output_type -> sphinx.v1.GetInsiteTxStatusResponse
	10, // 17: sphinx.v1.Trading.ACK:output_type -> sphinx.v1.ACKResponse
	12, // 18: sphinx.v1.Trading.Version:output_type -> sphinx.v1.VersionResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_npool_trading_trading_proto_init() }
func file_npool_trading_trading_proto_init() {
	if File_npool_trading_trading_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_trading_trading_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsiteTxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsiteTxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_trading_trading_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_trading_trading_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_trading_trading_proto_goTypes,
		DependencyIndexes: file_npool_trading_trading_proto_depIdxs,
		MessageInfos:      file_npool_trading_trading_proto_msgTypes,
	}.Build()
	File_npool_trading_trading_proto = out.File
	file_npool_trading_trading_proto_rawDesc = nil
	file_npool_trading_trading_proto_goTypes = nil
	file_npool_trading_trading_proto_depIdxs = nil
}
