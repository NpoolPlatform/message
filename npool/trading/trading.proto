syntax = "proto3";

package sphinx.v1;

option go_package = "github.com/NpoolPlatform/message/npool/trading";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// 交易服务
service Trading {
	rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse) {
		option (google.api.http) = {
			post: "/v1/create/transaction"
			body: "*"
		};
	}
	rpc GetTransaction (GetTransactionRequest) returns (GetTransactionResponse) {
		option (google.api.http) = {
			post: "/v1/get/transaction"
			body: "*"
		};
	}
	rpc GetTransactions (GetTransactionsRequest) returns (GetTransactionsResponse) {
		option (google.api.http) = {
			post: "/v1/get/transactions"
			body: "*"
		};
	}
	rpc UpdateTransaction (UpdateTransactionRequest) returns (UpdateTransactionResponse) {
		option (google.api.http) = {
			post: "/v1/update/transaction"
			body: "*"
		};
	}
  	rpc Version (google.protobuf.Empty) returns (VersionResponse){
		option (google.api.http) = {
			post: "/version"
			body: "*"
		};
  	}
}

enum TransactionState {
	TransactionStateUnKnow  			= 0;
	TransactionStatePendingReview     	= 1;
	TransactionStateConfirm     		= 2;
	TransactionStateRejected     		= 3;
	TransactionStatePendingTransaction  = 4;
	TransactionStateDone     			= 5;
}

message TransactionInfo {
	string TransactionID 	= 100;
	string Name 			= 110;
	double Amount 			= 120;
	string From 			= 130;
	string To 				= 140;
	string state 			= 150;
	uint32 CreatedAt 		= 160;
	uint32 UpdatedAt 		= 170;
}

message CreateTransactionRequest {
	string TransactionID 	= 100;
	string Name 			= 110;
	double Amount 			= 120;
	string From 			= 130;
	string To 				= 140;
}

message CreateTransactionResponse {
}

message GetTransactionRequest {
	string TransactionID = 100;
}

message GetTransactionResponse {
	TransactionInfo Info = 100;
}

message GetTransactionsRequest {
	string Name 			= 100;
	string State 			= 110;
	string From				= 120;
	string To				= 130;
	uint32 Offset 			= 140;
	uint32 Limit 			= 150;
}

message GetTransactionsResponse {
	int32 Total						= 100;
	repeated TransactionInfo Infos 	= 110;
}

message UpdateTransactionRequest {
	string TransactionID 	= 100;
	string state 			= 110;
}

message UpdateTransactionResponse {
}

message VersionResponse {
	string Info = 100;
}
