syntax = "proto3";

package sphinx.v1;

option go_package = "github.com/NpoolPlatform/message/npool/trading";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// 交易服务
service Trading {
	rpc CreateWallet (CreateWalletRequest) returns (CreateWalletResponse) {
		option (google.api.http) = {
			post: "/v1/create/wallet"
			body: "*"
		};
	}
	rpc GetWalletBalance (GetWalletBalanceRequest) returns (GetWalletBalanceResponse) {
		option (google.api.http) = {
			post: "/v1/get/wallet/balance"
			body: "*"
		};
	}
	rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse) {
		option (google.api.http) = {
			post: "/v1/create/transaction"
			body: "*"
		};
	}
	rpc GetTransaction (GetTransactionRequest) returns (GetTransactionResponse) {
		option (google.api.http) = {
			post: "/v1/get/transaction"
			body: "*"
		};
	}
  	rpc Version (google.protobuf.Empty) returns (VersionResponse){
		option (google.api.http) = {
			post: "/version"
			body: "*"
		};
  	}
}

message CreateWalletRequest {
	string Name = 100;
	string Unit = 110;
}

message CreateWalletResponse {
}

message GetWalletBalanceRequest {
	string Name 	= 100;
	string Address 	= 110;
}

message GetWalletBalanceResponse {
	double Amount = 100;
}

// share transaction structure
message BaseTx {
	// 站内交易ID
	string TransactionIDInsite = 1;
	// 币种名称(唯一)
	string CoinName = 2;
	// 不入库的参考金额
	double AmountFloat64 = 3;
	// 发送方
	string AddressFrom = 4;
	// 接收方
	string AddressTo = 5;
	// sql enum: recharge, payment, withdraw, unknown
	string InsiteTxType = 6;
	// 用户提交请求时的时间戳，与2FA绑定
	int64 CreatetimeUTC = 12;
}

// GetTransaction 参数
message GetTransactionRequest {
	// 站内交易ID
	string TransactionIDInsite = 1;
}
// GetTransaction 返回
message GetTransactionResponse {
	BaseTx Info = 1;
	// 上次更新时间
	int64 UpdatetimeUTC = 13;
	// bool, 便于调用方判断
	bool Succeeded = 14;
	// 不success不fail就是pending了
	bool Failed = 15;
	// 公链交易ID（如有）
	string TransactionIDChain = 7;
	// 为done则成功；全部状态："pending_review", "pending_process", "pending_signinfo", "pending_sign", "pending_broadcast", "pending_confirm", "done", "rejected", "error", "error_expected"
	string Status = 8;
}

message CreateTransactionRequest {
	string TransactionID 	= 100;
	string Name 			= 110;
	double Amount 			= 120;
	string From 			= 130;
	string To 				= 140;
}

message CreateTransactionResponse {
}

message VersionResponse {
	string Info = 100;
}
