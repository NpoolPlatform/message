syntax = "proto3";

package basal.manager.api.v1;

option go_package = "github.com/NpoolPlatform/message/npool/basal/mgr/v1/api";

import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateAPI     (CreateAPIRequest)     returns (CreateAPIResponse)     {}
    rpc CreateAPIs    (CreateAPIsRequest)    returns (CreateAPIsResponse)    {}
    rpc UpdateAPI     (UpdateAPIRequest)     returns (UpdateAPIResponse)     {}
    rpc GetAPI        (GetAPIRequest)        returns (GetAPIResponse)        {}
    rpc GetAPIOnly    (GetAPIOnlyRequest)    returns (GetAPIOnlyResponse)    {}
    rpc GetAPIs       (GetAPIsRequest)       returns (GetAPIsResponse)       {}
    rpc ExistAPI      (ExistAPIRequest)      returns (ExistAPIResponse)      {}
    rpc ExistAPIConds (ExistAPICondsRequest) returns (ExistAPICondsResponse) {}
    rpc CountAPIs     (CountAPIsRequest)     returns (CountAPIsResponse)     {}
    rpc DeleteAPI     (DeleteAPIRequest)     returns (DeleteAPIResponse)     {}
}

enum Protocol {
    DefaultProtocol = 0;

    GRPC  = 10;
    HTTP  = 20;
}

enum Method {
    DefaultMethod   = 0;

    GET   = 10;
    POST  = 20;
}

message APIReq {
    optional string     ID             = 10;
    optional Protocol   Protocol       = 20;
    optional string     ServiceName    = 30;
    optional Method     Method         = 40;
    optional string     MethodName     = 50;
    optional string     Path           = 60;
    optional bool       Exported       = 70;
    optional string     PathPrefix     = 80;
    repeated string     Domains        = 90;
    optional bool       Depracated     = 100;
}

message API {
    string     ID             = 10;
    Protocol   Protocol       = 20;
    string     ServiceName    = 30;
    Method     Method         = 40;
    string     MethodName     = 50;
    string     Path           = 60;
    bool       Exported       = 70;
    string     PathPrefix     = 80;
    string     Domains        = 90;
    bool       Depracated     = 100;
    uint32     CreatedAt      = 110;
    uint32     UpdatedAt      = 120;
}

message Conds {
    optional npool.v1.StringVal      ID         = 10;
    optional npool.v1.Int32Val       Protocol   = 20;
    optional npool.v1.Int32Val       Method     = 30;
    optional npool.v1.BoolVal        Exported   = 40;
    optional npool.v1.BoolVal        Depracated = 50;
}


message CreateAPIRequest {
    APIReq Info = 10;
}

message CreateAPIResponse {
    API Info = 10;
}

message CreateAPIsRequest {
    repeated APIReq Infos = 10;
}

message CreateAPIsResponse {
    repeated API Infos = 10;
}

message UpdateAPIRequest {
    APIReq Info = 10;
}

message UpdateAPIResponse {
    API Info = 10;
}

message GetAPIRequest {
    string ID = 10;
}

message GetAPIResponse {
    API Info = 10;
}

message GetAPIsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetAPIsResponse {
    repeated API Infos = 10;
    uint32       Total = 20;
}

message GetAPIOnlyRequest {
    Conds Conds = 10;
}

message GetAPIOnlyResponse {
    API Info = 10;
}

message ExistAPIRequest {
    string ID = 10;
}

message ExistAPIResponse {
    bool Info = 10;
}

message ExistAPICondsRequest {
    Conds Conds = 10;
}

message ExistAPICondsResponse {
    bool Info = 10;
}

message CountAPIsRequest {
    Conds Conds = 10;
}

message CountAPIsResponse {
    uint32 Info = 10;
}

message DeleteAPIRequest {
    string ID = 10;
}

message DeleteAPIResponse {
    API Info = 10;
}

