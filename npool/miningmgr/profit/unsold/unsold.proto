syntax = "proto3";

package mining.manager.profit.unsold.v1;

option go_package = "github.com/NpoolPlatform/message/npool/miningmgr/profit/unsold";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service ProfitUnsold {
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse) {}

    rpc CreateUnsold (CreateUnsoldRequest) returns (CreateUnsoldResponse) {}

    rpc CreateUnsolds (CreateUnsoldsRequest) returns (CreateUnsoldsResponse) {}

    rpc GetUnsold (GetUnsoldRequest) returns (GetUnsoldResponse) {}

    rpc GetUnsoldOnly (GetUnsoldOnlyRequest) returns (GetUnsoldOnlyResponse) {}

    rpc GetUnsolds (GetUnsoldsRequest) returns (GetUnsoldsResponse) {}

    rpc ExistUnsold (ExistUnsoldRequest) returns (ExistUnsoldResponse) {}

    rpc ExistUnsoldConds (ExistUnsoldCondsRequest) returns (ExistUnsoldCondsResponse) {}

    rpc CountUnsolds (CountUnsoldsRequest) returns (CountUnsoldsResponse) {}
}

message UnsoldReq {
    optional string ID          = 10;
    optional string GoodID      = 20;
    optional string CoinTypeID  = 30;
    optional string Amount      = 40;
    optional uint32 BenefitDate = 50;
    optional uint32 CreatedAt   = 60;
}

message Unsold {
    string ID          = 10;
    string GoodID      = 20;
    string CoinTypeID  = 30;
    string Amount      = 40;
    uint32 BenefitDate = 50;
    uint32 CreatedAt   = 60;
}

message Conds {
    optional npool.v1.StringVal ID          = 10;
    optional npool.v1.StringVal GoodID      = 20;
    optional npool.v1.StringVal CoinTypeID  = 30;
    optional npool.v1.StringVal Amount      = 40;
    optional npool.v1.Uint32Val BenefitDate = 50;
}


message CreateUnsoldRequest {
    UnsoldReq Info = 10;
}

message CreateUnsoldResponse {
    Unsold Info = 10;
}

message CreateUnsoldsRequest {
    repeated UnsoldReq Infos = 10;
}

message CreateUnsoldsResponse {
    repeated Unsold Infos = 10;
}

message GetUnsoldRequest {
    string ID = 10;
}

message GetUnsoldResponse {
    Unsold Info = 10;
}

message GetUnsoldsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetUnsoldsResponse {
    repeated Unsold Infos = 10;
    uint32 Total          = 20;
}

message GetUnsoldOnlyRequest {
    Conds Conds = 10;
}

message GetUnsoldOnlyResponse {
    Unsold Info = 10;
}

message ExistUnsoldRequest {
    string ID = 10;
}

message ExistUnsoldResponse {
    bool Info = 10;
}

message ExistUnsoldCondsRequest {
    Conds Conds = 10;
}

message ExistUnsoldCondsResponse {
    bool Info = 10;
}

message CountUnsoldsRequest {
    Conds Conds = 10;
}

message CountUnsoldsResponse {
    uint32 Info = 10;
}

