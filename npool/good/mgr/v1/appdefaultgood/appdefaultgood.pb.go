// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/good/mgr/v1/appdefaultgood/appdefaultgood.proto

package appdefaultgood

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "github.com/NpoolPlatform/message/npool/inspire/mgr/v1/commission"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppDefaultGoodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID      *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	GoodID     *string `protobuf:"bytes,30,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID *string `protobuf:"bytes,40,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *AppDefaultGoodReq) Reset() {
	*x = AppDefaultGoodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDefaultGoodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDefaultGoodReq) ProtoMessage() {}

func (x *AppDefaultGoodReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDefaultGoodReq.ProtoReflect.Descriptor instead.
func (*AppDefaultGoodReq) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{0}
}

func (x *AppDefaultGoodReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AppDefaultGoodReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *AppDefaultGoodReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *AppDefaultGoodReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

type AppDefaultGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	GoodID     string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID string `protobuf:"bytes,40,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CreatedAt  uint32 `protobuf:"varint,50,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  uint32 `protobuf:"varint,60,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *AppDefaultGood) Reset() {
	*x = AppDefaultGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDefaultGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDefaultGood) ProtoMessage() {}

func (x *AppDefaultGood) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDefaultGood.ProtoReflect.Descriptor instead.
func (*AppDefaultGood) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{1}
}

func (x *AppDefaultGood) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppDefaultGood) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppDefaultGood) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *AppDefaultGood) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *AppDefaultGood) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppDefaultGood) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *npool.StringVal      `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID       *npool.StringVal      `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	GoodID      *npool.StringVal      `protobuf:"bytes,30,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	CoinTypeID  *npool.StringVal      `protobuf:"bytes,40,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	GoodIDs     *npool.StringSliceVal `protobuf:"bytes,50,opt,name=GoodIDs,proto3,oneof" json:"GoodIDs,omitempty"`
	CoinTypeIDs *npool.StringSliceVal `protobuf:"bytes,60,opt,name=CoinTypeIDs,proto3,oneof" json:"CoinTypeIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetGoodID() *npool.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

func (x *Conds) GetGoodIDs() *npool.StringSliceVal {
	if x != nil {
		return x.GoodIDs
	}
	return nil
}

func (x *Conds) GetCoinTypeIDs() *npool.StringSliceVal {
	if x != nil {
		return x.CoinTypeIDs
	}
	return nil
}

type CreateAppDefaultGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGoodReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppDefaultGoodRequest) Reset() {
	*x = CreateAppDefaultGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppDefaultGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppDefaultGoodRequest) ProtoMessage() {}

func (x *CreateAppDefaultGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppDefaultGoodRequest.ProtoReflect.Descriptor instead.
func (*CreateAppDefaultGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppDefaultGoodRequest) GetInfo() *AppDefaultGoodReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppDefaultGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppDefaultGoodResponse) Reset() {
	*x = CreateAppDefaultGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppDefaultGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppDefaultGoodResponse) ProtoMessage() {}

func (x *CreateAppDefaultGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppDefaultGoodResponse.ProtoReflect.Descriptor instead.
func (*CreateAppDefaultGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppDefaultGoodResponse) GetInfo() *AppDefaultGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppDefaultGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppDefaultGoodReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppDefaultGoodsRequest) Reset() {
	*x = CreateAppDefaultGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppDefaultGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppDefaultGoodsRequest) ProtoMessage() {}

func (x *CreateAppDefaultGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppDefaultGoodsRequest.ProtoReflect.Descriptor instead.
func (*CreateAppDefaultGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAppDefaultGoodsRequest) GetInfos() []*AppDefaultGoodReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateAppDefaultGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppDefaultGood `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppDefaultGoodsResponse) Reset() {
	*x = CreateAppDefaultGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppDefaultGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppDefaultGoodsResponse) ProtoMessage() {}

func (x *CreateAppDefaultGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppDefaultGoodsResponse.ProtoReflect.Descriptor instead.
func (*CreateAppDefaultGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAppDefaultGoodsResponse) GetInfos() []*AppDefaultGood {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateAppDefaultGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGoodReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppDefaultGoodRequest) Reset() {
	*x = UpdateAppDefaultGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppDefaultGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppDefaultGoodRequest) ProtoMessage() {}

func (x *UpdateAppDefaultGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppDefaultGoodRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppDefaultGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAppDefaultGoodRequest) GetInfo() *AppDefaultGoodReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppDefaultGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppDefaultGoodResponse) Reset() {
	*x = UpdateAppDefaultGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppDefaultGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppDefaultGoodResponse) ProtoMessage() {}

func (x *UpdateAppDefaultGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppDefaultGoodResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppDefaultGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppDefaultGoodResponse) GetInfo() *AppDefaultGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppDefaultGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppDefaultGoodRequest) Reset() {
	*x = GetAppDefaultGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodRequest) ProtoMessage() {}

func (x *GetAppDefaultGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodRequest.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppDefaultGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppDefaultGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppDefaultGoodResponse) Reset() {
	*x = GetAppDefaultGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodResponse) ProtoMessage() {}

func (x *GetAppDefaultGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodResponse.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppDefaultGoodResponse) GetInfo() *AppDefaultGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAppDefaultGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppDefaultGoodsRequest) Reset() {
	*x = GetAppDefaultGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodsRequest) ProtoMessage() {}

func (x *GetAppDefaultGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppDefaultGoodsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetAppDefaultGoodsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppDefaultGoodsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppDefaultGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppDefaultGood `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32            `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppDefaultGoodsResponse) Reset() {
	*x = GetAppDefaultGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodsResponse) ProtoMessage() {}

func (x *GetAppDefaultGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppDefaultGoodsResponse) GetInfos() []*AppDefaultGood {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppDefaultGoodsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppDefaultGoodOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetAppDefaultGoodOnlyRequest) Reset() {
	*x = GetAppDefaultGoodOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodOnlyRequest) ProtoMessage() {}

func (x *GetAppDefaultGoodOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{13}
}

func (x *GetAppDefaultGoodOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetAppDefaultGoodOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppDefaultGoodOnlyResponse) Reset() {
	*x = GetAppDefaultGoodOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppDefaultGoodOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppDefaultGoodOnlyResponse) ProtoMessage() {}

func (x *GetAppDefaultGoodOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppDefaultGoodOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetAppDefaultGoodOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{14}
}

func (x *GetAppDefaultGoodOnlyResponse) GetInfo() *AppDefaultGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistAppDefaultGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistAppDefaultGoodRequest) Reset() {
	*x = ExistAppDefaultGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppDefaultGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppDefaultGoodRequest) ProtoMessage() {}

func (x *ExistAppDefaultGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppDefaultGoodRequest.ProtoReflect.Descriptor instead.
func (*ExistAppDefaultGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{15}
}

func (x *ExistAppDefaultGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistAppDefaultGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppDefaultGoodResponse) Reset() {
	*x = ExistAppDefaultGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppDefaultGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppDefaultGoodResponse) ProtoMessage() {}

func (x *ExistAppDefaultGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppDefaultGoodResponse.ProtoReflect.Descriptor instead.
func (*ExistAppDefaultGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{16}
}

func (x *ExistAppDefaultGoodResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistAppDefaultGoodCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAppDefaultGoodCondsRequest) Reset() {
	*x = ExistAppDefaultGoodCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppDefaultGoodCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppDefaultGoodCondsRequest) ProtoMessage() {}

func (x *ExistAppDefaultGoodCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppDefaultGoodCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAppDefaultGoodCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{17}
}

func (x *ExistAppDefaultGoodCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAppDefaultGoodCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppDefaultGoodCondsResponse) Reset() {
	*x = ExistAppDefaultGoodCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppDefaultGoodCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppDefaultGoodCondsResponse) ProtoMessage() {}

func (x *ExistAppDefaultGoodCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppDefaultGoodCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAppDefaultGoodCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{18}
}

func (x *ExistAppDefaultGoodCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountAppDefaultGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountAppDefaultGoodsRequest) Reset() {
	*x = CountAppDefaultGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppDefaultGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppDefaultGoodsRequest) ProtoMessage() {}

func (x *CountAppDefaultGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppDefaultGoodsRequest.ProtoReflect.Descriptor instead.
func (*CountAppDefaultGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{19}
}

func (x *CountAppDefaultGoodsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountAppDefaultGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountAppDefaultGoodsResponse) Reset() {
	*x = CountAppDefaultGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppDefaultGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppDefaultGoodsResponse) ProtoMessage() {}

func (x *CountAppDefaultGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppDefaultGoodsResponse.ProtoReflect.Descriptor instead.
func (*CountAppDefaultGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{20}
}

func (x *CountAppDefaultGoodsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteAppDefaultGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAppDefaultGoodRequest) Reset() {
	*x = DeleteAppDefaultGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppDefaultGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppDefaultGoodRequest) ProtoMessage() {}

func (x *DeleteAppDefaultGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppDefaultGoodRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppDefaultGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAppDefaultGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteAppDefaultGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppDefaultGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAppDefaultGoodResponse) Reset() {
	*x = DeleteAppDefaultGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppDefaultGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppDefaultGoodResponse) ProtoMessage() {}

func (x *DeleteAppDefaultGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppDefaultGoodResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppDefaultGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAppDefaultGoodResponse) GetInfo() *AppDefaultGood {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto protoreflect.FileDescriptor

var file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDesc = []byte{
	0x0a, 0x35, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f,
	0x6f, 0x64, 0x2f, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x73, 0x70,
	0x69, 0x72, 0x65, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0xaa, 0x01, 0x0a,
	0x0e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8e, 0x03, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x48, 0x02, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x48, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x22, 0x64, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x62, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x65, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x64, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5b,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2c, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x31,
	0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5e, 0x0a, 0x1f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x36, 0x0a, 0x20, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x1b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x1c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xe5, 0x0b, 0x0a,
	0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x3a, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93,
	0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x67, 0x6f, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescOnce sync.Once
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescData = file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDesc
)

func file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescGZIP() []byte {
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescOnce.Do(func() {
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescData)
	})
	return file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDescData
}

var file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_goTypes = []interface{}{
	(*AppDefaultGoodReq)(nil),                // 0: good.manager.appdefaultgood.v1.AppDefaultGoodReq
	(*AppDefaultGood)(nil),                   // 1: good.manager.appdefaultgood.v1.AppDefaultGood
	(*Conds)(nil),                            // 2: good.manager.appdefaultgood.v1.Conds
	(*CreateAppDefaultGoodRequest)(nil),      // 3: good.manager.appdefaultgood.v1.CreateAppDefaultGoodRequest
	(*CreateAppDefaultGoodResponse)(nil),     // 4: good.manager.appdefaultgood.v1.CreateAppDefaultGoodResponse
	(*CreateAppDefaultGoodsRequest)(nil),     // 5: good.manager.appdefaultgood.v1.CreateAppDefaultGoodsRequest
	(*CreateAppDefaultGoodsResponse)(nil),    // 6: good.manager.appdefaultgood.v1.CreateAppDefaultGoodsResponse
	(*UpdateAppDefaultGoodRequest)(nil),      // 7: good.manager.appdefaultgood.v1.UpdateAppDefaultGoodRequest
	(*UpdateAppDefaultGoodResponse)(nil),     // 8: good.manager.appdefaultgood.v1.UpdateAppDefaultGoodResponse
	(*GetAppDefaultGoodRequest)(nil),         // 9: good.manager.appdefaultgood.v1.GetAppDefaultGoodRequest
	(*GetAppDefaultGoodResponse)(nil),        // 10: good.manager.appdefaultgood.v1.GetAppDefaultGoodResponse
	(*GetAppDefaultGoodsRequest)(nil),        // 11: good.manager.appdefaultgood.v1.GetAppDefaultGoodsRequest
	(*GetAppDefaultGoodsResponse)(nil),       // 12: good.manager.appdefaultgood.v1.GetAppDefaultGoodsResponse
	(*GetAppDefaultGoodOnlyRequest)(nil),     // 13: good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyRequest
	(*GetAppDefaultGoodOnlyResponse)(nil),    // 14: good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyResponse
	(*ExistAppDefaultGoodRequest)(nil),       // 15: good.manager.appdefaultgood.v1.ExistAppDefaultGoodRequest
	(*ExistAppDefaultGoodResponse)(nil),      // 16: good.manager.appdefaultgood.v1.ExistAppDefaultGoodResponse
	(*ExistAppDefaultGoodCondsRequest)(nil),  // 17: good.manager.appdefaultgood.v1.ExistAppDefaultGoodCondsRequest
	(*ExistAppDefaultGoodCondsResponse)(nil), // 18: good.manager.appdefaultgood.v1.ExistAppDefaultGoodCondsResponse
	(*CountAppDefaultGoodsRequest)(nil),      // 19: good.manager.appdefaultgood.v1.CountAppDefaultGoodsRequest
	(*CountAppDefaultGoodsResponse)(nil),     // 20: good.manager.appdefaultgood.v1.CountAppDefaultGoodsResponse
	(*DeleteAppDefaultGoodRequest)(nil),      // 21: good.manager.appdefaultgood.v1.DeleteAppDefaultGoodRequest
	(*DeleteAppDefaultGoodResponse)(nil),     // 22: good.manager.appdefaultgood.v1.DeleteAppDefaultGoodResponse
	(*npool.StringVal)(nil),                  // 23: npool.v1.StringVal
	(*npool.StringSliceVal)(nil),             // 24: npool.v1.StringSliceVal
}
var file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_depIdxs = []int32{
	23, // 0: good.manager.appdefaultgood.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: good.manager.appdefaultgood.v1.Conds.AppID:type_name -> npool.v1.StringVal
	23, // 2: good.manager.appdefaultgood.v1.Conds.GoodID:type_name -> npool.v1.StringVal
	23, // 3: good.manager.appdefaultgood.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	24, // 4: good.manager.appdefaultgood.v1.Conds.GoodIDs:type_name -> npool.v1.StringSliceVal
	24, // 5: good.manager.appdefaultgood.v1.Conds.CoinTypeIDs:type_name -> npool.v1.StringSliceVal
	0,  // 6: good.manager.appdefaultgood.v1.CreateAppDefaultGoodRequest.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGoodReq
	1,  // 7: good.manager.appdefaultgood.v1.CreateAppDefaultGoodResponse.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	0,  // 8: good.manager.appdefaultgood.v1.CreateAppDefaultGoodsRequest.Infos:type_name -> good.manager.appdefaultgood.v1.AppDefaultGoodReq
	1,  // 9: good.manager.appdefaultgood.v1.CreateAppDefaultGoodsResponse.Infos:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	0,  // 10: good.manager.appdefaultgood.v1.UpdateAppDefaultGoodRequest.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGoodReq
	1,  // 11: good.manager.appdefaultgood.v1.UpdateAppDefaultGoodResponse.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	1,  // 12: good.manager.appdefaultgood.v1.GetAppDefaultGoodResponse.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	2,  // 13: good.manager.appdefaultgood.v1.GetAppDefaultGoodsRequest.Conds:type_name -> good.manager.appdefaultgood.v1.Conds
	1,  // 14: good.manager.appdefaultgood.v1.GetAppDefaultGoodsResponse.Infos:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	2,  // 15: good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyRequest.Conds:type_name -> good.manager.appdefaultgood.v1.Conds
	1,  // 16: good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyResponse.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	2,  // 17: good.manager.appdefaultgood.v1.ExistAppDefaultGoodCondsRequest.Conds:type_name -> good.manager.appdefaultgood.v1.Conds
	2,  // 18: good.manager.appdefaultgood.v1.CountAppDefaultGoodsRequest.Conds:type_name -> good.manager.appdefaultgood.v1.Conds
	1,  // 19: good.manager.appdefaultgood.v1.DeleteAppDefaultGoodResponse.Info:type_name -> good.manager.appdefaultgood.v1.AppDefaultGood
	3,  // 20: good.manager.appdefaultgood.v1.Manager.CreateAppDefaultGood:input_type -> good.manager.appdefaultgood.v1.CreateAppDefaultGoodRequest
	5,  // 21: good.manager.appdefaultgood.v1.Manager.CreateAppDefaultGoods:input_type -> good.manager.appdefaultgood.v1.CreateAppDefaultGoodsRequest
	7,  // 22: good.manager.appdefaultgood.v1.Manager.UpdateAppDefaultGood:input_type -> good.manager.appdefaultgood.v1.UpdateAppDefaultGoodRequest
	9,  // 23: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGood:input_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodRequest
	13, // 24: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGoodOnly:input_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyRequest
	11, // 25: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGoods:input_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodsRequest
	15, // 26: good.manager.appdefaultgood.v1.Manager.ExistAppDefaultGood:input_type -> good.manager.appdefaultgood.v1.ExistAppDefaultGoodRequest
	17, // 27: good.manager.appdefaultgood.v1.Manager.ExistAppDefaultGoodConds:input_type -> good.manager.appdefaultgood.v1.ExistAppDefaultGoodCondsRequest
	19, // 28: good.manager.appdefaultgood.v1.Manager.CountAppDefaultGoods:input_type -> good.manager.appdefaultgood.v1.CountAppDefaultGoodsRequest
	21, // 29: good.manager.appdefaultgood.v1.Manager.DeleteAppDefaultGood:input_type -> good.manager.appdefaultgood.v1.DeleteAppDefaultGoodRequest
	4,  // 30: good.manager.appdefaultgood.v1.Manager.CreateAppDefaultGood:output_type -> good.manager.appdefaultgood.v1.CreateAppDefaultGoodResponse
	6,  // 31: good.manager.appdefaultgood.v1.Manager.CreateAppDefaultGoods:output_type -> good.manager.appdefaultgood.v1.CreateAppDefaultGoodsResponse
	8,  // 32: good.manager.appdefaultgood.v1.Manager.UpdateAppDefaultGood:output_type -> good.manager.appdefaultgood.v1.UpdateAppDefaultGoodResponse
	10, // 33: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGood:output_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodResponse
	14, // 34: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGoodOnly:output_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodOnlyResponse
	12, // 35: good.manager.appdefaultgood.v1.Manager.GetAppDefaultGoods:output_type -> good.manager.appdefaultgood.v1.GetAppDefaultGoodsResponse
	16, // 36: good.manager.appdefaultgood.v1.Manager.ExistAppDefaultGood:output_type -> good.manager.appdefaultgood.v1.ExistAppDefaultGoodResponse
	18, // 37: good.manager.appdefaultgood.v1.Manager.ExistAppDefaultGoodConds:output_type -> good.manager.appdefaultgood.v1.ExistAppDefaultGoodCondsResponse
	20, // 38: good.manager.appdefaultgood.v1.Manager.CountAppDefaultGoods:output_type -> good.manager.appdefaultgood.v1.CountAppDefaultGoodsResponse
	22, // 39: good.manager.appdefaultgood.v1.Manager.DeleteAppDefaultGood:output_type -> good.manager.appdefaultgood.v1.DeleteAppDefaultGoodResponse
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_init() }
func file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_init() {
	if File_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDefaultGoodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDefaultGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppDefaultGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppDefaultGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppDefaultGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppDefaultGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppDefaultGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppDefaultGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppDefaultGoodOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppDefaultGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppDefaultGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppDefaultGoodCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppDefaultGoodCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppDefaultGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppDefaultGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppDefaultGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppDefaultGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_goTypes,
		DependencyIndexes: file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_depIdxs,
		MessageInfos:      file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_msgTypes,
	}.Build()
	File_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto = out.File
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_rawDesc = nil
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_goTypes = nil
	file_npool_good_mgr_v1_appdefaultgood_appdefaultgood_proto_depIdxs = nil
}
