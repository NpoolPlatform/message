{
  "swagger": "2.0",
  "info": {
    "title": "npool/good/mgr/v1/good/good.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Manager"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/mgr_good_app_CountGoods": {
      "post": {
        "operationId": "Manager_CountGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CountGoodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CountGoodsRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_CreateGood": {
      "post": {
        "operationId": "Manager_CreateGood",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateGoodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGoodRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_CreateGoods": {
      "post": {
        "operationId": "Manager_CreateGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateGoodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGoodsRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_DeleteGood": {
      "post": {
        "operationId": "Manager_DeleteGood",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteGoodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteGoodRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_ExistGood": {
      "post": {
        "operationId": "Manager_ExistGood",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExistGoodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExistGoodRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_ExistGoodConds": {
      "post": {
        "operationId": "Manager_ExistGoodConds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExistGoodCondsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExistGoodCondsRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_GetGood": {
      "post": {
        "operationId": "Manager_GetGood",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoodRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_GetGoodOnly": {
      "post": {
        "operationId": "Manager_GetGoodOnly",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoodOnlyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoodOnlyRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_GetGoods": {
      "post": {
        "operationId": "Manager_GetGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGoodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGoodsRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/v1/mgr_good_app_UpdateGood": {
      "post": {
        "operationId": "Manager_UpdateGood",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateGoodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateGoodRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BenefitState": {
      "type": "string",
      "enum": [
        "DefaultBenefitState",
        "BenefitWait",
        "BenefitTransferring",
        "BenefitBookKeeping"
      ],
      "default": "DefaultBenefitState"
    },
    "v1BenefitType": {
      "type": "string",
      "enum": [
        "DefaultBenefitType",
        "BenefitTypePlatform",
        "BenefitTypePool"
      ],
      "default": "DefaultBenefitType",
      "title": "- BenefitTypePlatform: Platform receive benefit, then distribute benefit to user\n - BenefitTypePool: User receive benefit from pool directly"
    },
    "v1Conds": {
      "type": "object",
      "properties": {
        "ID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "DeviceInfoID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "CoinTypeID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "VendorLocationID": {
          "$ref": "#/definitions/v1StringVal"
        },
        "BenefitType": {
          "$ref": "#/definitions/v1Int32Val"
        },
        "GoodType": {
          "$ref": "#/definitions/v1Int32Val"
        },
        "IDs": {
          "$ref": "#/definitions/v1StringSliceVal"
        },
        "BenefitState": {
          "$ref": "#/definitions/v1Int32Val"
        }
      }
    },
    "v1CountGoodsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v1Conds"
        }
      }
    },
    "v1CountGoodsResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateGoodRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1GoodReq"
        }
      }
    },
    "v1CreateGoodResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Good"
        }
      }
    },
    "v1CreateGoodsRequest": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GoodReq"
          }
        }
      }
    },
    "v1CreateGoodsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Good"
          }
        }
      }
    },
    "v1DeleteGoodRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "v1DeleteGoodResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Good"
        }
      }
    },
    "v1ExistGoodCondsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v1Conds"
        }
      }
    },
    "v1ExistGoodCondsResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "type": "boolean"
        }
      }
    },
    "v1ExistGoodRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "v1ExistGoodResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "type": "boolean"
        }
      }
    },
    "v1GetGoodOnlyRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v1Conds"
        }
      }
    },
    "v1GetGoodOnlyResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Good"
        }
      }
    },
    "v1GetGoodRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "v1GetGoodResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Good"
        }
      }
    },
    "v1GetGoodsRequest": {
      "type": "object",
      "properties": {
        "Conds": {
          "$ref": "#/definitions/v1Conds"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GetGoodsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Good"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1Good": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "DeviceInfoID": {
          "type": "string"
        },
        "DurationDays": {
          "type": "integer",
          "format": "int32"
        },
        "CoinTypeID": {
          "type": "string"
        },
        "InheritFromGoodID": {
          "type": "string"
        },
        "VendorLocationID": {
          "type": "string"
        },
        "Price": {
          "type": "string"
        },
        "BenefitType": {
          "$ref": "#/definitions/v1BenefitType"
        },
        "GoodType": {
          "$ref": "#/definitions/v1GoodType"
        },
        "Title": {
          "type": "string"
        },
        "Unit": {
          "type": "string"
        },
        "UnitAmount": {
          "type": "integer",
          "format": "int32"
        },
        "SupportCoinTypeIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeliveryAt": {
          "type": "integer",
          "format": "int64"
        },
        "StartAt": {
          "type": "integer",
          "format": "int64"
        },
        "TestOnly": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "DeletedAt": {
          "type": "integer",
          "format": "int64"
        },
        "BenefitIntervalHours": {
          "type": "integer",
          "format": "int64"
        },
        "BenefitState": {
          "$ref": "#/definitions/v1BenefitState"
        },
        "LastBenefitAt": {
          "type": "integer",
          "format": "int64"
        },
        "BenefitTIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NextBenefitStartAmount": {
          "type": "string"
        },
        "LastBenefitAmount": {
          "type": "string"
        }
      }
    },
    "v1GoodReq": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "DeviceInfoID": {
          "type": "string"
        },
        "DurationDays": {
          "type": "integer",
          "format": "int32"
        },
        "CoinTypeID": {
          "type": "string"
        },
        "InheritFromGoodID": {
          "type": "string"
        },
        "VendorLocationID": {
          "type": "string"
        },
        "Price": {
          "type": "string"
        },
        "BenefitType": {
          "$ref": "#/definitions/v1BenefitType"
        },
        "GoodType": {
          "$ref": "#/definitions/v1GoodType"
        },
        "Title": {
          "type": "string"
        },
        "Unit": {
          "type": "string"
        },
        "UnitAmount": {
          "type": "integer",
          "format": "int32",
          "title": "For normal good, it's unit amount, or a percent"
        },
        "SupportCoinTypeIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Except the main coin type mining, this device also support multiple coin type mining"
        },
        "DeliveryAt": {
          "type": "integer",
          "format": "int64"
        },
        "StartAt": {
          "type": "integer",
          "format": "int64"
        },
        "TestOnly": {
          "type": "boolean"
        },
        "BenefitIntervalHours": {
          "type": "integer",
          "format": "int64"
        },
        "BenefitState": {
          "$ref": "#/definitions/v1BenefitState"
        },
        "BenefitTIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NextBenefitStartAmount": {
          "type": "string"
        },
        "LastBenefitAmount": {
          "type": "string"
        }
      }
    },
    "v1GoodType": {
      "type": "string",
      "enum": [
        "DefaultGoodType",
        "GoodTypeClassicMining",
        "GoodTypeUnionMining",
        "GoodTypeTechniqueFee",
        "GoodTypeElectricityFee"
      ],
      "default": "DefaultGoodType",
      "title": "- GoodTypeClassicMining: Classic good: user pay for both device and other material, get all benefit\n - GoodTypeUnionMining: Union good: user pay for a part of material, get part of benefit\n - GoodTypeTechniqueFee: Fee good"
    },
    "v1Int32Val": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1StringSliceVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StringVal": {
      "type": "object",
      "properties": {
        "Op": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "v1UpdateGoodRequest": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1GoodReq"
        }
      }
    },
    "v1UpdateGoodResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Good"
        }
      }
    }
  }
}
