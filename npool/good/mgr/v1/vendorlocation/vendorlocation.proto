syntax = "proto3";

package good.manager.vendorlocation.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mgr/v1/vendorlocation";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateVendorLocation     (CreateVendorLocationRequest)     returns (CreateVendorLocationResponse)     {}
    rpc CreateVendorLocations    (CreateVendorLocationsRequest)    returns (CreateVendorLocationsResponse)    {}
    rpc UpdateVendorLocation     (UpdateVendorLocationRequest)     returns (UpdateVendorLocationResponse)     {}
    rpc GetVendorLocation        (GetVendorLocationRequest)        returns (GetVendorLocationResponse)        {}
    rpc GetVendorLocationOnly    (GetVendorLocationOnlyRequest)    returns (GetVendorLocationOnlyResponse)    {}
    rpc GetVendorLocations       (GetVendorLocationsRequest)       returns (GetVendorLocationsResponse)       {}
    rpc ExistVendorLocation      (ExistVendorLocationRequest)      returns (ExistVendorLocationResponse)      {}
    rpc ExistVendorLocationConds (ExistVendorLocationCondsRequest) returns (ExistVendorLocationCondsResponse) {}
    rpc CountVendorLocations     (CountVendorLocationsRequest)     returns (CountVendorLocationsResponse)     {}
    rpc DeleteVendorLocation     (DeleteVendorLocationRequest)     returns (DeleteVendorLocationResponse)     {}
}

message VendorLocationReq {
    optional string ID        = 10;
    optional string Country   = 20;
    optional string Province  = 30;
    optional string City      = 40;
    optional string Address   = 50;
}

message VendorLocation {
    string ID        = 10;
    string Country   = 20;
    string Province  = 30;
    string City      = 40;
    string Address   = 50;
    uint32 CreatedAt = 60;
    uint32 UpdatedAt = 70;
    uint32 DeletedAt = 80;
}

message Conds {
    optional npool.v1.StringVal ID       = 10;
    optional npool.v1.StringVal Country  = 20;
    optional npool.v1.StringVal Province = 30;
}


message CreateVendorLocationRequest {
    VendorLocationReq Info = 10;
}

message CreateVendorLocationResponse {
    VendorLocation Info = 10;
}

message CreateVendorLocationsRequest {
    repeated VendorLocationReq Infos = 10;
}

message CreateVendorLocationsResponse {
    repeated VendorLocation Infos = 10;
}

message UpdateVendorLocationRequest {
    VendorLocationReq Info = 10;
}

message UpdateVendorLocationResponse {
    VendorLocation Info = 10;
}

message GetVendorLocationRequest {
    string ID = 10;
}

message GetVendorLocationResponse {
    VendorLocation Info = 10;
}

message GetVendorLocationsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetVendorLocationsResponse {
    repeated VendorLocation Infos = 10;
    uint32                  Total = 20;
}

message GetVendorLocationOnlyRequest {
    Conds Conds = 10;
}

message GetVendorLocationOnlyResponse {
    VendorLocation Info = 10;
}

message ExistVendorLocationRequest {
    string ID = 10;
}

message ExistVendorLocationResponse {
    bool Info = 10;
}

message ExistVendorLocationCondsRequest {
    Conds Conds = 10;
}

message ExistVendorLocationCondsResponse {
    bool Info = 10;
}

message CountVendorLocationsRequest {
    Conds Conds = 10;
}

message CountVendorLocationsResponse {
    uint32 Info = 10;
}

message DeleteVendorLocationRequest {
    string ID = 10;
}

message DeleteVendorLocationResponse {
    VendorLocation Info = 10;
}
