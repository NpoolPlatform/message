syntax = "proto3";

package good.manager.appgood.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mgr/v1/appgood";

import "google/protobuf/empty.proto";
import "npool/inspire/mgr/v1/commission/commission.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateAppGood     (CreateAppGoodRequest)     returns (CreateAppGoodResponse)     {}
    rpc CreateAppGoods    (CreateAppGoodsRequest)    returns (CreateAppGoodsResponse)    {}
    rpc UpdateAppGood     (UpdateAppGoodRequest)     returns (UpdateAppGoodResponse)     {}
    rpc GetAppGood        (GetAppGoodRequest)        returns (GetAppGoodResponse)        {}
    rpc GetAppGoodOnly    (GetAppGoodOnlyRequest)    returns (GetAppGoodOnlyResponse)    {}
    rpc GetAppGoods       (GetAppGoodsRequest)       returns (GetAppGoodsResponse)       {}
    rpc ExistAppGood      (ExistAppGoodRequest)      returns (ExistAppGoodResponse)      {}
    rpc ExistAppGoodConds (ExistAppGoodCondsRequest) returns (ExistAppGoodCondsResponse) {}
    rpc CountAppGoods     (CountAppGoodsRequest)     returns (CountAppGoodsResponse)     {}
    rpc DeleteAppGood     (DeleteAppGoodRequest)     returns (DeleteAppGoodResponse)     {}
}

message AppGoodReq {
    optional string ID                  = 10;
    optional string AppID               = 20;
    optional string GoodID              = 30;
    optional bool   Online              = 40;
    optional bool   Visible             = 50;
    optional string GoodName            = 60;
    optional string Price               = 70;
    optional int32  DisplayIndex        = 80;
    optional int32  PurchaseLimit       = 90;
    optional int32  CommissionPercent   = 100;
    optional uint32 SaleStartAt         = 110;
    optional uint32 SaleEndAt           = 120;
    optional uint32 ServiceStartAt      = 130;
    optional uint32 TechnicalFeeRatio   = 140;
    optional uint32 ElectricityFeeRatio = 150;
    optional string DailyRewardAmount   = 160;
    optional inspire.manager.commission.v1.SettleType CommissionSettleType = 170;
    repeated string Descriptions        = 180;
    optional string GoodBanner          = 190;
    repeated string DisplayNames        = 200;
    optional bool       EnablePurchase         = 210;
    optional bool       EnableProductPage      = 220;
    optional CancelMode CancelMode             = 230;
    optional string     UserPurchaseLimit      = 240;
    repeated string     DisplayColors          = 250;
    optional uint32     CancellableBeforeStart = 260;
    optional string     ProductPage            = 270;
    optional bool       EnableSetCommission    = 310;
}

message AppGood {
    string ID                  = 10;
    string AppID               = 20;
    string GoodID              = 30;
    bool   Online              = 40;
    bool   Visible             = 50;
    string GoodName            = 60;
    string Price               = 70;
    int32  DisplayIndex        = 80;
    int32  PurchaseLimit       = 90;
    int32  CommissionPercent   = 100;
    uint32 CreatedAt           = 110;
    uint32 UpdatedAt           = 120;
    uint32 DeletedAt           = 130;
    uint32 SaleStartAt         = 140;
    uint32 SaleEndAt           = 150;
    uint32 ServiceStartAt      = 160;
    uint32 TechnicalFeeRatio   = 170;
    uint32 ElectricityFeeRatio = 180;
    string DailyRewardAmount   = 190;
    inspire.manager.commission.v1.SettleType CommissionSettleType = 200;
    repeated string Descriptions = 210;
    string          GoodBanner   = 220;
    repeated string DisplayNames = 230;
    bool            EnablePurchase         = 240;
    bool            EnableProductPage      = 250;
    CancelMode      CancelMode             = 260;
    string          UserPurchaseLimit      = 270;
    repeated string DisplayColors          = 280;
    uint32          CancellableBeforeStart = 290;
    string          ProductPage            = 300;
    bool            EnableSetCommission    = 310;
}
enum CancelMode {
    CancelModeDefault        = 0;
    CancellableBeforeStart   = 10;
    CancellableBeforeBenefit = 20;
    Uncancellable            = 30;
}
message Conds {
    optional npool.v1.StringVal      ID     = 10;
    optional npool.v1.StringVal      AppID  = 20;
    optional npool.v1.StringVal      GoodID = 30;
    optional npool.v1.StringSliceVal GoodIDs = 40;
    optional npool.v1.StringSliceVal AppIDs  = 50;
}


message CreateAppGoodRequest {
    AppGoodReq Info = 10;
}

message CreateAppGoodResponse {
    AppGood Info = 10;
}

message CreateAppGoodsRequest {
    repeated AppGoodReq Infos = 10;
}

message CreateAppGoodsResponse {
    repeated AppGood Infos = 10;
}

message UpdateAppGoodRequest {
    AppGoodReq Info = 10;
}

message UpdateAppGoodResponse {
    AppGood Info = 10;
}

message GetAppGoodRequest {
    string ID = 10;
}

message GetAppGoodResponse {
    AppGood Info = 10;
}

message GetAppGoodsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetAppGoodsResponse {
    repeated AppGood Infos = 10;
    uint32           Total = 20;
}

message GetAppGoodOnlyRequest {
    Conds Conds = 10;
}

message GetAppGoodOnlyResponse {
    AppGood Info = 10;
}

message ExistAppGoodRequest {
    string ID = 10;
}

message ExistAppGoodResponse {
    bool Info = 10;
}

message ExistAppGoodCondsRequest {
    Conds Conds = 10;
}

message ExistAppGoodCondsResponse {
    bool Info = 10;
}

message CountAppGoodsRequest {
    Conds Conds = 10;
}

message CountAppGoodsResponse {
    uint32 Info = 10;
}

message DeleteAppGoodRequest {
    string ID = 10;
}

message DeleteAppGoodResponse {
    AppGood Info = 10;
}
