// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/good/mgr/v1/stock/stock.proto

package stock

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	GoodID    *string `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
	Total     *uint32 `protobuf:"varint,30,opt,name=Total,proto3,oneof" json:"Total,omitempty"`
	Locked    *uint32 `protobuf:"varint,40,opt,name=Locked,proto3,oneof" json:"Locked,omitempty"`
	InService *uint32 `protobuf:"varint,50,opt,name=InService,proto3,oneof" json:"InService,omitempty"`
	Sold      *uint32 `protobuf:"varint,60,opt,name=Sold,proto3,oneof" json:"Sold,omitempty"`
}

func (x *StockReq) Reset() {
	*x = StockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockReq) ProtoMessage() {}

func (x *StockReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockReq.ProtoReflect.Descriptor instead.
func (*StockReq) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{0}
}

func (x *StockReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *StockReq) GetGoodID() string {
	if x != nil && x.GoodID != nil {
		return *x.GoodID
	}
	return ""
}

func (x *StockReq) GetTotal() uint32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *StockReq) GetLocked() uint32 {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return 0
}

func (x *StockReq) GetInService() uint32 {
	if x != nil && x.InService != nil {
		return *x.InService
	}
	return 0
}

func (x *StockReq) GetSold() uint32 {
	if x != nil && x.Sold != nil {
		return *x.Sold
	}
	return 0
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	GoodID    string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Total     uint32 `protobuf:"varint,30,opt,name=Total,proto3" json:"Total,omitempty"`
	Locked    uint32 `protobuf:"varint,40,opt,name=Locked,proto3" json:"Locked,omitempty"`
	InService uint32 `protobuf:"varint,50,opt,name=InService,proto3" json:"InService,omitempty"`
	Sold      uint32 `protobuf:"varint,60,opt,name=Sold,proto3" json:"Sold,omitempty"`
	CreatedAt uint32 `protobuf:"varint,70,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt uint32 `protobuf:"varint,80,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt uint32 `protobuf:"varint,90,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{1}
}

func (x *Stock) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Stock) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Stock) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Stock) GetLocked() uint32 {
	if x != nil {
		return x.Locked
	}
	return 0
}

func (x *Stock) GetInService() uint32 {
	if x != nil {
		return x.InService
	}
	return 0
}

func (x *Stock) GetSold() uint32 {
	if x != nil {
		return x.Sold
	}
	return 0
}

func (x *Stock) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Stock) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Stock) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	GoodID *npool.StringVal `protobuf:"bytes,20,opt,name=GoodID,proto3,oneof" json:"GoodID,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetGoodID() *npool.StringVal {
	if x != nil {
		return x.GoodID
	}
	return nil
}

type CreateStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *StockReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateStockRequest) Reset() {
	*x = CreateStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockRequest) ProtoMessage() {}

func (x *CreateStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockRequest.ProtoReflect.Descriptor instead.
func (*CreateStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStockRequest) GetInfo() *StockReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateStockResponse) Reset() {
	*x = CreateStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockResponse) ProtoMessage() {}

func (x *CreateStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockResponse.ProtoReflect.Descriptor instead.
func (*CreateStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*StockReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateStocksRequest) Reset() {
	*x = CreateStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStocksRequest) ProtoMessage() {}

func (x *CreateStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStocksRequest.ProtoReflect.Descriptor instead.
func (*CreateStocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStocksRequest) GetInfos() []*StockReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Stock `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateStocksResponse) Reset() {
	*x = CreateStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStocksResponse) ProtoMessage() {}

func (x *CreateStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStocksResponse.ProtoReflect.Descriptor instead.
func (*CreateStocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStocksResponse) GetInfos() []*Stock {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetStockRequest) Reset() {
	*x = GetStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockRequest) ProtoMessage() {}

func (x *GetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockRequest.ProtoReflect.Descriptor instead.
func (*GetStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{7}
}

func (x *GetStockRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetStockResponse) Reset() {
	*x = GetStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockResponse) ProtoMessage() {}

func (x *GetStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockResponse.ProtoReflect.Descriptor instead.
func (*GetStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{8}
}

func (x *GetStockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetStocksRequest) Reset() {
	*x = GetStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStocksRequest) ProtoMessage() {}

func (x *GetStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStocksRequest.ProtoReflect.Descriptor instead.
func (*GetStocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{9}
}

func (x *GetStocksRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetStocksRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetStocksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Stock `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32   `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetStocksResponse) Reset() {
	*x = GetStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStocksResponse) ProtoMessage() {}

func (x *GetStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStocksResponse.ProtoReflect.Descriptor instead.
func (*GetStocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{10}
}

func (x *GetStocksResponse) GetInfos() []*Stock {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetStocksResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetStockOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetStockOnlyRequest) Reset() {
	*x = GetStockOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockOnlyRequest) ProtoMessage() {}

func (x *GetStockOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetStockOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{11}
}

func (x *GetStockOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetStockOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetStockOnlyResponse) Reset() {
	*x = GetStockOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockOnlyResponse) ProtoMessage() {}

func (x *GetStockOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetStockOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{12}
}

func (x *GetStockOnlyResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistStockRequest) Reset() {
	*x = ExistStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockRequest) ProtoMessage() {}

func (x *ExistStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockRequest.ProtoReflect.Descriptor instead.
func (*ExistStockRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{13}
}

func (x *ExistStockRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistStockResponse) Reset() {
	*x = ExistStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockResponse) ProtoMessage() {}

func (x *ExistStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockResponse.ProtoReflect.Descriptor instead.
func (*ExistStockResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{14}
}

func (x *ExistStockResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistStockCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistStockCondsRequest) Reset() {
	*x = ExistStockCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockCondsRequest) ProtoMessage() {}

func (x *ExistStockCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistStockCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{15}
}

func (x *ExistStockCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistStockCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistStockCondsResponse) Reset() {
	*x = ExistStockCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistStockCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistStockCondsResponse) ProtoMessage() {}

func (x *ExistStockCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistStockCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistStockCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{16}
}

func (x *ExistStockCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountStocksRequest) Reset() {
	*x = CountStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountStocksRequest) ProtoMessage() {}

func (x *CountStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountStocksRequest.ProtoReflect.Descriptor instead.
func (*CountStocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{17}
}

func (x *CountStocksRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountStocksResponse) Reset() {
	*x = CountStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountStocksResponse) ProtoMessage() {}

func (x *CountStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mgr_v1_stock_stock_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountStocksResponse.ProtoReflect.Descriptor instead.
func (*CountStocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP(), []int{18}
}

func (x *CountStocksResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

var File_npool_good_mgr_v1_stock_stock_proto protoreflect.FileDescriptor

var file_npool_good_mgr_v1_stock_stock_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a,
	0x08, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x49, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x6f, 0x6c, 0x64, 0x22, 0xe9, 0x01,
	0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x6c, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x48, 0x01, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x22, 0x49, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x21,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x49, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x4c, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2d,
	0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a,
	0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xc9, 0x06, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x66,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x29, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x0a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_npool_good_mgr_v1_stock_stock_proto_rawDescOnce sync.Once
	file_npool_good_mgr_v1_stock_stock_proto_rawDescData = file_npool_good_mgr_v1_stock_stock_proto_rawDesc
)

func file_npool_good_mgr_v1_stock_stock_proto_rawDescGZIP() []byte {
	file_npool_good_mgr_v1_stock_stock_proto_rawDescOnce.Do(func() {
		file_npool_good_mgr_v1_stock_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mgr_v1_stock_stock_proto_rawDescData)
	})
	return file_npool_good_mgr_v1_stock_stock_proto_rawDescData
}

var file_npool_good_mgr_v1_stock_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_npool_good_mgr_v1_stock_stock_proto_goTypes = []interface{}{
	(*StockReq)(nil),                // 0: good.manager.stock.v1.StockReq
	(*Stock)(nil),                   // 1: good.manager.stock.v1.Stock
	(*Conds)(nil),                   // 2: good.manager.stock.v1.Conds
	(*CreateStockRequest)(nil),      // 3: good.manager.stock.v1.CreateStockRequest
	(*CreateStockResponse)(nil),     // 4: good.manager.stock.v1.CreateStockResponse
	(*CreateStocksRequest)(nil),     // 5: good.manager.stock.v1.CreateStocksRequest
	(*CreateStocksResponse)(nil),    // 6: good.manager.stock.v1.CreateStocksResponse
	(*GetStockRequest)(nil),         // 7: good.manager.stock.v1.GetStockRequest
	(*GetStockResponse)(nil),        // 8: good.manager.stock.v1.GetStockResponse
	(*GetStocksRequest)(nil),        // 9: good.manager.stock.v1.GetStocksRequest
	(*GetStocksResponse)(nil),       // 10: good.manager.stock.v1.GetStocksResponse
	(*GetStockOnlyRequest)(nil),     // 11: good.manager.stock.v1.GetStockOnlyRequest
	(*GetStockOnlyResponse)(nil),    // 12: good.manager.stock.v1.GetStockOnlyResponse
	(*ExistStockRequest)(nil),       // 13: good.manager.stock.v1.ExistStockRequest
	(*ExistStockResponse)(nil),      // 14: good.manager.stock.v1.ExistStockResponse
	(*ExistStockCondsRequest)(nil),  // 15: good.manager.stock.v1.ExistStockCondsRequest
	(*ExistStockCondsResponse)(nil), // 16: good.manager.stock.v1.ExistStockCondsResponse
	(*CountStocksRequest)(nil),      // 17: good.manager.stock.v1.CountStocksRequest
	(*CountStocksResponse)(nil),     // 18: good.manager.stock.v1.CountStocksResponse
	(*npool.StringVal)(nil),         // 19: npool.v1.StringVal
}
var file_npool_good_mgr_v1_stock_stock_proto_depIdxs = []int32{
	19, // 0: good.manager.stock.v1.Conds.ID:type_name -> npool.v1.StringVal
	19, // 1: good.manager.stock.v1.Conds.GoodID:type_name -> npool.v1.StringVal
	0,  // 2: good.manager.stock.v1.CreateStockRequest.Info:type_name -> good.manager.stock.v1.StockReq
	1,  // 3: good.manager.stock.v1.CreateStockResponse.Info:type_name -> good.manager.stock.v1.Stock
	0,  // 4: good.manager.stock.v1.CreateStocksRequest.Infos:type_name -> good.manager.stock.v1.StockReq
	1,  // 5: good.manager.stock.v1.CreateStocksResponse.Infos:type_name -> good.manager.stock.v1.Stock
	1,  // 6: good.manager.stock.v1.GetStockResponse.Info:type_name -> good.manager.stock.v1.Stock
	2,  // 7: good.manager.stock.v1.GetStocksRequest.Conds:type_name -> good.manager.stock.v1.Conds
	1,  // 8: good.manager.stock.v1.GetStocksResponse.Infos:type_name -> good.manager.stock.v1.Stock
	2,  // 9: good.manager.stock.v1.GetStockOnlyRequest.Conds:type_name -> good.manager.stock.v1.Conds
	1,  // 10: good.manager.stock.v1.GetStockOnlyResponse.Info:type_name -> good.manager.stock.v1.Stock
	2,  // 11: good.manager.stock.v1.ExistStockCondsRequest.Conds:type_name -> good.manager.stock.v1.Conds
	2,  // 12: good.manager.stock.v1.CountStocksRequest.Conds:type_name -> good.manager.stock.v1.Conds
	3,  // 13: good.manager.stock.v1.Manager.CreateStock:input_type -> good.manager.stock.v1.CreateStockRequest
	5,  // 14: good.manager.stock.v1.Manager.CreateStocks:input_type -> good.manager.stock.v1.CreateStocksRequest
	7,  // 15: good.manager.stock.v1.Manager.GetStock:input_type -> good.manager.stock.v1.GetStockRequest
	11, // 16: good.manager.stock.v1.Manager.GetStockOnly:input_type -> good.manager.stock.v1.GetStockOnlyRequest
	9,  // 17: good.manager.stock.v1.Manager.GetStocks:input_type -> good.manager.stock.v1.GetStocksRequest
	13, // 18: good.manager.stock.v1.Manager.ExistStock:input_type -> good.manager.stock.v1.ExistStockRequest
	15, // 19: good.manager.stock.v1.Manager.ExistStockConds:input_type -> good.manager.stock.v1.ExistStockCondsRequest
	17, // 20: good.manager.stock.v1.Manager.CountStocks:input_type -> good.manager.stock.v1.CountStocksRequest
	4,  // 21: good.manager.stock.v1.Manager.CreateStock:output_type -> good.manager.stock.v1.CreateStockResponse
	6,  // 22: good.manager.stock.v1.Manager.CreateStocks:output_type -> good.manager.stock.v1.CreateStocksResponse
	8,  // 23: good.manager.stock.v1.Manager.GetStock:output_type -> good.manager.stock.v1.GetStockResponse
	12, // 24: good.manager.stock.v1.Manager.GetStockOnly:output_type -> good.manager.stock.v1.GetStockOnlyResponse
	10, // 25: good.manager.stock.v1.Manager.GetStocks:output_type -> good.manager.stock.v1.GetStocksResponse
	14, // 26: good.manager.stock.v1.Manager.ExistStock:output_type -> good.manager.stock.v1.ExistStockResponse
	16, // 27: good.manager.stock.v1.Manager.ExistStockConds:output_type -> good.manager.stock.v1.ExistStockCondsResponse
	18, // 28: good.manager.stock.v1.Manager.CountStocks:output_type -> good.manager.stock.v1.CountStocksResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_npool_good_mgr_v1_stock_stock_proto_init() }
func file_npool_good_mgr_v1_stock_stock_proto_init() {
	if File_npool_good_mgr_v1_stock_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistStockCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mgr_v1_stock_stock_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_mgr_v1_stock_stock_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_mgr_v1_stock_stock_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mgr_v1_stock_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mgr_v1_stock_stock_proto_goTypes,
		DependencyIndexes: file_npool_good_mgr_v1_stock_stock_proto_depIdxs,
		MessageInfos:      file_npool_good_mgr_v1_stock_stock_proto_msgTypes,
	}.Build()
	File_npool_good_mgr_v1_stock_stock_proto = out.File
	file_npool_good_mgr_v1_stock_stock_proto_rawDesc = nil
	file_npool_good_mgr_v1_stock_stock_proto_goTypes = nil
	file_npool_good_mgr_v1_stock_stock_proto_depIdxs = nil
}
