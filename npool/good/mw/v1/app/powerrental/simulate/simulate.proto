syntax = "proto3";

package good.middleware.app.powerrental.simulate.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/powerrental/simulate";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
  rpc CreateSimulate(CreateSimulateRequest) returns (CreateSimulateResponse) {}
  rpc GetSimulate(GetSimulateRequest) returns (GetSimulateResponse) {}
  rpc UpdateSimulate(UpdateSimulateRequest) returns (UpdateSimulateResponse) {}
  rpc ExistSimulateConds(ExistSimulateCondsRequest)
      returns (ExistSimulateCondsResponse) {}
  rpc GetSimulates(GetSimulatesRequest) returns (GetSimulatesResponse) {}
  rpc DeleteSimulate(DeleteSimulateRequest) returns (DeleteSimulateResponse) {}
}

message SimulateReq {
    optional uint32 ID             = 10;
    optional string EntID          = 20;
    optional string AppGoodID      = 30;
    optional string OrderUnits     = 40;
    optional uint32 OrderDuration  = 50;
}

message Simulate {
    // @inject_tag: sql:"id"
    uint32 ID            = 9;
    // @inject_tag: sql:"ent_id"
    string EntID         = 10;
    // @inject_tag: sql:"app_id"
    string AppID         = 20;
    // @inject_tag: sql:"good_id"
    string GoodID        = 30;
    // @inject_tag: sql:"good_name"
    string GoodName      = 40;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID     = 50;
    // @inject_tag: sql:"app_good_name"
    string AppGoodName   = 60;
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID    = 70;
    // @inject_tag: sql:"order_units"
    string OrderUnits    = 80;
    // @inject_tag: sql:"order_duration"
    uint32 OrderDuration = 90;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val      ID          = 9;
    optional basetypes.v1.StringVal      EntID       = 10;
    optional basetypes.v1.StringVal      AppGoodID   = 40;
}

message CreateSimulateRequest { SimulateReq Info = 10; }

message CreateSimulateResponse { Simulate Info = 10; }

message UpdateSimulateRequest { SimulateReq Info = 10; }

message UpdateSimulateResponse { Simulate Info = 10; }

message GetSimulateRequest { string EntID = 10; }

message GetSimulateResponse { Simulate Info = 10; }

message GetSimulatesRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetSimulatesResponse {
  repeated Simulate Infos = 10;
  uint32 Total = 20;
}

message DeleteSimulateRequest { SimulateReq Info = 10; }

message DeleteSimulateResponse { Simulate Info = 10; }

message ExistSimulateCondsRequest { Conds Conds = 10; }

message ExistSimulateCondsResponse { bool Info = 10; }
