syntax = "proto3";

package good.middleware.app.good1.required1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/good/required";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateRequired (CreateRequiredRequest) returns (CreateRequiredResponse) {}
    rpc GetRequired (GetRequiredRequest) returns (GetRequiredResponse) {}
    rpc ExistRequiredConds (ExistRequiredCondsRequest) returns (ExistRequiredCondsResponse) {}
    rpc GetRequireds (GetRequiredsRequest) returns (GetRequiredsResponse) {}
    rpc UpdateRequired (UpdateRequiredRequest) returns (UpdateRequiredResponse) {}
    rpc DeleteRequired (DeleteRequiredRequest) returns (DeleteRequiredResponse) {}
}

message RequiredReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string MainAppGoodID = 30;
    optional string RequiredAppGoodID = 40;
    optional bool   Must = 50;
}

message Required {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"main_good_id"
    string MainGoodID = 40;
    // @inject_tag: sql:"main_good_name"
    string MainGoodName = 50;
    // @inject_tag: sql:"main_app_good_id"
    string MainAppGoodID = 60;
    // @inject_tag: sql:"main_app_good_name"
    string MainAppGoodName = 70;
    // @inject_tag: sql:"required_good_id"
    string RequiredGoodID = 80;
    // @inject_tag: sql:"required_good_name"
    string RequiredGoodName = 90;
    // @inject_tag: sql:"required_app_good_id"
    string RequiredAppGoodID = 100;
    // @inject_tag: sql:"required_app_good_name"
    string RequiredAppGoodName = 110;
    // @inject_tag: sql:"must"
    bool   Must = 120;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 10;
    optional basetypes.v1.StringVal EntID = 20;
    optional basetypes.v1.StringVal AppID = 30;
    optional basetypes.v1.StringVal AppGoodID = 40;
    optional basetypes.v1.StringSliceVal AppGoodIDs = 50;
    optional basetypes.v1.StringVal MainAppGoodID = 60;
    optional basetypes.v1.StringVal RequiredAppGoodID = 70;
    optional basetypes.v1.BoolVal Must = 80;
    optional basetypes.v1.Uint32Val RequiredGoodType = 90;
    optional basetypes.v1.Uint32SliceVal RequiredGoodTypes = 100;
}

message CreateRequiredRequest {
    RequiredReq Info = 10;
}

message CreateRequiredResponse {
    Required Info = 10;
}

message GetRequiredRequest {
    string EntID = 10;
}

message GetRequiredResponse {
    Required Info = 10;
}

message ExistRequiredCondsRequest {
    Conds Conds = 10;
}

message ExistRequiredCondsResponse {
    bool Info = 10;
}

message GetRequiredsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetRequiredsResponse {
    repeated Required Infos = 10;
    uint32 Total = 20;
}

message UpdateRequiredRequest {
    RequiredReq Info = 10;
}

message UpdateRequiredResponse {
    Required Info = 10;
}

message DeleteRequiredRequest {
    RequiredReq Info = 10;
}

message DeleteRequiredResponse {
    Required Info = 10;
}
