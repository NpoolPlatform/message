syntax = "proto3";

package good.middleware.app.good1.description.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/good/description";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/good/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateDescription    (CreateDescriptionRequest)    returns (CreateDescriptionResponse)    {}
    rpc UpdateDescription    (UpdateDescriptionRequest)    returns (UpdateDescriptionResponse)    {}
    rpc GetDescription       (GetDescriptionRequest)       returns (GetDescriptionResponse)       {}
    rpc GetDescriptions      (GetDescriptionsRequest)      returns (GetDescriptionsResponse)      {}
    rpc DeleteDescription    (DeleteDescriptionRequest)    returns (DeleteDescriptionResponse)    {}
}

message DescriptionReq {
    optional uint32 ID        = 10;
    optional string EntID     = 20;
    optional string AppGoodID = 30;
    optional string Description = 40;
    optional uint32 Index     = 50;
}

message Description {
    // @inject_tag: sql:"id"
    uint32 ID         = 10;
    // @inject_tag: sql:"ent_id"
    string EntID      = 20;
    // @inject_tag: sql:"app_id"
    string AppID      = 30;
    // @inject_tag: sql:"good_id"
    string GoodID     = 40;
    // @inject_tag: sql:"good_name"
    string GoodName   = 50;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID  = 60;
    // @inject_tag: sql:"app_good_name"
    string AppGoodName = 70;
    // @inject_tag: sql:"description"
    string Description = 80;
    // @inject_tag: sql:"good_type"
    string GoodTypeStr = 90;
    basetypes.good.v1.GoodType GoodType = 100;
    // @inject_tag: sql:"index"
    uint32 Index      = 110;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message DescriptionInfo {
    // @inject_tag: sql:"app_good_id"
    string AppGoodID = 10;
    // @inject_tag: sql:"description"
    string Description = 20;
    // @inject_tag: sql:"index"
    uint32 Index      = 30;
}

message Conds {
    optional basetypes.v1.Uint32Val      ID          = 9;
    optional basetypes.v1.StringVal      EntID       = 10;
    optional basetypes.v1.StringVal      AppID       = 20;
    optional basetypes.v1.StringVal      GoodID      = 30;
    optional basetypes.v1.StringSliceVal GoodIDs     = 40;
    optional basetypes.v1.StringVal      AppGoodID   = 50;
    optional basetypes.v1.StringSliceVal AppGoodIDs  = 60;
}

message CreateDescriptionRequest {
    DescriptionReq Info = 10;
}

message CreateDescriptionResponse {
    Description Info = 10;
}

message UpdateDescriptionRequest {
    DescriptionReq Info = 10;
}

message UpdateDescriptionResponse {
    Description Info = 10;
}

message GetDescriptionRequest {
    string EntID = 10;
}

message GetDescriptionResponse {
    Description Info = 10;
}

message GetDescriptionsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetDescriptionsResponse {
    repeated Description Infos = 10;
    uint32           Total = 20;
}

message DeleteDescriptionRequest {
    DescriptionReq Info = 10;
}

message DeleteDescriptionResponse {
    Description Info = 10;
}
