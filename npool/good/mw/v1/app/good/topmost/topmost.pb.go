// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/good/mw/v1/app/good/topmost/topmost.proto

package topmost

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopMostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint32             `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *string             `protobuf:"bytes,20,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID       *string             `protobuf:"bytes,30,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	TopMostType *v1.GoodTopMostType `protobuf:"varint,40,opt,name=TopMostType,proto3,enum=basetypes.good.v1.GoodTopMostType,oneof" json:"TopMostType,omitempty"`
	Title       *string             `protobuf:"bytes,50,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Message     *string             `protobuf:"bytes,60,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	TargetUrl   *string             `protobuf:"bytes,70,opt,name=TargetUrl,proto3,oneof" json:"TargetUrl,omitempty"`
	// For promotion
	StartAt *uint32 `protobuf:"varint,80,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt   *uint32 `protobuf:"varint,90,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
}

func (x *TopMostReq) Reset() {
	*x = TopMostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMostReq) ProtoMessage() {}

func (x *TopMostReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMostReq.ProtoReflect.Descriptor instead.
func (*TopMostReq) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{0}
}

func (x *TopMostReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TopMostReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *TopMostReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *TopMostReq) GetTopMostType() v1.GoodTopMostType {
	if x != nil && x.TopMostType != nil {
		return *x.TopMostType
	}
	return v1.GoodTopMostType(0)
}

func (x *TopMostReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *TopMostReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *TopMostReq) GetTargetUrl() string {
	if x != nil && x.TargetUrl != nil {
		return *x.TargetUrl
	}
	return ""
}

func (x *TopMostReq) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *TopMostReq) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

type TopMost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"top_most_type"
	TopMostTypeStr string             `protobuf:"bytes,40,opt,name=TopMostTypeStr,proto3" json:"TopMostTypeStr,omitempty" sql:"top_most_type"`
	TopMostType    v1.GoodTopMostType `protobuf:"varint,50,opt,name=TopMostType,proto3,enum=basetypes.good.v1.GoodTopMostType" json:"TopMostType,omitempty"`
	// @inject_tag: sql:"title"
	Title string `protobuf:"bytes,60,opt,name=Title,proto3" json:"Title,omitempty" sql:"title"`
	// @inject_tag: sql:"message"
	Message string `protobuf:"bytes,70,opt,name=Message,proto3" json:"Message,omitempty" sql:"message"`
	// @inject_tag: sql:"target_url"
	TargetUrl string `protobuf:"bytes,80,opt,name=TargetUrl,proto3" json:"TargetUrl,omitempty" sql:"target_url"`
	// @inject_tag: sql:"start_at"
	StartAt uint32 `protobuf:"varint,90,opt,name=StartAt,proto3" json:"StartAt,omitempty" sql:"start_at"`
	// @inject_tag: sql:"end_at"
	EndAt uint32 `protobuf:"varint,100,opt,name=EndAt,proto3" json:"EndAt,omitempty" sql:"end_at"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *TopMost) Reset() {
	*x = TopMost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMost) ProtoMessage() {}

func (x *TopMost) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMost.ProtoReflect.Descriptor instead.
func (*TopMost) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{1}
}

func (x *TopMost) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TopMost) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *TopMost) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TopMost) GetTopMostTypeStr() string {
	if x != nil {
		return x.TopMostTypeStr
	}
	return ""
}

func (x *TopMost) GetTopMostType() v1.GoodTopMostType {
	if x != nil {
		return x.TopMostType
	}
	return v1.GoodTopMostType(0)
}

func (x *TopMost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopMost) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TopMost) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *TopMost) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *TopMost) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *TopMost) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TopMost) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *v11.Uint32Val `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *v11.StringVal `protobuf:"bytes,20,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID       *v11.StringVal `protobuf:"bytes,30,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	TopMostType *v11.Uint32Val `protobuf:"bytes,40,opt,name=TopMostType,proto3,oneof" json:"TopMostType,omitempty"`
	Title       *v11.StringVal `protobuf:"bytes,50,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v11.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v11.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v11.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetTopMostType() *v11.Uint32Val {
	if x != nil {
		return x.TopMostType
	}
	return nil
}

func (x *Conds) GetTitle() *v11.StringVal {
	if x != nil {
		return x.Title
	}
	return nil
}

type CreateTopMostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTopMostRequest) Reset() {
	*x = CreateTopMostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostRequest) ProtoMessage() {}

func (x *CreateTopMostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostRequest.ProtoReflect.Descriptor instead.
func (*CreateTopMostRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTopMostRequest) GetInfo() *TopMostReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTopMostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMost `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTopMostResponse) Reset() {
	*x = CreateTopMostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostResponse) ProtoMessage() {}

func (x *CreateTopMostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostResponse.ProtoReflect.Descriptor instead.
func (*CreateTopMostResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTopMostResponse) GetInfo() *TopMost {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTopMostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTopMostRequest) Reset() {
	*x = UpdateTopMostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostRequest) ProtoMessage() {}

func (x *UpdateTopMostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopMostRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTopMostRequest) GetInfo() *TopMostReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTopMostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMost `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTopMostResponse) Reset() {
	*x = UpdateTopMostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostResponse) ProtoMessage() {}

func (x *UpdateTopMostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostResponse.ProtoReflect.Descriptor instead.
func (*UpdateTopMostResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTopMostResponse) GetInfo() *TopMost {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTopMostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetTopMostRequest) Reset() {
	*x = GetTopMostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostRequest) ProtoMessage() {}

func (x *GetTopMostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostRequest.ProtoReflect.Descriptor instead.
func (*GetTopMostRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{7}
}

func (x *GetTopMostRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetTopMostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMost `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTopMostResponse) Reset() {
	*x = GetTopMostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostResponse) ProtoMessage() {}

func (x *GetTopMostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostResponse.ProtoReflect.Descriptor instead.
func (*GetTopMostResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{8}
}

func (x *GetTopMostResponse) GetInfo() *TopMost {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTopMostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTopMostsRequest) Reset() {
	*x = GetTopMostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostsRequest) ProtoMessage() {}

func (x *GetTopMostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostsRequest.ProtoReflect.Descriptor instead.
func (*GetTopMostsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{9}
}

func (x *GetTopMostsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetTopMostsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTopMostsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTopMostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TopMost `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32     `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTopMostsResponse) Reset() {
	*x = GetTopMostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostsResponse) ProtoMessage() {}

func (x *GetTopMostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostsResponse.ProtoReflect.Descriptor instead.
func (*GetTopMostsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{10}
}

func (x *GetTopMostsResponse) GetInfos() []*TopMost {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTopMostsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistTopMostCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistTopMostCondsRequest) Reset() {
	*x = ExistTopMostCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTopMostCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTopMostCondsRequest) ProtoMessage() {}

func (x *ExistTopMostCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTopMostCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistTopMostCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{11}
}

func (x *ExistTopMostCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistTopMostCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistTopMostCondsResponse) Reset() {
	*x = ExistTopMostCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTopMostCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTopMostCondsResponse) ProtoMessage() {}

func (x *ExistTopMostCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTopMostCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistTopMostCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{12}
}

func (x *ExistTopMostCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type DeleteTopMostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTopMostRequest) Reset() {
	*x = DeleteTopMostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostRequest) ProtoMessage() {}

func (x *DeleteTopMostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopMostRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteTopMostRequest) GetInfo() *TopMostReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteTopMostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMost `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTopMostResponse) Reset() {
	*x = DeleteTopMostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostResponse) ProtoMessage() {}

func (x *DeleteTopMostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostResponse.ProtoReflect.Descriptor instead.
func (*DeleteTopMostResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteTopMostResponse) GetInfo() *TopMost {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_mw_v1_app_good_topmost_topmost_proto protoreflect.FileDescriptor

var file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2f, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x24, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70,
	0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x03, 0x0a,
	0x0a, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x03, 0x52, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x07, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x08, 0x52, 0x05,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xef, 0x02,
	0x0a, 0x07, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x44, 0x0a,
	0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc6, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48,
	0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52,
	0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x32, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x5a, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x85, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x18, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5c, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70,
	0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x32, 0xd7, 0x06, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3e,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x70,
	0x6d, 0x6f, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescOnce sync.Once
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescData = file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDesc
)

func file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescGZIP() []byte {
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescOnce.Do(func() {
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescData)
	})
	return file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDescData
}

var file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_good_mw_v1_app_good_topmost_topmost_proto_goTypes = []interface{}{
	(*TopMostReq)(nil),                // 0: good.middleware.app.good1.topmost.v1.TopMostReq
	(*TopMost)(nil),                   // 1: good.middleware.app.good1.topmost.v1.TopMost
	(*Conds)(nil),                     // 2: good.middleware.app.good1.topmost.v1.Conds
	(*CreateTopMostRequest)(nil),      // 3: good.middleware.app.good1.topmost.v1.CreateTopMostRequest
	(*CreateTopMostResponse)(nil),     // 4: good.middleware.app.good1.topmost.v1.CreateTopMostResponse
	(*UpdateTopMostRequest)(nil),      // 5: good.middleware.app.good1.topmost.v1.UpdateTopMostRequest
	(*UpdateTopMostResponse)(nil),     // 6: good.middleware.app.good1.topmost.v1.UpdateTopMostResponse
	(*GetTopMostRequest)(nil),         // 7: good.middleware.app.good1.topmost.v1.GetTopMostRequest
	(*GetTopMostResponse)(nil),        // 8: good.middleware.app.good1.topmost.v1.GetTopMostResponse
	(*GetTopMostsRequest)(nil),        // 9: good.middleware.app.good1.topmost.v1.GetTopMostsRequest
	(*GetTopMostsResponse)(nil),       // 10: good.middleware.app.good1.topmost.v1.GetTopMostsResponse
	(*ExistTopMostCondsRequest)(nil),  // 11: good.middleware.app.good1.topmost.v1.ExistTopMostCondsRequest
	(*ExistTopMostCondsResponse)(nil), // 12: good.middleware.app.good1.topmost.v1.ExistTopMostCondsResponse
	(*DeleteTopMostRequest)(nil),      // 13: good.middleware.app.good1.topmost.v1.DeleteTopMostRequest
	(*DeleteTopMostResponse)(nil),     // 14: good.middleware.app.good1.topmost.v1.DeleteTopMostResponse
	(v1.GoodTopMostType)(0),           // 15: basetypes.good.v1.GoodTopMostType
	(*v11.Uint32Val)(nil),             // 16: basetypes.v1.Uint32Val
	(*v11.StringVal)(nil),             // 17: basetypes.v1.StringVal
}
var file_npool_good_mw_v1_app_good_topmost_topmost_proto_depIdxs = []int32{
	15, // 0: good.middleware.app.good1.topmost.v1.TopMostReq.TopMostType:type_name -> basetypes.good.v1.GoodTopMostType
	15, // 1: good.middleware.app.good1.topmost.v1.TopMost.TopMostType:type_name -> basetypes.good.v1.GoodTopMostType
	16, // 2: good.middleware.app.good1.topmost.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	17, // 3: good.middleware.app.good1.topmost.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	17, // 4: good.middleware.app.good1.topmost.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	16, // 5: good.middleware.app.good1.topmost.v1.Conds.TopMostType:type_name -> basetypes.v1.Uint32Val
	17, // 6: good.middleware.app.good1.topmost.v1.Conds.Title:type_name -> basetypes.v1.StringVal
	0,  // 7: good.middleware.app.good1.topmost.v1.CreateTopMostRequest.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMostReq
	1,  // 8: good.middleware.app.good1.topmost.v1.CreateTopMostResponse.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMost
	0,  // 9: good.middleware.app.good1.topmost.v1.UpdateTopMostRequest.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMostReq
	1,  // 10: good.middleware.app.good1.topmost.v1.UpdateTopMostResponse.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMost
	1,  // 11: good.middleware.app.good1.topmost.v1.GetTopMostResponse.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMost
	2,  // 12: good.middleware.app.good1.topmost.v1.GetTopMostsRequest.Conds:type_name -> good.middleware.app.good1.topmost.v1.Conds
	1,  // 13: good.middleware.app.good1.topmost.v1.GetTopMostsResponse.Infos:type_name -> good.middleware.app.good1.topmost.v1.TopMost
	2,  // 14: good.middleware.app.good1.topmost.v1.ExistTopMostCondsRequest.Conds:type_name -> good.middleware.app.good1.topmost.v1.Conds
	0,  // 15: good.middleware.app.good1.topmost.v1.DeleteTopMostRequest.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMostReq
	1,  // 16: good.middleware.app.good1.topmost.v1.DeleteTopMostResponse.Info:type_name -> good.middleware.app.good1.topmost.v1.TopMost
	3,  // 17: good.middleware.app.good1.topmost.v1.Middleware.CreateTopMost:input_type -> good.middleware.app.good1.topmost.v1.CreateTopMostRequest
	5,  // 18: good.middleware.app.good1.topmost.v1.Middleware.UpdateTopMost:input_type -> good.middleware.app.good1.topmost.v1.UpdateTopMostRequest
	7,  // 19: good.middleware.app.good1.topmost.v1.Middleware.GetTopMost:input_type -> good.middleware.app.good1.topmost.v1.GetTopMostRequest
	9,  // 20: good.middleware.app.good1.topmost.v1.Middleware.GetTopMosts:input_type -> good.middleware.app.good1.topmost.v1.GetTopMostsRequest
	11, // 21: good.middleware.app.good1.topmost.v1.Middleware.ExistTopMostConds:input_type -> good.middleware.app.good1.topmost.v1.ExistTopMostCondsRequest
	13, // 22: good.middleware.app.good1.topmost.v1.Middleware.DeleteTopMost:input_type -> good.middleware.app.good1.topmost.v1.DeleteTopMostRequest
	4,  // 23: good.middleware.app.good1.topmost.v1.Middleware.CreateTopMost:output_type -> good.middleware.app.good1.topmost.v1.CreateTopMostResponse
	6,  // 24: good.middleware.app.good1.topmost.v1.Middleware.UpdateTopMost:output_type -> good.middleware.app.good1.topmost.v1.UpdateTopMostResponse
	8,  // 25: good.middleware.app.good1.topmost.v1.Middleware.GetTopMost:output_type -> good.middleware.app.good1.topmost.v1.GetTopMostResponse
	10, // 26: good.middleware.app.good1.topmost.v1.Middleware.GetTopMosts:output_type -> good.middleware.app.good1.topmost.v1.GetTopMostsResponse
	12, // 27: good.middleware.app.good1.topmost.v1.Middleware.ExistTopMostConds:output_type -> good.middleware.app.good1.topmost.v1.ExistTopMostCondsResponse
	14, // 28: good.middleware.app.good1.topmost.v1.Middleware.DeleteTopMost:output_type -> good.middleware.app.good1.topmost.v1.DeleteTopMostResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_npool_good_mw_v1_app_good_topmost_topmost_proto_init() }
func file_npool_good_mw_v1_app_good_topmost_topmost_proto_init() {
	if File_npool_good_mw_v1_app_good_topmost_topmost_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTopMostCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTopMostCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mw_v1_app_good_topmost_topmost_proto_goTypes,
		DependencyIndexes: file_npool_good_mw_v1_app_good_topmost_topmost_proto_depIdxs,
		MessageInfos:      file_npool_good_mw_v1_app_good_topmost_topmost_proto_msgTypes,
	}.Build()
	File_npool_good_mw_v1_app_good_topmost_topmost_proto = out.File
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_rawDesc = nil
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_goTypes = nil
	file_npool_good_mw_v1_app_good_topmost_topmost_proto_depIdxs = nil
}
