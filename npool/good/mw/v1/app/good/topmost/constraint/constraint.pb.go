// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/good/mw/v1/app/good/topmost/constraint/constraint.proto

package constraint

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	v11 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopMostConstraintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint32                   `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *string                   `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	TopMostID   *string                   `protobuf:"bytes,20,opt,name=TopMostID,proto3,oneof" json:"TopMostID,omitempty"`
	Constraint  *v1.GoodTopMostConstraint `protobuf:"varint,30,opt,name=Constraint,proto3,enum=basetypes.good.v1.GoodTopMostConstraint,oneof" json:"Constraint,omitempty"`
	TargetValue *string                   `protobuf:"bytes,40,opt,name=TargetValue,proto3,oneof" json:"TargetValue,omitempty"`
	Index       *uint32                   `protobuf:"varint,50,opt,name=Index,proto3,oneof" json:"Index,omitempty"`
}

func (x *TopMostConstraintReq) Reset() {
	*x = TopMostConstraintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMostConstraintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMostConstraintReq) ProtoMessage() {}

func (x *TopMostConstraintReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMostConstraintReq.ProtoReflect.Descriptor instead.
func (*TopMostConstraintReq) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{0}
}

func (x *TopMostConstraintReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TopMostConstraintReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *TopMostConstraintReq) GetTopMostID() string {
	if x != nil && x.TopMostID != nil {
		return *x.TopMostID
	}
	return ""
}

func (x *TopMostConstraintReq) GetConstraint() v1.GoodTopMostConstraint {
	if x != nil && x.Constraint != nil {
		return *x.Constraint
	}
	return v1.GoodTopMostConstraint(0)
}

func (x *TopMostConstraintReq) GetTargetValue() string {
	if x != nil && x.TargetValue != nil {
		return *x.TargetValue
	}
	return ""
}

func (x *TopMostConstraintReq) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type TopMostConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"top_most_id"
	TopMostID string `protobuf:"bytes,40,opt,name=TopMostID,proto3" json:"TopMostID,omitempty" sql:"top_most_id"`
	// @inject_tag: sql:"top_most_type"
	TopMostTypeStr string             `protobuf:"bytes,50,opt,name=TopMostTypeStr,proto3" json:"TopMostTypeStr,omitempty" sql:"top_most_type"`
	TopMostType    v1.GoodTopMostType `protobuf:"varint,60,opt,name=TopMostType,proto3,enum=basetypes.good.v1.GoodTopMostType" json:"TopMostType,omitempty"`
	// @inject_tag: sql:"top_most_title"
	TopMostTitle string `protobuf:"bytes,70,opt,name=TopMostTitle,proto3" json:"TopMostTitle,omitempty" sql:"top_most_title"`
	// @inject_tag: sql:"top_most_message"
	TopMostMessage string `protobuf:"bytes,80,opt,name=TopMostMessage,proto3" json:"TopMostMessage,omitempty" sql:"top_most_message"`
	// @inject_tag: sql:"top_most_target_url"
	TopMostTargetUrl string `protobuf:"bytes,90,opt,name=TopMostTargetUrl,proto3" json:"TopMostTargetUrl,omitempty" sql:"top_most_target_url"`
	// @inject_tag: sql:"constraint"
	ConstraintStr string                   `protobuf:"bytes,100,opt,name=ConstraintStr,proto3" json:"ConstraintStr,omitempty" sql:"constraint"`
	Constraint    v1.GoodTopMostConstraint `protobuf:"varint,110,opt,name=Constraint,proto3,enum=basetypes.good.v1.GoodTopMostConstraint" json:"Constraint,omitempty"`
	// @inject_tag: sql:"target_value"
	TargetValue string `protobuf:"bytes,120,opt,name=TargetValue,proto3" json:"TargetValue,omitempty" sql:"target_value"`
	// @inject_tag: sql:"index"
	Index uint32 `protobuf:"varint,130,opt,name=Index,proto3" json:"Index,omitempty" sql:"index"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *TopMostConstraint) Reset() {
	*x = TopMostConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMostConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMostConstraint) ProtoMessage() {}

func (x *TopMostConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMostConstraint.ProtoReflect.Descriptor instead.
func (*TopMostConstraint) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{1}
}

func (x *TopMostConstraint) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TopMostConstraint) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *TopMostConstraint) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostID() string {
	if x != nil {
		return x.TopMostID
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostTypeStr() string {
	if x != nil {
		return x.TopMostTypeStr
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostType() v1.GoodTopMostType {
	if x != nil {
		return x.TopMostType
	}
	return v1.GoodTopMostType(0)
}

func (x *TopMostConstraint) GetTopMostTitle() string {
	if x != nil {
		return x.TopMostTitle
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostMessage() string {
	if x != nil {
		return x.TopMostMessage
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostTargetUrl() string {
	if x != nil {
		return x.TopMostTargetUrl
	}
	return ""
}

func (x *TopMostConstraint) GetConstraintStr() string {
	if x != nil {
		return x.ConstraintStr
	}
	return ""
}

func (x *TopMostConstraint) GetConstraint() v1.GoodTopMostConstraint {
	if x != nil {
		return x.Constraint
	}
	return v1.GoodTopMostConstraint(0)
}

func (x *TopMostConstraint) GetTargetValue() string {
	if x != nil {
		return x.TargetValue
	}
	return ""
}

func (x *TopMostConstraint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TopMostConstraint) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TopMostConstraint) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *v11.Uint32Val `protobuf:"bytes,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *v11.StringVal `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID       *v11.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	TopMostID   *v11.StringVal `protobuf:"bytes,30,opt,name=TopMostID,proto3,oneof" json:"TopMostID,omitempty"`
	TopMostType *v11.Uint32Val `protobuf:"bytes,40,opt,name=TopMostType,proto3,oneof" json:"TopMostType,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v11.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v11.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v11.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetTopMostID() *v11.StringVal {
	if x != nil {
		return x.TopMostID
	}
	return nil
}

func (x *Conds) GetTopMostType() *v11.Uint32Val {
	if x != nil {
		return x.TopMostType
	}
	return nil
}

type CreateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraintReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTopMostConstraintRequest) Reset() {
	*x = CreateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostConstraintRequest) ProtoMessage() {}

func (x *CreateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*CreateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTopMostConstraintRequest) GetInfo() *TopMostConstraintReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTopMostConstraintResponse) Reset() {
	*x = CreateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostConstraintResponse) ProtoMessage() {}

func (x *CreateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*CreateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraintReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTopMostConstraintRequest) Reset() {
	*x = UpdateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostConstraintRequest) ProtoMessage() {}

func (x *UpdateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTopMostConstraintRequest) GetInfo() *TopMostConstraintReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTopMostConstraintResponse) Reset() {
	*x = UpdateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostConstraintResponse) ProtoMessage() {}

func (x *UpdateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*UpdateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetTopMostConstraintRequest) Reset() {
	*x = GetTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintRequest) ProtoMessage() {}

func (x *GetTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{7}
}

func (x *GetTopMostConstraintRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTopMostConstraintResponse) Reset() {
	*x = GetTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintResponse) ProtoMessage() {}

func (x *GetTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{8}
}

func (x *GetTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTopMostConstraintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTopMostConstraintsRequest) Reset() {
	*x = GetTopMostConstraintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintsRequest) ProtoMessage() {}

func (x *GetTopMostConstraintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintsRequest.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{9}
}

func (x *GetTopMostConstraintsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetTopMostConstraintsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTopMostConstraintsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTopMostConstraintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TopMostConstraint `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32               `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTopMostConstraintsResponse) Reset() {
	*x = GetTopMostConstraintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintsResponse) ProtoMessage() {}

func (x *GetTopMostConstraintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintsResponse.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{10}
}

func (x *GetTopMostConstraintsResponse) GetInfos() []*TopMostConstraint {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTopMostConstraintsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraintReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTopMostConstraintRequest) Reset() {
	*x = DeleteTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostConstraintRequest) ProtoMessage() {}

func (x *DeleteTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTopMostConstraintRequest) GetInfo() *TopMostConstraintReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTopMostConstraintResponse) Reset() {
	*x = DeleteTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostConstraintResponse) ProtoMessage() {}

func (x *DeleteTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*DeleteTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto protoreflect.FileDescriptor

var file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x02, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x48,
	0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xba, 0x04, 0x0a, 0x11, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x74, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x12, 0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x15, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x82, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x48, 0x04, 0x52, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x79, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x76, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7b, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x32, 0xc2, 0x07, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12,
	0xbe, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x4f, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xbe, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x4f, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xb5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb8, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xbe, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70,
	0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescOnce sync.Once
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescData = file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDesc
)

func file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP() []byte {
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescOnce.Do(func() {
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescData)
	})
	return file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDescData
}

var file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_goTypes = []interface{}{
	(*TopMostConstraintReq)(nil),            // 0: good.middleware.app.good1.topmost.constraint.v1.TopMostConstraintReq
	(*TopMostConstraint)(nil),               // 1: good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	(*Conds)(nil),                           // 2: good.middleware.app.good1.topmost.constraint.v1.Conds
	(*CreateTopMostConstraintRequest)(nil),  // 3: good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest
	(*CreateTopMostConstraintResponse)(nil), // 4: good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse
	(*UpdateTopMostConstraintRequest)(nil),  // 5: good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintRequest
	(*UpdateTopMostConstraintResponse)(nil), // 6: good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse
	(*GetTopMostConstraintRequest)(nil),     // 7: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintRequest
	(*GetTopMostConstraintResponse)(nil),    // 8: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintResponse
	(*GetTopMostConstraintsRequest)(nil),    // 9: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsRequest
	(*GetTopMostConstraintsResponse)(nil),   // 10: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse
	(*DeleteTopMostConstraintRequest)(nil),  // 11: good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintRequest
	(*DeleteTopMostConstraintResponse)(nil), // 12: good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse
	(v1.GoodTopMostConstraint)(0),           // 13: basetypes.good.v1.GoodTopMostConstraint
	(v1.GoodTopMostType)(0),                 // 14: basetypes.good.v1.GoodTopMostType
	(*v11.Uint32Val)(nil),                   // 15: basetypes.v1.Uint32Val
	(*v11.StringVal)(nil),                   // 16: basetypes.v1.StringVal
}
var file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_depIdxs = []int32{
	13, // 0: good.middleware.app.good1.topmost.constraint.v1.TopMostConstraintReq.Constraint:type_name -> basetypes.good.v1.GoodTopMostConstraint
	14, // 1: good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint.TopMostType:type_name -> basetypes.good.v1.GoodTopMostType
	13, // 2: good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint.Constraint:type_name -> basetypes.good.v1.GoodTopMostConstraint
	15, // 3: good.middleware.app.good1.topmost.constraint.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	16, // 4: good.middleware.app.good1.topmost.constraint.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	16, // 5: good.middleware.app.good1.topmost.constraint.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	16, // 6: good.middleware.app.good1.topmost.constraint.v1.Conds.TopMostID:type_name -> basetypes.v1.StringVal
	15, // 7: good.middleware.app.good1.topmost.constraint.v1.Conds.TopMostType:type_name -> basetypes.v1.Uint32Val
	0,  // 8: good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraintReq
	1,  // 9: good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 10: good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintRequest.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraintReq
	1,  // 11: good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	1,  // 12: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintResponse.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	2,  // 13: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsRequest.Conds:type_name -> good.middleware.app.good1.topmost.constraint.v1.Conds
	1,  // 14: good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse.Infos:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 15: good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintRequest.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraintReq
	1,  // 16: good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse.Info:type_name -> good.middleware.app.good1.topmost.constraint.v1.TopMostConstraint
	3,  // 17: good.middleware.app.good1.topmost.constraint.v1.Middleware.CreateTopMostConstraint:input_type -> good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest
	5,  // 18: good.middleware.app.good1.topmost.constraint.v1.Middleware.UpdateTopMostConstraint:input_type -> good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintRequest
	7,  // 19: good.middleware.app.good1.topmost.constraint.v1.Middleware.GetTopMostConstraint:input_type -> good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintRequest
	9,  // 20: good.middleware.app.good1.topmost.constraint.v1.Middleware.GetTopMostConstraints:input_type -> good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsRequest
	11, // 21: good.middleware.app.good1.topmost.constraint.v1.Middleware.DeleteTopMostConstraint:input_type -> good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintRequest
	4,  // 22: good.middleware.app.good1.topmost.constraint.v1.Middleware.CreateTopMostConstraint:output_type -> good.middleware.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse
	6,  // 23: good.middleware.app.good1.topmost.constraint.v1.Middleware.UpdateTopMostConstraint:output_type -> good.middleware.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse
	8,  // 24: good.middleware.app.good1.topmost.constraint.v1.Middleware.GetTopMostConstraint:output_type -> good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintResponse
	10, // 25: good.middleware.app.good1.topmost.constraint.v1.Middleware.GetTopMostConstraints:output_type -> good.middleware.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse
	12, // 26: good.middleware.app.good1.topmost.constraint.v1.Middleware.DeleteTopMostConstraint:output_type -> good.middleware.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_init() }
func file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_init() {
	if File_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMostConstraintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMostConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_goTypes,
		DependencyIndexes: file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_depIdxs,
		MessageInfos:      file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_msgTypes,
	}.Build()
	File_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto = out.File
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_rawDesc = nil
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_goTypes = nil
	file_npool_good_mw_v1_app_good_topmost_constraint_constraint_proto_depIdxs = nil
}
