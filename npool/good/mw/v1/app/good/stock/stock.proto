syntax = "proto3";

package good.middleware.app.good1.stock.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/good/stock";

import "npool/basetypes/good/v1/enums.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateStock    (CreateStockRequest)    returns (CreateStockResponse)    {}
    rpc UpdateStock    (UpdateStockRequest)    returns (UpdateStockResponse)    {}
    rpc AddStock       (AddStockRequest)       returns (AddStockResponse)       {}
    rpc SubStock       (SubStockRequest)       returns (SubStockResponse)       {}
    rpc GetStock       (GetStockRequest)       returns (GetStockResponse)       {}
    rpc GetStocks      (GetStocksRequest)      returns (GetStocksResponse)      {}
    rpc DeleteStock    (DeleteStockRequest)    returns (DeleteStockResponse)    {}
}

message StockReq {
    optional string ID         = 10;
    optional string AppID      = 20;
    optional string GoodID     = 30;
    optional string AppGoodID  = 40;
    optional string Reserved   = 50;
    optional string SpotQuantity = 60;
    optional string Locked     = 70;
    optional string WaitStart  = 80;
    optional string InService  = 90;
}

message Stock {
    // @inject_tag: sql:"id"
    string ID         = 10;
    // @inject_tag: sql:"app_id"
    string AppID      = 20;
    // @inject_tag: sql:"good_id"
    string GoodID     = 30;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID  = 40;
    // @inject_tag: sql:"reserved"
    string Reserved   = 50;
    // @inject_tag: sql:"spot_quantity"
    string SpotQuantity = 60;
    // @inject_tag: sql:"locked"
    string Locked     = 70;
    // @inject_tag: sql:"wait_start"
    string WaitStart  = 80;
    // @inject_tag: sql:"in_service"
    string InService  = 90;
    // @inject_tag: sql:"sold"
    string Sold       = 100;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message Conds {
    optional basetypes.v1.StringVal ID        = 10;
    optional basetypes.v1.StringVal AppID     = 20;
    optional basetypes.v1.StringVal GoodID    = 30;
    optional basetypes.v1.StringVal AppGoodID = 40;
    optional basetypes.v1.StringSliceVal AppIDs     = 50;
    optional basetypes.v1.StringSliceVal GoodIDs    = 60;
    optional basetypes.v1.StringSliceVal AppGoodIDs = 70;
}

message CreateStockRequest {
    StockReq Info = 10;
}

message CreateStockResponse {
    Stock Info = 10;
}

message UpdateStockRequest {
    StockReq Info = 10;
}

message UpdateStockResponse {
    Stock Info = 10;
}

message AddStockRequest {
    StockReq Info = 10;
}

message AddStockResponse {
    Stock Info = 10;
}

message SubStockRequest {
    StockReq Info = 10;
}

message SubStockResponse {
    Stock Info = 10;
}

message GetStockRequest {
    string ID = 10;
}

message GetStockResponse {
    Stock Info = 10;
}

message GetStocksRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetStocksResponse {
    repeated Stock Infos = 10;
    uint32         Total = 20;
}

message DeleteStockRequest {
    string ID = 10;
}

message DeleteStockResponse {
    Stock Info = 10;
}
