syntax = "proto3";

package good.middleware.app.good1.stock.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/good/stock";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/good/v1/enums.proto";

// Service Name
service Middleware {
    rpc Lock       (LockRequest)       returns (LockResponse)       {}
    rpc Unlock     (UnlockRequest)     returns (UnlockResponse)     {}
    rpc WaitStart  (WaitStartRequest)  returns (WaitStartResponse)  {}
    rpc InService  (InServiceRequest)  returns (InServiceResponse)  {}
    rpc ChargeBack (ChargeBackRequest) returns (ChargeBackResponse) {}
    rpc Expire     (ExpireRequest)     returns (ExpireResponse)     {}
}

message Stock {
    // @inject_tag: sql:"id"
    string ID         = 10;
    // @inject_tag: sql:"app_id"
    string AppID      = 20;
    // @inject_tag: sql:"good_id"
    string GoodID     = 30;
    // @inject_tag: sql:"good_name"
    string GoodName   = 40;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID  = 50;
    // @inject_tag: sql:"app_good_name"
    string AppGoodName = 60;
    // @inject_tag: sql:"reserved"
    string Reserved   = 70;
    // @inject_tag: sql:"spot_quantity"
    string SpotQuantity = 80;
    // @inject_tag: sql:"locked"
    string Locked     = 90;
    // @inject_tag: sql:"wait_start"
    string WaitStart  = 100;
    // @inject_tag: sql:"in_service"
    string InService  = 110;
    // @inject_tag: sql:"sold"
    string Sold       = 120;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message LockRequest {
    string ID         = 10;
    string AppID      = 20;
    string GoodID     = 30;
    string AppGoodID  = 40;
    string Units      = 50;
    string AppSpotUnits = 60;  // Locked from app spot quantity

    // Must same as unlock request
    string LockID     = 1000;
    bool   Rollback   = 1010;
}

message LockResponse {
    Stock Info = 10;
}

message UnlockRequest {
    // Must same as lock request
    string LockID   = 1000;
    bool   Rollback = 1010;
}

message UnlockResponse {
    Stock Info = 10;
}

message WaitStartRequest {
    string LockID = 10;
}

message WaitStartResponse {
    Stock Info = 10;
}

message InServiceRequest {
    string LockID = 10;
}

message InServiceResponse {
    Stock Info = 10;
}

message ChargeBackRequest {
    string LockID = 10;
}

message ChargeBackResponse {
    Stock Info = 10;
}

message ExpireRequest {
    string LockID = 10;
}

message ExpireResponse {
    Stock Info = 10;
}

