// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/good/mw/v1/app/good/stock/stock.proto

package stock

import (
	_ "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	_ "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"good_id"
	GoodID string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty" sql:"good_id"`
	// @inject_tag: sql:"good_name"
	GoodName string `protobuf:"bytes,40,opt,name=GoodName,proto3" json:"GoodName,omitempty" sql:"good_name"`
	// @inject_tag: sql:"app_good_id"
	AppGoodID string `protobuf:"bytes,50,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty" sql:"app_good_id"`
	// @inject_tag: sql:"app_good_name"
	AppGoodName string `protobuf:"bytes,60,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty" sql:"app_good_name"`
	// @inject_tag: sql:"reserved"
	Reserved string `protobuf:"bytes,70,opt,name=Reserved,proto3" json:"Reserved,omitempty" sql:"reserved"`
	// @inject_tag: sql:"spot_quantity"
	SpotQuantity string `protobuf:"bytes,80,opt,name=SpotQuantity,proto3" json:"SpotQuantity,omitempty" sql:"spot_quantity"`
	// @inject_tag: sql:"locked"
	Locked string `protobuf:"bytes,90,opt,name=Locked,proto3" json:"Locked,omitempty" sql:"locked"`
	// @inject_tag: sql:"wait_start"
	WaitStart string `protobuf:"bytes,100,opt,name=WaitStart,proto3" json:"WaitStart,omitempty" sql:"wait_start"`
	// @inject_tag: sql:"in_service"
	InService string `protobuf:"bytes,110,opt,name=InService,proto3" json:"InService,omitempty" sql:"in_service"`
	// @inject_tag: sql:"sold"
	Sold string `protobuf:"bytes,120,opt,name=Sold,proto3" json:"Sold,omitempty" sql:"sold"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Stock) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Stock) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Stock) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Stock) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Stock) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *Stock) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *Stock) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *Stock) GetSpotQuantity() string {
	if x != nil {
		return x.SpotQuantity
	}
	return ""
}

func (x *Stock) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *Stock) GetWaitStart() string {
	if x != nil {
		return x.WaitStart
	}
	return ""
}

func (x *Stock) GetInService() string {
	if x != nil {
		return x.InService
	}
	return ""
}

func (x *Stock) GetSold() string {
	if x != nil {
		return x.Sold
	}
	return ""
}

func (x *Stock) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Stock) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID        string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID        string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	GoodID       string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	AppGoodID    string `protobuf:"bytes,40,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	Units        string `protobuf:"bytes,50,opt,name=Units,proto3" json:"Units,omitempty"`
	AppSpotUnits string `protobuf:"bytes,60,opt,name=AppSpotUnits,proto3" json:"AppSpotUnits,omitempty"` // Locked from app spot quantity
	// Must same as unlock request
	LockID   string `protobuf:"bytes,1000,opt,name=LockID,proto3" json:"LockID,omitempty"`
	Rollback bool   `protobuf:"varint,1010,opt,name=Rollback,proto3" json:"Rollback,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{1}
}

func (x *LockRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *LockRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *LockRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *LockRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *LockRequest) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *LockRequest) GetAppSpotUnits() string {
	if x != nil {
		return x.AppSpotUnits
	}
	return ""
}

func (x *LockRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

func (x *LockRequest) GetRollback() bool {
	if x != nil {
		return x.Rollback
	}
	return false
}

type LockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{2}
}

func (x *LockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type LocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string                 `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Stocks   []*LocksRequest_XStock `protobuf:"bytes,20,rep,name=Stocks,proto3" json:"Stocks,omitempty"`
	LockID   string                 `protobuf:"bytes,1000,opt,name=LockID,proto3" json:"LockID,omitempty"`
	Rollback bool                   `protobuf:"varint,1010,opt,name=Rollback,proto3" json:"Rollback,omitempty"`
}

func (x *LocksRequest) Reset() {
	*x = LocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocksRequest) ProtoMessage() {}

func (x *LocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocksRequest.ProtoReflect.Descriptor instead.
func (*LocksRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{3}
}

func (x *LocksRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *LocksRequest) GetStocks() []*LocksRequest_XStock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

func (x *LocksRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

func (x *LocksRequest) GetRollback() bool {
	if x != nil {
		return x.Rollback
	}
	return false
}

type LocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Stock `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *LocksResponse) Reset() {
	*x = LocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocksResponse) ProtoMessage() {}

func (x *LocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocksResponse.ProtoReflect.Descriptor instead.
func (*LocksResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{4}
}

func (x *LocksResponse) GetInfos() []*Stock {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Must same as lock request
	LockID   string `protobuf:"bytes,1000,opt,name=LockID,proto3" json:"LockID,omitempty"`
	Rollback bool   `protobuf:"varint,1010,opt,name=Rollback,proto3" json:"Rollback,omitempty"`
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{5}
}

func (x *UnlockRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

func (x *UnlockRequest) GetRollback() bool {
	if x != nil {
		return x.Rollback
	}
	return false
}

type UnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{6}
}

func (x *UnlockResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type WaitStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockID string `protobuf:"bytes,10,opt,name=LockID,proto3" json:"LockID,omitempty"`
}

func (x *WaitStartRequest) Reset() {
	*x = WaitStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitStartRequest) ProtoMessage() {}

func (x *WaitStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitStartRequest.ProtoReflect.Descriptor instead.
func (*WaitStartRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{7}
}

func (x *WaitStartRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

type WaitStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *WaitStartResponse) Reset() {
	*x = WaitStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitStartResponse) ProtoMessage() {}

func (x *WaitStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitStartResponse.ProtoReflect.Descriptor instead.
func (*WaitStartResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{8}
}

func (x *WaitStartResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type InServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockID string `protobuf:"bytes,10,opt,name=LockID,proto3" json:"LockID,omitempty"`
}

func (x *InServiceRequest) Reset() {
	*x = InServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InServiceRequest) ProtoMessage() {}

func (x *InServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InServiceRequest.ProtoReflect.Descriptor instead.
func (*InServiceRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{9}
}

func (x *InServiceRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

type InServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *InServiceResponse) Reset() {
	*x = InServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InServiceResponse) ProtoMessage() {}

func (x *InServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InServiceResponse.ProtoReflect.Descriptor instead.
func (*InServiceResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{10}
}

func (x *InServiceResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type ChargeBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockID string `protobuf:"bytes,10,opt,name=LockID,proto3" json:"LockID,omitempty"`
}

func (x *ChargeBackRequest) Reset() {
	*x = ChargeBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeBackRequest) ProtoMessage() {}

func (x *ChargeBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeBackRequest.ProtoReflect.Descriptor instead.
func (*ChargeBackRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{11}
}

func (x *ChargeBackRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

type ChargeBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ChargeBackResponse) Reset() {
	*x = ChargeBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeBackResponse) ProtoMessage() {}

func (x *ChargeBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeBackResponse.ProtoReflect.Descriptor instead.
func (*ChargeBackResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{12}
}

func (x *ChargeBackResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExpireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockID string `protobuf:"bytes,10,opt,name=LockID,proto3" json:"LockID,omitempty"`
}

func (x *ExpireRequest) Reset() {
	*x = ExpireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireRequest) ProtoMessage() {}

func (x *ExpireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireRequest.ProtoReflect.Descriptor instead.
func (*ExpireRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{13}
}

func (x *ExpireRequest) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

type ExpireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Stock `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExpireResponse) Reset() {
	*x = ExpireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireResponse) ProtoMessage() {}

func (x *ExpireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireResponse.ProtoReflect.Descriptor instead.
func (*ExpireResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{14}
}

func (x *ExpireResponse) GetInfo() *Stock {
	if x != nil {
		return x.Info
	}
	return nil
}

type LocksRequest_XStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID        string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
	GoodID       string `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	AppGoodID    string `protobuf:"bytes,30,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	Units        string `protobuf:"bytes,40,opt,name=Units,proto3" json:"Units,omitempty"`
	AppSpotUnits string `protobuf:"bytes,50,opt,name=AppSpotUnits,proto3" json:"AppSpotUnits,omitempty"` // Locked from app spot quantity
}

func (x *LocksRequest_XStock) Reset() {
	*x = LocksRequest_XStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocksRequest_XStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocksRequest_XStock) ProtoMessage() {}

func (x *LocksRequest_XStock) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocksRequest_XStock.ProtoReflect.Descriptor instead.
func (*LocksRequest_XStock) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{3, 0}
}

func (x *LocksRequest_XStock) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *LocksRequest_XStock) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *LocksRequest_XStock) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *LocksRequest_XStock) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *LocksRequest_XStock) GetAppSpotUnits() string {
	if x != nil {
		return x.AppSpotUnits
	}
	return ""
}

var File_npool_good_mw_v1_app_good_stock_stock_proto protoreflect.FileDescriptor

var file_npool_good_mw_v1_app_good_stock_stock_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x70, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x53, 0x70, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x61, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x61, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x70, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x70, 0x6f, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x12, 0x17, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0xe8, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x4d, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbc, 0x02, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x4f,
	0x0a, 0x06, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x5f, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x17, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x8e, 0x01, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x70, 0x6f, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x70, 0x6f,
	0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x4c, 0x6f, 0x63,
	0x6b, 0x49, 0x44, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x12, 0x1b, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xf2,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22,
	0x4f, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2a, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x11,
	0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x11,
	0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2b, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x53, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x27, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x0e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc6, 0x06, 0x0a,
	0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x6b, 0x0a, 0x04, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x09, 0x57,
	0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x12, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescOnce sync.Once
	file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescData = file_npool_good_mw_v1_app_good_stock_stock_proto_rawDesc
)

func file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescGZIP() []byte {
	file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescOnce.Do(func() {
		file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescData)
	})
	return file_npool_good_mw_v1_app_good_stock_stock_proto_rawDescData
}

var file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_npool_good_mw_v1_app_good_stock_stock_proto_goTypes = []interface{}{
	(*Stock)(nil),               // 0: good.middleware.app.good1.stock.v1.Stock
	(*LockRequest)(nil),         // 1: good.middleware.app.good1.stock.v1.LockRequest
	(*LockResponse)(nil),        // 2: good.middleware.app.good1.stock.v1.LockResponse
	(*LocksRequest)(nil),        // 3: good.middleware.app.good1.stock.v1.LocksRequest
	(*LocksResponse)(nil),       // 4: good.middleware.app.good1.stock.v1.LocksResponse
	(*UnlockRequest)(nil),       // 5: good.middleware.app.good1.stock.v1.UnlockRequest
	(*UnlockResponse)(nil),      // 6: good.middleware.app.good1.stock.v1.UnlockResponse
	(*WaitStartRequest)(nil),    // 7: good.middleware.app.good1.stock.v1.WaitStartRequest
	(*WaitStartResponse)(nil),   // 8: good.middleware.app.good1.stock.v1.WaitStartResponse
	(*InServiceRequest)(nil),    // 9: good.middleware.app.good1.stock.v1.InServiceRequest
	(*InServiceResponse)(nil),   // 10: good.middleware.app.good1.stock.v1.InServiceResponse
	(*ChargeBackRequest)(nil),   // 11: good.middleware.app.good1.stock.v1.ChargeBackRequest
	(*ChargeBackResponse)(nil),  // 12: good.middleware.app.good1.stock.v1.ChargeBackResponse
	(*ExpireRequest)(nil),       // 13: good.middleware.app.good1.stock.v1.ExpireRequest
	(*ExpireResponse)(nil),      // 14: good.middleware.app.good1.stock.v1.ExpireResponse
	(*LocksRequest_XStock)(nil), // 15: good.middleware.app.good1.stock.v1.LocksRequest._Stock
}
var file_npool_good_mw_v1_app_good_stock_stock_proto_depIdxs = []int32{
	0,  // 0: good.middleware.app.good1.stock.v1.LockResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	15, // 1: good.middleware.app.good1.stock.v1.LocksRequest.Stocks:type_name -> good.middleware.app.good1.stock.v1.LocksRequest._Stock
	0,  // 2: good.middleware.app.good1.stock.v1.LocksResponse.Infos:type_name -> good.middleware.app.good1.stock.v1.Stock
	0,  // 3: good.middleware.app.good1.stock.v1.UnlockResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	0,  // 4: good.middleware.app.good1.stock.v1.WaitStartResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	0,  // 5: good.middleware.app.good1.stock.v1.InServiceResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	0,  // 6: good.middleware.app.good1.stock.v1.ChargeBackResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	0,  // 7: good.middleware.app.good1.stock.v1.ExpireResponse.Info:type_name -> good.middleware.app.good1.stock.v1.Stock
	1,  // 8: good.middleware.app.good1.stock.v1.Middleware.Lock:input_type -> good.middleware.app.good1.stock.v1.LockRequest
	3,  // 9: good.middleware.app.good1.stock.v1.Middleware.Locks:input_type -> good.middleware.app.good1.stock.v1.LocksRequest
	5,  // 10: good.middleware.app.good1.stock.v1.Middleware.Unlock:input_type -> good.middleware.app.good1.stock.v1.UnlockRequest
	7,  // 11: good.middleware.app.good1.stock.v1.Middleware.WaitStart:input_type -> good.middleware.app.good1.stock.v1.WaitStartRequest
	9,  // 12: good.middleware.app.good1.stock.v1.Middleware.InService:input_type -> good.middleware.app.good1.stock.v1.InServiceRequest
	11, // 13: good.middleware.app.good1.stock.v1.Middleware.ChargeBack:input_type -> good.middleware.app.good1.stock.v1.ChargeBackRequest
	13, // 14: good.middleware.app.good1.stock.v1.Middleware.Expire:input_type -> good.middleware.app.good1.stock.v1.ExpireRequest
	2,  // 15: good.middleware.app.good1.stock.v1.Middleware.Lock:output_type -> good.middleware.app.good1.stock.v1.LockResponse
	4,  // 16: good.middleware.app.good1.stock.v1.Middleware.Locks:output_type -> good.middleware.app.good1.stock.v1.LocksResponse
	6,  // 17: good.middleware.app.good1.stock.v1.Middleware.Unlock:output_type -> good.middleware.app.good1.stock.v1.UnlockResponse
	8,  // 18: good.middleware.app.good1.stock.v1.Middleware.WaitStart:output_type -> good.middleware.app.good1.stock.v1.WaitStartResponse
	10, // 19: good.middleware.app.good1.stock.v1.Middleware.InService:output_type -> good.middleware.app.good1.stock.v1.InServiceResponse
	12, // 20: good.middleware.app.good1.stock.v1.Middleware.ChargeBack:output_type -> good.middleware.app.good1.stock.v1.ChargeBackResponse
	14, // 21: good.middleware.app.good1.stock.v1.Middleware.Expire:output_type -> good.middleware.app.good1.stock.v1.ExpireResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_npool_good_mw_v1_app_good_stock_stock_proto_init() }
func file_npool_good_mw_v1_app_good_stock_stock_proto_init() {
	if File_npool_good_mw_v1_app_good_stock_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocksRequest_XStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mw_v1_app_good_stock_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mw_v1_app_good_stock_stock_proto_goTypes,
		DependencyIndexes: file_npool_good_mw_v1_app_good_stock_stock_proto_depIdxs,
		MessageInfos:      file_npool_good_mw_v1_app_good_stock_stock_proto_msgTypes,
	}.Build()
	File_npool_good_mw_v1_app_good_stock_stock_proto = out.File
	file_npool_good_mw_v1_app_good_stock_stock_proto_rawDesc = nil
	file_npool_good_mw_v1_app_good_stock_stock_proto_goTypes = nil
	file_npool_good_mw_v1_app_good_stock_stock_proto_depIdxs = nil
}
