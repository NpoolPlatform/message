syntax = "proto3";

package good.middleware.app.good1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/app/good";

import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/good/v1/enums.proto";

// Service Name
service Middleware {
    rpc CreateGood    (CreateGoodRequest)    returns (CreateGoodResponse)    {}
    rpc GetGood       (GetGoodRequest)       returns (GetGoodResponse)       {}
    rpc GetGoodOnly   (GetGoodOnlyRequest)   returns (GetGoodOnlyResponse)   {}
    rpc GetGoods      (GetGoodsRequest)      returns (GetGoodsResponse)      {}
    rpc UpdateGood    (UpdateGoodRequest)    returns (UpdateGoodResponse)    {}
}

message GoodReq {
    optional string ID                  = 10;
    optional string AppID               = 20;
    optional string GoodID              = 30;
    optional bool   Online              = 40;
    optional bool   Visible             = 50;
    optional string GoodName            = 60;
    optional string Price               = 70;
    optional int32  DisplayIndex        = 80;
    optional int32  PurchaseLimit       = 90;
    optional uint32 SaleStartAt         = 110;
    optional uint32 SaleEndAt           = 120;
    optional uint32 ServiceStartAt      = 130;
    optional uint32 TechnicalFeeRatio   = 140;
    optional uint32 ElectricityFeeRatio = 150;
    optional string DailyRewardAmount   = 160;
    repeated string Descriptions        = 180;
    optional string GoodBanner          = 190;
    repeated string DisplayNames        = 200;
    optional bool   EnablePurchase      = 210;
    optional bool   EnableProductPage   = 220;
    optional basetypes.good.v1.CancelMode CancelMode = 230;
    optional string UserPurchaseLimit   = 240;
    repeated string DisplayColors       = 250;
    optional uint32 CancellableBeforeStart = 260;
    optional string ProductPage         = 270;
    optional bool   EnableSetCommission = 310;
}

message Good {
    // @inject_tag: sql:"id"
    string           ID                          = 10;
    // @inject_tag: sql:"app_id"
    string           AppID                       = 20;
    // @inject_tag: sql:"good_id"
    string           GoodID                      = 30;
    // @inject_tag: sql:"online"
    bool             Online                      = 40;
    // @inject_tag: sql:"visible"
    bool             Visible                     = 50;
    // @inject_tag: sql:"price"
    string           Price                       = 60;
    // @inject_tag: sql:"display_index"
    int32            DisplayIndex                = 70;
    // @inject_tag: sql:"purchase_limit"
    int32            PurchaseLimit               = 80;

    // @inject_tag: sql:"promotion_start_at"
    optional uint32  PromotionStartAt            = 100;
    // @inject_tag: sql:"promotion_end_at"
    optional uint32  PromotionEndAt              = 110;
    // @inject_tag: sql:"promotion_message"
    optional string  PromotionMessage            = 120;
    // @inject_tag: sql:"promotion_price"
    optional string  PromotionPrice              = 130;
    repeated string  PromotionPosters            = 140;
    // @inject_tag: sql:"promotion_posters"
    string           PromotionPostersStr         = 141;

    // @inject_tag: sql:"device_info_id"
    string           DeviceInfoID                = 170;
    // @inject_tag: sql:"device_type"
    string           DeviceType                  = 180;
    // @inject_tag: sql:"device_manufacturer"
    string           DeviceManufacturer          = 190;
    // @inject_tag: sql:"device_power_comsuption"
    uint32           DevicePowerComsuption       = 200;
    // @inject_tag: sql:"device_shipment_at"
    uint32           DeviceShipmentAt            = 210;
    repeated string  DevicePosters               = 220;
    // @inject_tag: sql:"device_posters"
    string           DevicePostersStr            = 221;

    // @inject_tag: sql:"duration_days"
    int32            DurationDays                = 230;
    // @inject_tag: sql:"coin_type_id"
    string           CoinTypeID                  = 240;

    // @inject_tag: sql:"vendor_location_id"
    string           VendorLocationID            = 249;
    // @inject_tag: sql:"vendor_location_country"
    string           VendorLocationCountry       = 250;
    // @inject_tag: sql:"vendor_brand_name"
    string           VendorBrandName             = 251;
    // @inject_tag: sql:"vendor_brand_logo"
    string           VendorBrandLogo             = 252;

    basetypes.good.v1.GoodType GoodType          = 260;
    // @inject_tag: sql:"good_type"
    string           GoodTypeStr                 = 261;

    basetypes.good.v1.BenefitType BenefitType    = 270;
    // @inject_tag: sql:"benefit_type"
    string           BenefitTypeStr              = 271;

    basetypes.good.v1.BenefitState BenefitState = 272;
    // @inject_tag: sql:"benefit_state"
    string           BenefitStateStr            = 273;

    // @inject_tag: sql:"good_name"
    string           GoodName           = 280;
    // @inject_tag: sql:"unit"
    string           Unit               = 290;
    // @inject_tag: sql:"unit_amount"
    int32            UnitAmount         = 300;
    repeated string  SupportCoinTypeIDs = 310;
    // @inject_tag: sql:"support_coin_type_ids"
    string           SupportCoinTypeIDsStr = 311;
    // @inject_tag: sql:"test_only"
    bool             TestOnly           = 320;
    repeated string  Posters            = 330;
    // @inject_tag: sql:"posters"
    string           PostersStr         = 331;
    repeated basetypes.good.v1.GoodLabel Labels = 340;
    // @inject_tag: sql:"labels"
    string           LabelsStr          = 341;
    // @inject_tag: sql:"benefit_interval_hours"
    uint32           BenefitIntervalHours = 361;

    // @inject_tag: sql:"good_total"
    string           GoodTotal          = 370;
    // @inject_tag: sql:"good_locked"
    string           GoodLocked         = 380;
    // @inject_tag: sql:"good_in_service"
    string           GoodInService      = 390;
    // @inject_tag: sql:"good_wait_start"
    string           GoodWaitStart      = 391;
    // @inject_tag: sql:"good_sold"
    string           GoodSold           = 400;

    // @inject_tag: sql:"start_at"
    uint32           StartAt            = 410;
    // @inject_tag: sql:"created_at"
    uint32           CreatedAt          = 420;
    // @inject_tag: sql:"updated_at"
    uint32           UpdatedAt          = 421;

    // @inject_tag: sql:"sale_start_at"
    uint32           SaleStartAt         = 430;
    // @inject_tag: sql:"sale_end_at"
    uint32           SaleEndAt           = 440;
    // @inject_tag: sql:"service_start_at"
    uint32           ServiceStartAt      = 450;
    // @inject_tag: sql:"technical_fee_ratio"
    uint32           TechnicalFeeRatio   = 460;
    // @inject_tag: sql:"electricity_fee_ratio"
    uint32           ElectricityFeeRatio = 470;
    // @inject_tag: sql:"daily_reward_amount"
    string           DailyRewardAmount   = 480;

    // @inject_tag: sql:"descriptions"
    string           DescriptionsStr     = 510;
    repeated string  Descriptions        = 520;

    // @inject_tag: sql:"good_banner"
    string           GoodBanner          = 530;
    // @inject_tag: sql:"display_names"
    string           DisplayNamesStr     = 540;
    repeated string  DisplayNames        = 550;

    // @inject_tag: sql:"enable_purchase"
    bool             EnablePurchase         = 560;
    // @inject_tag: sql:"enable_product_page"
    bool             EnableProductPage      = 570;
    // @inject_tag: sql:"cancel_mode"
    string           CancelModeStr          = 580;
    basetypes.good.v1.CancelMode CancelMode = 590;
    // @inject_tag: sql:"user_purchase_limit"
    string           UserPurchaseLimit      = 600;
    // @inject_tag: sql:"display_colors"
    string           DisplayColorsStr       = 610;
    repeated string  DisplayColors          = 620;
    // @inject_tag: sql:"cancellable_before_start"
    uint32           CancellableBeforeStart = 630;
    // @inject_tag: sql:"product_page"
    string           ProductPage            = 640;
    // @inject_tag: sql:"enable_set_commission"
    bool             EnableSetCommission    = 650;

    // @inject_tag: sql:"likes"
    uint32           Likes              = 660;
    // @inject_tag: sql:"dislikes"
    uint32           Dislikes           = 670;
    // @inject_tag: sql:"score"
    string           Score              = 680;
    // @inject_tag: sql:"score_count"
    uint32           ScoreCount         = 690;
    // @inject_tag: sql:"recommend_count"
    uint32           RecommendCount     = 700;
    // @inject_tag: sql:"comment_count"
    uint32           CommentCount       = 710;

    // @inject_tag: sql:"app_good_stock_id"
    string           AppGoodStockID     = 730;
    // @inject_tag: sql:"app_good_reserved"
    string           AppGoodReserved    = 740;
    // @inject_tag: sql:"app_spot_quantity"
    string           AppSpotQuantity    = 750;
    // @inject_tag: sql:"app_good_locked"
    string           AppGoodLocked      = 760;
    // @inject_tag: sql:"app_good_wait_start"
    string           AppGoodWaitStart   = 770;
    // @inject_tag: sql:"app_good_in_service"
    string           AppGoodInService   = 780;
    // @inject_tag: sql:"app_good_sold"
    string           AppGoodSold        = 790;
}

message Conds {
    optional basetypes.v1.StringVal      ID     = 10;
    optional basetypes.v1.StringVal      AppID  = 20;
    optional basetypes.v1.StringVal      GoodID = 30;
    optional basetypes.v1.StringSliceVal GoodIDs = 40;
    optional basetypes.v1.StringSliceVal AppIDs  = 50;
}

message CreateGoodRequest {
    GoodReq Info = 10;
}

message CreateGoodResponse {
    Good Info = 10;
}

message GetGoodRequest {
    string ID = 10;
}

message GetGoodResponse {
    Good Info = 10;
}

message GetGoodOnlyRequest {
    Conds Conds  = 10;
}

message GetGoodOnlyResponse {
    Good Info = 10;
}

message GetGoodsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateGoodRequest {
    GoodReq Info = 10;
}

message UpdateGoodResponse {
    Good Info = 10;
}
