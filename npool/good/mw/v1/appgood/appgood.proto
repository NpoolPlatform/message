syntax = "proto3";

package good.middleware.appgood.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/appgood";

import "npool/good/mgr/v1/good/good.proto";
import "npool/good/mgr/v1/appgood/appgood.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc GetGoods   (GetGoodsRequest)   returns (GetGoodsResponse)   {}
    rpc UpdateGood (UpdateGoodRequest) returns (UpdateGoodResponse) {}
}

message Good {
    string           ID                          = 10;
    string           AppID                       = 20;
    string           GoodID                      = 30;
    bool             Online                      = 40;
    bool             Visible                     = 50;
    string           Price                       = 60;
    int32            DisplayIndex                = 70;
    int32            PurchaseLimit               = 80;
    int32            CommissionPercent           = 90;

    string           DeviceType                  = 100;
    string           DeviceManufacturer          = 110;
    uint32           DevicePowerComsuption       = 120;
    uint32           DeviceShipmentAt            = 130;
    repeated string  DevicePosters               = 140;

    int32            DurationDays                = 150;
    string           CoinTypeID                  = 160;
    string           VendorLocationCountry       = 170;

    good.manager.good.v1.GoodType    GoodType    = 180;
    good.manager.good.v1.BenefitType BenefitType = 190;

    string           Title              = 200;
    string           Unit               = 210;
    int32            UnitAmount         = 220;
    repeated string  SupportCoinTypeIDs = 230;
    bool             TestOnly           = 240;

    uint32           GoodTotal          = 250;
    uint32           GoodLocked         = 260;
    uint32           GoodInService      = 270;
    uint32           GoodSold           = 280;

    repeated Good    SubGoods           = 290;

    uint32           StartAt            = 300;
    uint32           CreatedAt          = 310;
}

message GetGoodsRequest {
    good.manager.appgood.v1.Conds Conds  = 10;
    int32                         Offset = 20;
    int32                         Limit  = 30;
}

message GetGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateGoodRequest {
    good.manager.appgood.v1.AppGoodReq Info = 10;
}

message UpdateGoodResponse {
    Good Info = 10;
}
