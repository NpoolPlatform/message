syntax = "proto3";

package good.middleware.good1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good";

import "npool/good/mgr/v1/good/good.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc GetGood     (GetGoodRequest)     returns (GetGoodResponse)     {}
    rpc GetGoods    (GetGoodsRequest)    returns (GetGoodsResponse)    {}
    rpc UpdateGood  (UpdateGoodRequest)  returns (UpdateGoodResponse)  {}
}

message Good {
    string           ID                          = 10;

    string           DeviceInfoID                = 20;
    string           DeviceType                  = 30;
    string           DeviceManufacturer          = 40;
    uint32           DevicePowerComsuption       = 50;
    uint32           DeviceShipmentAt            = 60;
    repeated string  DevicePosters               = 70;

    int32            DurationDays                = 80;
    string           CoinTypeID                  = 90;

    optional string  InheritFromGoodID           = 100;
    optional string  InheritFromGoodName         = 110;
    optional good.manager.good.v1.GoodType    InheritFromGoodType        = 120;
    optional good.manager.good.v1.BenefitType InheritFromGoodBenefitType = 130;

    string           VendorLocationID            = 140;
    string           VendorLocationCountry       = 150;
    string           VendorLocationProvince      = 160;
    string           VendorLocationCity          = 170;
    string           VendorLocationAddress       = 180;

    good.manager.good.v1.GoodType    GoodType    = 190;
    good.manager.good.v1.BenefitType BenefitType = 200;

    string           Price              = 210;
    string           Title              = 220;
    string           Unit               = 230;
    int32            UnitAmount         = 240;
    repeated string  SupportCoinTypeIDs = 250;
    bool             TestOnly           = 260;

    string           GoodStockID        = 270;
    uint32           GoodTotal          = 280;
    uint32           GoodLocked         = 290;
    uint32           GoodInService      = 300;
    uint32           GoodSold           = 310;

    uint32           DeliveryAt         = 320;
    uint32           StartAt            = 330;
    uint32           CreatedAt          = 340;
    uint32           UpdatedAt          = 350;
    uint32           DeletedAt          = 360;
}

message GetGoodRequest {
    string ID = 10;
}

message GetGoodResponse {
    Good Info = 10;
}

message GetGoodsRequest {
    good.manager.good.v1.Conds Conds  = 10;
    int32                      Offset = 20;
    int32                      Limit  = 30;
}

message GetGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateGoodRequest {
    good.manager.good.v1.GoodReq Info = 10;
}

message UpdateGoodResponse {
    Good Info = 10;
}
