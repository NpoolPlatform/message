syntax = "proto3";

package good.middleware.good1.stock.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good/stock";

import "npool/basetypes/good/v1/enums.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc AddStock       (AddStockRequest)       returns (AddStockResponse)       {}
    rpc SubStock       (SubStockRequest)       returns (SubStockResponse)       {}
}

message StockReq {
    optional string ID         = 10;
    optional string GoodID     = 20;
    optional string Total      = 30;
    optional string Locked     = 40;
    optional string WaitStart  = 50;
    optional string InService  = 60;
    optional string AppReserved  = 70;
}

message Stock {
    // @inject_tag: sql:"id"
    string ID         = 10;
    // @inject_tag: sql:"good_id"
    string GoodID     = 20;
    // @inject_tag: sql:"good_name"
    string GoodName   = 30;
    // @inject_tag: sql:"total"
    string Total      = 40;
    // @inject_tag: sql:"locked"
    string Locked     = 50;
    // @inject_tag: sql:"wait_start"
    string WaitStart  = 60;
    // @inject_tag: sql:"in_service"
    string InService  = 70;
    // @inject_tag: sql:"sold"
    string Sold       = 80;
    // @inject_tag: sql:"app_reserved"
    string AppReserved  = 90;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message Conds {
    optional basetypes.v1.StringVal ID     = 10;
    optional basetypes.v1.StringVal GoodID = 20;
    optional basetypes.v1.StringSliceVal GoodIDs = 30;
}

message AddStockRequest {
    StockReq Info = 10;
}

message AddStockResponse {
    Stock Info = 10;
}

message SubStockRequest {
    StockReq Info = 10;
}

message SubStockResponse {
    Stock Info = 10;
}

