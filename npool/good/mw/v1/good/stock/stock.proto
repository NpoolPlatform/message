syntax = "proto3";

package good.middleware.good1.stock.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good/stock";

import "npool/basetypes/good/v1/enums.proto";
import "npool/basetypes/v1/conds.proto";

service Middleware {
  rpc GetMiningGoodStocks(GetMiningGoodStocksRequest)
      returns (GetMiningGoodStocksResponse) {}
  rpc UpdateMiningGoodStocks(UpdateMiningGoodStocksRequest)
      returns (UpdateMiningGoodStocksResponse) {}
}

message MiningGoodStockReq {
  optional string EntID = 10;
  optional string PoolRootUserID = 20;
  optional string MiningPoolID = 30;
  optional string PoolGoodUserID = 40;
  optional string Total = 50;
  optional basetypes.good.v1.MiningStockState State = 60;
}

message MiningGoodStock {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"ent_id"
  string EntID = 20;
  // @inject_tag: sql:"good_id"
  string GoodID = 21;
  // @inject_tag: sql:"good_stock_id"
  string GoodStockID = 30;
  // @inject_tag: sql:"mining_pool_id"
  string MiningPoolID = 40;
  // @inject_tag: sql:"pool_good_user_id"
  string PoolGoodUserID = 50;
  // @inject_tag: sql:"pool_root_user_id"
  string PoolRootUserID = 51;
  // @inject_tag: sql:"total"
  string Total = 60;
  // @inject_tag: sql:"spot_quantity"
  string SpotQuantity = 70;
  // @inject_tag: sql:"locked"
  string Locked = 80;
  // @inject_tag: sql:"wait_start"
  string WaitStart = 90;
  // @inject_tag: sql:"in_service"
  string InService = 100;
  // @inject_tag: sql:"sold"
  string Sold = 110;
  // @inject_tag: sql:"state"
  basetypes.good.v1.MiningStockState State = 120;
}

message MiningGoodStockInfo {
  // @inject_tag: sql:"ent_id"
  string EntID = 10;
  // @inject_tag: sql:"good_stock_id"
  string GoodStockID = 20;
  // @inject_tag: sql:"mining_pool_id"
  string MiningPoolID = 30;
  // @inject_tag: sql:"pool_good_user_id"
  string PoolGoodUserID = 40;
  // @inject_tag: sql:"total"
  string Total = 50;
  // @inject_tag: sql:"spot_quantity"
  string SpotQuantity = 60;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 10;
  optional basetypes.v1.StringVal EntID = 20;
  optional basetypes.v1.StringVal GoodStockID = 30;
  optional basetypes.v1.StringVal MiningPoolID = 40;
  optional basetypes.v1.StringVal PoolGoodUserID = 50;
  optional basetypes.v1.StringVal PoolRootUserID = 60;
  optional basetypes.v1.StringVal State = 70;
}

message GetMiningGoodStocksRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetMiningGoodStocksResponse {
  repeated MiningGoodStock Infos = 10;
  uint32 Total = 20;
}

message UpdateMiningGoodStocksRequest { MiningGoodStockReq Info = 10; }

message UpdateMiningGoodStocksResponse { MiningGoodStock Info = 10; }
