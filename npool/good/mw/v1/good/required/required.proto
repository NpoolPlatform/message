syntax = "proto3";

package good.middleware.good1.required.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good/required";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateRequired      (CreateRequiredRequest)      returns (CreateRequiredResponse)      {}
    rpc GetRequired         (GetRequiredRequest)         returns (GetRequiredResponse)         {}
    rpc GetRequireds        (GetRequiredsRequest)        returns (GetRequiredsResponse)        {}
    rpc UpdateRequired      (UpdateRequiredRequest)      returns (UpdateRequiredResponse)      {}
    rpc DeleteRequired      (DeleteRequiredRequest)      returns (DeleteRequiredResponse)      {}
}

message RequiredReq {
    optional string ID             = 10;
    optional string MainGoodID     = 20;
    optional string RequiredGoodID = 30;
    optional bool   Must           = 40;
    optional bool   Commission     = 50;
}

message Required {
    // @inject_tag: sql:"id"
    string ID             = 10;
    // @inject_tag: sql:"main_good_id"
    string MainGoodID     = 20;
    // @inject_tag: sql:"main_good_name"
    string MainGoodName   = 30;
    // @inject_tag: sql:"required_good_id"
    string RequiredGoodID = 40;
    // @inject_tag: sql:"required_good_name"
    string RequiredGoodName = 50;
    // @inject_tag: sql:"must"
    bool   Must           = 60;
    // @inject_tag: sql:"commission"
    bool   Commission     = 70;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt      = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt      = 1010;
}

message Conds {
    optional basetypes.v1.StringVal      ID              = 10;
    optional basetypes.v1.StringVal      GoodID          = 20;
    optional basetypes.v1.StringSliceVal GoodIDs         = 30;
    optional basetypes.v1.StringVal      MainGoodID      = 40;
    optional basetypes.v1.StringVal      RequiredGoodID  = 50;
}

message CreateRequiredRequest {
    RequiredReq Info = 10;
}

message CreateRequiredResponse {
    Required Info = 10;
}

message GetRequiredRequest {
    string ID = 10;
}

message GetRequiredResponse {
    Required Info = 10;
}

message GetRequiredsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetRequiredsResponse {
    repeated Required Infos = 10;
    uint32            Total = 20;
}

message UpdateRequiredRequest {
    RequiredReq Info = 10;
}

message UpdateRequiredResponse {
    Required Info = 10;
}

message DeleteRequiredRequest {
    RequiredReq Info = 10;
}

message DeleteRequiredResponse {
    Required Info = 10;
}
