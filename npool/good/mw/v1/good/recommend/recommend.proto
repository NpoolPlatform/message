syntax = "proto3";

package good.middleware.good1.recommend.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good/recommend";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
  rpc CreateRecommend(CreateRecommendRequest)
      returns (CreateRecommendResponse) {}
  rpc UpdateRecommend(UpdateRecommendRequest)
      returns (UpdateRecommendResponse) {}
  rpc GetRecommend(GetRecommendRequest) returns (GetRecommendResponse) {}
  rpc GetRecommends(GetRecommendsRequest) returns (GetRecommendsResponse) {}
  rpc ExistRecommendConds(ExistRecommendCondsRequest)
      returns (ExistRecommendCondsResponse) {}
  rpc DeleteRecommend(DeleteRecommendRequest)
      returns (DeleteRecommendResponse) {}
}

message RecommendReq {
  optional uint32 ID = 9;
  optional string EntID = 10;
  optional string AppID = 20;
  optional string RecommenderID = 30;
  optional string GoodID = 40;
  optional string RecommendIndex = 50;
  optional string Message = 60;
}

message Recommend {
  // @inject_tag: sql:"id"
  uint32 ID = 9;
  // @inject_tag: sql:"ent_id"
  string EntID = 10;
  // @inject_tag: sql:"app_id"
  string AppID = 20;
  // @inject_tag: sql:"recommender_id"
  string RecommenderID = 30;
  // @inject_tag: sql:"good_id"
  string GoodID = 40;
  // @inject_tag: sql:"good_name"
  string GoodName = 50;
  // @inject_tag: sql:"recommend_index"
  string RecommendIndex = 60;
  // @inject_tag: sql:"message"
  string Message = 70;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 1000;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 1010;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 9;
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal AppID = 20;
  optional basetypes.v1.StringVal RecommenderID = 30;
  optional basetypes.v1.StringVal GoodID = 40;
  optional basetypes.v1.StringSliceVal GoodIDs = 50;
}

message CreateRecommendRequest { RecommendReq Info = 10; }

message CreateRecommendResponse { Recommend Info = 10; }

message UpdateRecommendRequest { RecommendReq Info = 10; }

message UpdateRecommendResponse { Recommend Info = 10; }

message GetRecommendRequest { string EntID = 10; }

message GetRecommendResponse { Recommend Info = 10; }

message GetRecommendsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetRecommendsResponse {
  repeated Recommend Infos = 10;
  uint32 Total = 20;
}

message ExistRecommendCondsRequest { Conds Conds = 10; }

message ExistRecommendCondsResponse { bool Info = 10; }

message DeleteRecommendRequest { RecommendReq Info = 10; }

message DeleteRecommendResponse { Recommend Info = 10; }
