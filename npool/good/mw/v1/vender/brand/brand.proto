syntax = "proto3";

package good.middleware.vender.brand.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/vender/brand";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateBrand (CreateBrandRequest) returns (CreateBrandResponse) {}
    rpc UpdateBrand (UpdateBrandRequest) returns (UpdateBrandResponse) {}
    rpc GetBrand    (GetBrandRequest)    returns (GetBrandResponse)    {}
    rpc GetBrands   (GetBrandsRequest)   returns (GetBrandsResponse)   {}
    rpc DeleteBrand (DeleteBrandRequest) returns (DeleteBrandResponse) {}
}

message BrandReq {
    optional string ID   = 10;
    optional string Name = 20;
    optional string Logo = 30;
}

message Brand {
    // @inject_tag: sql:"id"
    string ID        = 10;
    // @inject_tag: sql:"name"
    string Name      = 20;
    // @inject_tag: sql:"logo"
    string Logo      = 30;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.StringVal ID   = 10;
    optional basetypes.v1.StringVal Name = 20;
}


message CreateBrandRequest {
    BrandReq Info = 10;
}

message CreateBrandResponse {
    Brand Info = 10;
}

message UpdateBrandRequest {
    BrandReq Info = 10;
}

message UpdateBrandResponse {
    Brand Info = 10;
}

message GetBrandRequest {
    string ID = 10;
}

message GetBrandResponse {
    Brand Info = 10;
}

message GetBrandsRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetBrandsResponse {
    repeated Brand Infos = 10;
    uint32              Total = 20;
}

message DeleteBrandRequest {
    BrandReq Info = 10;
}

message DeleteBrandResponse {
    Brand Info = 10;
}
