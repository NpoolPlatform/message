// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/good/mw/v1/deviceinfo/deviceinfo.proto

package deviceinfo

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *string  `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Type            *string  `protobuf:"bytes,20,opt,name=Type,proto3,oneof" json:"Type,omitempty"`
	Manufacturer    *string  `protobuf:"bytes,30,opt,name=Manufacturer,proto3,oneof" json:"Manufacturer,omitempty"`
	PowerComsuption *uint32  `protobuf:"varint,40,opt,name=PowerComsuption,proto3,oneof" json:"PowerComsuption,omitempty"`
	ShipmentAt      *uint32  `protobuf:"varint,50,opt,name=ShipmentAt,proto3,oneof" json:"ShipmentAt,omitempty"`
	Posters         []string `protobuf:"bytes,60,rep,name=Posters,proto3" json:"Posters,omitempty"`
}

func (x *DeviceInfoReq) Reset() {
	*x = DeviceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoReq) ProtoMessage() {}

func (x *DeviceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoReq) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceInfoReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *DeviceInfoReq) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *DeviceInfoReq) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *DeviceInfoReq) GetPowerComsuption() uint32 {
	if x != nil && x.PowerComsuption != nil {
		return *x.PowerComsuption
	}
	return 0
}

func (x *DeviceInfoReq) GetShipmentAt() uint32 {
	if x != nil && x.ShipmentAt != nil {
		return *x.ShipmentAt
	}
	return 0
}

func (x *DeviceInfoReq) GetPosters() []string {
	if x != nil {
		return x.Posters
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"type"
	Type string `protobuf:"bytes,20,opt,name=Type,proto3" json:"Type,omitempty" sql:"type"`
	// @inject_tag: sql:"manufacturer"
	Manufacturer string `protobuf:"bytes,30,opt,name=Manufacturer,proto3" json:"Manufacturer,omitempty" sql:"manufacturer"`
	// @inject_tag: sql:"power_comsuption"
	PowerComsuption uint32 `protobuf:"varint,40,opt,name=PowerComsuption,proto3" json:"PowerComsuption,omitempty" sql:"power_comsuption"`
	// @inject_tag: sql:"shipment_at"
	ShipmentAt uint32 `protobuf:"varint,50,opt,name=ShipmentAt,proto3" json:"ShipmentAt,omitempty" sql:"shipment_at"`
	// @inject_tag: sql:"posters"
	PostersStr string   `protobuf:"bytes,59,opt,name=PostersStr,proto3" json:"PostersStr,omitempty" sql:"posters"`
	Posters    []string `protobuf:"bytes,60,rep,name=Posters,proto3" json:"Posters,omitempty"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,70,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,80,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
	// @inject_tag: sql:"deleted_at"
	DeletedAt uint32 `protobuf:"varint,90,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty" sql:"deleted_at"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeviceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *DeviceInfo) GetPowerComsuption() uint32 {
	if x != nil {
		return x.PowerComsuption
	}
	return 0
}

func (x *DeviceInfo) GetShipmentAt() uint32 {
	if x != nil {
		return x.ShipmentAt
	}
	return 0
}

func (x *DeviceInfo) GetPostersStr() string {
	if x != nil {
		return x.PostersStr
	}
	return ""
}

func (x *DeviceInfo) GetPosters() []string {
	if x != nil {
		return x.Posters
	}
	return nil
}

func (x *DeviceInfo) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DeviceInfo) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DeviceInfo) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *v1.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Type         *v1.StringVal `protobuf:"bytes,20,opt,name=Type,proto3,oneof" json:"Type,omitempty"`
	Manufacturer *v1.StringVal `protobuf:"bytes,30,opt,name=Manufacturer,proto3,oneof" json:"Manufacturer,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v1.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetType() *v1.StringVal {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Conds) GetManufacturer() *v1.StringVal {
	if x != nil {
		return x.Manufacturer
	}
	return nil
}

type CreateDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfoReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDeviceInfoRequest) Reset() {
	*x = CreateDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceInfoRequest) ProtoMessage() {}

func (x *CreateDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDeviceInfoRequest) GetInfo() *DeviceInfoReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDeviceInfoResponse) Reset() {
	*x = CreateDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceInfoResponse) ProtoMessage() {}

func (x *CreateDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfoReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDeviceInfoRequest) Reset() {
	*x = UpdateDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceInfoRequest) ProtoMessage() {}

func (x *UpdateDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceInfoRequest) GetInfo() *DeviceInfoReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDeviceInfoResponse) Reset() {
	*x = UpdateDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceInfoResponse) ProtoMessage() {}

func (x *UpdateDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetDeviceInfoRequest) Reset() {
	*x = GetDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoRequest) ProtoMessage() {}

func (x *GetDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeviceInfoRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetDeviceInfoResponse) Reset() {
	*x = GetDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoResponse) ProtoMessage() {}

func (x *GetDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{8}
}

func (x *GetDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDeviceInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetDeviceInfosRequest) Reset() {
	*x = GetDeviceInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfosRequest) ProtoMessage() {}

func (x *GetDeviceInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfosRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceInfosRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeviceInfosRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetDeviceInfosRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDeviceInfosRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetDeviceInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DeviceInfo `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetDeviceInfosResponse) Reset() {
	*x = GetDeviceInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfosResponse) ProtoMessage() {}

func (x *GetDeviceInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfosResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceInfosResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{10}
}

func (x *GetDeviceInfosResponse) GetInfos() []*DeviceInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetDeviceInfosResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfoReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteDeviceInfoRequest) Reset() {
	*x = DeleteDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceInfoRequest) ProtoMessage() {}

func (x *DeleteDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDeviceInfoRequest) GetInfo() *DeviceInfoReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteDeviceInfoResponse) Reset() {
	*x = DeleteDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceInfoResponse) ProtoMessage() {}

func (x *DeleteDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_mw_v1_deviceinfo_deviceinfo_proto protoreflect.FileDescriptor

var file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02,
	0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x03, 0x52, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0a, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x5a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xca, 0x01,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x59, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x5b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xa0, 0x05, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescOnce sync.Once
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescData = file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDesc
)

func file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescGZIP() []byte {
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescOnce.Do(func() {
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescData)
	})
	return file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDescData
}

var file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_goTypes = []interface{}{
	(*DeviceInfoReq)(nil),            // 0: good.middleware.deviceinfo.v1.DeviceInfoReq
	(*DeviceInfo)(nil),               // 1: good.middleware.deviceinfo.v1.DeviceInfo
	(*Conds)(nil),                    // 2: good.middleware.deviceinfo.v1.Conds
	(*CreateDeviceInfoRequest)(nil),  // 3: good.middleware.deviceinfo.v1.CreateDeviceInfoRequest
	(*CreateDeviceInfoResponse)(nil), // 4: good.middleware.deviceinfo.v1.CreateDeviceInfoResponse
	(*UpdateDeviceInfoRequest)(nil),  // 5: good.middleware.deviceinfo.v1.UpdateDeviceInfoRequest
	(*UpdateDeviceInfoResponse)(nil), // 6: good.middleware.deviceinfo.v1.UpdateDeviceInfoResponse
	(*GetDeviceInfoRequest)(nil),     // 7: good.middleware.deviceinfo.v1.GetDeviceInfoRequest
	(*GetDeviceInfoResponse)(nil),    // 8: good.middleware.deviceinfo.v1.GetDeviceInfoResponse
	(*GetDeviceInfosRequest)(nil),    // 9: good.middleware.deviceinfo.v1.GetDeviceInfosRequest
	(*GetDeviceInfosResponse)(nil),   // 10: good.middleware.deviceinfo.v1.GetDeviceInfosResponse
	(*DeleteDeviceInfoRequest)(nil),  // 11: good.middleware.deviceinfo.v1.DeleteDeviceInfoRequest
	(*DeleteDeviceInfoResponse)(nil), // 12: good.middleware.deviceinfo.v1.DeleteDeviceInfoResponse
	(*v1.StringVal)(nil),             // 13: basetypes.v1.StringVal
}
var file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_depIdxs = []int32{
	13, // 0: good.middleware.deviceinfo.v1.Conds.ID:type_name -> basetypes.v1.StringVal
	13, // 1: good.middleware.deviceinfo.v1.Conds.Type:type_name -> basetypes.v1.StringVal
	13, // 2: good.middleware.deviceinfo.v1.Conds.Manufacturer:type_name -> basetypes.v1.StringVal
	0,  // 3: good.middleware.deviceinfo.v1.CreateDeviceInfoRequest.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfoReq
	1,  // 4: good.middleware.deviceinfo.v1.CreateDeviceInfoResponse.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfo
	0,  // 5: good.middleware.deviceinfo.v1.UpdateDeviceInfoRequest.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfoReq
	1,  // 6: good.middleware.deviceinfo.v1.UpdateDeviceInfoResponse.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfo
	1,  // 7: good.middleware.deviceinfo.v1.GetDeviceInfoResponse.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfo
	2,  // 8: good.middleware.deviceinfo.v1.GetDeviceInfosRequest.Conds:type_name -> good.middleware.deviceinfo.v1.Conds
	1,  // 9: good.middleware.deviceinfo.v1.GetDeviceInfosResponse.Infos:type_name -> good.middleware.deviceinfo.v1.DeviceInfo
	0,  // 10: good.middleware.deviceinfo.v1.DeleteDeviceInfoRequest.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfoReq
	1,  // 11: good.middleware.deviceinfo.v1.DeleteDeviceInfoResponse.Info:type_name -> good.middleware.deviceinfo.v1.DeviceInfo
	3,  // 12: good.middleware.deviceinfo.v1.Manager.CreateDeviceInfo:input_type -> good.middleware.deviceinfo.v1.CreateDeviceInfoRequest
	5,  // 13: good.middleware.deviceinfo.v1.Manager.UpdateDeviceInfo:input_type -> good.middleware.deviceinfo.v1.UpdateDeviceInfoRequest
	7,  // 14: good.middleware.deviceinfo.v1.Manager.GetDeviceInfo:input_type -> good.middleware.deviceinfo.v1.GetDeviceInfoRequest
	9,  // 15: good.middleware.deviceinfo.v1.Manager.GetDeviceInfos:input_type -> good.middleware.deviceinfo.v1.GetDeviceInfosRequest
	11, // 16: good.middleware.deviceinfo.v1.Manager.DeleteDeviceInfo:input_type -> good.middleware.deviceinfo.v1.DeleteDeviceInfoRequest
	4,  // 17: good.middleware.deviceinfo.v1.Manager.CreateDeviceInfo:output_type -> good.middleware.deviceinfo.v1.CreateDeviceInfoResponse
	6,  // 18: good.middleware.deviceinfo.v1.Manager.UpdateDeviceInfo:output_type -> good.middleware.deviceinfo.v1.UpdateDeviceInfoResponse
	8,  // 19: good.middleware.deviceinfo.v1.Manager.GetDeviceInfo:output_type -> good.middleware.deviceinfo.v1.GetDeviceInfoResponse
	10, // 20: good.middleware.deviceinfo.v1.Manager.GetDeviceInfos:output_type -> good.middleware.deviceinfo.v1.GetDeviceInfosResponse
	12, // 21: good.middleware.deviceinfo.v1.Manager.DeleteDeviceInfo:output_type -> good.middleware.deviceinfo.v1.DeleteDeviceInfoResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_init() }
func file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_init() {
	if File_npool_good_mw_v1_deviceinfo_deviceinfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_goTypes,
		DependencyIndexes: file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_depIdxs,
		MessageInfos:      file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_msgTypes,
	}.Build()
	File_npool_good_mw_v1_deviceinfo_deviceinfo_proto = out.File
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_rawDesc = nil
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_goTypes = nil
	file_npool_good_mw_v1_deviceinfo_deviceinfo_proto_depIdxs = nil
}
