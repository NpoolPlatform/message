syntax = "proto3";

package good.middleware.device.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/device";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateDeviceType (CreateDeviceTypeRequest) returns (CreateDeviceTypeResponse) {}
    rpc UpdateDeviceType (UpdateDeviceTypeRequest) returns (UpdateDeviceTypeResponse) {}
    rpc GetDeviceType    (GetDeviceTypeRequest)    returns (GetDeviceTypeResponse)    {}
    rpc GetDeviceTypes   (GetDeviceTypesRequest)   returns (GetDeviceTypesResponse)   {}
    rpc DeleteDeviceType (DeleteDeviceTypeRequest) returns (DeleteDeviceTypeResponse) {}
}

message DeviceTypeReq {
    optional uint32 ID              = 9;
    optional string EntID           = 10;
    optional string Type            = 20;
    optional string Manufacturer    = 30;
    optional uint32 PowerConsumption = 40;
    optional uint32 ShipmentAt      = 50;
}

message DeviceType {
    // @inject_tag: sql:"id"
    uint32          ID              = 9;
    // @inject_tag: sql:"ent_id"
    string          EntID           = 10;
    // @inject_tag: sql:"type"
    string          Type            = 20;
    // @inject_tag: sql:"manufacturer"
    string          Manufacturer    = 30;
    // @inject_tag: sql:"power_consumption"
    uint32          PowerConsumption = 40;
    // @inject_tag: sql:"shipment_at"
    uint32          ShipmentAt      = 50;
    // @inject_tag: sql:"created_at"
    uint32          CreatedAt       = 70;
    // @inject_tag: sql:"updated_at"
    uint32          UpdatedAt       = 80;
    // @inject_tag: sql:"deleted_at"
    uint32          DeletedAt       = 90;
}

message Conds {
  optional basetypes.v1.Uint32Val ID = 9;
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.StringVal Type = 20;
  optional basetypes.v1.StringVal Manufacturer = 30;
}

message CreateDeviceInfoRequest { DeviceInfoReq Info = 10; }

message CreateDeviceTypeRequest {
    DeviceTypeReq Info = 10;
}

message CreateDeviceTypeResponse {
    DeviceType Info = 10;
}

message UpdateDeviceTypeRequest {
    DeviceTypeReq Info = 10;
}

message UpdateDeviceTypeResponse {
    DeviceType Info = 10;
}

message GetDeviceTypeRequest {
    string EntID = 10;
}

message GetDeviceTypeResponse {
    DeviceType Info = 10;
}

message GetDeviceTypesRequest {
    Conds Conds   = 10;
    int32 Offset  = 20;
    int32 Limit   = 30;
}

message GetDeviceTypesResponse {
    repeated DeviceType Infos = 10;
    uint32              Total = 20;
}

message DeleteDeviceTypeRequest {
    DeviceTypeReq Info = 10;
}

message DeleteDeviceTypeResponse {
    DeviceType Info = 10;
}
