// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/good/gw/v1/app/good/recommend/recommend.proto

package recommend

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Recommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint32                   `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID          string                   `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID          string                   `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName        string                   `protobuf:"bytes,40,opt,name=AppName,proto3" json:"AppName,omitempty"`
	RecommenderID  string                   `protobuf:"bytes,50,opt,name=RecommenderID,proto3" json:"RecommenderID,omitempty"`
	Username       *string                  `protobuf:"bytes,60,opt,name=Username,proto3,oneof" json:"Username,omitempty"`
	EmailAddress   *string                  `protobuf:"bytes,70,opt,name=EmailAddress,proto3,oneof" json:"EmailAddress,omitempty"`
	PhoneNO        *string                  `protobuf:"bytes,80,opt,name=PhoneNO,proto3,oneof" json:"PhoneNO,omitempty"`
	AppGoodID      string                   `protobuf:"bytes,90,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	GoodName       string                   `protobuf:"bytes,100,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	RecommendIndex string                   `protobuf:"bytes,110,opt,name=RecommendIndex,proto3" json:"RecommendIndex,omitempty"`
	Message        string                   `protobuf:"bytes,120,opt,name=Message,proto3" json:"Message,omitempty"`
	Hide           bool                     `protobuf:"varint,130,opt,name=Hide,proto3" json:"Hide,omitempty"`
	HideReason     v1.GoodCommentHideReason `protobuf:"varint,140,opt,name=HideReason,proto3,enum=basetypes.good.v1.GoodCommentHideReason" json:"HideReason,omitempty"`
	CreatedAt      uint32                   `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt      uint32                   `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Recommend) Reset() {
	*x = Recommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommend) ProtoMessage() {}

func (x *Recommend) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommend.ProtoReflect.Descriptor instead.
func (*Recommend) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{0}
}

func (x *Recommend) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Recommend) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Recommend) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Recommend) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Recommend) GetRecommenderID() string {
	if x != nil {
		return x.RecommenderID
	}
	return ""
}

func (x *Recommend) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Recommend) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

func (x *Recommend) GetPhoneNO() string {
	if x != nil && x.PhoneNO != nil {
		return *x.PhoneNO
	}
	return ""
}

func (x *Recommend) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *Recommend) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Recommend) GetRecommendIndex() string {
	if x != nil {
		return x.RecommendIndex
	}
	return ""
}

func (x *Recommend) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Recommend) GetHide() bool {
	if x != nil {
		return x.Hide
	}
	return false
}

func (x *Recommend) GetHideReason() v1.GoodCommentHideReason {
	if x != nil {
		return x.HideReason
	}
	return v1.GoodCommentHideReason(0)
}

func (x *Recommend) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Recommend) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID          string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID         string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppGoodID      string `protobuf:"bytes,30,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	RecommendIndex string `protobuf:"bytes,40,opt,name=RecommendIndex,proto3" json:"RecommendIndex,omitempty"`
	Message        string `protobuf:"bytes,50,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CreateRecommendRequest) Reset() {
	*x = CreateRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecommendRequest) ProtoMessage() {}

func (x *CreateRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecommendRequest.ProtoReflect.Descriptor instead.
func (*CreateRecommendRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRecommendRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateRecommendRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateRecommendRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *CreateRecommendRequest) GetRecommendIndex() string {
	if x != nil {
		return x.RecommendIndex
	}
	return ""
}

func (x *CreateRecommendRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recommend `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateRecommendResponse) Reset() {
	*x = CreateRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecommendResponse) ProtoMessage() {}

func (x *CreateRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecommendResponse.ProtoReflect.Descriptor instead.
func (*CreateRecommendResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRecommendResponse) GetInfo() *Recommend {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID          string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID          string  `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID         string  `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RecommendIndex *string `protobuf:"bytes,50,opt,name=RecommendIndex,proto3,oneof" json:"RecommendIndex,omitempty"`
	Message        *string `protobuf:"bytes,60,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *UpdateRecommendRequest) Reset() {
	*x = UpdateRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendRequest) ProtoMessage() {}

func (x *UpdateRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecommendRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRecommendRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateRecommendRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateRecommendRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateRecommendRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateRecommendRequest) GetRecommendIndex() string {
	if x != nil && x.RecommendIndex != nil {
		return *x.RecommendIndex
	}
	return ""
}

func (x *UpdateRecommendRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type UpdateRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recommend `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateRecommendResponse) Reset() {
	*x = UpdateRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecommendResponse) ProtoMessage() {}

func (x *UpdateRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecommendResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecommendResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRecommendResponse) GetInfo() *Recommend {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetRecommendsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppGoodID *string `protobuf:"bytes,20,opt,name=AppGoodID,proto3,oneof" json:"AppGoodID,omitempty"`
	UserID    *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	Offset    int32   `protobuf:"varint,40,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit     int32   `protobuf:"varint,50,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetRecommendsRequest) Reset() {
	*x = GetRecommendsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendsRequest) ProtoMessage() {}

func (x *GetRecommendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecommendsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetRecommendsRequest) GetAppGoodID() string {
	if x != nil && x.AppGoodID != nil {
		return *x.AppGoodID
	}
	return ""
}

func (x *GetRecommendsRequest) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *GetRecommendsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRecommendsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRecommendsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Recommend `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetRecommendsResponse) Reset() {
	*x = GetRecommendsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendsResponse) ProtoMessage() {}

func (x *GetRecommendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecommendsResponse) GetInfos() []*Recommend {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetRecommendsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID  string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID  string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,40,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *DeleteRecommendRequest) Reset() {
	*x = DeleteRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecommendRequest) ProtoMessage() {}

func (x *DeleteRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecommendRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecommendRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRecommendRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DeleteRecommendRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *DeleteRecommendRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *DeleteRecommendRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type DeleteRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recommend `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteRecommendResponse) Reset() {
	*x = DeleteRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecommendResponse) ProtoMessage() {}

func (x *DeleteRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecommendResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecommendResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRecommendResponse) GetInfo() *Recommend {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32                    `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string                    `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID        string                    `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID string                    `protobuf:"bytes,40,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Hide         *bool                     `protobuf:"varint,50,opt,name=Hide,proto3,oneof" json:"Hide,omitempty"`
	HideReason   *v1.GoodCommentHideReason `protobuf:"varint,60,opt,name=HideReason,proto3,enum=basetypes.good.v1.GoodCommentHideReason,oneof" json:"HideReason,omitempty"`
}

func (x *UpdateUserRecommendRequest) Reset() {
	*x = UpdateUserRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRecommendRequest) ProtoMessage() {}

func (x *UpdateUserRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRecommendRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRecommendRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserRecommendRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateUserRecommendRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateUserRecommendRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateUserRecommendRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *UpdateUserRecommendRequest) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

func (x *UpdateUserRecommendRequest) GetHideReason() v1.GoodCommentHideReason {
	if x != nil && x.HideReason != nil {
		return *x.HideReason
	}
	return v1.GoodCommentHideReason(0)
}

type UpdateUserRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recommend `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserRecommendResponse) Reset() {
	*x = UpdateUserRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRecommendResponse) ProtoMessage() {}

func (x *UpdateUserRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRecommendResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRecommendResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserRecommendResponse) GetInfo() *Recommend {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32                    `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID        string                    `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID  string                    `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetUserID string                    `protobuf:"bytes,40,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	Hide         *bool                     `protobuf:"varint,50,opt,name=Hide,proto3,oneof" json:"Hide,omitempty"`
	HideReason   *v1.GoodCommentHideReason `protobuf:"varint,60,opt,name=HideReason,proto3,enum=basetypes.good.v1.GoodCommentHideReason,oneof" json:"HideReason,omitempty"`
}

func (x *AdminUpdateRecommendRequest) Reset() {
	*x = AdminUpdateRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateRecommendRequest) ProtoMessage() {}

func (x *AdminUpdateRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateRecommendRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateRecommendRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{11}
}

func (x *AdminUpdateRecommendRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateRecommendRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateRecommendRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateRecommendRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *AdminUpdateRecommendRequest) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

func (x *AdminUpdateRecommendRequest) GetHideReason() v1.GoodCommentHideReason {
	if x != nil && x.HideReason != nil {
		return *x.HideReason
	}
	return v1.GoodCommentHideReason(0)
}

type AdminUpdateRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recommend `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateRecommendResponse) Reset() {
	*x = AdminUpdateRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateRecommendResponse) ProtoMessage() {}

func (x *AdminUpdateRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateRecommendResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateRecommendResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP(), []int{12}
}

func (x *AdminUpdateRecommendResponse) GetInfo() *Recommend {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_gw_v1_app_good_recommend_recommend_proto protoreflect.FileDescriptor

var file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDesc = []byte{
	0x0a, 0x33, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x04,
	0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x4f, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x5a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x78, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x04,
	0x48, 0x69, 0x64, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x48, 0x69, 0x64,
	0x65, 0x12, 0x49, 0x0a, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x8c, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x4f, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd7, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x73, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x6c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5d,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfc, 0x01,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04,
	0x48, 0x69, 0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x48, 0x69,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x48, 0x69, 0x64, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x89, 0x02, 0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x48,
	0x69, 0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x48, 0x69, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x48, 0x69, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x48, 0x69, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x1c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xdf, 0x08, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xb1, 0x01, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12,
	0xb1, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0xa9, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x12,
	0xb1, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0xc2, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x3f, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0xc6, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01,
	0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescOnce sync.Once
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescData = file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDesc
)

func file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescGZIP() []byte {
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescOnce.Do(func() {
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescData)
	})
	return file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDescData
}

var file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_good_gw_v1_app_good_recommend_recommend_proto_goTypes = []interface{}{
	(*Recommend)(nil),                    // 0: good.gateway.app.good1.recommend.v1.Recommend
	(*CreateRecommendRequest)(nil),       // 1: good.gateway.app.good1.recommend.v1.CreateRecommendRequest
	(*CreateRecommendResponse)(nil),      // 2: good.gateway.app.good1.recommend.v1.CreateRecommendResponse
	(*UpdateRecommendRequest)(nil),       // 3: good.gateway.app.good1.recommend.v1.UpdateRecommendRequest
	(*UpdateRecommendResponse)(nil),      // 4: good.gateway.app.good1.recommend.v1.UpdateRecommendResponse
	(*GetRecommendsRequest)(nil),         // 5: good.gateway.app.good1.recommend.v1.GetRecommendsRequest
	(*GetRecommendsResponse)(nil),        // 6: good.gateway.app.good1.recommend.v1.GetRecommendsResponse
	(*DeleteRecommendRequest)(nil),       // 7: good.gateway.app.good1.recommend.v1.DeleteRecommendRequest
	(*DeleteRecommendResponse)(nil),      // 8: good.gateway.app.good1.recommend.v1.DeleteRecommendResponse
	(*UpdateUserRecommendRequest)(nil),   // 9: good.gateway.app.good1.recommend.v1.UpdateUserRecommendRequest
	(*UpdateUserRecommendResponse)(nil),  // 10: good.gateway.app.good1.recommend.v1.UpdateUserRecommendResponse
	(*AdminUpdateRecommendRequest)(nil),  // 11: good.gateway.app.good1.recommend.v1.AdminUpdateRecommendRequest
	(*AdminUpdateRecommendResponse)(nil), // 12: good.gateway.app.good1.recommend.v1.AdminUpdateRecommendResponse
	(v1.GoodCommentHideReason)(0),        // 13: basetypes.good.v1.GoodCommentHideReason
}
var file_npool_good_gw_v1_app_good_recommend_recommend_proto_depIdxs = []int32{
	13, // 0: good.gateway.app.good1.recommend.v1.Recommend.HideReason:type_name -> basetypes.good.v1.GoodCommentHideReason
	0,  // 1: good.gateway.app.good1.recommend.v1.CreateRecommendResponse.Info:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	0,  // 2: good.gateway.app.good1.recommend.v1.UpdateRecommendResponse.Info:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	0,  // 3: good.gateway.app.good1.recommend.v1.GetRecommendsResponse.Infos:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	0,  // 4: good.gateway.app.good1.recommend.v1.DeleteRecommendResponse.Info:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	13, // 5: good.gateway.app.good1.recommend.v1.UpdateUserRecommendRequest.HideReason:type_name -> basetypes.good.v1.GoodCommentHideReason
	0,  // 6: good.gateway.app.good1.recommend.v1.UpdateUserRecommendResponse.Info:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	13, // 7: good.gateway.app.good1.recommend.v1.AdminUpdateRecommendRequest.HideReason:type_name -> basetypes.good.v1.GoodCommentHideReason
	0,  // 8: good.gateway.app.good1.recommend.v1.AdminUpdateRecommendResponse.Info:type_name -> good.gateway.app.good1.recommend.v1.Recommend
	1,  // 9: good.gateway.app.good1.recommend.v1.Gateway.CreateRecommend:input_type -> good.gateway.app.good1.recommend.v1.CreateRecommendRequest
	3,  // 10: good.gateway.app.good1.recommend.v1.Gateway.UpdateRecommend:input_type -> good.gateway.app.good1.recommend.v1.UpdateRecommendRequest
	5,  // 11: good.gateway.app.good1.recommend.v1.Gateway.GetRecommends:input_type -> good.gateway.app.good1.recommend.v1.GetRecommendsRequest
	7,  // 12: good.gateway.app.good1.recommend.v1.Gateway.DeleteRecommend:input_type -> good.gateway.app.good1.recommend.v1.DeleteRecommendRequest
	9,  // 13: good.gateway.app.good1.recommend.v1.Gateway.UpdateUserRecommend:input_type -> good.gateway.app.good1.recommend.v1.UpdateUserRecommendRequest
	11, // 14: good.gateway.app.good1.recommend.v1.Gateway.AdminUpdateRecommend:input_type -> good.gateway.app.good1.recommend.v1.AdminUpdateRecommendRequest
	2,  // 15: good.gateway.app.good1.recommend.v1.Gateway.CreateRecommend:output_type -> good.gateway.app.good1.recommend.v1.CreateRecommendResponse
	4,  // 16: good.gateway.app.good1.recommend.v1.Gateway.UpdateRecommend:output_type -> good.gateway.app.good1.recommend.v1.UpdateRecommendResponse
	6,  // 17: good.gateway.app.good1.recommend.v1.Gateway.GetRecommends:output_type -> good.gateway.app.good1.recommend.v1.GetRecommendsResponse
	8,  // 18: good.gateway.app.good1.recommend.v1.Gateway.DeleteRecommend:output_type -> good.gateway.app.good1.recommend.v1.DeleteRecommendResponse
	10, // 19: good.gateway.app.good1.recommend.v1.Gateway.UpdateUserRecommend:output_type -> good.gateway.app.good1.recommend.v1.UpdateUserRecommendResponse
	12, // 20: good.gateway.app.good1.recommend.v1.Gateway.AdminUpdateRecommend:output_type -> good.gateway.app.good1.recommend.v1.AdminUpdateRecommendResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_npool_good_gw_v1_app_good_recommend_recommend_proto_init() }
func file_npool_good_gw_v1_app_good_recommend_recommend_proto_init() {
	if File_npool_good_gw_v1_app_good_recommend_recommend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_gw_v1_app_good_recommend_recommend_proto_goTypes,
		DependencyIndexes: file_npool_good_gw_v1_app_good_recommend_recommend_proto_depIdxs,
		MessageInfos:      file_npool_good_gw_v1_app_good_recommend_recommend_proto_msgTypes,
	}.Build()
	File_npool_good_gw_v1_app_good_recommend_recommend_proto = out.File
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_rawDesc = nil
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_goTypes = nil
	file_npool_good_gw_v1_app_good_recommend_recommend_proto_depIdxs = nil
}
