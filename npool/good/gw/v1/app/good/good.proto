syntax = "proto3";

package good.gateway.app.good1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/app/good";

import "npool/basetypes/good/v1/enums.proto";
import "google/api/annotations.proto";

// Service Name
service Gateway {
    rpc CreateNAppGood (CreateNAppGoodRequest) returns (CreateNAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/n/appgood"
            body: "*"
        };
    }

    rpc GetAppGoods (GetAppGoodsRequest) returns (GetAppGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/appgoods"
            body: "*"
        };
    }

    rpc GetAppGood (GetAppGoodRequest) returns (GetAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/appgood"
            body: "*"
        };
    }

    rpc GetNAppGoods (GetNAppGoodsRequest) returns (GetNAppGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/appgoods"
            body: "*"
        };
    }

    rpc UpdateAppGood (UpdateAppGoodRequest) returns (UpdateAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/appgood"
            body: "*"
        };
    }

    rpc UpdateNAppGood (UpdateNAppGoodRequest) returns (UpdateNAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/n/appgood"
            body: "*"
        };
    }
}

message Good {
    string           ID                          = 10;
    string           AppID                       = 20;
    string           AppName                     = 21;
    string           GoodID                      = 30;
    bool             Online                      = 40;
    bool             Visible                     = 50;
    string           Price                       = 60;
    int32            DisplayIndex                = 70;
    int32            PurchaseLimit               = 80;

    string           DeviceType                  = 240;
    string           DeviceManufacturer          = 250;
    uint32           DevicePowerConsumption      = 260;
    uint32           DeviceShipmentAt            = 270;
    repeated string  DevicePosters               = 280;

    int32            DurationDays                = 290;
    string           VendorLocationCountry       = 300;
    string           VendorBrandName             = 301;
    string           VendorBrandLogo             = 302;

    string           CoinTypeID                  = 310;
    string           CoinLogo                    = 320;
    string           CoinName                    = 330;
    string           CoinUnit                    = 340;
    bool             CoinPreSale                 = 350;
    string           CoinEnv                     = 351;
    string           CoinHomePage                = 352;
    string           CoinSpecs                   = 353;

    basetypes.good.v1.GoodType    GoodType    = 360;
    basetypes.good.v1.BenefitType BenefitType = 370;
    string           GoodName           = 380;
    string           Unit               = 390;
    int32            UnitAmount         = 400;
    uint32           BenefitIntervalHours = 401;

    bool             TestOnly           = 410;
    repeated string  Posters            = 420;
    repeated basetypes.good.v1.GoodLabel Labels = 430;

    message CoinInfo {
        string CoinTypeID    = 10;
        string CoinLogo      = 20;
        string CoinName      = 30;
        string CoinUnit      = 40;
        bool   CoinPreSale   = 50;
        string CoinEnv       = 60;
        string CoinHomePage  = 70;
        string CoinSpecs     = 80;
    }
    repeated CoinInfo SupportCoins  = 460;

    string           GoodTotal          = 470;
    string           GoodSpotQuantity   = 480;

    repeated Good    RequiredGoods      = 520;
    uint32           StartAt            = 550;
    uint32           CreatedAt          = 560;

    uint32           SaleStartAt         = 570;
    uint32           SaleEndAt           = 580;
    uint32           ServiceStartAt      = 590;
    uint32           TechnicalFeeRatio   = 600;
    uint32           ElectricityFeeRatio = 610;
    string           DailyRewardAmount   = 620;
    repeated string  Descriptions        = 640;
    string           GoodBanner          = 650;
    repeated string  DisplayNames        = 660;

    bool             EnablePurchase    = 670;
    bool             EnableProductPage = 680;
    basetypes.good.v1.CancelMode CancelMode = 690;
    string           UserPurchaseLimit = 700;
    repeated string  DisplayColors          = 710;
    uint32           CancellableBeforeStart = 720;
    string           ProductPage            = 730;
    bool             EnableSetCommission    = 740;

    uint32           Likes          = 750;
    uint32           Dislikes       = 760;
    string           Score          = 770;
    uint32           ScoreCount     = 780;
    uint32           RecommendCount = 790;
    uint32           CommentCount   = 800;

    string           AppGoodStockID     = 810;
    string           AppGoodReserved    = 820;
    string           AppSpotQuantity    = 830;
    string           AppGoodLocked      = 840;
    string           AppGoodWaitStart   = 850;
    string           AppGoodInService   = 860;
    string           AppGoodSold        = 870;
}

message CreateNAppGoodRequest {
    string TargetAppID         = 10;
    string GoodID              = 20;
    bool   Online              = 30;
    bool   Visible             = 40;
    string GoodName            = 50;
    string Price               = 60;
    int32  DisplayIndex        = 70;
    int32  PurchaseLimit       = 80;
    optional uint32 SaleStartAt    = 100;
    optional uint32 SaleEndAt      = 110;
    optional uint32 ServiceStartAt = 120;
    optional uint32 TechnicalFeeRatio    = 130;
    optional uint32 ElectricityFeeRatio  = 140;
    optional bool   EnablePurchase         = 160;
    optional bool   EnableProductPage      = 170;
    optional basetypes.good.v1.CancelMode CancelMode = 180;
    optional string UserPurchaseLimit      = 190;
    repeated string DisplayColors          = 200;
    optional uint32 CancellableBeforeStart = 210;
    optional string ProductPage            = 220;
    optional bool   EnableSetCommission    = 230;
}

message CreateNAppGoodResponse {
    Good Info = 10;
}

message GetAppGoodsRequest {
    string AppID  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetAppGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message GetAppGoodRequest {
    string AppID  = 10;
    string GoodID = 20;
}

message GetAppGoodResponse {
    Good Info = 10;
}

message GetNAppGoodsRequest {
    string TargetAppID  = 10;
    int32  Offset       = 20;
    int32  Limit        = 30;
}

message GetNAppGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateAppGoodRequest {
    string          ID                  = 10;
    string          AppID               = 20;
    optional bool   Online              = 30;
    optional bool   Visible             = 40;
    optional string GoodName            = 50;
    optional string Price               = 60;
    optional int32  DisplayIndex        = 70;
    optional int32  PurchaseLimit       = 80;
    optional uint32 SaleStartAt         = 100;
    optional uint32 SaleEndAt           = 110;
    optional uint32 ServiceStartAt      = 120;
    optional uint32 TechnicalFeeRatio   = 130;
    optional uint32 ElectricityFeeRatio = 140;
    repeated string Descriptions        = 160;
    optional string GoodBanner          = 170;
    repeated string DisplayNames        = 180;
    optional string DailyRewardAmount   = 190;
    optional bool   EnablePurchase      = 200;
    optional bool   EnableProductPage   = 210;
    optional basetypes.good.v1.CancelMode CancelMode = 220;
    optional string UserPurchaseLimit = 230;
    repeated string DisplayColors          = 240;
    optional uint32 CancellableBeforeStart = 250;
    optional string ProductPage            = 260;
    optional bool   EnableSetCommission    = 270;
}

message UpdateAppGoodResponse {
    Good Info = 10;
}

message UpdateNAppGoodRequest {
    string          ID                  = 10;
    string          TargetAppID         = 20;
    optional bool   Online              = 30;
    optional bool   Visible             = 40;
    optional string GoodName            = 50;
    optional string Price               = 60;
    optional int32  DisplayIndex        = 70;
    optional int32  PurchaseLimit       = 80;
    optional uint32 ServiceStartAt      = 100;
    optional uint32 TechnicalFeeRatio   = 110;
    optional uint32 ElectricityFeeRatio = 120;
    repeated string Descriptions        = 160;
    optional string GoodBanner          = 170;
    repeated string DisplayNames        = 180;
    optional bool   EnablePurchase    = 190;
    optional bool   EnableProductPage = 200;
    optional basetypes.good.v1.CancelMode CancelMode = 210;
    optional string UserPurchaseLimit = 220;
    repeated string DisplayColors          = 230;
    optional uint32 CancellableBeforeStart = 240;
    optional string ProductPage            = 250;
    optional bool   EnableSetCommission    = 270;
}

message UpdateNAppGoodResponse {
    Good Info = 10;
}
