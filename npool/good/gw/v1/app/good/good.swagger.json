{
  "swagger": "2.0",
  "info": {
    "title": "npool/good/gw/v1/app/good/good.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Gateway"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/admin/get/appgoods": {
      "post": {
        "operationId": "Gateway_AdminGetGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AdminGetGoodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AdminGetGoodsRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/v1/get/appgoods": {
      "post": {
        "operationId": "Gateway_GetGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/goodgatewayappgood1v1GetGoodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/goodgatewayappgood1v1GetGoodsRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    }
  },
  "definitions": {
    "goodgatewayappgood1v1GetGoodsRequest": {
      "type": "object",
      "properties": {
        "AppID": {
          "type": "string"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "goodgatewayappgood1v1GetGoodsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Good"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AdminGetGoodsRequest": {
      "type": "object",
      "properties": {
        "TargetAppID": {
          "type": "string"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1AdminGetGoodsResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Good"
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1BenefitType": {
      "type": "string",
      "enum": [
        "DefaultBenefitType",
        "BenefitTypePlatform",
        "BenefitTypePool",
        "BenefitTypeOffline",
        "BenefitTypeContract",
        "BenefitTypeNone"
      ],
      "default": "DefaultBenefitType",
      "title": "- BenefitTypePlatform: Platform receive benefit, then distribute benefit to user\n - BenefitTypePool: User receive benefit from pool directly\n - BenefitTypeOffline: User do not receive any online reward\n - BenefitTypeContract: User receive reward from smart contract\n - BenefitTypeNone: Such as technique fee"
    },
    "v1Good": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"id\""
        },
        "EntID": {
          "type": "string",
          "title": "@inject_tag: sql:\"ent_id\""
        },
        "AppID": {
          "type": "string",
          "title": "@inject_tag: sql:\"app_id\""
        },
        "GoodID": {
          "type": "string",
          "title": "@inject_tag: sql:\"good_id\""
        },
        "GoodTypeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"good_type\""
        },
        "GoodType": {
          "$ref": "#/definitions/v1GoodType"
        },
        "BenefitTypeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"benefit_type\""
        },
        "BenefitType": {
          "$ref": "#/definitions/v1BenefitType"
        },
        "GoodName": {
          "type": "string",
          "title": "@inject_tag: sql:\"good_name\""
        },
        "ServiceStartAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"service_start_at\""
        },
        "StartModeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"start_mode\""
        },
        "StartMode": {
          "$ref": "#/definitions/v1GoodStartMode"
        },
        "TestOnly": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"test_only\""
        },
        "BenefitIntervalHours": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"benefit_interval_hours\""
        },
        "GoodPurchasable": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"good_purchasable\""
        },
        "GoodOnline": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"good_online\""
        },
        "StateStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"state\""
        },
        "State": {
          "$ref": "#/definitions/v1GoodState"
        },
        "AppGoodPurchasable": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"app_good_purchasable\""
        },
        "AppGoodOnline": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"app_good_online\""
        },
        "EnableProductPage": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"enable_product_page\""
        },
        "ProductPage": {
          "type": "string",
          "title": "@inject_tag: sql:\"product_page\""
        },
        "Visible": {
          "type": "boolean",
          "title": "@inject_tag: sql:\"visible\""
        },
        "AppGoodName": {
          "type": "string",
          "title": "@inject_tag: sql:\"app_good_name\""
        },
        "DisplayIndex": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: sql:\"display_index\""
        },
        "Banner": {
          "type": "string",
          "title": "@inject_tag: sql:\"banner\""
        },
        "DisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"created_at\""
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"updated_at\""
        }
      }
    },
    "v1GoodStartMode": {
      "type": "string",
      "enum": [
        "DefaultGoodStartMode",
        "GoodStartModeTBD",
        "GoodStartModeConfirmed",
        "GoodStartModeInstantly",
        "GoodStartModeNextDay",
        "GoodStartModePreset",
        "GoodStartModeWithParent"
      ],
      "default": "DefaultGoodStartMode"
    },
    "v1GoodState": {
      "type": "string",
      "enum": [
        "DefaultGoodState",
        "GoodStatePreWait",
        "GoodStateWait",
        "GoodStateCreateGoodUser",
        "GoodStateCheckHashRate",
        "GoodStateReady",
        "GoodStateFail"
      ],
      "default": "DefaultGoodState",
      "description": "- GoodStateCreateGoodUser: for miningpoolstock",
      "title": "initial state: GoodStateWait\n|\nv\nGoodStateCreateGoodUser------------------\n|                             |\nv                             |\nGoodStateCheckHashRate-------------------\n|                             |\nv                             v\nGoodStateReady                 GoodStateFail"
    },
    "v1GoodType": {
      "type": "string",
      "enum": [
        "DefaultGoodType",
        "PowerRental",
        "MachineRental",
        "MachineCustody",
        "LegacyPowerRental",
        "TechniqueServiceFee",
        "ElectricityFee"
      ],
      "default": "DefaultGoodType"
    }
  }
}
