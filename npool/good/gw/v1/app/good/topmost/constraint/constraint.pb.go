// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/good/gw/v1/app/good/topmost/constraint/constraint.proto

package constraint

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopMostConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint32                   `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID            string                   `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID            string                   `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName          string                   `protobuf:"bytes,40,opt,name=AppName,proto3" json:"AppName,omitempty"`
	TopMostID        string                   `protobuf:"bytes,50,opt,name=TopMostID,proto3" json:"TopMostID,omitempty"`
	TopMostType      v1.GoodTopMostType       `protobuf:"varint,60,opt,name=TopMostType,proto3,enum=basetypes.good.v1.GoodTopMostType" json:"TopMostType,omitempty"`
	TopMostTitle     string                   `protobuf:"bytes,70,opt,name=TopMostTitle,proto3" json:"TopMostTitle,omitempty"`
	TopMostMessage   string                   `protobuf:"bytes,80,opt,name=TopMostMessage,proto3" json:"TopMostMessage,omitempty"`
	TopMostTargetUrl string                   `protobuf:"bytes,90,opt,name=TopMostTargetUrl,proto3" json:"TopMostTargetUrl,omitempty"`
	Constraint       v1.GoodTopMostConstraint `protobuf:"varint,100,opt,name=Constraint,proto3,enum=basetypes.good.v1.GoodTopMostConstraint" json:"Constraint,omitempty"`
	TargetValue      string                   `protobuf:"bytes,110,opt,name=TargetValue,proto3" json:"TargetValue,omitempty"`
	Index            uint32                   `protobuf:"varint,120,opt,name=Index,proto3" json:"Index,omitempty"`
	CreatedAt        uint32                   `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt        uint32                   `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *TopMostConstraint) Reset() {
	*x = TopMostConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMostConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMostConstraint) ProtoMessage() {}

func (x *TopMostConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMostConstraint.ProtoReflect.Descriptor instead.
func (*TopMostConstraint) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{0}
}

func (x *TopMostConstraint) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TopMostConstraint) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *TopMostConstraint) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TopMostConstraint) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostID() string {
	if x != nil {
		return x.TopMostID
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostType() v1.GoodTopMostType {
	if x != nil {
		return x.TopMostType
	}
	return v1.GoodTopMostType(0)
}

func (x *TopMostConstraint) GetTopMostTitle() string {
	if x != nil {
		return x.TopMostTitle
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostMessage() string {
	if x != nil {
		return x.TopMostMessage
	}
	return ""
}

func (x *TopMostConstraint) GetTopMostTargetUrl() string {
	if x != nil {
		return x.TopMostTargetUrl
	}
	return ""
}

func (x *TopMostConstraint) GetConstraint() v1.GoodTopMostConstraint {
	if x != nil {
		return x.Constraint
	}
	return v1.GoodTopMostConstraint(0)
}

func (x *TopMostConstraint) GetTargetValue() string {
	if x != nil {
		return x.TargetValue
	}
	return ""
}

func (x *TopMostConstraint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TopMostConstraint) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TopMostConstraint) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string                   `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TopMostID   string                   `protobuf:"bytes,20,opt,name=TopMostID,proto3" json:"TopMostID,omitempty"`
	Constraint  v1.GoodTopMostConstraint `protobuf:"varint,30,opt,name=Constraint,proto3,enum=basetypes.good.v1.GoodTopMostConstraint" json:"Constraint,omitempty"`
	TargetValue *string                  `protobuf:"bytes,40,opt,name=TargetValue,proto3,oneof" json:"TargetValue,omitempty"`
	Index       *uint32                  `protobuf:"varint,50,opt,name=Index,proto3,oneof" json:"Index,omitempty"`
}

func (x *CreateTopMostConstraintRequest) Reset() {
	*x = CreateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostConstraintRequest) ProtoMessage() {}

func (x *CreateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*CreateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTopMostConstraintRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateTopMostConstraintRequest) GetTopMostID() string {
	if x != nil {
		return x.TopMostID
	}
	return ""
}

func (x *CreateTopMostConstraintRequest) GetConstraint() v1.GoodTopMostConstraint {
	if x != nil {
		return x.Constraint
	}
	return v1.GoodTopMostConstraint(0)
}

func (x *CreateTopMostConstraintRequest) GetTargetValue() string {
	if x != nil && x.TargetValue != nil {
		return *x.TargetValue
	}
	return ""
}

func (x *CreateTopMostConstraintRequest) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type CreateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTopMostConstraintResponse) Reset() {
	*x = CreateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopMostConstraintResponse) ProtoMessage() {}

func (x *CreateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*CreateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID       string  `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetValue *string `protobuf:"bytes,40,opt,name=TargetValue,proto3,oneof" json:"TargetValue,omitempty"`
	Index       *uint32 `protobuf:"varint,50,opt,name=Index,proto3,oneof" json:"Index,omitempty"`
}

func (x *UpdateTopMostConstraintRequest) Reset() {
	*x = UpdateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostConstraintRequest) ProtoMessage() {}

func (x *UpdateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTopMostConstraintRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateTopMostConstraintRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateTopMostConstraintRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateTopMostConstraintRequest) GetTargetValue() string {
	if x != nil && x.TargetValue != nil {
		return *x.TargetValue
	}
	return ""
}

func (x *UpdateTopMostConstraintRequest) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type UpdateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTopMostConstraintResponse) Reset() {
	*x = UpdateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopMostConstraintResponse) ProtoMessage() {}

func (x *UpdateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*UpdateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTopMostConstraintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TopMostID *string `protobuf:"bytes,20,opt,name=TopMostID,proto3,oneof" json:"TopMostID,omitempty"`
	Offset    int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit     int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTopMostConstraintsRequest) Reset() {
	*x = GetTopMostConstraintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintsRequest) ProtoMessage() {}

func (x *GetTopMostConstraintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintsRequest.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{5}
}

func (x *GetTopMostConstraintsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetTopMostConstraintsRequest) GetTopMostID() string {
	if x != nil && x.TopMostID != nil {
		return *x.TopMostID
	}
	return ""
}

func (x *GetTopMostConstraintsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTopMostConstraintsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTopMostConstraintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TopMostConstraint `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32               `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTopMostConstraintsResponse) Reset() {
	*x = GetTopMostConstraintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopMostConstraintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopMostConstraintsResponse) ProtoMessage() {}

func (x *GetTopMostConstraintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopMostConstraintsResponse.ProtoReflect.Descriptor instead.
func (*GetTopMostConstraintsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{6}
}

func (x *GetTopMostConstraintsResponse) GetInfos() []*TopMostConstraint {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTopMostConstraintsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID string `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *DeleteTopMostConstraintRequest) Reset() {
	*x = DeleteTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostConstraintRequest) ProtoMessage() {}

func (x *DeleteTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*DeleteTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTopMostConstraintRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DeleteTopMostConstraintRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *DeleteTopMostConstraintRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type DeleteTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTopMostConstraintResponse) Reset() {
	*x = DeleteTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopMostConstraintResponse) ProtoMessage() {}

func (x *DeleteTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*DeleteTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminCreateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string                   `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TopMostID   string                   `protobuf:"bytes,20,opt,name=TopMostID,proto3" json:"TopMostID,omitempty"`
	Constraint  v1.GoodTopMostConstraint `protobuf:"varint,30,opt,name=Constraint,proto3,enum=basetypes.good.v1.GoodTopMostConstraint" json:"Constraint,omitempty"`
	TargetValue string                   `protobuf:"bytes,40,opt,name=TargetValue,proto3" json:"TargetValue,omitempty"`
	Index       *uint32                  `protobuf:"varint,50,opt,name=Index,proto3,oneof" json:"Index,omitempty"`
}

func (x *AdminCreateTopMostConstraintRequest) Reset() {
	*x = AdminCreateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateTopMostConstraintRequest) ProtoMessage() {}

func (x *AdminCreateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{9}
}

func (x *AdminCreateTopMostConstraintRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateTopMostConstraintRequest) GetTopMostID() string {
	if x != nil {
		return x.TopMostID
	}
	return ""
}

func (x *AdminCreateTopMostConstraintRequest) GetConstraint() v1.GoodTopMostConstraint {
	if x != nil {
		return x.Constraint
	}
	return v1.GoodTopMostConstraint(0)
}

func (x *AdminCreateTopMostConstraintRequest) GetTargetValue() string {
	if x != nil {
		return x.TargetValue
	}
	return ""
}

func (x *AdminCreateTopMostConstraintRequest) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type AdminCreateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateTopMostConstraintResponse) Reset() {
	*x = AdminCreateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateTopMostConstraintResponse) ProtoMessage() {}

func (x *AdminCreateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{10}
}

func (x *AdminCreateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetTopMostConstraintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetTopMostConstraintsRequest) Reset() {
	*x = AdminGetTopMostConstraintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetTopMostConstraintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetTopMostConstraintsRequest) ProtoMessage() {}

func (x *AdminGetTopMostConstraintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetTopMostConstraintsRequest.ProtoReflect.Descriptor instead.
func (*AdminGetTopMostConstraintsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{11}
}

func (x *AdminGetTopMostConstraintsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminGetTopMostConstraintsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetTopMostConstraintsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetTopMostConstraintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TopMostConstraint `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32               `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetTopMostConstraintsResponse) Reset() {
	*x = AdminGetTopMostConstraintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetTopMostConstraintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetTopMostConstraintsResponse) ProtoMessage() {}

func (x *AdminGetTopMostConstraintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetTopMostConstraintsResponse.ProtoReflect.Descriptor instead.
func (*AdminGetTopMostConstraintsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{12}
}

func (x *AdminGetTopMostConstraintsResponse) GetInfos() []*TopMostConstraint {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetTopMostConstraintsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminUpdateTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID string  `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	TargetValue *string `protobuf:"bytes,40,opt,name=TargetValue,proto3,oneof" json:"TargetValue,omitempty"`
	Index       *uint32 `protobuf:"varint,50,opt,name=Index,proto3,oneof" json:"Index,omitempty"`
}

func (x *AdminUpdateTopMostConstraintRequest) Reset() {
	*x = AdminUpdateTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateTopMostConstraintRequest) ProtoMessage() {}

func (x *AdminUpdateTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{13}
}

func (x *AdminUpdateTopMostConstraintRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateTopMostConstraintRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateTopMostConstraintRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateTopMostConstraintRequest) GetTargetValue() string {
	if x != nil && x.TargetValue != nil {
		return *x.TargetValue
	}
	return ""
}

func (x *AdminUpdateTopMostConstraintRequest) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type AdminUpdateTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateTopMostConstraintResponse) Reset() {
	*x = AdminUpdateTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateTopMostConstraintResponse) ProtoMessage() {}

func (x *AdminUpdateTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{14}
}

func (x *AdminUpdateTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminDeleteTopMostConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID string `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
}

func (x *AdminDeleteTopMostConstraintRequest) Reset() {
	*x = AdminDeleteTopMostConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteTopMostConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteTopMostConstraintRequest) ProtoMessage() {}

func (x *AdminDeleteTopMostConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteTopMostConstraintRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteTopMostConstraintRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{15}
}

func (x *AdminDeleteTopMostConstraintRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteTopMostConstraintRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminDeleteTopMostConstraintRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

type AdminDeleteTopMostConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopMostConstraint `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteTopMostConstraintResponse) Reset() {
	*x = AdminDeleteTopMostConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteTopMostConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteTopMostConstraintResponse) ProtoMessage() {}

func (x *AdminDeleteTopMostConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteTopMostConstraintResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteTopMostConstraintResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP(), []int{16}
}

func (x *AdminDeleteTopMostConstraintResponse) GetInfo() *TopMostConstraint {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto protoreflect.FileDescriptor

var file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f, 0x70, 0x6d,
	0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2c, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x85, 0x04, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0b, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x78, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x01, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x76, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e,
	0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb8, 0x01,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x76, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x93, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x22, 0x76, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x23,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x48, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x7b, 0x0a, 0x24, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x73, 0x0a, 0x21, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x22, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x23, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x7b, 0x0a, 0x24, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a, 0x23, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x22, 0x7b, 0x0a, 0x24, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xfd, 0x0e, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xe3, 0x01, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22,
	0x20, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0xe3, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x4c, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0xdb, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0xe3, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73,
	0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0xf8, 0x01, 0x0a, 0x1c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x51, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0xf8, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0xf0, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f,
	0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0xf8, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x74,
	0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x4d, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x42,
	0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x74, 0x6f,
	0x70, 0x6d, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescOnce sync.Once
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescData = file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDesc
)

func file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescGZIP() []byte {
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescOnce.Do(func() {
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescData)
	})
	return file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDescData
}

var file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_goTypes = []interface{}{
	(*TopMostConstraint)(nil),                    // 0: good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	(*CreateTopMostConstraintRequest)(nil),       // 1: good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest
	(*CreateTopMostConstraintResponse)(nil),      // 2: good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse
	(*UpdateTopMostConstraintRequest)(nil),       // 3: good.gateway.app.good1.topmost.constraint.v1.UpdateTopMostConstraintRequest
	(*UpdateTopMostConstraintResponse)(nil),      // 4: good.gateway.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse
	(*GetTopMostConstraintsRequest)(nil),         // 5: good.gateway.app.good1.topmost.constraint.v1.GetTopMostConstraintsRequest
	(*GetTopMostConstraintsResponse)(nil),        // 6: good.gateway.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse
	(*DeleteTopMostConstraintRequest)(nil),       // 7: good.gateway.app.good1.topmost.constraint.v1.DeleteTopMostConstraintRequest
	(*DeleteTopMostConstraintResponse)(nil),      // 8: good.gateway.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse
	(*AdminCreateTopMostConstraintRequest)(nil),  // 9: good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintRequest
	(*AdminCreateTopMostConstraintResponse)(nil), // 10: good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintResponse
	(*AdminGetTopMostConstraintsRequest)(nil),    // 11: good.gateway.app.good1.topmost.constraint.v1.AdminGetTopMostConstraintsRequest
	(*AdminGetTopMostConstraintsResponse)(nil),   // 12: good.gateway.app.good1.topmost.constraint.v1.AdminGetTopMostConstraintsResponse
	(*AdminUpdateTopMostConstraintRequest)(nil),  // 13: good.gateway.app.good1.topmost.constraint.v1.AdminUpdateTopMostConstraintRequest
	(*AdminUpdateTopMostConstraintResponse)(nil), // 14: good.gateway.app.good1.topmost.constraint.v1.AdminUpdateTopMostConstraintResponse
	(*AdminDeleteTopMostConstraintRequest)(nil),  // 15: good.gateway.app.good1.topmost.constraint.v1.AdminDeleteTopMostConstraintRequest
	(*AdminDeleteTopMostConstraintResponse)(nil), // 16: good.gateway.app.good1.topmost.constraint.v1.AdminDeleteTopMostConstraintResponse
	(v1.GoodTopMostType)(0),                      // 17: basetypes.good.v1.GoodTopMostType
	(v1.GoodTopMostConstraint)(0),                // 18: basetypes.good.v1.GoodTopMostConstraint
}
var file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_depIdxs = []int32{
	17, // 0: good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint.TopMostType:type_name -> basetypes.good.v1.GoodTopMostType
	18, // 1: good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint.Constraint:type_name -> basetypes.good.v1.GoodTopMostConstraint
	18, // 2: good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest.Constraint:type_name -> basetypes.good.v1.GoodTopMostConstraint
	0,  // 3: good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 4: good.gateway.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 5: good.gateway.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse.Infos:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 6: good.gateway.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	18, // 7: good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintRequest.Constraint:type_name -> basetypes.good.v1.GoodTopMostConstraint
	0,  // 8: good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 9: good.gateway.app.good1.topmost.constraint.v1.AdminGetTopMostConstraintsResponse.Infos:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 10: good.gateway.app.good1.topmost.constraint.v1.AdminUpdateTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	0,  // 11: good.gateway.app.good1.topmost.constraint.v1.AdminDeleteTopMostConstraintResponse.Info:type_name -> good.gateway.app.good1.topmost.constraint.v1.TopMostConstraint
	1,  // 12: good.gateway.app.good1.topmost.constraint.v1.Gateway.CreateTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintRequest
	3,  // 13: good.gateway.app.good1.topmost.constraint.v1.Gateway.UpdateTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.UpdateTopMostConstraintRequest
	5,  // 14: good.gateway.app.good1.topmost.constraint.v1.Gateway.GetTopMostConstraints:input_type -> good.gateway.app.good1.topmost.constraint.v1.GetTopMostConstraintsRequest
	7,  // 15: good.gateway.app.good1.topmost.constraint.v1.Gateway.DeleteTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.DeleteTopMostConstraintRequest
	9,  // 16: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminCreateTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintRequest
	13, // 17: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminUpdateTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.AdminUpdateTopMostConstraintRequest
	11, // 18: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminGetTopMostConstraints:input_type -> good.gateway.app.good1.topmost.constraint.v1.AdminGetTopMostConstraintsRequest
	15, // 19: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminDeleteTopMostConstraint:input_type -> good.gateway.app.good1.topmost.constraint.v1.AdminDeleteTopMostConstraintRequest
	2,  // 20: good.gateway.app.good1.topmost.constraint.v1.Gateway.CreateTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.CreateTopMostConstraintResponse
	4,  // 21: good.gateway.app.good1.topmost.constraint.v1.Gateway.UpdateTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.UpdateTopMostConstraintResponse
	6,  // 22: good.gateway.app.good1.topmost.constraint.v1.Gateway.GetTopMostConstraints:output_type -> good.gateway.app.good1.topmost.constraint.v1.GetTopMostConstraintsResponse
	8,  // 23: good.gateway.app.good1.topmost.constraint.v1.Gateway.DeleteTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.DeleteTopMostConstraintResponse
	10, // 24: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminCreateTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.AdminCreateTopMostConstraintResponse
	14, // 25: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminUpdateTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.AdminUpdateTopMostConstraintResponse
	12, // 26: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminGetTopMostConstraints:output_type -> good.gateway.app.good1.topmost.constraint.v1.AdminGetTopMostConstraintsResponse
	16, // 27: good.gateway.app.good1.topmost.constraint.v1.Gateway.AdminDeleteTopMostConstraint:output_type -> good.gateway.app.good1.topmost.constraint.v1.AdminDeleteTopMostConstraintResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_init() }
func file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_init() {
	if File_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopMostConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopMostConstraintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetTopMostConstraintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetTopMostConstraintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteTopMostConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteTopMostConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_goTypes,
		DependencyIndexes: file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_depIdxs,
		MessageInfos:      file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_msgTypes,
	}.Build()
	File_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto = out.File
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_rawDesc = nil
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_goTypes = nil
	file_npool_good_gw_v1_app_good_topmost_constraint_constraint_proto_depIdxs = nil
}
