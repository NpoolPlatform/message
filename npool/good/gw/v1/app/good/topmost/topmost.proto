syntax = "proto3";

package good.gateway.app.good1.topmost.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/app/good1/topmost";

import "google/api/annotations.proto";
import "npool/basetypes/good/v1/enums.proto";

// Service Name
service Gateway {
    rpc CreateTopMost (CreateTopMostRequest) returns (CreateTopMostResponse) {
        option (google.api.http) = {
            post: "/v1/create/topmost"
            body: "*"
        };
    }

    rpc CreateNTopMost (CreateNTopMostRequest) returns (CreateNTopMostResponse) {
        option (google.api.http) = {
            post: "/v1/create/n/topmost"
            body: "*"
        };
    }

    rpc GetTopMosts (GetTopMostsRequest) returns (GetTopMostsResponse) {
        option (google.api.http) = {
            post: "/v1/get/topmosts"
            body: "*"
        };
    }

    rpc GetNTopMosts (GetNTopMostsRequest) returns (GetNTopMostsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/topmosts"
            body: "*"
        };
    }

    rpc DeleteTopMost (DeleteTopMostRequest) returns (DeleteTopMostResponse) {
        option (google.api.http) = {
            post: "/v1/delete/topmost"
            body: "*"
        };
    }

    rpc UpdateTopMost (UpdateTopMostRequest) returns (UpdateTopMostResponse) {
        option (google.api.http) = {
            post: "/v1/update/topmost"
            body: "*"
        };
    }

    rpc UpdateNTopMost (UpdateNTopMostRequest) returns (UpdateNTopMostResponse) {
        option (google.api.http) = {
            post: "/v1/update/n/topmost"
            body: "*"
        };
    }
}

message TopMost {
    string ID         = 10;
    string AppID      = 20;
    string AppName    = 30;
    basetypes.good.v1.GoodTopMostType TopMostType = 40;
    string Title      = 50;
    string Message    = 60;
    repeated string Posters    = 70;
    uint32 StartAt    = 80;
    uint32 EndAt      = 90;
    string ThresholdCredits = 100;
    uint32 RegisterElapsedSeconds = 110;
    uint32 ThresholdPurchases = 120;
    string ThresholdPaymentAmount = 130;
    bool   KeyMust    = 140;
    uint32 CreatedAt  = 1000;
    uint32 UpdatedAt  = 1010;
}

message CreateTopMostRequest {
    string AppID      = 10;
    basetypes.good.v1.GoodTopMostType TopMostType = 20;
    string Title      = 30;
    string Message    = 40;
    repeated string Posters    = 50;
    uint32 StartAt    = 60;
    uint32 EndAt      = 70;
    optional string ThresholdCredits = 80;
    optional uint32 RegisterElapsedSeconds = 90;
    optional uint32 ThresholdPurchases = 100;
    optional string ThresholdPaymentAmount = 110;
    bool   KeyMust = 120;
}

message CreateTopMostResponse {
    TopMost Info = 10;
}

message CreateNTopMostRequest {
    string TargetAppID = 10;
    basetypes.good.v1.GoodTopMostType TopMostType = 20;
    string Title      = 30;
    string Message    = 40;
    repeated string Posters    = 50;
    uint32 StartAt    = 60;
    uint32 EndAt      = 70;
    optional string ThresholdCredits = 80;
    optional uint32 RegisterElapsedSeconds = 90;
    optional uint32 ThresholdPurchases = 100;
    optional string ThresholdPaymentAmount = 110;
    bool   KeyMust = 120;
}

message CreateNTopMostResponse {
    TopMost Info = 10;
}

message GetTopMostsRequest {
    string AppID  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetTopMostsResponse {
    repeated TopMost Infos = 10;
    uint32           Total = 20;
}

message GetNTopMostsRequest {
    string TargetAppID  = 10;
    int32  Offset       = 20;
    int32  Limit        = 30;
}

message GetNTopMostsResponse {
    repeated TopMost Infos = 10;
    uint32           Total = 20;
}

message DeleteTopMostRequest {
    string ID    = 10;
    string AppID = 20;
}

message DeleteTopMostResponse {
    TopMost Info = 10;
}

message UpdateTopMostRequest {
    string          ID         = 10;
    string          AppID      = 20;
    optional string Title      = 30;
    optional string Message    = 40;
    repeated string Posters    = 50;
    optional uint32 StartAt    = 60;
    optional uint32 EndAt      = 70;
    optional string ThresholdCredits = 80;
    optional uint32 RegisterElapsedSeconds = 90;
    optional uint32 ThresholdPurchases = 100;
    optional string ThresholdPaymentAmount = 110;
    optional bool   KeyMust = 120;
}

message UpdateTopMostResponse {
    TopMost Info = 10;
}

message UpdateNTopMostRequest {
    string          ID          = 10;
    string          TargetAppID = 20;
    optional string Title      = 30;
    optional string Message    = 40;
    repeated string Posters    = 50;
    optional uint32 StartAt    = 60;
    optional uint32 EndAt      = 70;
    optional string ThresholdCredits = 80;
    optional uint32 RegisterElapsedSeconds = 90;
    optional uint32 ThresholdPurchases = 100;
    optional string ThresholdPaymentAmount = 110;
    optional bool   KeyMust = 120;
}

message UpdateNTopMostResponse {
    TopMost Info = 10;
}
