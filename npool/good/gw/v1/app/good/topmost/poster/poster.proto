syntax = "proto3";

package good.gateway.app.good1.topmost.poster.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/app/good/topmost/poster";

import "google/api/annotations.proto";
import "npool/basetypes/good/v1/enums.proto";

service Gateway {
    rpc CreatePoster (CreatePosterRequest) returns (CreatePosterResponse) {
        option (google.api.http) = {
            post: "/v1/create/topmostposter"
            body: "*"
        };
    }

    rpc UpdatePoster (UpdatePosterRequest) returns (UpdatePosterResponse) {
        option (google.api.http) = {
            post: "/v1/update/topmostposter"
            body: "*"
        };
    }

    rpc GetPosters (GetPostersRequest) returns (GetPostersResponse) {
        option (google.api.http) = {
            post: "/v1/get/topmostposters"
            body: "*"
        };
    }

    rpc DeletePoster (DeletePosterRequest) returns (DeletePosterResponse) {
        option (google.api.http) = {
            post: "/v1/delete/topmostposter"
            body: "*"
        };
    }

    // Run by admin
    rpc AdminCreatePoster (AdminCreatePosterRequest) returns (AdminCreatePosterResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/topmostposter"
            body: "*"
        };
    }

    rpc AdminUpdatePoster (AdminUpdatePosterRequest) returns (AdminUpdatePosterResponse) {
        option (google.api.http) = {
            post: "/v1/admin/update/topmostposter"
            body: "*"
        };
    }

    rpc AdminGetPosters (AdminGetPostersRequest) returns (AdminGetPostersResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/topmostposters"
            body: "*"
        };
    }

    rpc AdminDeletePoster (AdminDeletePosterRequest) returns (AdminDeletePosterResponse) {
        option (google.api.http) = {
            post: "/v1/admin/delete/topmostposter"
            body: "*"
        };
    }
}

message Poster {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppName = 40;
    string TopMostID = 50;
    basetypes.good.v1.GoodTopMostType TopMostType = 60;
    string TopMostTitle = 70;
    string TopMostMessage = 80;
    string TopMostTargetUrl = 90;
    string Poster = 100;
    uint32 Index = 110;

    uint32 CreatedAt  = 1000;
    uint32 UpdatedAt  = 1010;
}

message CreatePosterRequest {
    string AppID = 10;
    string TopMostID = 30;
    string Poster = 40;
    optional uint32 Index = 50;
}

message CreatePosterResponse {
    Poster Info = 10;
}

message UpdatePosterRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    optional string Poster = 40;
    optional uint32 Index = 50;
}

message UpdatePosterResponse {
    Poster Info = 10;
}

message GetPostersRequest {
    string AppID = 10;
    optional string TopMostID = 20;
    int32 Offset = 30;
    int32 Limit = 40;
}

message GetPostersResponse {
    repeated Poster Infos = 10;
    uint32 Total = 20;
}

message DeletePosterRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
}

message DeletePosterResponse {
    Poster Info = 10;
}

message AdminCreatePosterRequest {
    string TargetAppID = 10;
    string TopMostID = 30;
    string Poster = 40;
    optional uint32 Index = 50;
}

message AdminCreatePosterResponse {
    Poster Info = 10;
}

message AdminGetPostersRequest {
    string TargetAppID = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message AdminGetPostersResponse {
    repeated Poster Infos = 10;
    uint32 Total = 20;
}

message AdminUpdatePosterRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    optional string Poster = 40;
    optional uint32 Index = 50;
}

message AdminUpdatePosterResponse {
    Poster Info = 10;
}

message AdminDeletePosterRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
}

message AdminDeletePosterResponse {
    Poster Info = 10;
}
