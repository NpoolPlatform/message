syntax = "proto3";

package good.gateway.app.good1.topmost.good2.constraint.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/app/good/topmost/good/constraint";

import "google/api/annotations.proto";
import "npool/basetypes/good/v1/enums.proto";

service Gateway {
    rpc CreateTopMostGoodConstraint (CreateTopMostGoodConstraintRequest) returns (CreateTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/create/goodtopmostgoodconstraint"
            body: "*"
        };
    }

    rpc UpdateTopMostGoodConstraint (UpdateTopMostGoodConstraintRequest) returns (UpdateTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/update/goodtopmostgoodconstraint"
            body: "*"
        };
    }

    rpc GetTopMostGoodConstraints (GetTopMostGoodConstraintsRequest) returns (GetTopMostGoodConstraintsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goodtopmostgoodconstraints"
            body: "*"
        };
    }

    rpc DeleteTopMostGoodConstraint (DeleteTopMostGoodConstraintRequest) returns (DeleteTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/delete/goodtopmostgoodconstraint"
            body: "*"
        };
    }

    // Run by admin
    rpc AdminCreateTopMostGoodConstraint (AdminCreateTopMostGoodConstraintRequest) returns (AdminCreateTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/goodtopmostgoodconstraint"
            body: "*"
        };
    }

    rpc AdminUpdateTopMostGoodConstraint (AdminUpdateTopMostGoodConstraintRequest) returns (AdminUpdateTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/admin/update/goodtopmostgoodconstraint"
            body: "*"
        };
    }

    rpc AdminGetTopMostGoodConstraints (AdminGetTopMostGoodConstraintsRequest) returns (AdminGetTopMostGoodConstraintsResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/goodtopmostgoodconstraints"
            body: "*"
        };
    }

    rpc AdminDeleteTopMostGoodConstraint (AdminDeleteTopMostGoodConstraintRequest) returns (AdminDeleteTopMostGoodConstraintResponse) {
        option (google.api.http) = {
            post: "/v1/admin/delete/goodtopmostgoodconstraint"
            body: "*"
        };
    }
}

message TopMostGoodConstraint {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppName = 40;
    string TopMostID = 50;
    basetypes.good.v1.GoodTopMostType TopMostType = 60;
    string TopMostTitle = 70;
    string TopMostMessage = 80;
    string TopMostTargetUrl = 90;
    basetypes.good.v1.GoodTopMostConstraint Constraint = 100;
    string TopMostGoodID = 120;
    string AppGoodID = 130;
    string AppGoodName = 140;
    string TargetValue = 150;
    uint32 Index = 160;

    uint32 CreatedAt  = 1000;
    uint32 UpdatedAt  = 1010;
}

message CreateTopMostGoodConstraintRequest {
    string AppID = 10;
    string TopMostGoodID = 20;
    string TargetValue = 30;
    optional uint32 Index = 40;
}

message CreateTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}

message UpdateTopMostGoodConstraintRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    optional string TargetValue = 40;
    optional uint32 Index = 50;
}

message UpdateTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}

message GetTopMostGoodConstraintsRequest {
    string AppID = 10;
    optional string TopMostGoodID = 20;
    int32 Offset = 30;
    int32 Limit = 40;
}

message GetTopMostGoodConstraintsResponse {
    repeated TopMostGoodConstraint Infos = 10;
    uint32 Total = 20;
}

message DeleteTopMostGoodConstraintRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
}

message DeleteTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}

message AdminCreateTopMostGoodConstraintRequest {
    string TargetAppID = 10;
    string TopMostGoodID = 20;
    string TargetValue = 30;
    optional uint32 Index = 40;
}

message AdminCreateTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}

message AdminGetTopMostGoodConstraintsRequest {
    string TargetAppID = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message AdminGetTopMostGoodConstraintsResponse {
    repeated TopMostGoodConstraint Infos = 10;
    uint32 Total = 20;
}

message AdminUpdateTopMostGoodConstraintRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    optional string TargetValue = 40;
    optional uint32 Index = 50;
}

message AdminUpdateTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}

message AdminDeleteTopMostGoodConstraintRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
}

message AdminDeleteTopMostGoodConstraintResponse {
    TopMostGoodConstraint Info = 10;
}
