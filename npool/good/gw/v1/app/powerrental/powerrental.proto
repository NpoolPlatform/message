syntax = "proto3";

package good.gateway.app.powerrental.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/app/powerrental";

import "google/api/annotations.proto";
import "npool/basetypes/good/v1/enums.proto";
import "npool/good/mw/v1/good/coin/coin.proto";
import "npool/good/mw/v1/app/good/description/description.proto";
import "npool/good/mw/v1/app/good/poster/poster.proto";
import "npool/good/mw/v1/app/good/label/label.proto";
import "npool/good/mw/v1/app/good/display/name/name.proto";
import "npool/good/mw/v1/app/good/display/color/color.proto";
import "npool/good/mw/v1/app/good/stock/mining/mining.proto";
import "npool/good/mw/v1/good/stock/stock.proto";

service Gateway {
    rpc CreateAppPowerRental (CreateAppPowerRentalRequest) returns (CreateAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/create/apppowerrental"
            body: "*"
        };
    }

    rpc UpdateAppPowerRental (UpdateAppPowerRentalRequest) returns (UpdateAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/update/apppowerrental"
            body: "*"
        };
    }

    rpc GetAppPowerRental (GetAppPowerRentalRequest) returns (GetAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/get/apppowerrental"
            body: "*"
        };
    }

    rpc GetAppPowerRentals (GetAppPowerRentalsRequest) returns (GetAppPowerRentalsResponse) {
        option (google.api.http) = {
            post: "/v1/get/apppowerrentals"
            body: "*"
        };
    }

    rpc DeleteAppPowerRental (DeleteAppPowerRentalRequest) returns (DeleteAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/delete/apppowerrental"
            body: "*"
        };
    }

    // Run by church admin
    rpc AdminCreateAppPowerRental (AdminCreateAppPowerRentalRequest) returns (AdminCreateAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/apppowerrental"
            body: "*"
        };
    }

    rpc AdminUpdateAppPowerRental (AdminUpdateAppPowerRentalRequest) returns (AdminUpdateAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/admin/update/apppowerrental"
            body: "*"
        };
    }

    rpc AdminGetAppPowerRentals (AdminGetAppPowerRentalsRequest) returns (AdminGetAppPowerRentalsResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/apppowerrentals"
            body: "*"
        };
    }

    rpc AdminDeleteAppPowerRental (AdminDeleteAppPowerRentalRequest) returns (AdminDeleteAppPowerRentalResponse) {
        option (google.api.http) = {
            post: "/v1/admin/delete/apppowerrental"
            body: "*"
        };
    }
}

message AppPowerRental {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppName = 40;
    string GoodID = 50;
    string AppGoodID = 60;

    string DeviceTypeID = 70;
    string DeviceType = 80;
    string DeviceManufacturerName = 90;
    string DeviceManufacturerLogo = 100;
    uint32 DevicePowerConsumption = 110;
    uint32 DeviceShipmentAt = 120;

    string VendorLocationID = 130;
    string VendorBrand = 140;
    string VendorLogo = 150;
    string VendorCountry = 160;
    string VendorProvince = 170;

    string UnitPrice = 180;
    string QuantityUnit = 190;
    string QuantityUnitAmount = 200;
    uint32 DeliveryAt = 210;
    string UnitLockDeposit = 220;
    basetypes.good.v1.GoodDurationType DurationType = 230;

    basetypes.good.v1.GoodType GoodType = 240;
    basetypes.good.v1.BenefitType BenefitType = 250;
    string GoodName = 260;
    uint32 ServiceStartAt = 270;
    basetypes.good.v1.GoodStartMode StartMode = 280;
    bool TestOnly = 290;
    uint32 BenefitIntervalHours = 300;
    bool GoodPurchasable = 310;
    bool GoodOnline = 320;
    basetypes.good.v1.GoodStockMode StockMode = 330;

    bool AppGoodPurchasable = 340;
    bool AppGoodOnline = 350;
    bool EnableProductPage = 360;
    string ProductPage = 370;
    bool Visible = 380;
    string AppGoodName = 390;
    int32 DisplayIndex = 400;
    string Banner = 410;
    basetypes.good.v1.CancelMode CancelMode = 420;
    uint32 CancelableBeforeStartSeconds = 430;
    bool EnableSetCommission = 440;
    string MinOrderAmount = 450;
    string MaxOrderAmount = 460;
    string MaxUserAmount = 470;
    uint32 MinOrderDuration = 480;
    uint32 MaxOrderDuration = 490;
    uint32 SaleStartAt = 500;
    uint32 SaleEndAt = 510;
    basetypes.good.v1.GoodSaleMode SaleMode  = 520;
    bool FixedDuration = 530;
    bool PackageWithRequireds = 540;

    optional string TechniqueFeeRatio = 550;

    string GoodStockID = 560;
    string GoodTotal = 570;
    string GoodSpotQuantity = 580;

    string AppGoodStockID = 590;
    string AppGoodReserved = 600;
    string AppGoodSpotQuantity = 610;
    string AppGoodLocked = 620;
    string AppGoodInService = 630;
    string AppGoodWaitStart = 640;
    string AppGoodSold = 650;

    uint32 Likes = 660;
    uint32 Dislikes = 670;
    string Score = 680;
    uint32 ScoreCount = 690;
    uint32 RecommendCount = 700;
    uint32 CommentCount = 710;

    uint32 LastRewardAt = 720;
    string LastRewardAmount = 730;
    string TotalRewardAmount  = 740;
    string LastUnitRewardAmount = 750;

    repeated good.middleware.good1.coin.v1.GoodCoinInfo GoodCoins = 900;
    repeated good.middleware.app.good1.description.v1.DescriptionInfo Descriptions = 910;
    repeated good.middleware.app.good1.poster.v1.PosterInfo Posters = 920;
    repeated good.middleware.app.good1.display.name.v1.DisplayNameInfo DisplayNames = 930;
    repeated good.middleware.app.good1.display.color.v1.DisplayColorInfo DisplayColors = 940;
    repeated good.middleware.app.good1.stock.mining.v1.StockInfo AppMiningGoodStocks = 950;
    repeated good.middleware.good1.stock.v1.MiningGoodStockInfo MiningGoodStocks = 960;
    repeated good.middleware.app.good1.label.v1.LabelInfo Labels = 970;

    uint32 CreatedAt = 1000;
    uint32 UpdatedAt = 1010;
}

message CreateAppPowerRentalRequest {
    string AppID = 10;
    string GoodID = 20;

    optional bool Purchasable = 30;
    optional bool EnableProductPage = 40;
    optional string ProductPage = 50;
    optional bool Online = 60;
    optional bool Visible = 70;
    string Name = 80;
    optional int32 DisplayIndex = 90;
    optional string Banner = 100;

    uint32 ServiceStartAt = 110;
    optional basetypes.good.v1.CancelMode CancelMode = 120;
    optional uint32 CancelableBeforeStartSeconds = 130;
    optional bool EnableSetCommission =140;
    optional string MinOrderAmount = 150;
    optional string MaxOrderAmount = 160;
    optional string MaxUserAmount = 170;
    optional uint32 MinOrderDuration = 180;
    optional uint32 MaxOrderDuration = 190;
    string UnitPrice = 200;
    uint32 SaleStartAt = 210;
    uint32 SaleEndAt = 220;
    basetypes.good.v1.GoodSaleMode SaleMode = 230;
    optional bool FixedDuration = 240;
    optional bool PackageWithRequireds = 250;
}

message CreateAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message UpdateAppPowerRentalRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppGoodID = 40;

    optional bool Purchasable = 50;
    optional bool EnableProductPage = 60;
    optional string ProductPage = 70;
    optional bool Online = 80;
    optional bool Visible = 90;
    optional string Name = 100;
    optional int32 DisplayIndex = 110;
    optional string Banner = 120;

    optional uint32 ServiceStartAt = 130;
    optional basetypes.good.v1.CancelMode CancelMode = 140;
    optional uint32 CancelableBeforeStartSeconds = 150;
    optional bool EnableSetCommission =160;
    optional string MinOrderAmount = 170;
    optional string MaxOrderAmount = 180;
    optional string MaxUserAmount = 190;
    optional uint32 MinOrderDuration = 200;
    optional uint32 MaxOrderDuration = 210;
    optional string UnitPrice = 220;
    optional uint32 SaleStartAt = 230;
    optional uint32 SaleEndAt = 240;
    optional basetypes.good.v1.GoodSaleMode SaleMode = 250;
    optional bool FixedDuration = 260;
    optional bool PackageWithRequireds = 270;
}

message UpdateAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message GetAppPowerRentalRequest {
    string AppGoodID = 10;
}

message GetAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message GetAppPowerRentalsRequest {
    string AppID = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAppPowerRentalsResponse {
    repeated AppPowerRental Infos = 10;
    uint32 Total = 20;
}

message DeleteAppPowerRentalRequest {
    uint32 ID = 10;
    string EntID = 20;
    string AppID = 30;
    string AppGoodID = 40;
}

message DeleteAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message AdminCreateAppPowerRentalRequest {
    string TargetAppID = 10;
    string GoodID = 20;

    optional bool Purchasable = 30;
    optional bool EnableProductPage = 40;
    optional string ProductPage = 50;
    optional bool Online = 60;
    optional bool Visible = 70;
    string Name = 80;
    optional int32 DisplayIndex = 90;
    optional string Banner = 100;

    uint32 ServiceStartAt = 110;
    optional basetypes.good.v1.CancelMode CancelMode = 120;
    optional uint32 CancelableBeforeStartSeconds = 130;
    optional bool EnableSetCommission =140;
    optional string MinOrderAmount = 150;
    optional string MaxOrderAmount = 160;
    optional string MaxUserAmount = 170;
    optional uint32 MinOrderDuration = 180;
    optional uint32 MaxOrderDuration = 190;
    string UnitPrice = 200;
    uint32 SaleStartAt = 210;
    uint32 SaleEndAt = 220;
    basetypes.good.v1.GoodSaleMode SaleMode = 230;
    optional bool FixedDuration = 240;
    optional bool PackageWithRequireds = 250;
}

message AdminCreateAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message AdminUpdateAppPowerRentalRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    string AppGoodID = 40;

    optional bool Purchasable = 50;
    optional bool EnableProductPage = 60;
    optional string ProductPage = 70;
    optional bool Online = 80;
    optional bool Visible = 90;
    optional string Name = 100;
    optional int32 DisplayIndex = 110;
    optional string Banner = 120;

    optional uint32 ServiceStartAt = 130;
    optional basetypes.good.v1.CancelMode CancelMode = 140;
    optional uint32 CancelableBeforeStartSeconds = 150;
    optional bool EnableSetCommission =160;
    optional string MinOrderAmount = 170;
    optional string MaxOrderAmount = 180;
    optional string MaxUserAmount = 190;
    optional uint32 MinOrderDuration = 200;
    optional uint32 MaxOrderDuration = 210;
    optional string UnitPrice = 220;
    optional uint32 SaleStartAt = 230;
    optional uint32 SaleEndAt = 240;
    optional basetypes.good.v1.GoodSaleMode SaleMode = 250;
    optional bool FixedDuration = 260;
    optional bool PackageWithRequireds = 270;
}

message AdminUpdateAppPowerRentalResponse {
    AppPowerRental Info = 10;
}

message AdminGetAppPowerRentalsRequest {
    string TargetAppID = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message AdminGetAppPowerRentalsResponse {
    repeated AppPowerRental Infos = 10;
    uint32 Total = 20;
}

message AdminDeleteAppPowerRentalRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    string AppGoodID = 40;
}

message AdminDeleteAppPowerRentalResponse {
    AppPowerRental Info = 10;
}
