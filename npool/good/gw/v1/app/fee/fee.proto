syntax = "proto3";

package fee.gateway.app.fee.v1;

option go_package = "github.com/NpoolPlatform/message/npool/fee/gw/v1/app/fee";

import "npool/basetypes/fee/v1/enums.proto";
import "google/api/annotations.proto";

// Service Name
service Gateway {
    rpc CreateAppFee (CreateAppFeeRequest) returns (CreateAppFeeResponse) {
        option (google.api.http) = {
            post: "/v1/create/appfee"
            body: "*"
        };
    }

    rpc GetAppFees (GetAppFeesRequest) returns (GetAppFeesResponse) {
        option (google.api.http) = {
            post: "/v1/get/appfees"
            body: "*"
        };
    }

    rpc GetAppFee (GetAppFeeRequest) returns (GetAppFeeResponse) {
        option (google.api.http) = {
            post: "/v1/get/appfee"
            body: "*"
        };
    }

    rpc UpdateAppFee (UpdateAppFeeRequest) returns (UpdateAppFeeResponse) {
        option (google.api.http) = {
            post: "/v1/update/appfee"
            body: "*"
        };
    }

    rpc AdminGetAppFees (AdminGetAppFeesRequest) returns (AdminGetAppFeesResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/appfees"
            body: "*"
        };
    }

    rpc AdminUpdateAppFee (AdminUpdateAppFeeRequest) returns (AdminUpdateAppFeeResponse) {
        option (google.api.http) = {
            post: "/v1/admin/update/appfee"
            body: "*"
        };
    }
}

message AppFee {
    uint32 ID = 9;
    string EntID = 10;
    string AppID = 20;
    string AppName = 21;
    string GoodID = 30;
    string GoodName = 40;
    string AppGoodID = 50;
    string AppGoodName = 60;
    string AppGoodBase = 70;
    string ProductPage = 80;
    string Banner = 90;
    string UnitValue = 100;
    uint32 MinOrderDuration = 110;

    uint32 CreatedAt = 1000;
    uint32 UpdatedAt = 1010;
}

