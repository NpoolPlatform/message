// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/good/gw/v1/app/fee/fee.proto

package fee

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/good/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                      uint32        `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                   string        `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                   string        `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppName                 string        `protobuf:"bytes,21,opt,name=AppName,proto3" json:"AppName,omitempty"`
	GoodID                  string        `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	GoodName                string        `protobuf:"bytes,40,opt,name=GoodName,proto3" json:"GoodName,omitempty"`
	AppGoodID               string        `protobuf:"bytes,50,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	AppGoodName             string        `protobuf:"bytes,60,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty"`
	ProductPage             string        `protobuf:"bytes,70,opt,name=ProductPage,proto3" json:"ProductPage,omitempty"`
	Banner                  string        `protobuf:"bytes,80,opt,name=Banner,proto3" json:"Banner,omitempty"`
	UnitValue               string        `protobuf:"bytes,90,opt,name=UnitValue,proto3" json:"UnitValue,omitempty"`
	MinOrderDurationSeconds uint32        `protobuf:"varint,100,opt,name=MinOrderDurationSeconds,proto3" json:"MinOrderDurationSeconds,omitempty"`
	CancelMode              v1.CancelMode `protobuf:"varint,110,opt,name=CancelMode,proto3,enum=basetypes.good.v1.CancelMode" json:"CancelMode,omitempty"`
	CreatedAt               uint32        `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt               uint32        `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *AppFee) Reset() {
	*x = AppFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFee) ProtoMessage() {}

func (x *AppFee) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFee.ProtoReflect.Descriptor instead.
func (*AppFee) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{0}
}

func (x *AppFee) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AppFee) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AppFee) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppFee) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppFee) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *AppFee) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *AppFee) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *AppFee) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *AppFee) GetProductPage() string {
	if x != nil {
		return x.ProductPage
	}
	return ""
}

func (x *AppFee) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *AppFee) GetUnitValue() string {
	if x != nil {
		return x.UnitValue
	}
	return ""
}

func (x *AppFee) GetMinOrderDurationSeconds() uint32 {
	if x != nil {
		return x.MinOrderDurationSeconds
	}
	return 0
}

func (x *AppFee) GetCancelMode() v1.CancelMode {
	if x != nil {
		return x.CancelMode
	}
	return v1.CancelMode(0)
}

func (x *AppFee) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppFee) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetAppFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppFeesRequest) Reset() {
	*x = GetAppFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppFeesRequest) ProtoMessage() {}

func (x *GetAppFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppFeesRequest.ProtoReflect.Descriptor instead.
func (*GetAppFeesRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppFeesRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppFeesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppFeesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppFee `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppFeesResponse) Reset() {
	*x = GetAppFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppFeesResponse) ProtoMessage() {}

func (x *GetAppFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppFeesResponse.ProtoReflect.Descriptor instead.
func (*GetAppFeesResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppFeesResponse) GetInfos() []*AppFee {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppFeesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppGoodID string `protobuf:"bytes,20,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
}

func (x *GetAppFeeRequest) Reset() {
	*x = GetAppFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppFeeRequest) ProtoMessage() {}

func (x *GetAppFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppFeeRequest.ProtoReflect.Descriptor instead.
func (*GetAppFeeRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppFeeRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAppFeeRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

type GetAppFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppFee `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppFeeResponse) Reset() {
	*x = GetAppFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppFeeResponse) ProtoMessage() {}

func (x *GetAppFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppFeeResponse.ProtoReflect.Descriptor instead.
func (*GetAppFeeResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppFeeResponse) GetInfo() *AppFee {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                      uint32         `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                   string         `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	AppID                   string         `protobuf:"bytes,30,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AppGoodID               string         `protobuf:"bytes,40,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	ProductPage             *string        `protobuf:"bytes,50,opt,name=ProductPage,proto3,oneof" json:"ProductPage,omitempty"`
	Name                    *string        `protobuf:"bytes,60,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Banner                  *string        `protobuf:"bytes,70,opt,name=Banner,proto3,oneof" json:"Banner,omitempty"`
	UnitValue               *string        `protobuf:"bytes,80,opt,name=UnitValue,proto3,oneof" json:"UnitValue,omitempty"`
	MinOrderDurationSeconds *uint32        `protobuf:"varint,90,opt,name=MinOrderDurationSeconds,proto3,oneof" json:"MinOrderDurationSeconds,omitempty"`
	CancelMode              *v1.CancelMode `protobuf:"varint,100,opt,name=CancelMode,proto3,enum=basetypes.good.v1.CancelMode,oneof" json:"CancelMode,omitempty"`
}

func (x *UpdateAppFeeRequest) Reset() {
	*x = UpdateAppFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppFeeRequest) ProtoMessage() {}

func (x *UpdateAppFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppFeeRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAppFeeRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateAppFeeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetProductPage() string {
	if x != nil && x.ProductPage != nil {
		return *x.ProductPage
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetBanner() string {
	if x != nil && x.Banner != nil {
		return *x.Banner
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetUnitValue() string {
	if x != nil && x.UnitValue != nil {
		return *x.UnitValue
	}
	return ""
}

func (x *UpdateAppFeeRequest) GetMinOrderDurationSeconds() uint32 {
	if x != nil && x.MinOrderDurationSeconds != nil {
		return *x.MinOrderDurationSeconds
	}
	return 0
}

func (x *UpdateAppFeeRequest) GetCancelMode() v1.CancelMode {
	if x != nil && x.CancelMode != nil {
		return *x.CancelMode
	}
	return v1.CancelMode(0)
}

type UpdateAppFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppFee `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppFeeResponse) Reset() {
	*x = UpdateAppFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppFeeResponse) ProtoMessage() {}

func (x *UpdateAppFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppFeeResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAppFeeResponse) GetInfo() *AppFee {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminCreateAppFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID             string         `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	GoodID                  string         `protobuf:"bytes,20,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	ProductPage             *string        `protobuf:"bytes,30,opt,name=ProductPage,proto3,oneof" json:"ProductPage,omitempty"`
	Name                    string         `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty"`
	Banner                  *string        `protobuf:"bytes,50,opt,name=Banner,proto3,oneof" json:"Banner,omitempty"`
	UnitValue               string         `protobuf:"bytes,60,opt,name=UnitValue,proto3" json:"UnitValue,omitempty"`
	MinOrderDurationSeconds uint32         `protobuf:"varint,70,opt,name=MinOrderDurationSeconds,proto3" json:"MinOrderDurationSeconds,omitempty"`
	CancelMode              *v1.CancelMode `protobuf:"varint,80,opt,name=CancelMode,proto3,enum=basetypes.good.v1.CancelMode,oneof" json:"CancelMode,omitempty"`
}

func (x *AdminCreateAppFeeRequest) Reset() {
	*x = AdminCreateAppFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppFeeRequest) ProtoMessage() {}

func (x *AdminCreateAppFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppFeeRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateAppFeeRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{7}
}

func (x *AdminCreateAppFeeRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetProductPage() string {
	if x != nil && x.ProductPage != nil {
		return *x.ProductPage
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetBanner() string {
	if x != nil && x.Banner != nil {
		return *x.Banner
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetUnitValue() string {
	if x != nil {
		return x.UnitValue
	}
	return ""
}

func (x *AdminCreateAppFeeRequest) GetMinOrderDurationSeconds() uint32 {
	if x != nil {
		return x.MinOrderDurationSeconds
	}
	return 0
}

func (x *AdminCreateAppFeeRequest) GetCancelMode() v1.CancelMode {
	if x != nil && x.CancelMode != nil {
		return *x.CancelMode
	}
	return v1.CancelMode(0)
}

type AdminCreateAppFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppFee `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateAppFeeResponse) Reset() {
	*x = AdminCreateAppFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateAppFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateAppFeeResponse) ProtoMessage() {}

func (x *AdminCreateAppFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateAppFeeResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateAppFeeResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{8}
}

func (x *AdminCreateAppFeeResponse) GetInfo() *AppFee {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminGetAppFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetAppFeesRequest) Reset() {
	*x = AdminGetAppFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppFeesRequest) ProtoMessage() {}

func (x *AdminGetAppFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppFeesRequest.ProtoReflect.Descriptor instead.
func (*AdminGetAppFeesRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{9}
}

func (x *AdminGetAppFeesRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminGetAppFeesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetAppFeesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetAppFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppFee `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32    `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminGetAppFeesResponse) Reset() {
	*x = AdminGetAppFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetAppFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetAppFeesResponse) ProtoMessage() {}

func (x *AdminGetAppFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetAppFeesResponse.ProtoReflect.Descriptor instead.
func (*AdminGetAppFeesResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{10}
}

func (x *AdminGetAppFeesResponse) GetInfos() []*AppFee {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *AdminGetAppFeesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminUpdateAppFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                      uint32         `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID                   string         `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID             string         `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	AppGoodID               string         `protobuf:"bytes,40,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
	ProductPage             *string        `protobuf:"bytes,50,opt,name=ProductPage,proto3,oneof" json:"ProductPage,omitempty"`
	Name                    *string        `protobuf:"bytes,60,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Banner                  *string        `protobuf:"bytes,70,opt,name=Banner,proto3,oneof" json:"Banner,omitempty"`
	UnitValue               *string        `protobuf:"bytes,80,opt,name=UnitValue,proto3,oneof" json:"UnitValue,omitempty"`
	MinOrderDurationSeconds *uint32        `protobuf:"varint,90,opt,name=MinOrderDurationSeconds,proto3,oneof" json:"MinOrderDurationSeconds,omitempty"`
	CancelMode              *v1.CancelMode `protobuf:"varint,100,opt,name=CancelMode,proto3,enum=basetypes.good.v1.CancelMode,oneof" json:"CancelMode,omitempty"`
}

func (x *AdminUpdateAppFeeRequest) Reset() {
	*x = AdminUpdateAppFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppFeeRequest) ProtoMessage() {}

func (x *AdminUpdateAppFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppFeeRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppFeeRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{11}
}

func (x *AdminUpdateAppFeeRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateAppFeeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetProductPage() string {
	if x != nil && x.ProductPage != nil {
		return *x.ProductPage
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetBanner() string {
	if x != nil && x.Banner != nil {
		return *x.Banner
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetUnitValue() string {
	if x != nil && x.UnitValue != nil {
		return *x.UnitValue
	}
	return ""
}

func (x *AdminUpdateAppFeeRequest) GetMinOrderDurationSeconds() uint32 {
	if x != nil && x.MinOrderDurationSeconds != nil {
		return *x.MinOrderDurationSeconds
	}
	return 0
}

func (x *AdminUpdateAppFeeRequest) GetCancelMode() v1.CancelMode {
	if x != nil && x.CancelMode != nil {
		return *x.CancelMode
	}
	return v1.CancelMode(0)
}

type AdminUpdateAppFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppFee `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateAppFeeResponse) Reset() {
	*x = AdminUpdateAppFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateAppFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateAppFeeResponse) ProtoMessage() {}

func (x *AdminUpdateAppFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateAppFeeResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateAppFeeResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{12}
}

func (x *AdminUpdateAppFeeResponse) GetInfo() *AppFee {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminDeleteAppFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID       string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID string `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	AppGoodID   string `protobuf:"bytes,40,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty"`
}

func (x *AdminDeleteAppFeeRequest) Reset() {
	*x = AdminDeleteAppFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteAppFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteAppFeeRequest) ProtoMessage() {}

func (x *AdminDeleteAppFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteAppFeeRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteAppFeeRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{13}
}

func (x *AdminDeleteAppFeeRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteAppFeeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminDeleteAppFeeRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminDeleteAppFeeRequest) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

type AdminDeleteAppFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppFee `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteAppFeeResponse) Reset() {
	*x = AdminDeleteAppFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteAppFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteAppFeeResponse) ProtoMessage() {}

func (x *AdminDeleteAppFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteAppFeeResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteAppFeeResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP(), []int{14}
}

func (x *AdminDeleteAppFeeResponse) GetInfo() *AppFee {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_good_gw_v1_app_fee_fee_proto protoreflect.FileDescriptor

var file_npool_good_gw_v1_app_fee_fee_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67,
	0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe1, 0x03, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x6f, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x5a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a,
	0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17,
	0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x61, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x46, 0x65, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xcf, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f,
	0x6f, 0x64, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x05, 0x52, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x4d, 0x69,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xf2, 0x02, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38,
	0x0a, 0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x02, 0x52, 0x0a, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46,
	0x65, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x66, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe0, 0x03, 0x0a, 0x18, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x25, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x55, 0x6e,
	0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x09, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04,
	0x52, 0x17, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x48,
	0x05, 0x52, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x4d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a,
	0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x80, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x22, 0x50, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x32, 0x94, 0x08, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x81, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73, 0x12,
	0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70,
	0x66, 0x65, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65,
	0x65, 0x12, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x70,
	0x66, 0x65, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x46, 0x65, 0x65, 0x12, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x66, 0x65, 0x65, 0x12,
	0x9e, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x46, 0x65, 0x65, 0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x66, 0x65, 0x65,
	0x12, 0x96, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x46, 0x65, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a,
	0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x61, 0x70, 0x70, 0x66, 0x65, 0x65, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x11, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x12,
	0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01,
	0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x66, 0x65, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x11, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65,
	0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x46, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a,
	0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x66, 0x65, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x65, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_gw_v1_app_fee_fee_proto_rawDescOnce sync.Once
	file_npool_good_gw_v1_app_fee_fee_proto_rawDescData = file_npool_good_gw_v1_app_fee_fee_proto_rawDesc
)

func file_npool_good_gw_v1_app_fee_fee_proto_rawDescGZIP() []byte {
	file_npool_good_gw_v1_app_fee_fee_proto_rawDescOnce.Do(func() {
		file_npool_good_gw_v1_app_fee_fee_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_gw_v1_app_fee_fee_proto_rawDescData)
	})
	return file_npool_good_gw_v1_app_fee_fee_proto_rawDescData
}

var file_npool_good_gw_v1_app_fee_fee_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_npool_good_gw_v1_app_fee_fee_proto_goTypes = []interface{}{
	(*AppFee)(nil),                    // 0: good.gateway.app.fee.v1.AppFee
	(*GetAppFeesRequest)(nil),         // 1: good.gateway.app.fee.v1.GetAppFeesRequest
	(*GetAppFeesResponse)(nil),        // 2: good.gateway.app.fee.v1.GetAppFeesResponse
	(*GetAppFeeRequest)(nil),          // 3: good.gateway.app.fee.v1.GetAppFeeRequest
	(*GetAppFeeResponse)(nil),         // 4: good.gateway.app.fee.v1.GetAppFeeResponse
	(*UpdateAppFeeRequest)(nil),       // 5: good.gateway.app.fee.v1.UpdateAppFeeRequest
	(*UpdateAppFeeResponse)(nil),      // 6: good.gateway.app.fee.v1.UpdateAppFeeResponse
	(*AdminCreateAppFeeRequest)(nil),  // 7: good.gateway.app.fee.v1.AdminCreateAppFeeRequest
	(*AdminCreateAppFeeResponse)(nil), // 8: good.gateway.app.fee.v1.AdminCreateAppFeeResponse
	(*AdminGetAppFeesRequest)(nil),    // 9: good.gateway.app.fee.v1.AdminGetAppFeesRequest
	(*AdminGetAppFeesResponse)(nil),   // 10: good.gateway.app.fee.v1.AdminGetAppFeesResponse
	(*AdminUpdateAppFeeRequest)(nil),  // 11: good.gateway.app.fee.v1.AdminUpdateAppFeeRequest
	(*AdminUpdateAppFeeResponse)(nil), // 12: good.gateway.app.fee.v1.AdminUpdateAppFeeResponse
	(*AdminDeleteAppFeeRequest)(nil),  // 13: good.gateway.app.fee.v1.AdminDeleteAppFeeRequest
	(*AdminDeleteAppFeeResponse)(nil), // 14: good.gateway.app.fee.v1.AdminDeleteAppFeeResponse
	(v1.CancelMode)(0),                // 15: basetypes.good.v1.CancelMode
}
var file_npool_good_gw_v1_app_fee_fee_proto_depIdxs = []int32{
	15, // 0: good.gateway.app.fee.v1.AppFee.CancelMode:type_name -> basetypes.good.v1.CancelMode
	0,  // 1: good.gateway.app.fee.v1.GetAppFeesResponse.Infos:type_name -> good.gateway.app.fee.v1.AppFee
	0,  // 2: good.gateway.app.fee.v1.GetAppFeeResponse.Info:type_name -> good.gateway.app.fee.v1.AppFee
	15, // 3: good.gateway.app.fee.v1.UpdateAppFeeRequest.CancelMode:type_name -> basetypes.good.v1.CancelMode
	0,  // 4: good.gateway.app.fee.v1.UpdateAppFeeResponse.Info:type_name -> good.gateway.app.fee.v1.AppFee
	15, // 5: good.gateway.app.fee.v1.AdminCreateAppFeeRequest.CancelMode:type_name -> basetypes.good.v1.CancelMode
	0,  // 6: good.gateway.app.fee.v1.AdminCreateAppFeeResponse.Info:type_name -> good.gateway.app.fee.v1.AppFee
	0,  // 7: good.gateway.app.fee.v1.AdminGetAppFeesResponse.Infos:type_name -> good.gateway.app.fee.v1.AppFee
	15, // 8: good.gateway.app.fee.v1.AdminUpdateAppFeeRequest.CancelMode:type_name -> basetypes.good.v1.CancelMode
	0,  // 9: good.gateway.app.fee.v1.AdminUpdateAppFeeResponse.Info:type_name -> good.gateway.app.fee.v1.AppFee
	0,  // 10: good.gateway.app.fee.v1.AdminDeleteAppFeeResponse.Info:type_name -> good.gateway.app.fee.v1.AppFee
	1,  // 11: good.gateway.app.fee.v1.Gateway.GetAppFees:input_type -> good.gateway.app.fee.v1.GetAppFeesRequest
	3,  // 12: good.gateway.app.fee.v1.Gateway.GetAppFee:input_type -> good.gateway.app.fee.v1.GetAppFeeRequest
	5,  // 13: good.gateway.app.fee.v1.Gateway.UpdateAppFee:input_type -> good.gateway.app.fee.v1.UpdateAppFeeRequest
	7,  // 14: good.gateway.app.fee.v1.Gateway.AdminCreateAppFee:input_type -> good.gateway.app.fee.v1.AdminCreateAppFeeRequest
	9,  // 15: good.gateway.app.fee.v1.Gateway.AdminGetAppFees:input_type -> good.gateway.app.fee.v1.AdminGetAppFeesRequest
	11, // 16: good.gateway.app.fee.v1.Gateway.AdminUpdateAppFee:input_type -> good.gateway.app.fee.v1.AdminUpdateAppFeeRequest
	13, // 17: good.gateway.app.fee.v1.Gateway.AdminDeleteAppFee:input_type -> good.gateway.app.fee.v1.AdminDeleteAppFeeRequest
	2,  // 18: good.gateway.app.fee.v1.Gateway.GetAppFees:output_type -> good.gateway.app.fee.v1.GetAppFeesResponse
	4,  // 19: good.gateway.app.fee.v1.Gateway.GetAppFee:output_type -> good.gateway.app.fee.v1.GetAppFeeResponse
	6,  // 20: good.gateway.app.fee.v1.Gateway.UpdateAppFee:output_type -> good.gateway.app.fee.v1.UpdateAppFeeResponse
	8,  // 21: good.gateway.app.fee.v1.Gateway.AdminCreateAppFee:output_type -> good.gateway.app.fee.v1.AdminCreateAppFeeResponse
	10, // 22: good.gateway.app.fee.v1.Gateway.AdminGetAppFees:output_type -> good.gateway.app.fee.v1.AdminGetAppFeesResponse
	12, // 23: good.gateway.app.fee.v1.Gateway.AdminUpdateAppFee:output_type -> good.gateway.app.fee.v1.AdminUpdateAppFeeResponse
	14, // 24: good.gateway.app.fee.v1.Gateway.AdminDeleteAppFee:output_type -> good.gateway.app.fee.v1.AdminDeleteAppFeeResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_npool_good_gw_v1_app_fee_fee_proto_init() }
func file_npool_good_gw_v1_app_fee_fee_proto_init() {
	if File_npool_good_gw_v1_app_fee_fee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateAppFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetAppFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateAppFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteAppFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteAppFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_app_fee_fee_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_gw_v1_app_fee_fee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_gw_v1_app_fee_fee_proto_goTypes,
		DependencyIndexes: file_npool_good_gw_v1_app_fee_fee_proto_depIdxs,
		MessageInfos:      file_npool_good_gw_v1_app_fee_fee_proto_msgTypes,
	}.Build()
	File_npool_good_gw_v1_app_fee_fee_proto = out.File
	file_npool_good_gw_v1_app_fee_fee_proto_rawDesc = nil
	file_npool_good_gw_v1_app_fee_fee_proto_goTypes = nil
	file_npool_good_gw_v1_app_fee_fee_proto_depIdxs = nil
}
