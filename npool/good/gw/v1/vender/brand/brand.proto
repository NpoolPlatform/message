syntax = "proto3";

package good.gateway.vendor.brand.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/vender/brand";

import "npool/good/mw/v1/vender/brand/brand.proto";
import "google/api/annotations.proto";;

// Service Name
service Gateway {
    rpc CreateBrand (CreateBrandRequest) returns (CreateBrandResponse) {
        option (google.api.http) = {
            post: "/v1/create/vendorbrand"
            body: "*"
        };
    }
    rpc UpdateBrand (UpdateBrandRequest) returns (UpdateBrandResponse) {
        option (google.api.http) = {
            post: "/v1/update/vendorbrand"
            body: "*"
        };
    }
    rpc GetBrands (GetBrandsRequest) returns (GetBrandsResponse) {
        option (google.api.http) = {
            post: "/v1/get/vendorbrands"
            body: "*"
        };
    }
    rpc DeleteBrand (DeleteBrandRequest) returns (DeleteBrandResponse) {
        option (google.api.http) = {
            post: "/v1/delete/vendorbrand"
            body: "*"
        };
    }
}

message CreateBrandRequest {
    string Name = 10;
    string Logo = 20;
}

message CreateBrandResponse {
    middleware.vendor.brand.v1.Brand Info = 10;
}

message UpdateBrandRequest {
    string          ID   = 10;
    optional string Name = 20;
    optional string Logo = 30;
}

message UpdateBrandResponse {
    middleware.vendor.brand.v1.Brand Info = 10;
}

message GetBrandsRequest {
    int32 Offset  = 10;
    int32 Limit   = 20;
}

message GetBrandsResponse {
    repeated middleware.vendor.brand.v1.Brand Infos = 10;
    uint32                                    Total = 20;
}

message DeleteBrandRequest {
    string ID = 10;
}

message DeleteBrandResponse {
    middleware.vendor.brand.v1.Brand Info = 10;
}
