syntax = "proto3";

package good.gateway.vendor.location.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/vender/location";

import "npool/good/mw/v1/vender/location/location.proto";
import "google/api/annotations.proto";
;

// Service Name
service Gateway {
  rpc CreateLocation(CreateLocationRequest) returns (CreateLocationResponse) {
    option (google.api.http) = {
      post : "/v1/create/vendorlocation"
      body : "*"
    };
  }
  rpc UpdateLocation(UpdateLocationRequest) returns (UpdateLocationResponse) {
    option (google.api.http) = {
      post : "/v1/update/vendorlocation"
      body : "*"
    };
  }
  rpc GetLocations(GetLocationsRequest) returns (GetLocationsResponse) {
    option (google.api.http) = {
      post : "/v1/get/vendorlocations"
      body : "*"
    };
  }
  rpc DeleteLocation(DeleteLocationRequest) returns (DeleteLocationResponse) {
    option (google.api.http) = {
      post : "/v1/delete/vendorlocation"
      body : "*"
    };
  }
}

message CreateLocationRequest {
  string Country = 10;
  string Province = 20;
  string City = 30;
  string Address = 40;
  string BrandID = 50;
}

message CreateLocationResponse {
  middleware.vendor.location.v1.Location Info = 10;
}

message UpdateLocationRequest {
  uint32 ID = 9;
  string EntID = 10;
  optional string Country = 20;
  optional string Province = 30;
  optional string City = 40;
  optional string Address = 50;
  optional string BrandID = 60;
}

message UpdateLocationResponse {
  middleware.vendor.location.v1.Location Info = 10;
}

message GetLocationsRequest {
  optional string BrandID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetLocationsResponse {
  repeated middleware.vendor.location.v1.Location Infos = 10;
  uint32 Total = 20;
}

message DeleteLocationRequest {
  uint32 ID = 9;
  string EntID = 10;
}

message DeleteLocationResponse {
  middleware.vendor.location.v1.Location Info = 10;
}
