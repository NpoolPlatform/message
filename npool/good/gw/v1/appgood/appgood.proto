syntax = "proto3";

package good.gateway.appgood.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/appgood";

import "npool/good/mgr/v1/good/good.proto";
import "npool/good/mgr/v1/appgood/appgood.proto";
import "npool/npool.proto";
import "google/api/annotations.proto";

// Service Name
service Gateway {
    rpc CreateNAppGood (CreateNAppGoodRequest) returns (CreateNAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/n/appgood"
            body: "*"
        };
    }

    rpc GetAppGoods (GetAppGoodsRequest) returns (GetAppGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/appgoods"
            body: "*"
        };
    }

    rpc GetNAppGoods (GetNAppGoodsRequest) returns (GetNAppGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/appgoods"
            body: "*"
        };
    }

    rpc UpdateAppGood (UpdateAppGoodRequest) returns (UpdateAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/appgood"
            body: "*"
        };
    }

    rpc UpdateNAppGood (UpdateNAppGoodRequest) returns (UpdateAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/n/appgood"
            body: "*"
        };
    }
}

message Good {
    string           ID                          = 10;
    string           AppID                       = 20;
    string           GoodID                      = 30;
    bool             Online                      = 40;
    bool             Visible                     = 50;
    string           Price                       = 60;
    int32            DisplayIndex                = 70;
    int32            PurchaseLimit               = 80;
    int32            CommissionPercent           = 90;

    optional uint32  PromotionStartAt            = 100;
    optional uint32  PromotionEndAt              = 110;
    optional string  PromotionMessage            = 120;
    optional string  PromotionPrice              = 130;
    repeated string  PromotionPosters            = 140;

    optional string  RecommenderID               = 150;
    optional string  RecommenderEmailAddress     = 160;
    optional string  RecommenderPhoneNO          = 170;
    optional string  RecommenderUsername         = 180;
    optional string  RecommenderFirstName        = 190;
    optional string  RecommenderLastName         = 200;
    optional string  RecommendMessage            = 210;
    optional float   RecommendIndex              = 220;
    optional uint32  RecommendAt                 = 230;

    string           DeviceType                  = 240;
    string           DeviceManufacturer          = 250;
    uint32           DevicePowerComsuption       = 260;
    uint32           DeviceShipmentAt            = 270;
    repeated string  DevicePosters               = 280;

    int32            DurationDays                = 290;
    string           VendorLocationCountry       = 300;

    string           CoinTypeID                  = 310;
    string           CoinLogo                    = 320;
    string           CoinName                    = 330;
    string           CoinUnit                    = 340;
    bool             CoinPreSale                 = 350;

    good.manager.good.v1.GoodType    GoodType    = 360;
    good.manager.good.v1.BenefitType BenefitType = 370;

    string           GoodName           = 380;
    string           Unit               = 390;
    int32            UnitAmount         = 400;

    bool             TestOnly           = 410;
    repeated string  Posters            = 420;
    repeated string  Labels             = 430;
    uint32           VoteCount          = 440;
    float            Rating             = 450;

    message CoinInfo {
        string CoinTypeID  = 10;
        string CoinLogo    = 20;
        string CoinName    = 30;
        string CoinUnit    = 40;
        bool   CoinPreSale = 50;
    }
    repeated CoinInfo SupportCoins      = 460;

    uint32           GoodTotal          = 470;
    uint32           GoodLocked         = 480;
    uint32           GoodInService      = 490;
    uint32           GoodSold           = 510;

    repeated Good    SubGoods           = 520;

    // For subgood: main good must select sub good in one order
    bool             Must               = 530;
    // For subgood: sub good will be charged commission, value defined in sub good's good
    bool             Commission         = 540;

    uint32           StartAt            = 550;
    uint32           CreatedAt          = 560;
}

message CreateNAppGoodRequest {
    string TargetAppID         = 10;
    string GoodID              = 20;
    bool   Online              = 30;
    bool   Visible             = 40;
    string GoodName            = 50;
    string Price               = 60;
    int32  DisplayIndex        = 70;
    int32  PurchaseLimit       = 80;
    int32  CommissionPercent   = 90;
}

message CreateNAppGoodResponse {
    Good Info = 10;
}

message GetAppGoodsRequest {
    string AppID  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetAppGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message GetNAppGoodsRequest {
    string TargetAppID  = 10;
    int32  Offset       = 20;
    int32  Limit        = 30;
}

message GetNAppGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateAppGoodRequest {
    string          ID                  = 10;
    optional bool   Online              = 20;
    optional bool   Visible             = 30;
    optional string GoodName            = 40;
    optional string Price               = 50;
    optional int32  DisplayIndex        = 60;
    optional int32  PurchaseLimit       = 70;
    optional int32  CommissionPercent   = 80;
}

message UpdateAppGoodResponse {
    Good Info = 10;
}

message UpdateNAppGoodRequest {
    string          ID                  = 10;
    optional bool   Online              = 20;
    optional bool   Visible             = 30;
    optional string GoodName            = 40;
    optional string Price               = 50;
    optional int32  DisplayIndex        = 60;
    optional int32  PurchaseLimit       = 70;
    optional int32  CommissionPercent   = 80;
}

message UpdateNAppGoodResponse {
    Good Info = 10;
}
