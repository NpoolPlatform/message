syntax = "proto3";

package good.gateway.good1.comment.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/good/comment";

import "google/api/annotations.proto";

service Gateway {
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {
    option (google.api.http) = {
      post : "/v1/create/goodcomment"
      body : "*"
    };
  }

  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse) {
    option (google.api.http) = {
      post : "/v1/update/goodcomment"
      body : "*"
    };
  }

  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse) {
    option (google.api.http) = {
      post : "/v1/get/goodcomments"
      body : "*"
    };
  }

  rpc GetMyComments(GetMyCommentsRequest) returns (GetMyCommentsResponse) {
    option (google.api.http) = {
      post : "/v1/get/mygoodcomments"
      body : "*"
    };
  }

  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse) {
    option (google.api.http) = {
      post : "/v1/delete/goodcomment"
      body : "*"
    };
  }

  rpc DeleteAppComment(DeleteAppCommentRequest)
      returns (DeleteAppCommentResponse) {
    option (google.api.http) = {
      post : "/v1/delete/app/goodcomment"
      body : "*"
    };
  }
}

message Comment {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string AppName = 30;
  string UserID = 40;
  optional string Username = 50;
  optional string EmailAddress = 60;
  optional string PhoneNO = 70;
  string AppGoodID = 80;
  string GoodName = 90;
  optional string OrderID = 100;
  string Content = 110;
  optional string ReplyToID = 120;
  string GoodID = 130;
  bool Anonymous = 140;
  bool PurchasedUser = 150;
  bool TrialUser = 160;
  bool OrderFirstComment = 170;
  string Score = 180;
  uint32 CreatedAt = 1000;
  uint32 UpdatedAt = 1010;
}

message CreateCommentRequest {
  string AppID = 10;
  string UserID = 20;
  string AppGoodID = 30;
  optional string OrderID = 40;
  string Content = 50;
  optional string ReplyToID = 60;
  optional bool Anonymous = 70;
  optional string Score = 80;
}

message CreateCommentResponse { Comment Info = 10; }

message UpdateCommentRequest {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string UserID = 30;
  string Content = 40;
}

message UpdateCommentResponse { Comment Info = 10; }

message GetCommentsRequest {
  string AppID = 10;
  optional string AppGoodID = 20;
  optional string GoodID = 30;
  int32 Offset = 40;
  int32 Limit = 50;
}

message GetCommentsResponse {
  repeated Comment Infos = 10;
  uint32 Total = 20;
}

message GetMyCommentsRequest {
  string AppID = 10;
  string UserID = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetMyCommentsResponse {
  repeated Comment Infos = 10;
  uint32 Total = 20;
}

message DeleteCommentRequest {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string UserID = 30;
}

message DeleteCommentResponse { Comment Info = 10; }

message DeleteAppCommentRequest {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string UserID = 30;
  string TargetUserID = 50;
}

message DeleteAppCommentResponse { Comment Info = 10; }
