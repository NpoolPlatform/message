// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: npool/good/gw/v1/good/coin/reward/reward.proto

package reward

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RewardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID                string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	CoinTypeID            string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	CoinName              string `protobuf:"bytes,30,opt,name=CoinName,proto3" json:"CoinName,omitempty"`
	CoinUnit              string `protobuf:"bytes,40,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty"`
	CoinENV               string `protobuf:"bytes,50,opt,name=CoinENV,proto3" json:"CoinENV,omitempty"`
	CoinLogo              string `protobuf:"bytes,60,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty"`
	RewardTID             string `protobuf:"bytes,70,opt,name=RewardTID,proto3" json:"RewardTID,omitempty"`
	NextRewardStartAmount string `protobuf:"bytes,80,opt,name=NextRewardStartAmount,proto3" json:"NextRewardStartAmount,omitempty"`
	LastRewardAmount      string `protobuf:"bytes,90,opt,name=LastRewardAmount,proto3" json:"LastRewardAmount,omitempty"`
	LastUnitRewardAmount  string `protobuf:"bytes,100,opt,name=LastUnitRewardAmount,proto3" json:"LastUnitRewardAmount,omitempty"`
	TotalRewardAmount     string `protobuf:"bytes,110,opt,name=TotalRewardAmount,proto3" json:"TotalRewardAmount,omitempty"`
	MainCoin              bool   `protobuf:"varint,120,opt,name=MainCoin,proto3" json:"MainCoin,omitempty"`
}

func (x *RewardInfo) Reset() {
	*x = RewardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_good_coin_reward_reward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardInfo) ProtoMessage() {}

func (x *RewardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_good_coin_reward_reward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardInfo.ProtoReflect.Descriptor instead.
func (*RewardInfo) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescGZIP(), []int{0}
}

func (x *RewardInfo) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *RewardInfo) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *RewardInfo) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *RewardInfo) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *RewardInfo) GetCoinENV() string {
	if x != nil {
		return x.CoinENV
	}
	return ""
}

func (x *RewardInfo) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *RewardInfo) GetRewardTID() string {
	if x != nil {
		return x.RewardTID
	}
	return ""
}

func (x *RewardInfo) GetNextRewardStartAmount() string {
	if x != nil {
		return x.NextRewardStartAmount
	}
	return ""
}

func (x *RewardInfo) GetLastRewardAmount() string {
	if x != nil {
		return x.LastRewardAmount
	}
	return ""
}

func (x *RewardInfo) GetLastUnitRewardAmount() string {
	if x != nil {
		return x.LastUnitRewardAmount
	}
	return ""
}

func (x *RewardInfo) GetTotalRewardAmount() string {
	if x != nil {
		return x.TotalRewardAmount
	}
	return ""
}

func (x *RewardInfo) GetMainCoin() bool {
	if x != nil {
		return x.MainCoin
	}
	return false
}

var File_npool_good_gw_v1_good_coin_reward_reward_proto protoreflect.FileDescriptor

var file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x22, 0xb0, 0x03, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e, 0x56, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e, 0x56, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x4c, 0x61, 0x73, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f, 0x6f, 0x64,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescOnce sync.Once
	file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescData = file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDesc
)

func file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescGZIP() []byte {
	file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescOnce.Do(func() {
		file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescData)
	})
	return file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDescData
}

var file_npool_good_gw_v1_good_coin_reward_reward_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_npool_good_gw_v1_good_coin_reward_reward_proto_goTypes = []interface{}{
	(*RewardInfo)(nil), // 0: good.gateway.good1.coin.reward.v1.RewardInfo
}
var file_npool_good_gw_v1_good_coin_reward_reward_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_npool_good_gw_v1_good_coin_reward_reward_proto_init() }
func file_npool_good_gw_v1_good_coin_reward_reward_proto_init() {
	if File_npool_good_gw_v1_good_coin_reward_reward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_gw_v1_good_coin_reward_reward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_npool_good_gw_v1_good_coin_reward_reward_proto_goTypes,
		DependencyIndexes: file_npool_good_gw_v1_good_coin_reward_reward_proto_depIdxs,
		MessageInfos:      file_npool_good_gw_v1_good_coin_reward_reward_proto_msgTypes,
	}.Build()
	File_npool_good_gw_v1_good_coin_reward_reward_proto = out.File
	file_npool_good_gw_v1_good_coin_reward_reward_proto_rawDesc = nil
	file_npool_good_gw_v1_good_coin_reward_reward_proto_goTypes = nil
	file_npool_good_gw_v1_good_coin_reward_reward_proto_depIdxs = nil
}
