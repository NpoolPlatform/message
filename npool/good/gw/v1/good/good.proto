syntax = "proto3";

package good.gateway.good1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/good";

import "npool/basetypes/good/v1/enums.proto";
import "google/api/annotations.proto";

// Service Name
service Gateway {
    rpc CreateGood (CreateGoodRequest) returns (CreateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/good"
            body: "*"
        };
    }

    rpc GetGood (GetGoodRequest) returns (GetGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/good"
            body: "*"
        };
    }

    rpc UpdateGood (UpdateGoodRequest) returns (UpdateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/good"
            body: "*"
        };
    }

    rpc GetGoods (GetGoodsRequest) returns (GetGoodsResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods"
            body: "*"
        };
    }
}

message Good {
    string           ID                          = 10;

    string           DeviceInfoID                = 20;
    string           DeviceType                  = 30;
    string           DeviceManufacturer          = 40;
    uint32           DevicePowerConsumption      = 50;
    uint32           DeviceShipmentAt            = 60;
    repeated string  DevicePosters               = 70;

    int32            DurationDays                = 80;

    string           CoinTypeID                  = 90;
    string           CoinLogo                    = 100;
    string           CoinName                    = 110;
    string           CoinUnit                    = 120;
    bool             CoinPreSale                 = 130;

    string           VendorLocationID            = 180;
    string           VendorLocationCountry       = 190;
    string           VendorLocationProvince      = 200;
    string           VendorLocationCity          = 210;
    string           VendorLocationAddress       = 220;
    string           VendorBrandName             = 221;
    string           VendorBrandLogo             = 222;

    basetypes.good.v1.GoodType    GoodType    = 230;
    basetypes.good.v1.BenefitType BenefitType = 240;

    string           Price              = 250;
    string           Title              = 260;
    string           Unit               = 270;
    int32            UnitAmount         = 280;
    bool             TestOnly           = 290;
    repeated string  Posters            = 300;
    repeated basetypes.good.v1.GoodLabel Labels = 310;

    message CoinInfo {
        string CoinTypeID  = 10;
        string CoinLogo    = 20;
        string CoinName    = 30;
        string CoinUnit    = 40;
        bool   CoinPreSale = 50;
    }
    repeated CoinInfo SupportCoins      = 340;

    string           StockID        = 350;
    string           Total          = 360;
    string           SpotQuantity   = 361;
    string           Locked         = 370;
    string           InService      = 380;
    string           WaitStart      = 381;
    string           Sold           = 390;
    string           AppReserved    = 391;

    uint32           DeliveryAt         = 400;
    uint32           StartAt            = 410;
    uint32           CreatedAt          = 420;
    uint32           UpdatedAt          = 430;

    uint32           BenefitIntervalHours = 450;
    uint32           LastBenefitAt        = 460;
    string           NextBenefitStartAmount = 470;
    string           LastBenefitAmount    = 480;

    uint32           Likes        = 490;
    uint32           Dislikes     = 500;
    string           Score        = 510;
    uint32           ScoreCount   = 520;
    uint32           RecommendCount = 530;
    uint32           CommentCount = 540;
    string           UnitLockDeposit = 550;
}

message CreateGoodRequest {
    string          DeviceInfoID       = 20;
    int32           DurationDays       = 30;
    string          CoinTypeID         = 40;
    string          VendorLocationID   = 60;
    string          Price              = 70;
    basetypes.good.v1.BenefitType BenefitType = 80;
    basetypes.good.v1.GoodType    GoodType    = 90;
    string          Title              = 100;
    string          Unit               = 110;
    int32           UnitAmount         = 120;
    repeated string SupportCoinTypeIDs = 130;
    uint32          DeliveryAt         = 140;
    uint32          StartAt            = 150;
    bool            TestOnly           = 160;
    string          Total              = 170;
    repeated string Posters            = 210;
    repeated basetypes.good.v1.GoodLabel Labels = 220;
    optional uint32 BenefitIntervalHours = 230;
    optional string UnitLockDeposit    = 240;
    string          LastUnitRewardAmount = 250;
    string          TotalRewardAmount    = 260;
}

message CreateGoodResponse {
    Good Info = 10;
}

message GetGoodRequest {
    string ID = 10;
}

message GetGoodResponse {
    Good Info = 10;
}

message GetGoodsRequest {
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetGoodsResponse {
    repeated Good Infos = 10;
    uint32        Total = 20;
}

message UpdateGoodRequest {
    string          ID                 = 10;
    optional string DeviceInfoID       = 20;
    optional int32  DurationDays       = 30;
    optional string CoinTypeID         = 40;
    optional string InheritFromGoodID  = 50;
    optional string VendorLocationID   = 60;
    optional string Price              = 70;
    optional string Title              = 100;
    optional string Unit               = 110;
    optional int32  UnitAmount         = 120;
    repeated string SupportCoinTypeIDs = 130;
    optional uint32 DeliveryAt         = 140;
    optional uint32 StartAt            = 150;
    optional bool   TestOnly           = 160;
    optional string Total              = 170;
    repeated string Posters            = 210;
    repeated basetypes.good.v1.GoodLabel Labels = 220;
    optional uint32 BenefitIntervalHours = 230;
    optional string UnitLockDeposit    = 240;
}

message UpdateGoodResponse {
    Good Info = 10;
}
