syntax = "proto3";

package good.gateway.good1.required1.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/mw/v1/good/required";

import "google/api/annotations.proto";
import "npool/good/mw/v1/good/required/required.proto";

service Gateway {
    rpc CreateRequired (CreateRequiredRequest) returns (CreateRequiredResponse) {
        option (google.api.http) = {
            post: "/v1/create/requiredgood"
            body: "*"
        };
    }

    rpc UpdateRequired (UpdateRequiredRequest) returns (UpdateRequiredResponse) {
        option (google.api.http) = {
            post: "/v1/update/requiredgood"
            body: "*"
        };
    }

    rpc GetRequireds (GetRequiredsRequest) returns (GetRequiredsResponse) {
        option (google.api.http) = {
            post: "/v1/get/requiredgoods"
            body: "*"
        };
    }

    rpc DeleteRequired (DeleteRequiredRequest) returns (DeleteRequiredResponse) {
        option (google.api.http) = {
            post: "/v1/delete/requiredgood"
            body: "*"
        };
    }
}

message CreateRequiredRequest {
    string MainGoodID     = 10;
    string RequiredGoodID = 20;
    bool   Must           = 30;
}

message CreateRequiredResponse {
    middleware.good1.required1.v1.Required Info = 10;
}

message UpdateRequiredRequest {
    string ID   = 10;
    string Must = 20;
}

message UpdateRequiredResponse {
    middleware.good1.required1.v1.Required Info = 10;
}

message GetRequiredsRequest {
    optional string GoodID = 10;
    int32           Offset = 20;
    int32           Limit  = 30;
}

message GetRequiredsResponse {
    repeated middleware.good1.required1.v1.Required Infos = 10;
    uint32                                          Total = 20;
}

message DeleteRequiredRequest {
    string ID = 10;
}

message DeleteRequiredResponse {
    middleware.good1.required1.v1.Required Info = 10;
}
