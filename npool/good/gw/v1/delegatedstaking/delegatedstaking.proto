syntax = "proto3";

package good.gateway.delegatedstaking.v1;

option go_package = "github.com/NpoolPlatform/message/npool/good/gw/v1/delegatedstaking";

import "google/api/annotations.proto";
import "npool/basetypes/good/v1/enums.proto";
import "npool/good/gw/v1/good/coin/coin.proto";
import "npool/good/gw/v1/good/coin/reward/reward.proto";

service Gateway {
  rpc AdminCreateDelegatedStaking(AdminCreateDelegatedStakingRequest)
      returns (AdminCreateDelegatedStakingResponse) {
    option (google.api.http) = {
      post : "/v1/admin/create/delegatedstaking"
      body : "*"
    };
  }

  rpc AdminUpdateDelegatedStaking(AdminUpdateDelegatedStakingRequest)
      returns (AdminUpdateDelegatedStakingResponse) {
    option (google.api.http) = {
      post : "/v1/admin/update/delegatedstaking"
      body : "*"
    };
  }

  rpc GetDelegatedStaking(GetDelegatedStakingRequest) returns (GetDelegatedStakingResponse) {
    option (google.api.http) = {
      post : "/v1/get/delegatedstaking"
      body : "*"
    };
  }

  rpc GetDelegatedStakings(GetDelegatedStakingsRequest)
      returns (GetDelegatedStakingsResponse) {
    option (google.api.http) = {
      post : "/v1/get/delegatedstakings"
      body : "*"
    };
  }

  rpc AdminDeleteDelegatedStaking(AdminDeleteDelegatedStakingRequest)
      returns (AdminDeleteDelegatedStakingResponse) {
    option (google.api.http) = {
      post : "/v1/admin/delete/delegatedstaking"
      body : "*"
    };
  }
}

message DelegatedStaking {
  uint32 ID = 10;
  string EntID = 20;
  string GoodID = 30;

  string UnitPrice = 150;
  string QuantityUnit = 160;
  string QuantityUnitAmount = 170;
  uint32 DeliveryAt = 180;
  string UnitLockDeposit = 190;
  basetypes.good.v1.GoodDurationType DurationDisplayType = 200;

  basetypes.good.v1.GoodType GoodType = 210;
  basetypes.good.v1.BenefitType BenefitType = 220;
  string Name = 230;
  uint32 ServiceStartAt = 240;
  basetypes.good.v1.GoodStartMode StartMode = 250;
  bool TestOnly = 260;
  uint32 BenefitIntervalHours = 270;
  bool Purchasable = 280;
  bool Online = 290;
  basetypes.good.v1.GoodState State = 301;

  basetypes.good.v1.BenefitState RewardState = 390;
  uint32 LastRewardAt = 400;

  repeated good.gateway.good1.coin.v1.GoodCoinInfo GoodCoins = 900;
  repeated good.gateway.good1.coin.reward.v1.RewardInfo Rewards = 820;

  string ContractCodeURL = 830;
  string ContractCodeBranch = 840;
  basetypes.good.v1.ContractState ContractState = 850;

  string ContractDeploymentAddress = 860;
  string ContractCalculateAddress = 870;

  uint32 CreatedAt = 1000;
  uint32 UpdatedAt = 1010;
}

message AdminCreateDelegatedStakingRequest {
  // Base of power rental
  string ContractCodeURL = 10;
  string ContractCodeBranch = 20;

  // Good coin
  string CoinTypeID = 30;

  // Good information
  basetypes.good.v1.GoodType GoodType = 120;
  string Name = 140;
  optional uint32 ServiceStartAt = 150;
  basetypes.good.v1.GoodStartMode StartMode = 160;
  optional bool TestOnly = 170;
  optional uint32 BenefitIntervalHours = 180;
  optional bool Purchasable = 190;
  optional bool Online = 200;
}

message AdminCreateDelegatedStakingResponse { DelegatedStaking Info = 10; }

message AdminUpdateDelegatedStakingRequest {
  uint32 ID = 10;
  string EntID = 20;
  string GoodID = 40;

  optional string ContractCodeURL = 50;
  optional string ContractCodeBranch = 60;

  // Good information
  optional string Name = 150;
  optional uint32 ServiceStartAt = 160;
  optional basetypes.good.v1.GoodStartMode StartMode = 170;
  optional bool TestOnly = 180;
  optional uint32 BenefitIntervalHours = 190;
  optional bool Purchasable = 200;
  optional bool Online = 210;
}

message AdminUpdateDelegatedStakingResponse { DelegatedStaking Info = 10; }

message GetDelegatedStakingRequest { string GoodID = 10; }

message GetDelegatedStakingResponse { DelegatedStaking Info = 10; }

message GetDelegatedStakingsRequest {
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetDelegatedStakingsResponse {
  repeated DelegatedStaking Infos = 10;
  uint32 Total = 20;
}

message AdminDeleteDelegatedStakingRequest {
  uint32 ID = 10;
  string EntID = 20;
  string GoodID = 40;
}

message AdminDeleteDelegatedStakingResponse { DelegatedStaking Info = 10; }
