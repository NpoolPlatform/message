// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/good/gw/v1/subgood/subgood.proto

package subgood

import (
	_ "github.com/NpoolPlatform/message/npool/good/mgr/v1/subgood"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	MainGoodID   string `protobuf:"bytes,30,opt,name=MainGoodID,proto3" json:"MainGoodID,omitempty"`
	MainGoodName string `protobuf:"bytes,40,opt,name=MainGoodName,proto3" json:"MainGoodName,omitempty"`
	SubGoodID    string `protobuf:"bytes,50,opt,name=SubGoodID,proto3" json:"SubGoodID,omitempty"`
	SubGoodName  string `protobuf:"bytes,60,opt,name=SubGoodName,proto3" json:"SubGoodName,omitempty"`
	Must         bool   `protobuf:"varint,70,opt,name=Must,proto3" json:"Must,omitempty"`
	Commission   bool   `protobuf:"varint,80,opt,name=Commission,proto3" json:"Commission,omitempty"`
	CreatedAt    uint32 `protobuf:"varint,90,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    uint32 `protobuf:"varint,100,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *SubGood) Reset() {
	*x = SubGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGood) ProtoMessage() {}

func (x *SubGood) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGood.ProtoReflect.Descriptor instead.
func (*SubGood) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{0}
}

func (x *SubGood) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SubGood) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SubGood) GetMainGoodID() string {
	if x != nil {
		return x.MainGoodID
	}
	return ""
}

func (x *SubGood) GetMainGoodName() string {
	if x != nil {
		return x.MainGoodName
	}
	return ""
}

func (x *SubGood) GetSubGoodID() string {
	if x != nil {
		return x.SubGoodID
	}
	return ""
}

func (x *SubGood) GetSubGoodName() string {
	if x != nil {
		return x.SubGoodName
	}
	return ""
}

func (x *SubGood) GetMust() bool {
	if x != nil {
		return x.Must
	}
	return false
}

func (x *SubGood) GetCommission() bool {
	if x != nil {
		return x.Commission
	}
	return false
}

func (x *SubGood) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SubGood) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateSubGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	MainGoodID string `protobuf:"bytes,20,opt,name=MainGoodID,proto3" json:"MainGoodID,omitempty"`
	SubGoodID  string `protobuf:"bytes,30,opt,name=SubGoodID,proto3" json:"SubGoodID,omitempty"`
	Must       bool   `protobuf:"varint,40,opt,name=Must,proto3" json:"Must,omitempty"`
	Commission bool   `protobuf:"varint,50,opt,name=Commission,proto3" json:"Commission,omitempty"`
}

func (x *CreateSubGoodRequest) Reset() {
	*x = CreateSubGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubGoodRequest) ProtoMessage() {}

func (x *CreateSubGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubGoodRequest.ProtoReflect.Descriptor instead.
func (*CreateSubGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubGoodRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateSubGoodRequest) GetMainGoodID() string {
	if x != nil {
		return x.MainGoodID
	}
	return ""
}

func (x *CreateSubGoodRequest) GetSubGoodID() string {
	if x != nil {
		return x.SubGoodID
	}
	return ""
}

func (x *CreateSubGoodRequest) GetMust() bool {
	if x != nil {
		return x.Must
	}
	return false
}

func (x *CreateSubGoodRequest) GetCommission() bool {
	if x != nil {
		return x.Commission
	}
	return false
}

type CreateSubGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateSubGoodResponse) Reset() {
	*x = CreateSubGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubGoodResponse) ProtoMessage() {}

func (x *CreateSubGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubGoodResponse.ProtoReflect.Descriptor instead.
func (*CreateSubGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSubGoodResponse) GetInfo() *SubGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppSubGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	MainGoodID  string `protobuf:"bytes,20,opt,name=MainGoodID,proto3" json:"MainGoodID,omitempty"`
	SubGoodID   string `protobuf:"bytes,30,opt,name=SubGoodID,proto3" json:"SubGoodID,omitempty"`
	Must        bool   `protobuf:"varint,40,opt,name=Must,proto3" json:"Must,omitempty"`
	Commission  bool   `protobuf:"varint,50,opt,name=Commission,proto3" json:"Commission,omitempty"`
}

func (x *CreateAppSubGoodRequest) Reset() {
	*x = CreateAppSubGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppSubGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppSubGoodRequest) ProtoMessage() {}

func (x *CreateAppSubGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppSubGoodRequest.ProtoReflect.Descriptor instead.
func (*CreateAppSubGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppSubGoodRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *CreateAppSubGoodRequest) GetMainGoodID() string {
	if x != nil {
		return x.MainGoodID
	}
	return ""
}

func (x *CreateAppSubGoodRequest) GetSubGoodID() string {
	if x != nil {
		return x.SubGoodID
	}
	return ""
}

func (x *CreateAppSubGoodRequest) GetMust() bool {
	if x != nil {
		return x.Must
	}
	return false
}

func (x *CreateAppSubGoodRequest) GetCommission() bool {
	if x != nil {
		return x.Commission
	}
	return false
}

type CreateAppSubGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppSubGoodResponse) Reset() {
	*x = CreateAppSubGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppSubGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppSubGoodResponse) ProtoMessage() {}

func (x *CreateAppSubGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppSubGoodResponse.ProtoReflect.Descriptor instead.
func (*CreateAppSubGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppSubGoodResponse) GetInfo() *SubGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSubGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID      string  `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	SubGoodID  *string `protobuf:"bytes,30,opt,name=SubGoodID,proto3,oneof" json:"SubGoodID,omitempty"`
	Must       *bool   `protobuf:"varint,40,opt,name=Must,proto3,oneof" json:"Must,omitempty"`
	Commission *bool   `protobuf:"varint,50,opt,name=Commission,proto3,oneof" json:"Commission,omitempty"`
}

func (x *UpdateSubGoodRequest) Reset() {
	*x = UpdateSubGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubGoodRequest) ProtoMessage() {}

func (x *UpdateSubGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubGoodRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateSubGoodRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateSubGoodRequest) GetSubGoodID() string {
	if x != nil && x.SubGoodID != nil {
		return *x.SubGoodID
	}
	return ""
}

func (x *UpdateSubGoodRequest) GetMust() bool {
	if x != nil && x.Must != nil {
		return *x.Must
	}
	return false
}

func (x *UpdateSubGoodRequest) GetCommission() bool {
	if x != nil && x.Commission != nil {
		return *x.Commission
	}
	return false
}

type UpdateSubGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateSubGoodResponse) Reset() {
	*x = UpdateSubGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubGoodResponse) ProtoMessage() {}

func (x *UpdateSubGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubGoodResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSubGoodResponse) GetInfo() *SubGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppSubGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string  `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	TargetAppID string  `protobuf:"bytes,20,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	SubGoodID   *string `protobuf:"bytes,30,opt,name=SubGoodID,proto3,oneof" json:"SubGoodID,omitempty"`
	Must        *bool   `protobuf:"varint,40,opt,name=Must,proto3,oneof" json:"Must,omitempty"`
	Commission  *bool   `protobuf:"varint,50,opt,name=Commission,proto3,oneof" json:"Commission,omitempty"`
}

func (x *UpdateAppSubGoodRequest) Reset() {
	*x = UpdateAppSubGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSubGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSubGoodRequest) ProtoMessage() {}

func (x *UpdateAppSubGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSubGoodRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppSubGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAppSubGoodRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateAppSubGoodRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *UpdateAppSubGoodRequest) GetSubGoodID() string {
	if x != nil && x.SubGoodID != nil {
		return *x.SubGoodID
	}
	return ""
}

func (x *UpdateAppSubGoodRequest) GetMust() bool {
	if x != nil && x.Must != nil {
		return *x.Must
	}
	return false
}

func (x *UpdateAppSubGoodRequest) GetCommission() bool {
	if x != nil && x.Commission != nil {
		return *x.Commission
	}
	return false
}

type UpdateAppSubGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SubGood `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppSubGoodResponse) Reset() {
	*x = UpdateAppSubGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSubGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSubGoodResponse) ProtoMessage() {}

func (x *UpdateAppSubGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSubGoodResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppSubGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppSubGoodResponse) GetInfo() *SubGood {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSubGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSubGoodsRequest) Reset() {
	*x = GetSubGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubGoodsRequest) ProtoMessage() {}

func (x *GetSubGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetSubGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubGoodsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetSubGoodsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSubGoodsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSubGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SubGood `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32     `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSubGoodsResponse) Reset() {
	*x = GetSubGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubGoodsResponse) ProtoMessage() {}

func (x *GetSubGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetSubGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubGoodsResponse) GetInfos() []*SubGood {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSubGoodsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppSubGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID string `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Offset      int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit       int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppSubGoodsRequest) Reset() {
	*x = GetAppSubGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSubGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSubGoodsRequest) ProtoMessage() {}

func (x *GetAppSubGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSubGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetAppSubGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppSubGoodsRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *GetAppSubGoodsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppSubGoodsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppSubGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SubGood `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32     `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppSubGoodsResponse) Reset() {
	*x = GetAppSubGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppSubGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSubGoodsResponse) ProtoMessage() {}

func (x *GetAppSubGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSubGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetAppSubGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppSubGoodsResponse) GetInfos() []*SubGood {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppSubGoodsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_npool_good_gw_v1_subgood_subgood_proto protoreflect.FileDescriptor

var file_npool_good_gw_v1_subgood_subgood_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x1a, 0x27, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x07, 0x53, 0x75, 0x62,
	0x47, 0x6f, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61,
	0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61,
	0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x75,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x75, 0x73, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x4d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xad,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75,
	0x73, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xc3, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x21, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x01, 0x52, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x4d, 0x75, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x04, 0x4d, 0x75, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64,
	0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4d, 0x75, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x67, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x66, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x80, 0x07, 0x0a,
	0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x2d, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x75,
	0x62, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x9a, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x30, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f,
	0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f,
	0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x9a, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x30, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73,
	0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x2e, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x62, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x42,
	0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x67, 0x6f, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_good_gw_v1_subgood_subgood_proto_rawDescOnce sync.Once
	file_npool_good_gw_v1_subgood_subgood_proto_rawDescData = file_npool_good_gw_v1_subgood_subgood_proto_rawDesc
)

func file_npool_good_gw_v1_subgood_subgood_proto_rawDescGZIP() []byte {
	file_npool_good_gw_v1_subgood_subgood_proto_rawDescOnce.Do(func() {
		file_npool_good_gw_v1_subgood_subgood_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_good_gw_v1_subgood_subgood_proto_rawDescData)
	})
	return file_npool_good_gw_v1_subgood_subgood_proto_rawDescData
}

var file_npool_good_gw_v1_subgood_subgood_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_good_gw_v1_subgood_subgood_proto_goTypes = []interface{}{
	(*SubGood)(nil),                  // 0: good.gateway.subgood.v1.SubGood
	(*CreateSubGoodRequest)(nil),     // 1: good.gateway.subgood.v1.CreateSubGoodRequest
	(*CreateSubGoodResponse)(nil),    // 2: good.gateway.subgood.v1.CreateSubGoodResponse
	(*CreateAppSubGoodRequest)(nil),  // 3: good.gateway.subgood.v1.CreateAppSubGoodRequest
	(*CreateAppSubGoodResponse)(nil), // 4: good.gateway.subgood.v1.CreateAppSubGoodResponse
	(*UpdateSubGoodRequest)(nil),     // 5: good.gateway.subgood.v1.UpdateSubGoodRequest
	(*UpdateSubGoodResponse)(nil),    // 6: good.gateway.subgood.v1.UpdateSubGoodResponse
	(*UpdateAppSubGoodRequest)(nil),  // 7: good.gateway.subgood.v1.UpdateAppSubGoodRequest
	(*UpdateAppSubGoodResponse)(nil), // 8: good.gateway.subgood.v1.UpdateAppSubGoodResponse
	(*GetSubGoodsRequest)(nil),       // 9: good.gateway.subgood.v1.GetSubGoodsRequest
	(*GetSubGoodsResponse)(nil),      // 10: good.gateway.subgood.v1.GetSubGoodsResponse
	(*GetAppSubGoodsRequest)(nil),    // 11: good.gateway.subgood.v1.GetAppSubGoodsRequest
	(*GetAppSubGoodsResponse)(nil),   // 12: good.gateway.subgood.v1.GetAppSubGoodsResponse
}
var file_npool_good_gw_v1_subgood_subgood_proto_depIdxs = []int32{
	0,  // 0: good.gateway.subgood.v1.CreateSubGoodResponse.Info:type_name -> good.gateway.subgood.v1.SubGood
	0,  // 1: good.gateway.subgood.v1.CreateAppSubGoodResponse.Info:type_name -> good.gateway.subgood.v1.SubGood
	0,  // 2: good.gateway.subgood.v1.UpdateSubGoodResponse.Info:type_name -> good.gateway.subgood.v1.SubGood
	0,  // 3: good.gateway.subgood.v1.UpdateAppSubGoodResponse.Info:type_name -> good.gateway.subgood.v1.SubGood
	0,  // 4: good.gateway.subgood.v1.GetSubGoodsResponse.Infos:type_name -> good.gateway.subgood.v1.SubGood
	0,  // 5: good.gateway.subgood.v1.GetAppSubGoodsResponse.Infos:type_name -> good.gateway.subgood.v1.SubGood
	1,  // 6: good.gateway.subgood.v1.Gateway.CreateSubGood:input_type -> good.gateway.subgood.v1.CreateSubGoodRequest
	3,  // 7: good.gateway.subgood.v1.Gateway.CreateAppSubGood:input_type -> good.gateway.subgood.v1.CreateAppSubGoodRequest
	5,  // 8: good.gateway.subgood.v1.Gateway.UpdateSubGood:input_type -> good.gateway.subgood.v1.UpdateSubGoodRequest
	7,  // 9: good.gateway.subgood.v1.Gateway.UpdateAppSubGood:input_type -> good.gateway.subgood.v1.UpdateAppSubGoodRequest
	9,  // 10: good.gateway.subgood.v1.Gateway.GetSubGoods:input_type -> good.gateway.subgood.v1.GetSubGoodsRequest
	11, // 11: good.gateway.subgood.v1.Gateway.GetAppSubGoods:input_type -> good.gateway.subgood.v1.GetAppSubGoodsRequest
	2,  // 12: good.gateway.subgood.v1.Gateway.CreateSubGood:output_type -> good.gateway.subgood.v1.CreateSubGoodResponse
	4,  // 13: good.gateway.subgood.v1.Gateway.CreateAppSubGood:output_type -> good.gateway.subgood.v1.CreateAppSubGoodResponse
	6,  // 14: good.gateway.subgood.v1.Gateway.UpdateSubGood:output_type -> good.gateway.subgood.v1.UpdateSubGoodResponse
	8,  // 15: good.gateway.subgood.v1.Gateway.UpdateAppSubGood:output_type -> good.gateway.subgood.v1.UpdateAppSubGoodResponse
	10, // 16: good.gateway.subgood.v1.Gateway.GetSubGoods:output_type -> good.gateway.subgood.v1.GetSubGoodsResponse
	12, // 17: good.gateway.subgood.v1.Gateway.GetAppSubGoods:output_type -> good.gateway.subgood.v1.GetAppSubGoodsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_npool_good_gw_v1_subgood_subgood_proto_init() }
func file_npool_good_gw_v1_subgood_subgood_proto_init() {
	if File_npool_good_gw_v1_subgood_subgood_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppSubGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppSubGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppSubGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppSubGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSubGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppSubGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_npool_good_gw_v1_subgood_subgood_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_good_gw_v1_subgood_subgood_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_good_gw_v1_subgood_subgood_proto_goTypes,
		DependencyIndexes: file_npool_good_gw_v1_subgood_subgood_proto_depIdxs,
		MessageInfos:      file_npool_good_gw_v1_subgood_subgood_proto_msgTypes,
	}.Build()
	File_npool_good_gw_v1_subgood_subgood_proto = out.File
	file_npool_good_gw_v1_subgood_subgood_proto_rawDesc = nil
	file_npool_good_gw_v1_subgood_subgood_proto_goTypes = nil
	file_npool_good_gw_v1_subgood_subgood_proto_depIdxs = nil
}
