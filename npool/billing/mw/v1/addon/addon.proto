syntax = "proto3";

package billing.middleware.addon.v1;

option go_package = "github.com/NpoolPlatform/message/npool/billing/mw/v1/addon";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";

service Middleware {
    rpc GetAddons(GetAddonsRequest) returns (GetAddonsResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_GetAddons"
            body : "*"
        };
    }
    rpc GetAddonsCount(GetAddonsCountRequest) returns (GetAddonsCountResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_GetAddonsCount"
            body : "*"
        };
    }
    rpc GetAddon(GetAddonRequest) returns (GetAddonResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_GetAddon"
            body : "*"
        };
    }
    rpc ExistAddonConds(ExistAddonCondsRequest)
        returns (ExistAddonCondsResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_ExistAddonConds"
            body : "*"
        };
    }
    rpc CreateAddon(CreateAddonRequest)
        returns (CreateAddonResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_CreateAddon"
            body : "*"
        };
    }
    rpc DeleteAddon(DeleteAddonRequest)
        returns (DeleteAddonResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_DeleteAddon"
            body : "*"
        };
    }
    rpc UpdateAddon(UpdateAddonRequest)
        returns (UpdateAddonResponse) {
        option (google.api.http) = {
            post : "/v1/billingaddon_UpdateAddon"
            body : "*"
        };
    }
}

message AddonReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string UsdPrice = 40;
    optional uint32 Credit = 50;
    optional uint32 SortOrder = 60;
    optional bool Enabled = 70;
    optional string Description = 80;
}

message Addon {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"usd_price"
    string UsdPrice = 40;
    // @inject_tag: sql:"credit"
    uint32 Credit = 50;
    // @inject_tag: sql:"sort_order"
    uint32 SortOrder = 60;
    // @inject_tag: sql:"enabled"
    bool Enabled = 70;
    // @inject_tag: sql:"description"
    string Description = 80;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 9;
    optional basetypes.v1.StringVal EntID = 10;
    optional basetypes.v1.StringVal AppID = 20;
    optional basetypes.v1.Uint32Val SortOrder = 30;
    optional basetypes.v1.BoolVal Enabled = 40;
    optional basetypes.v1.Uint32SliceVal IDs = 1000;
    optional basetypes.v1.StringSliceVal EntIDs = 1010;
}

message GetAddonsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAddonsResponse {
    repeated Addon Infos = 10;
}

message GetAddonsCountRequest {
    Conds Conds = 10;
}

message GetAddonsCountResponse {
    uint32 Total = 20;
}

message GetAddonRequest { string EntID = 10; }

message GetAddonResponse { Addon Info = 10; }

message ExistAddonCondsRequest { Conds Conds = 10; }

message ExistAddonCondsResponse { bool Info = 10; }

message CreateAddonRequest { AddonReq Info = 10; }

message CreateAddonResponse { Addon Info = 10; }

message DeleteAddonRequest { AddonReq Info = 10; }

message DeleteAddonResponse { Addon Info = 10; }

message UpdateAddonRequest { AddonReq Info = 10; }

message UpdateAddonResponse { Addon Info = 10; }
