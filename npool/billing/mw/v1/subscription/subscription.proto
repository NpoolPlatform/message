syntax = "proto3";

package billing.middleware.subscription.v1;

option go_package = "github.com/NpoolPlatform/message/npool/billing/mw/v1/subscription";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/billing/v1/enums.proto";

service Middleware {
    rpc GetSubscriptions(GetSubscriptionsRequest) returns (GetSubscriptionsResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_GetSubscriptions"
            body : "*"
        };
    }
    rpc GetSubscriptionsCount(GetSubscriptionsCountRequest) returns (GetSubscriptionsCountResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_GetSubscriptionsCount"
            body : "*"
        };
    }
    rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_GetSubscription"
            body : "*"
        };
    }
    rpc ExistSubscriptionConds(ExistSubscriptionCondsRequest)
        returns (ExistSubscriptionCondsResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_ExistSubscriptionConds"
            body : "*"
        };
    }
    rpc CreateSubscriptions(CreateSubscriptionsRequest)
        returns (CreateSubscriptionsResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_CreateSubscriptions"
            body : "*"
        };
    }
    rpc DeleteSubscriptions(DeleteSubscriptionsRequest)
        returns (DeleteSubscriptionsResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_DeleteSubscriptions"
            body : "*"
        };
    }
    rpc CreateSubscription(CreateSubscriptionRequest)
        returns (CreateSubscriptionResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_CreateSubscription"
            body : "*"
        };
    }
    rpc DeleteSubscription(DeleteSubscriptionRequest)
        returns (DeleteSubscriptionResponse) {
        option (google.api.http) = {
            post : "/v1/billingsubscription_DeleteSubscription"
            body : "*"
        };
    }
}

message SubscriptionReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string PackageName = 40;
    optional string Price = 50;
    optional string Description = 60;
    optional string SortOrder = 70;
    optional basetypes.billing.v1.PackageType PackageType = 80;
    optional string Credit = 90;
    optional basetypes.billing.v1.ResetType ResetType = 100;
    optional string QpsLimit = 110;
}

message Subscription {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"package_name"
    string PackageName = 40;
    // @inject_tag: sql:"price"
    string Price = 50;
    // @inject_tag: sql:"description"
    string Description = 60;
    // @inject_tag: sql:"sort_order"
    string SortOrder = 70;
    // @inject_tag: sql:"package_type"
    string PackageTypeStr = 80;
    basetypes.billing.v1.PackageType PackageType = 81;
    // @inject_tag: sql:"credit"
    string Credit = 90;
    // @inject_tag: sql:"reset_type"
    string ResetTypeStr = 100;
    basetypes.billing.v1.PackageType ResetType = 101;
    // @inject_tag: sql:"qps_limit"
    string QpsLimit = 110;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 9;
    optional basetypes.v1.StringVal EntID = 10;
    optional basetypes.v1.StringVal AppID = 20;
    optional basetypes.v1.StringVal PackageName = 30;
    optional basetypes.v1.StringVal SortOrder = 40;
    optional basetypes.v1.Uint32Val PackageType = 50;
    optional basetypes.v1.Uint32Val ResetType = 60;
    optional basetypes.v1.Uint32SliceVal IDs = 1000;
    optional basetypes.v1.StringSliceVal EntIDs = 1010;
}

message GetSubscriptionsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetSubscriptionsResponse {
    repeated Subscription Infos = 10;
}

message GetSubscriptionsCountRequest {
    Conds Conds = 10;
}

message GetSubscriptionsCountResponse {
    uint32 Total = 20;
}

message GetSubscriptionRequest { string EntID = 10; }

message GetSubscriptionResponse { Subscription Info = 10; }

message ExistSubscriptionCondsRequest { Conds Conds = 10; }

message ExistSubscriptionCondsResponse { bool Info = 10; }

message CreateSubscriptionsRequest { repeated SubscriptionReq Infos = 10; }

message CreateSubscriptionsResponse { repeated Subscription Infos = 10; }

message DeleteSubscriptionsRequest { repeated SubscriptionReq Infos = 10; }

message DeleteSubscriptionsResponse { repeated Subscription Infos = 10; }

message CreateSubscriptionRequest { SubscriptionReq Info = 10; }

message CreateSubscriptionResponse { Subscription Info = 10; }

message DeleteSubscriptionRequest { SubscriptionReq Info = 10; }

message DeleteSubscriptionResponse { Subscription Info = 10; }
