syntax = "proto3";

package billing.gateway.addon.v1;

option go_package = "github.com/NpoolPlatform/message/npool/billing/gw/v1/addon";

import "npool/billing/mw/v1/addon/addon.proto";
import "google/api/annotations.proto";

// Service Name
service Gateway {
    rpc AdminCreateAddon(AdminCreateAddonRequest) returns (AdminCreateAddonResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/addon"
            body: "*"
        };
    }
    rpc AdminUpdateAddon(AdminUpdateAddonRequest) returns (AdminUpdateAddonResponse) {
        option (google.api.http) = {
            post: "/v1/admin/update/addon"
            body: "*"
        };
    }
    rpc GetAddon(GetAddonRequest) returns (GetAddonResponse) {
        option (google.api.http) = {
            post: "/v1/get/addon"
            body: "*"
        };
    }
    rpc GetAddons(GetAddonsRequest) returns (GetAddonsResponse) {
        option (google.api.http) = {
            post: "/v1/get/addons"
            body: "*"
        };
    }
    rpc GetAddonsCount(GetAddonsCountRequest) returns (GetAddonsCountResponse) {
        option (google.api.http) = {
            post: "/v1/get/addons/count"
            body: "*"
        };
    }
    rpc AdminDeleteAddon(AdminDeleteAddonRequest) returns (AdminDeleteAddonResponse) {
        option (google.api.http) = {
            post: "/v1/admin/delete/addon"
            body: "*"
        };
    }
}

message AdminCreateAddonRequest {
    string TargetAppID = 10;
    string Price = 20;
    uint32 Credit = 30;
    uint32 SortOrder = 40;
    bool Enabled = 50;
    string Description = 60;
}

message AdminCreateAddonResponse {
    middleware.addon.v1.Addon Info = 10;
}

message AdminUpdateAddonRequest {
    uint32 ID = 10;
    string EntID = 20;
    string TargetAppID = 30;
    optional string Price = 40;
    optional uint32 Credit = 50;
    optional uint32 SortOrder = 60;
    optional bool Enabled = 70;
    string Description = 80;
}

message AdminUpdateAddonResponse {
    middleware.addon.v1.Addon Info = 10;
}

message GetAddonRequest {
    string EntID = 10;
}

message GetAddonResponse {
    middleware.addon.v1.Addon Info = 10;
}

message GetAddonsRequest {
    int32 Offset = 10;
    int32 Limit = 20;
}

message GetAddonsResponse {
    repeated middleware.addon.v1.Addon Infos = 10;
}

message GetAddonsCountRequest {}

message GetAddonsCountResponse {
    uint32 Total = 10;
}

message AdminDeleteAddonRequest {
    uint32 ID = 10;
    string EntID = 20;
}

message AdminDeleteAddonResponse {
    middleware.addon.v1.Addon Info = 10;
}
