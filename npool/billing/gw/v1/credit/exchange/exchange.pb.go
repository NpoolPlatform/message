// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: npool/billing/gw/v1/credit/exchange/exchange.proto

package exchange

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/billing/v1"
	exchange "github.com/NpoolPlatform/message/npool/billing/mw/v1/credit/exchange"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminCreateExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID       string       `protobuf:"bytes,10,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	UsageType         v1.UsageType `protobuf:"varint,20,opt,name=UsageType,proto3,enum=basetypes.billing.v1.UsageType" json:"UsageType,omitempty"`
	Credit            uint32       `protobuf:"varint,30,opt,name=Credit,proto3" json:"Credit,omitempty"`
	ExchangeThreshold uint32       `protobuf:"varint,40,opt,name=ExchangeThreshold,proto3" json:"ExchangeThreshold,omitempty"`
	Path              string       `protobuf:"bytes,50,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *AdminCreateExchangeRequest) Reset() {
	*x = AdminCreateExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateExchangeRequest) ProtoMessage() {}

func (x *AdminCreateExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateExchangeRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateExchangeRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *AdminCreateExchangeRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminCreateExchangeRequest) GetUsageType() v1.UsageType {
	if x != nil {
		return x.UsageType
	}
	return v1.UsageType(0)
}

func (x *AdminCreateExchangeRequest) GetCredit() uint32 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *AdminCreateExchangeRequest) GetExchangeThreshold() uint32 {
	if x != nil {
		return x.ExchangeThreshold
	}
	return 0
}

func (x *AdminCreateExchangeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AdminCreateExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *exchange.Exchange `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateExchangeResponse) Reset() {
	*x = AdminCreateExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateExchangeResponse) ProtoMessage() {}

func (x *AdminCreateExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateExchangeResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateExchangeResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *AdminCreateExchangeResponse) GetInfo() *exchange.Exchange {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                uint32  `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID             string  `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	TargetAppID       string  `protobuf:"bytes,30,opt,name=TargetAppID,proto3" json:"TargetAppID,omitempty"`
	Credit            *uint32 `protobuf:"varint,40,opt,name=Credit,proto3,oneof" json:"Credit,omitempty"`
	ExchangeThreshold *uint32 `protobuf:"varint,50,opt,name=ExchangeThreshold,proto3,oneof" json:"ExchangeThreshold,omitempty"`
	Path              *string `protobuf:"bytes,60,opt,name=Path,proto3,oneof" json:"Path,omitempty"`
}

func (x *AdminUpdateExchangeRequest) Reset() {
	*x = AdminUpdateExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateExchangeRequest) ProtoMessage() {}

func (x *AdminUpdateExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateExchangeRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateExchangeRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *AdminUpdateExchangeRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateExchangeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateExchangeRequest) GetTargetAppID() string {
	if x != nil {
		return x.TargetAppID
	}
	return ""
}

func (x *AdminUpdateExchangeRequest) GetCredit() uint32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

func (x *AdminUpdateExchangeRequest) GetExchangeThreshold() uint32 {
	if x != nil && x.ExchangeThreshold != nil {
		return *x.ExchangeThreshold
	}
	return 0
}

func (x *AdminUpdateExchangeRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type AdminUpdateExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *exchange.Exchange `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateExchangeResponse) Reset() {
	*x = AdminUpdateExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateExchangeResponse) ProtoMessage() {}

func (x *AdminUpdateExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateExchangeResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateExchangeResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *AdminUpdateExchangeResponse) GetInfo() *exchange.Exchange {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetExchangeRequest) Reset() {
	*x = GetExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRequest) ProtoMessage() {}

func (x *GetExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRequest.ProtoReflect.Descriptor instead.
func (*GetExchangeRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{4}
}

func (x *GetExchangeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *exchange.Exchange `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetExchangeResponse) Reset() {
	*x = GetExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeResponse) ProtoMessage() {}

func (x *GetExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeResponse.ProtoReflect.Descriptor instead.
func (*GetExchangeResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{5}
}

func (x *GetExchangeResponse) GetInfo() *exchange.Exchange {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetExchangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,10,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,20,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetExchangesRequest) Reset() {
	*x = GetExchangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesRequest) ProtoMessage() {}

func (x *GetExchangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesRequest.ProtoReflect.Descriptor instead.
func (*GetExchangesRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{6}
}

func (x *GetExchangesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetExchangesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetExchangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*exchange.Exchange `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetExchangesResponse) Reset() {
	*x = GetExchangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesResponse) ProtoMessage() {}

func (x *GetExchangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesResponse.ProtoReflect.Descriptor instead.
func (*GetExchangesResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{7}
}

func (x *GetExchangesResponse) GetInfos() []*exchange.Exchange {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetExchangesCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetExchangesCountRequest) Reset() {
	*x = GetExchangesCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesCountRequest) ProtoMessage() {}

func (x *GetExchangesCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesCountRequest.ProtoReflect.Descriptor instead.
func (*GetExchangesCountRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{8}
}

type GetExchangesCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,10,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetExchangesCountResponse) Reset() {
	*x = GetExchangesCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesCountResponse) ProtoMessage() {}

func (x *GetExchangesCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesCountResponse.ProtoReflect.Descriptor instead.
func (*GetExchangesCountResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{9}
}

func (x *GetExchangesCountResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AdminDeleteExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *AdminDeleteExchangeRequest) Reset() {
	*x = AdminDeleteExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteExchangeRequest) ProtoMessage() {}

func (x *AdminDeleteExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteExchangeRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteExchangeRequest) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{10}
}

func (x *AdminDeleteExchangeRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteExchangeRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type AdminDeleteExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *exchange.Exchange `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteExchangeResponse) Reset() {
	*x = AdminDeleteExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteExchangeResponse) ProtoMessage() {}

func (x *AdminDeleteExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteExchangeResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteExchangeResponse) Descriptor() ([]byte, []int) {
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP(), []int{11}
}

func (x *AdminDeleteExchangeResponse) GetInfo() *exchange.Exchange {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_billing_gw_v1_credit_exchange_exchange_proto protoreflect.FileDescriptor

var file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x32, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x62, 0x0a, 0x1b,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xf7, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x01, 0x52, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x61, 0x74, 0x68, 0x22, 0x62, 0x0a, 0x1b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x42, 0x0a, 0x1a, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x62, 0x0a,
	0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0xe7, 0x08, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xc3, 0x01,
	0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xa6,
	0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x37, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0xbb, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xc3, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescOnce sync.Once
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescData = file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDesc
)

func file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescGZIP() []byte {
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescOnce.Do(func() {
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescData)
	})
	return file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDescData
}

var file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_npool_billing_gw_v1_credit_exchange_exchange_proto_goTypes = []interface{}{
	(*AdminCreateExchangeRequest)(nil),  // 0: billing.gateway.credit.exchange.v1.AdminCreateExchangeRequest
	(*AdminCreateExchangeResponse)(nil), // 1: billing.gateway.credit.exchange.v1.AdminCreateExchangeResponse
	(*AdminUpdateExchangeRequest)(nil),  // 2: billing.gateway.credit.exchange.v1.AdminUpdateExchangeRequest
	(*AdminUpdateExchangeResponse)(nil), // 3: billing.gateway.credit.exchange.v1.AdminUpdateExchangeResponse
	(*GetExchangeRequest)(nil),          // 4: billing.gateway.credit.exchange.v1.GetExchangeRequest
	(*GetExchangeResponse)(nil),         // 5: billing.gateway.credit.exchange.v1.GetExchangeResponse
	(*GetExchangesRequest)(nil),         // 6: billing.gateway.credit.exchange.v1.GetExchangesRequest
	(*GetExchangesResponse)(nil),        // 7: billing.gateway.credit.exchange.v1.GetExchangesResponse
	(*GetExchangesCountRequest)(nil),    // 8: billing.gateway.credit.exchange.v1.GetExchangesCountRequest
	(*GetExchangesCountResponse)(nil),   // 9: billing.gateway.credit.exchange.v1.GetExchangesCountResponse
	(*AdminDeleteExchangeRequest)(nil),  // 10: billing.gateway.credit.exchange.v1.AdminDeleteExchangeRequest
	(*AdminDeleteExchangeResponse)(nil), // 11: billing.gateway.credit.exchange.v1.AdminDeleteExchangeResponse
	(v1.UsageType)(0),                   // 12: basetypes.billing.v1.UsageType
	(*exchange.Exchange)(nil),           // 13: billing.middleware.credit.exchange.v1.Exchange
}
var file_npool_billing_gw_v1_credit_exchange_exchange_proto_depIdxs = []int32{
	12, // 0: billing.gateway.credit.exchange.v1.AdminCreateExchangeRequest.UsageType:type_name -> basetypes.billing.v1.UsageType
	13, // 1: billing.gateway.credit.exchange.v1.AdminCreateExchangeResponse.Info:type_name -> billing.middleware.credit.exchange.v1.Exchange
	13, // 2: billing.gateway.credit.exchange.v1.AdminUpdateExchangeResponse.Info:type_name -> billing.middleware.credit.exchange.v1.Exchange
	13, // 3: billing.gateway.credit.exchange.v1.GetExchangeResponse.Info:type_name -> billing.middleware.credit.exchange.v1.Exchange
	13, // 4: billing.gateway.credit.exchange.v1.GetExchangesResponse.Infos:type_name -> billing.middleware.credit.exchange.v1.Exchange
	13, // 5: billing.gateway.credit.exchange.v1.AdminDeleteExchangeResponse.Info:type_name -> billing.middleware.credit.exchange.v1.Exchange
	0,  // 6: billing.gateway.credit.exchange.v1.Gateway.AdminCreateExchange:input_type -> billing.gateway.credit.exchange.v1.AdminCreateExchangeRequest
	2,  // 7: billing.gateway.credit.exchange.v1.Gateway.AdminUpdateExchange:input_type -> billing.gateway.credit.exchange.v1.AdminUpdateExchangeRequest
	4,  // 8: billing.gateway.credit.exchange.v1.Gateway.GetExchange:input_type -> billing.gateway.credit.exchange.v1.GetExchangeRequest
	6,  // 9: billing.gateway.credit.exchange.v1.Gateway.GetExchanges:input_type -> billing.gateway.credit.exchange.v1.GetExchangesRequest
	8,  // 10: billing.gateway.credit.exchange.v1.Gateway.GetExchangesCount:input_type -> billing.gateway.credit.exchange.v1.GetExchangesCountRequest
	10, // 11: billing.gateway.credit.exchange.v1.Gateway.AdminDeleteExchange:input_type -> billing.gateway.credit.exchange.v1.AdminDeleteExchangeRequest
	1,  // 12: billing.gateway.credit.exchange.v1.Gateway.AdminCreateExchange:output_type -> billing.gateway.credit.exchange.v1.AdminCreateExchangeResponse
	3,  // 13: billing.gateway.credit.exchange.v1.Gateway.AdminUpdateExchange:output_type -> billing.gateway.credit.exchange.v1.AdminUpdateExchangeResponse
	5,  // 14: billing.gateway.credit.exchange.v1.Gateway.GetExchange:output_type -> billing.gateway.credit.exchange.v1.GetExchangeResponse
	7,  // 15: billing.gateway.credit.exchange.v1.Gateway.GetExchanges:output_type -> billing.gateway.credit.exchange.v1.GetExchangesResponse
	9,  // 16: billing.gateway.credit.exchange.v1.Gateway.GetExchangesCount:output_type -> billing.gateway.credit.exchange.v1.GetExchangesCountResponse
	11, // 17: billing.gateway.credit.exchange.v1.Gateway.AdminDeleteExchange:output_type -> billing.gateway.credit.exchange.v1.AdminDeleteExchangeResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_npool_billing_gw_v1_credit_exchange_exchange_proto_init() }
func file_npool_billing_gw_v1_credit_exchange_exchange_proto_init() {
	if File_npool_billing_gw_v1_credit_exchange_exchange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_billing_gw_v1_credit_exchange_exchange_proto_goTypes,
		DependencyIndexes: file_npool_billing_gw_v1_credit_exchange_exchange_proto_depIdxs,
		MessageInfos:      file_npool_billing_gw_v1_credit_exchange_exchange_proto_msgTypes,
	}.Build()
	File_npool_billing_gw_v1_credit_exchange_exchange_proto = out.File
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_rawDesc = nil
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_goTypes = nil
	file_npool_billing_gw_v1_credit_exchange_exchange_proto_depIdxs = nil
}
