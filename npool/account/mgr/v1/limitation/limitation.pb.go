// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/account/mgr/v1/limitation/limitation.proto

package limitation

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LimitationType int32

const (
	LimitationType_DefaultLimitationType     LimitationType = 0
	LimitationType_WithdrawAutoReview        LimitationType = 10
	LimitationType_UserBenefitHotAmount      LimitationType = 20
	LimitationType_PaymentCollectorAmount    LimitationType = 30
	LimitationType_CoinAddressReservedAmount LimitationType = 40
	LimitationType_GasFeederTriggerAmount    LimitationType = 50
	LimitationType_GasFeedingAmount          LimitationType = 60
)

// Enum value maps for LimitationType.
var (
	LimitationType_name = map[int32]string{
		0:  "DefaultLimitationType",
		10: "WithdrawAutoReview",
		20: "UserBenefitHotAmount",
		30: "PaymentCollectorAmount",
		40: "CoinAddressReservedAmount",
		50: "GasFeederTriggerAmount",
		60: "GasFeedingAmount",
	}
	LimitationType_value = map[string]int32{
		"DefaultLimitationType":     0,
		"WithdrawAutoReview":        10,
		"UserBenefitHotAmount":      20,
		"PaymentCollectorAmount":    30,
		"CoinAddressReservedAmount": 40,
		"GasFeederTriggerAmount":    50,
		"GasFeedingAmount":          60,
	}
)

func (x LimitationType) Enum() *LimitationType {
	p := new(LimitationType)
	*p = x
	return p
}

func (x LimitationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LimitationType) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_account_mgr_v1_limitation_limitation_proto_enumTypes[0].Descriptor()
}

func (LimitationType) Type() protoreflect.EnumType {
	return &file_npool_account_mgr_v1_limitation_limitation_proto_enumTypes[0]
}

func (x LimitationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LimitationType.Descriptor instead.
func (LimitationType) EnumDescriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{0}
}

type LimitationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string         `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	CoinTypeID *string         `protobuf:"bytes,20,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	Limitation *LimitationType `protobuf:"varint,30,opt,name=Limitation,proto3,enum=account.manager.limitation.v1.LimitationType,oneof" json:"Limitation,omitempty"`
}

func (x *LimitationReq) Reset() {
	*x = LimitationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitationReq) ProtoMessage() {}

func (x *LimitationReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitationReq.ProtoReflect.Descriptor instead.
func (*LimitationReq) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{0}
}

func (x *LimitationReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *LimitationReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

func (x *LimitationReq) GetLimitation() LimitationType {
	if x != nil && x.Limitation != nil {
		return *x.Limitation
	}
	return LimitationType_DefaultLimitationType
}

type Limitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string         `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinTypeID string         `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	Limitation LimitationType `protobuf:"varint,30,opt,name=Limitation,proto3,enum=account.manager.limitation.v1.LimitationType" json:"Limitation,omitempty"`
	Amount     string         `protobuf:"bytes,40,opt,name=Amount,proto3" json:"Amount,omitempty"`
	CreatedAt  uint32         `protobuf:"varint,50,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *Limitation) Reset() {
	*x = Limitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limitation) ProtoMessage() {}

func (x *Limitation) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limitation.ProtoReflect.Descriptor instead.
func (*Limitation) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{1}
}

func (x *Limitation) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Limitation) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *Limitation) GetLimitation() LimitationType {
	if x != nil {
		return x.Limitation
	}
	return LimitationType_DefaultLimitationType
}

func (x *Limitation) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Limitation) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	CoinTypeID *npool.StringVal `protobuf:"bytes,20,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	Limitation *npool.Int32Val  `protobuf:"bytes,30,opt,name=Limitation,proto3,oneof" json:"Limitation,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

func (x *Conds) GetLimitation() *npool.Int32Val {
	if x != nil {
		return x.Limitation
	}
	return nil
}

type CreateLimitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LimitationReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLimitationRequest) Reset() {
	*x = CreateLimitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitationRequest) ProtoMessage() {}

func (x *CreateLimitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitationRequest.ProtoReflect.Descriptor instead.
func (*CreateLimitationRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLimitationRequest) GetInfo() *LimitationReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateLimitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Limitation `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLimitationResponse) Reset() {
	*x = CreateLimitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitationResponse) ProtoMessage() {}

func (x *CreateLimitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitationResponse.ProtoReflect.Descriptor instead.
func (*CreateLimitationResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLimitationResponse) GetInfo() *Limitation {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateLimitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*LimitationReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateLimitationsRequest) Reset() {
	*x = CreateLimitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitationsRequest) ProtoMessage() {}

func (x *CreateLimitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitationsRequest.ProtoReflect.Descriptor instead.
func (*CreateLimitationsRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLimitationsRequest) GetInfos() []*LimitationReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateLimitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Limitation `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateLimitationsResponse) Reset() {
	*x = CreateLimitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitationsResponse) ProtoMessage() {}

func (x *CreateLimitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitationsResponse.ProtoReflect.Descriptor instead.
func (*CreateLimitationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLimitationsResponse) GetInfos() []*Limitation {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateLimitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LimitationReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLimitationRequest) Reset() {
	*x = UpdateLimitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLimitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLimitationRequest) ProtoMessage() {}

func (x *UpdateLimitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLimitationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLimitationRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateLimitationRequest) GetInfo() *LimitationReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLimitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Limitation `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLimitationResponse) Reset() {
	*x = UpdateLimitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLimitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLimitationResponse) ProtoMessage() {}

func (x *UpdateLimitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLimitationResponse.ProtoReflect.Descriptor instead.
func (*UpdateLimitationResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLimitationResponse) GetInfo() *Limitation {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLimitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetLimitationRequest) Reset() {
	*x = GetLimitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationRequest) ProtoMessage() {}

func (x *GetLimitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationRequest.ProtoReflect.Descriptor instead.
func (*GetLimitationRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{9}
}

func (x *GetLimitationRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetLimitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Limitation `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLimitationResponse) Reset() {
	*x = GetLimitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationResponse) ProtoMessage() {}

func (x *GetLimitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationResponse.ProtoReflect.Descriptor instead.
func (*GetLimitationResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{10}
}

func (x *GetLimitationResponse) GetInfo() *Limitation {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetLimitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetLimitationsRequest) Reset() {
	*x = GetLimitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationsRequest) ProtoMessage() {}

func (x *GetLimitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationsRequest.ProtoReflect.Descriptor instead.
func (*GetLimitationsRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{11}
}

func (x *GetLimitationsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetLimitationsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLimitationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLimitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Limitation `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32        `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetLimitationsResponse) Reset() {
	*x = GetLimitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationsResponse) ProtoMessage() {}

func (x *GetLimitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationsResponse.ProtoReflect.Descriptor instead.
func (*GetLimitationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{12}
}

func (x *GetLimitationsResponse) GetInfos() []*Limitation {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetLimitationsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetLimitationOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetLimitationOnlyRequest) Reset() {
	*x = GetLimitationOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationOnlyRequest) ProtoMessage() {}

func (x *GetLimitationOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetLimitationOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{13}
}

func (x *GetLimitationOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetLimitationOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Limitation `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetLimitationOnlyResponse) Reset() {
	*x = GetLimitationOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitationOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitationOnlyResponse) ProtoMessage() {}

func (x *GetLimitationOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitationOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetLimitationOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{14}
}

func (x *GetLimitationOnlyResponse) GetInfo() *Limitation {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistLimitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistLimitationRequest) Reset() {
	*x = ExistLimitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLimitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLimitationRequest) ProtoMessage() {}

func (x *ExistLimitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLimitationRequest.ProtoReflect.Descriptor instead.
func (*ExistLimitationRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{15}
}

func (x *ExistLimitationRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistLimitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistLimitationResponse) Reset() {
	*x = ExistLimitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLimitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLimitationResponse) ProtoMessage() {}

func (x *ExistLimitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLimitationResponse.ProtoReflect.Descriptor instead.
func (*ExistLimitationResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{16}
}

func (x *ExistLimitationResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistLimitationCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistLimitationCondsRequest) Reset() {
	*x = ExistLimitationCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLimitationCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLimitationCondsRequest) ProtoMessage() {}

func (x *ExistLimitationCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLimitationCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistLimitationCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{17}
}

func (x *ExistLimitationCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistLimitationCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistLimitationCondsResponse) Reset() {
	*x = ExistLimitationCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistLimitationCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistLimitationCondsResponse) ProtoMessage() {}

func (x *ExistLimitationCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistLimitationCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistLimitationCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{18}
}

func (x *ExistLimitationCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountLimitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountLimitationsRequest) Reset() {
	*x = CountLimitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountLimitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountLimitationsRequest) ProtoMessage() {}

func (x *CountLimitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountLimitationsRequest.ProtoReflect.Descriptor instead.
func (*CountLimitationsRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{19}
}

func (x *CountLimitationsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountLimitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountLimitationsResponse) Reset() {
	*x = CountLimitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountLimitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountLimitationsResponse) ProtoMessage() {}

func (x *CountLimitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountLimitationsResponse.ProtoReflect.Descriptor instead.
func (*CountLimitationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{20}
}

func (x *CountLimitationsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteLimitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteLimitationRequest) Reset() {
	*x = DeleteLimitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLimitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLimitationRequest) ProtoMessage() {}

func (x *DeleteLimitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLimitationRequest.ProtoReflect.Descriptor instead.
func (*DeleteLimitationRequest) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteLimitationRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteLimitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Limitation `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteLimitationResponse) Reset() {
	*x = DeleteLimitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLimitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLimitationResponse) ProtoMessage() {}

func (x *DeleteLimitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLimitationResponse.ProtoReflect.Descriptor instead.
func (*DeleteLimitationResponse) Descriptor() ([]byte, []int) {
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteLimitationResponse) GetInfo() *Limitation {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_account_mgr_v1_limitation_limitation_proto protoreflect.FileDescriptor

var file_npool_account_mgr_v1_limitation_limitation_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a,
	0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x02, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x4d, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x38,
	0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x48, 0x02, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5c,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5b, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a,
	0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x32, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x18,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x2a, 0xca, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x48, 0x6f, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x10, 0x14, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x1e, 0x12, 0x1d,
	0x0a, 0x19, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x28, 0x12, 0x1a, 0x0a,
	0x16, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x64, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x32, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x3c, 0x32,
	0xd7, 0x0a, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x85, 0x01, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x37, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x82, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3a,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x67, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_account_mgr_v1_limitation_limitation_proto_rawDescOnce sync.Once
	file_npool_account_mgr_v1_limitation_limitation_proto_rawDescData = file_npool_account_mgr_v1_limitation_limitation_proto_rawDesc
)

func file_npool_account_mgr_v1_limitation_limitation_proto_rawDescGZIP() []byte {
	file_npool_account_mgr_v1_limitation_limitation_proto_rawDescOnce.Do(func() {
		file_npool_account_mgr_v1_limitation_limitation_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_account_mgr_v1_limitation_limitation_proto_rawDescData)
	})
	return file_npool_account_mgr_v1_limitation_limitation_proto_rawDescData
}

var file_npool_account_mgr_v1_limitation_limitation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_account_mgr_v1_limitation_limitation_proto_goTypes = []interface{}{
	(LimitationType)(0),                  // 0: account.manager.limitation.v1.LimitationType
	(*LimitationReq)(nil),                // 1: account.manager.limitation.v1.LimitationReq
	(*Limitation)(nil),                   // 2: account.manager.limitation.v1.Limitation
	(*Conds)(nil),                        // 3: account.manager.limitation.v1.Conds
	(*CreateLimitationRequest)(nil),      // 4: account.manager.limitation.v1.CreateLimitationRequest
	(*CreateLimitationResponse)(nil),     // 5: account.manager.limitation.v1.CreateLimitationResponse
	(*CreateLimitationsRequest)(nil),     // 6: account.manager.limitation.v1.CreateLimitationsRequest
	(*CreateLimitationsResponse)(nil),    // 7: account.manager.limitation.v1.CreateLimitationsResponse
	(*UpdateLimitationRequest)(nil),      // 8: account.manager.limitation.v1.UpdateLimitationRequest
	(*UpdateLimitationResponse)(nil),     // 9: account.manager.limitation.v1.UpdateLimitationResponse
	(*GetLimitationRequest)(nil),         // 10: account.manager.limitation.v1.GetLimitationRequest
	(*GetLimitationResponse)(nil),        // 11: account.manager.limitation.v1.GetLimitationResponse
	(*GetLimitationsRequest)(nil),        // 12: account.manager.limitation.v1.GetLimitationsRequest
	(*GetLimitationsResponse)(nil),       // 13: account.manager.limitation.v1.GetLimitationsResponse
	(*GetLimitationOnlyRequest)(nil),     // 14: account.manager.limitation.v1.GetLimitationOnlyRequest
	(*GetLimitationOnlyResponse)(nil),    // 15: account.manager.limitation.v1.GetLimitationOnlyResponse
	(*ExistLimitationRequest)(nil),       // 16: account.manager.limitation.v1.ExistLimitationRequest
	(*ExistLimitationResponse)(nil),      // 17: account.manager.limitation.v1.ExistLimitationResponse
	(*ExistLimitationCondsRequest)(nil),  // 18: account.manager.limitation.v1.ExistLimitationCondsRequest
	(*ExistLimitationCondsResponse)(nil), // 19: account.manager.limitation.v1.ExistLimitationCondsResponse
	(*CountLimitationsRequest)(nil),      // 20: account.manager.limitation.v1.CountLimitationsRequest
	(*CountLimitationsResponse)(nil),     // 21: account.manager.limitation.v1.CountLimitationsResponse
	(*DeleteLimitationRequest)(nil),      // 22: account.manager.limitation.v1.DeleteLimitationRequest
	(*DeleteLimitationResponse)(nil),     // 23: account.manager.limitation.v1.DeleteLimitationResponse
	(*npool.StringVal)(nil),              // 24: npool.v1.StringVal
	(*npool.Int32Val)(nil),               // 25: npool.v1.Int32Val
}
var file_npool_account_mgr_v1_limitation_limitation_proto_depIdxs = []int32{
	0,  // 0: account.manager.limitation.v1.LimitationReq.Limitation:type_name -> account.manager.limitation.v1.LimitationType
	0,  // 1: account.manager.limitation.v1.Limitation.Limitation:type_name -> account.manager.limitation.v1.LimitationType
	24, // 2: account.manager.limitation.v1.Conds.ID:type_name -> npool.v1.StringVal
	24, // 3: account.manager.limitation.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	25, // 4: account.manager.limitation.v1.Conds.Limitation:type_name -> npool.v1.Int32Val
	1,  // 5: account.manager.limitation.v1.CreateLimitationRequest.Info:type_name -> account.manager.limitation.v1.LimitationReq
	2,  // 6: account.manager.limitation.v1.CreateLimitationResponse.Info:type_name -> account.manager.limitation.v1.Limitation
	1,  // 7: account.manager.limitation.v1.CreateLimitationsRequest.Infos:type_name -> account.manager.limitation.v1.LimitationReq
	2,  // 8: account.manager.limitation.v1.CreateLimitationsResponse.Infos:type_name -> account.manager.limitation.v1.Limitation
	1,  // 9: account.manager.limitation.v1.UpdateLimitationRequest.Info:type_name -> account.manager.limitation.v1.LimitationReq
	2,  // 10: account.manager.limitation.v1.UpdateLimitationResponse.Info:type_name -> account.manager.limitation.v1.Limitation
	2,  // 11: account.manager.limitation.v1.GetLimitationResponse.Info:type_name -> account.manager.limitation.v1.Limitation
	3,  // 12: account.manager.limitation.v1.GetLimitationsRequest.Conds:type_name -> account.manager.limitation.v1.Conds
	2,  // 13: account.manager.limitation.v1.GetLimitationsResponse.Infos:type_name -> account.manager.limitation.v1.Limitation
	3,  // 14: account.manager.limitation.v1.GetLimitationOnlyRequest.Conds:type_name -> account.manager.limitation.v1.Conds
	2,  // 15: account.manager.limitation.v1.GetLimitationOnlyResponse.Info:type_name -> account.manager.limitation.v1.Limitation
	3,  // 16: account.manager.limitation.v1.ExistLimitationCondsRequest.Conds:type_name -> account.manager.limitation.v1.Conds
	3,  // 17: account.manager.limitation.v1.CountLimitationsRequest.Conds:type_name -> account.manager.limitation.v1.Conds
	2,  // 18: account.manager.limitation.v1.DeleteLimitationResponse.Info:type_name -> account.manager.limitation.v1.Limitation
	4,  // 19: account.manager.limitation.v1.Manager.CreateLimitation:input_type -> account.manager.limitation.v1.CreateLimitationRequest
	6,  // 20: account.manager.limitation.v1.Manager.CreateLimitations:input_type -> account.manager.limitation.v1.CreateLimitationsRequest
	8,  // 21: account.manager.limitation.v1.Manager.UpdateLimitation:input_type -> account.manager.limitation.v1.UpdateLimitationRequest
	10, // 22: account.manager.limitation.v1.Manager.GetLimitation:input_type -> account.manager.limitation.v1.GetLimitationRequest
	14, // 23: account.manager.limitation.v1.Manager.GetLimitationOnly:input_type -> account.manager.limitation.v1.GetLimitationOnlyRequest
	12, // 24: account.manager.limitation.v1.Manager.GetLimitations:input_type -> account.manager.limitation.v1.GetLimitationsRequest
	16, // 25: account.manager.limitation.v1.Manager.ExistLimitation:input_type -> account.manager.limitation.v1.ExistLimitationRequest
	18, // 26: account.manager.limitation.v1.Manager.ExistLimitationConds:input_type -> account.manager.limitation.v1.ExistLimitationCondsRequest
	20, // 27: account.manager.limitation.v1.Manager.CountLimitations:input_type -> account.manager.limitation.v1.CountLimitationsRequest
	22, // 28: account.manager.limitation.v1.Manager.DeleteLimitation:input_type -> account.manager.limitation.v1.DeleteLimitationRequest
	5,  // 29: account.manager.limitation.v1.Manager.CreateLimitation:output_type -> account.manager.limitation.v1.CreateLimitationResponse
	7,  // 30: account.manager.limitation.v1.Manager.CreateLimitations:output_type -> account.manager.limitation.v1.CreateLimitationsResponse
	9,  // 31: account.manager.limitation.v1.Manager.UpdateLimitation:output_type -> account.manager.limitation.v1.UpdateLimitationResponse
	11, // 32: account.manager.limitation.v1.Manager.GetLimitation:output_type -> account.manager.limitation.v1.GetLimitationResponse
	15, // 33: account.manager.limitation.v1.Manager.GetLimitationOnly:output_type -> account.manager.limitation.v1.GetLimitationOnlyResponse
	13, // 34: account.manager.limitation.v1.Manager.GetLimitations:output_type -> account.manager.limitation.v1.GetLimitationsResponse
	17, // 35: account.manager.limitation.v1.Manager.ExistLimitation:output_type -> account.manager.limitation.v1.ExistLimitationResponse
	19, // 36: account.manager.limitation.v1.Manager.ExistLimitationConds:output_type -> account.manager.limitation.v1.ExistLimitationCondsResponse
	21, // 37: account.manager.limitation.v1.Manager.CountLimitations:output_type -> account.manager.limitation.v1.CountLimitationsResponse
	23, // 38: account.manager.limitation.v1.Manager.DeleteLimitation:output_type -> account.manager.limitation.v1.DeleteLimitationResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_npool_account_mgr_v1_limitation_limitation_proto_init() }
func file_npool_account_mgr_v1_limitation_limitation_proto_init() {
	if File_npool_account_mgr_v1_limitation_limitation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLimitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLimitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitationOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLimitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLimitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLimitationCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistLimitationCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountLimitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountLimitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLimitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLimitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_account_mgr_v1_limitation_limitation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_account_mgr_v1_limitation_limitation_proto_goTypes,
		DependencyIndexes: file_npool_account_mgr_v1_limitation_limitation_proto_depIdxs,
		EnumInfos:         file_npool_account_mgr_v1_limitation_limitation_proto_enumTypes,
		MessageInfos:      file_npool_account_mgr_v1_limitation_limitation_proto_msgTypes,
	}.Build()
	File_npool_account_mgr_v1_limitation_limitation_proto = out.File
	file_npool_account_mgr_v1_limitation_limitation_proto_rawDesc = nil
	file_npool_account_mgr_v1_limitation_limitation_proto_goTypes = nil
	file_npool_account_mgr_v1_limitation_limitation_proto_depIdxs = nil
}
