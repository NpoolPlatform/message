syntax = "proto3";

package account.manager.limitation.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mgr/v1/limitation";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateLimitation     (CreateLimitationRequest)     returns (CreateLimitationResponse)     {}
    rpc CreateLimitations    (CreateLimitationsRequest)    returns (CreateLimitationsResponse)    {}
    rpc UpdateLimitation     (UpdateLimitationRequest)     returns (UpdateLimitationResponse)     {}
    rpc GetLimitation        (GetLimitationRequest)        returns (GetLimitationResponse)        {}
    rpc GetLimitationOnly    (GetLimitationOnlyRequest)    returns (GetLimitationOnlyResponse)    {}
    rpc GetLimitations       (GetLimitationsRequest)       returns (GetLimitationsResponse)       {}
    rpc ExistLimitation      (ExistLimitationRequest)      returns (ExistLimitationResponse)      {}
    rpc ExistLimitationConds (ExistLimitationCondsRequest) returns (ExistLimitationCondsResponse) {}
    rpc CountLimitations     (CountLimitationsRequest)     returns (CountLimitationsResponse)     {}
    rpc DeleteLimitation     (DeleteLimitationRequest)     returns (DeleteLimitationResponse)     {}
}

enum LimitationType {
    DefaultLimitationType       = 0;
    WithdrawAutoReview          = 10;
    UserBenefitHotAmount        = 20;
    PaymentCollectorAmount      = 30;
    CoinAddressReservedAmount   = 40;
    GasFeederTriggerAmount      = 50;
    GasFeedingAmount            = 60;
}

message LimitationReq {
    optional string         ID         = 10;
    optional string         CoinTypeID = 20;
    optional LimitationType Limitation = 30;
}

message Limitation {
    string         ID         = 10;
    string         CoinTypeID = 20;
    LimitationType Limitation = 30;
    string         Amount     = 40;
    uint32         CreatedAt  = 50;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal CoinTypeID = 20;
    optional npool.v1.Int32Val  Limitation = 30;
}


message CreateLimitationRequest {
    LimitationReq Info = 10;
}

message CreateLimitationResponse {
    Limitation Info = 10;
}

message CreateLimitationsRequest {
    repeated LimitationReq Infos = 10;
}

message CreateLimitationsResponse {
    repeated Limitation Infos = 10;
}

message UpdateLimitationRequest {
    LimitationReq Info = 10;
}

message UpdateLimitationResponse {
    Limitation Info = 10;
}

message GetLimitationRequest {
    string ID = 10;
}

message GetLimitationResponse {
    Limitation Info = 10;
}

message GetLimitationsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetLimitationsResponse {
    repeated Limitation Infos = 10;
    uint32              Total = 20;
}

message GetLimitationOnlyRequest {
    Conds Conds = 10;
}

message GetLimitationOnlyResponse {
    Limitation Info = 10;
}

message ExistLimitationRequest {
    string ID = 10;
}

message ExistLimitationResponse {
    bool Info = 10;
}

message ExistLimitationCondsRequest {
    Conds Conds = 10;
}

message ExistLimitationCondsResponse {
    bool Info = 10;
}

message CountLimitationsRequest {
    Conds Conds = 10;
}

message CountLimitationsResponse {
    uint32 Info = 10;
}

message DeleteLimitationRequest {
    string ID = 10;
}

message DeleteLimitationResponse {
    Limitation Info = 10;
}

