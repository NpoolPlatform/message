syntax = "proto3";

package account.manager.platform.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mgr/v1/platform";

import "npool/account/mgr/v1/account/account.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateAccount     (CreateAccountRequest)     returns (CreateAccountResponse)     {}
    rpc CreateAccounts    (CreateAccountsRequest)    returns (CreateAccountsResponse)    {}
    rpc UpdateAccount     (UpdateAccountRequest)     returns (UpdateAccountResponse)     {}
    rpc GetAccount        (GetAccountRequest)        returns (GetAccountResponse)        {}
    rpc GetAccountOnly    (GetAccountOnlyRequest)    returns (GetAccountOnlyResponse)    {}
    rpc GetAccounts       (GetAccountsRequest)       returns (GetAccountsResponse)       {}
    rpc ExistAccount      (ExistAccountRequest)      returns (ExistAccountResponse)      {}
    rpc ExistAccountConds (ExistAccountCondsRequest) returns (ExistAccountCondsResponse) {}
    rpc CountAccounts     (CountAccountsRequest)     returns (CountAccountsResponse)     {}
    rpc DeleteAccount     (DeleteAccountRequest)     returns (DeleteAccountResponse)     {}
}

message AccountReq {
    optional string         ID          = 10;
    optional string         CoinTypeID  = 20;
    // Only [UserBenefitHot, UserBenefitCold, PlatformBenefitCold, GasProvider, PaymentCollector]
    optional account.manager.account1.v1.AccountUsedFor UsedFor = 30;
    optional string         AccountID   = 40;
    optional bool           Backup      = 50;
}

message Account {
    string         ID          = 10;
    string         CoinTypeID  = 20;
    account.manager.account1.v1.AccountUsedFor UsedFor = 30;
    string         AccountID   = 40;
    bool           Backup      = 50;
    uint32         CreatedAt   = 60;
}

message Conds {
    optional npool.v1.StringVal ID          = 10;
    optional npool.v1.StringVal CoinTypeID  = 20;
    optional npool.v1.Int32Val  UsedFor     = 30;
    optional npool.v1.StringVal AccountID   = 40;
    optional npool.v1.BoolVal   Backup      = 50;
}


message CreateAccountRequest {
    AccountReq Info = 10;
}

message CreateAccountResponse {
    Account Info = 10;
}

message CreateAccountsRequest {
    repeated AccountReq Infos = 10;
}

message CreateAccountsResponse {
    repeated Account Infos = 10;
}

message UpdateAccountRequest {
    AccountReq Info = 10;
}

message UpdateAccountResponse {
    Account Info = 10;
}

message GetAccountRequest {
    string ID = 10;
}

message GetAccountResponse {
    Account Info = 10;
}

message GetAccountsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}

message GetAccountOnlyRequest {
    Conds Conds = 10;
}

message GetAccountOnlyResponse {
    Account Info = 10;
}

message ExistAccountRequest {
    string ID = 10;
}

message ExistAccountResponse {
    bool Info = 10;
}

message ExistAccountCondsRequest {
    Conds Conds = 10;
}

message ExistAccountCondsResponse {
    bool Info = 10;
}

message CountAccountsRequest {
    Conds Conds = 10;
}

message CountAccountsResponse {
    uint32 Info = 10;
}

message DeleteAccountRequest {
    string ID = 10;
}

message DeleteAccountResponse {
    Account Info = 10;
}

