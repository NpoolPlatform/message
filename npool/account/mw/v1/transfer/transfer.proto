syntax = "proto3";

package account.middleware.transfer.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mw/v1/transfer";

import "npool/npool.proto";

// Service Name
service Middleware {
  rpc CreateTransfer     (CreateTransferRequest)     returns (CreateTransferResponse)     {}
  rpc CreateTransfers    (CreateTransfersRequest)    returns (CreateTransfersResponse)    {}
  rpc GetTransfer        (GetTransferRequest)        returns (GetTransferResponse)        {}
  rpc GetTransferOnly    (GetTransferOnlyRequest)    returns (GetTransferOnlyResponse)    {}
  rpc GetTransfers       (GetTransfersRequest)       returns (GetTransfersResponse)       {}
  rpc ExistTransfer      (ExistTransferRequest)      returns (ExistTransferResponse)      {}
  rpc ExistTransferConds (ExistTransferCondsRequest) returns (ExistTransferCondsResponse) {}
  rpc DeleteTransfer     (DeleteTransferRequest)     returns (DeleteTransferResponse)     {}
}

message TransferReq {
  optional string ID           = 10;
  optional string AppID        = 20;
  optional string UserID       = 30;
  optional string TargetUserID = 40;
}

message Transfer {
  // @inject_tag: sql:"id"
  string ID           = 10;
  // @inject_tag: sql:"app_id"
  string AppID        = 20;
  // @inject_tag: sql:"user_id"
  string UserID       = 30;
  // @inject_tag: sql:"target_user_id"
  string TargetUserID = 40;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt    = 50;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt  = 60;
  // @inject_tag: sql:"deleted_at"
  uint32 DeletedAt  = 70;
}

message Conds {
  optional npool.v1.StringVal ID           = 10;
  optional npool.v1.StringVal AppID        = 20;
  optional npool.v1.StringVal UserID       = 30;
  optional npool.v1.StringVal TargetUserID = 40;
}

message CreateTransferRequest {
  TransferReq Info = 10;
}

message CreateTransferResponse {
  Transfer Info = 10;
}

message CreateTransfersRequest {
  repeated TransferReq Infos = 10;
}

message CreateTransfersResponse {
  repeated Transfer Infos = 10;
}

message GetTransferRequest {
  string ID = 10;
}

message GetTransferResponse {
  Transfer Info = 10;
}

message GetTransfersRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetTransfersResponse {
  repeated Transfer Infos = 10;
  uint32            Total = 20;
}

message GetTransferOnlyRequest {
  Conds Conds = 10;
}

message GetTransferOnlyResponse {
  Transfer Info = 10;
}

message ExistTransferRequest {
  string ID = 10;
}

message ExistTransferResponse {
  bool Info = 10;
}

message ExistTransferCondsRequest {
  Conds Conds = 10;
}

message ExistTransferCondsResponse {
  bool Info = 10;
}

message DeleteTransferRequest {
  TransferReq Info = 10;
}

message DeleteTransferResponse {
  Transfer Info = 10;
}
