syntax = "proto3";

package account.middleware.user.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mw/v1/user";

import "npool/basetypes/v1/accountusedfor.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateAccount     (CreateAccountRequest)     returns (CreateAccountResponse)     {}
    rpc UpdateAccount     (UpdateAccountRequest)     returns (UpdateAccountResponse)     {}
    rpc DeleteAccount     (DeleteAccountRequest)     returns (DeleteAccountResponse)     {}

    rpc GetAccount        (GetAccountRequest)        returns (GetAccountResponse)        {}
    rpc GetAccountOnly    (GetAccountOnlyRequest)    returns (GetAccountOnlyResponse)    {}
    rpc GetAccounts       (GetAccountsRequest)       returns (GetAccountsResponse)       {}
}

message AccountReq {
    optional string ID         = 10;
    optional string AppID      = 20;
    optional string UserID     = 30;
    optional string CoinTypeID = 40;
    optional string AccountID  = 50;
    optional string Address    = 60;
    // Only [UserWithdraw, UserDirectBenefit]
    optional basetypes.v1.AccountUsedFor UsedFor = 70;
    repeated string Labels     = 80;   // For withdraw and benefit address
    optional bool   Active     = 90;
    optional bool   Blocked    = 100;
    optional bool   Locked     = 110;
    optional string Memo       = 120;
}

message Account {
    // @inject_tag: sql:"id"
    string ID         = 10;
    // @inject_tag: sql:"app_id"
    string AppID      = 20;
    // @inject_tag: sql:"user_id"
    string UserID     = 30;
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID = 40;
    // @inject_tag: sql:"account_id"
    string AccountID  = 50;
    // @inject_tag: sql:"address"
    string Address    = 60;
    // @inject_tag: sql:"active"
    bool   Active     = 70;
    // @inject_tag: sql:"blocked"
    bool   Blocked    = 80;
    basetypes.v1.AccountUsedFor UsedFor = 90;
    // @inject_tag: sql:"used_for"
    string UsedForStr = 91;
    repeated string Labels = 100;
    // @inject_tag: sql:"labels"
    string LabelsStr  = 101;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 110;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 120;
    // @inject_tag: sql:"deleted_at"
    uint32 DeletedAt  = 130;
    // @inject_tag: sql:"memo"
    string Memo       = 140;
}

message Conds {
    optional basetypes.v1.StringVal ID         = 10;
    optional basetypes.v1.StringVal AppID      = 20;
    optional basetypes.v1.StringVal UserID     = 30;
    optional basetypes.v1.StringVal CoinTypeID = 40;
    optional basetypes.v1.StringVal AccountID  = 50;
    optional basetypes.v1.StringVal Address    = 60;
    optional basetypes.v1.BoolVal   Active     = 70;
    optional basetypes.v1.BoolVal   Blocked    = 80;
    optional basetypes.v1.Uint32Val UsedFor    = 90;
    optional basetypes.v1.StringSliceVal IDs   = 100;
    optional basetypes.v1.StringSliceVal AccountIDs = 110;
}


message CreateAccountRequest {
    AccountReq Info = 10;
}

message CreateAccountResponse {
    Account Info = 10;
}

message UpdateAccountRequest {
    AccountReq Info = 10;
}

message UpdateAccountResponse {
    Account Info = 10;
}

message DeleteAccountRequest {
    AccountReq Info = 10;
}

message DeleteAccountResponse {
    Account Info = 10;
}

message GetAccountRequest {
    string ID = 10;
}

message GetAccountResponse {
    Account Info = 10;
}

message GetAccountOnlyRequest {
    Conds Conds = 10;
}

message GetAccountOnlyResponse {
    Account Info = 10;
}

message GetAccountsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}
