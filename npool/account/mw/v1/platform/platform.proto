syntax = "proto3";

package account.middleware.platform.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mw/v1/platform";

import "npool/account/mgr/v1/account/account.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc CreateAccount     (CreateAccountRequest)     returns (CreateAccountResponse)     {}
    rpc UpdateAccount     (UpdateAccountRequest)     returns (UpdateAccountResponse)     {}

    rpc GetAccount        (GetAccountRequest)        returns (GetAccountResponse)        {}
    rpc GetAccounts       (GetAccountsRequest)       returns (GetAccountsResponse)       {}
}

message AccountReq {
    optional string         ID          = 10;
    optional string         CoinTypeID  = 20;
    // Only [UserBenefitHot, UserBenefitCold, PlatformBenefitCold, GasProvider, PaymentCollector]
    optional account.manager.account1.v1.AccountUsedFor UsedFor = 30;
    optional string         AccountID   = 40;
    optional string         Address     = 50;
    optional bool           Backup      = 60;
    optional bool           Active      = 70;
    optional bool           Locked      = 80;   // Locked when collecting
    optional account.manager.account1.v1.LockedBy LockedBy = 90;
    optional bool           Blocked     = 100;
}

message Account {
    // @inject_tag: sql:"id"
    string         ID          = 10;
    // @inject_tag: sql:"coin_type_id"
    string         CoinTypeID  = 20;
    account.manager.account1.v1.AccountUsedFor UsedFor  = 30;
    // @inject_tag: sql:"used_for"
    string         UsedForStr  = 31;
    // @inject_tag: sql:"account_id"
    string         AccountID   = 40;
    // @inject_tag: sql:"address"
    string         Address     = 50;
    // @inject_tag: sql:"backup"
    bool           Backup      = 60;
    // @inject_tag: sql:"active"
    bool           Active      = 70;
    // @inject_tag: sql:"locked"
    bool           Locked      = 80;
    account.manager.account1.v1.LockedBy       LockedBy = 90;
    // @inject_tag: sql:"locked_by"
    string         LockedByStr = 91;
    // @inject_tag: sql:"blocked"
    bool           Blocked     = 100;
    // @inject_tag: sql:"created_at"
    uint32         CreatedAt   = 110;
}

message Conds {
    optional npool.v1.StringVal ID          = 10;
    optional npool.v1.StringVal CoinTypeID  = 20;
    optional npool.v1.Int32Val  UsedFor     = 30;
    optional npool.v1.StringVal AccountID   = 40;
    optional npool.v1.BoolVal   Backup      = 50;
    optional npool.v1.BoolVal   Active      = 60;
    optional npool.v1.BoolVal   Locked      = 70;
    optional npool.v1.Int32Val  LockedBy    = 80;
    optional npool.v1.BoolVal   Blocked     = 90;
}


message CreateAccountRequest {
    AccountReq Info = 10;
}

message CreateAccountResponse {
    Account Info = 10;
}

message UpdateAccountRequest {
    AccountReq Info = 10;
}

message UpdateAccountResponse {
    Account Info = 10;
}

message GetAccountRequest {
    string ID = 10;
}

message GetAccountResponse {
    Account Info = 10;
}

message GetAccountsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}



