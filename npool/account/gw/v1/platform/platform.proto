syntax = "proto3";

package account.gateway.platform.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/gw/v1/platform";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/basetypes/v1/accountusedfor.proto";
import "npool/basetypes/v1/accountlockedby.proto";

// Service Name
service Gateway {
    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/create/platformaccount"
            body: "*"
        };
    }

    rpc UpdateAccount (UpdateAccountRequest) returns (UpdateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/update/platformaccount"
            body: "*"
        };
    }

    rpc GetAccounts (GetAccountsRequest) returns (GetAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/platformaccounts"
            body: "*"
        };
    }
}

message Account {
    string         ID            = 10;
    string         CoinTypeID    = 20;
    string         CoinName      = 30;
    string         CoinUnit      = 40;
    string         CoinEnv       = 50;
    string         CoinLogo      = 60;
    basetypes.v1.AccountUsedFor UsedFor  = 70;
    string         AccountID     = 80;
    string         Address       = 90;
    bool           Backup        = 100;
    bool           Active        = 110;
    bool           Locked        = 120;
    basetypes.v1.AccountLockedBy LockedBy = 130;
    bool           Blocked       = 140;
    uint32         CreatedAt     = 150;
}

message CreateAccountRequest {
    string          CoinTypeID  = 10;
    optional string Address     = 20;
    basetypes.v1.AccountUsedFor UsedFor = 30;
}

message CreateAccountResponse {
    Account Info = 10;
}

message UpdateAccountRequest {
    string        ID       = 10;
    optional bool Backup   = 20;
    optional bool Active   = 30;
    optional bool Blocked  = 40;
    optional bool Locked   = 50;
}

message UpdateAccountResponse {
    Account Info = 10;
}

message GetAccountsRequest {
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}



