syntax = "proto3";

package account.gateway.user.v1;

option go_package = "github.com/NpoolPlatform/message/npool/account/mw/v1/user";

import "npool/appuser/mgr/v2/signmethod/signmethod.proto";
import "npool/account/mgr/v1/account/account.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Gateway {
    rpc GetDepositAccount (GetDepositAccountRequest) returns (GetDepositAccountResponse) {
        option (google.api.http) = {
            post: "/v1/get/depositaccount"
            body: "*"
        };
    }

    rpc GetDepositAccounts (GetDepositAccountsRequest) returns (GetDepositAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/depositaccounts"
            body: "*"
        };
    }

    rpc GetAppDepositAccounts (GetAppDepositAccountsRequest) returns (GetAppDepositAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/depositaccounts"
            body: "*"
        };
    }

    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/create/useraccount"
            body: "*"
        };
    }

    rpc UpdateAccount (UpdateAccountRequest) returns (UpdateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/update/useraccount"
            body: "*"
        };
    }

    rpc DeleteAccount (DeleteAccountRequest) returns (DeleteAccountResponse) {
        option (google.api.http) = {
            post: "/v1/delete/useraccount"
            body: "*"
        };
    }

    rpc UpdateAppUserAccount (UpdateAppUserAccountRequest) returns (UpdateAppUserAccountResponse) {
        option (google.api.http) = {
            post: "/v1/update/app/user/useraccount"
            body: "*"
        };
    }

    rpc GetAccounts (GetAccountsRequest) returns (GetAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/useraccounts"
            body: "*"
        };
    }

    rpc GetAppAccounts (GetAppAccountsRequest) returns (GetAppAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/useraccounts"
            body: "*"
        };
    }

    rpc GetNAppAccounts (GetNAppAccountsRequest) returns (GetNAppAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/get/n/app/useraccounts"
            body: "*"
        };
    }
}

message Account {
    string ID         = 10;
    string AppID      = 20;
    string UserID     = 30;
    string CoinTypeID = 40;
    string CoinName   = 50;
    repeated string CoinDisplayNames = 51;
    string CoinUnit   = 60;
    string CoinEnv    = 70;
    string CoinLogo   = 80;
    string AccountID  = 90;
    string Address    = 100;
    // Only [UserWithdraw, UserDirectBenefit, UserDeposit]
    account.manager.account1.v1.AccountUsedFor UsedFor = 110;
    repeated string Labels = 120;
    uint32 CreatedAt       = 130;
    string PhoneNO         = 140;
    string EmailAddress    = 150;
    bool   Active          = 160;
    bool   Blocked         = 170;
}

message CreateAccountRequest {
    // Only could be withdraw or direct benefit address
    // Deposit address will be created by platform
    // Direct benefit address will be set with order
    string          AppID       = 10;
    string          UserID      = 20;
    string          CoinTypeID  = 30;
    string          Address     = 40;
    account.manager.account1.v1.AccountUsedFor UsedFor = 50;
    repeated string Labels      = 60;
    string          Account     = 70;
    appuser.manager.signmethod.v2.SignMethodType AccountType       = 80;
    string VerificationCode     = 90;
}

message GetDepositAccountRequest {
    string AppID       = 10;
    string UserID      = 20;
    string CoinTypeID  = 30;
}

message GetDepositAccountResponse {
    Account Info = 10;
}

message GetDepositAccountsRequest {
    string AppID   = 10;
    int32  Offset  = 20;
    int32  Limit   = 30;
}

message GetDepositAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}

message GetAppDepositAccountsRequest {
    string TargetAppID = 10;
    int32  Offset      = 20;
    int32  Limit       = 30;
}

message GetAppDepositAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}

message CreateAccountResponse {
    Account Info = 10;
}

message UpdateAccountRequest {
    string          ID     = 10;
    string          AppID  = 20;
    string          UserID = 30;
    repeated string Labels = 40;
}

message UpdateAccountResponse {
    Account Info = 10;
}

message DeleteAccountRequest {
    string ID     = 10;
    string AppID  = 20;
    string UserID = 30;
}

message DeleteAccountResponse {
    Account Info = 10;
}

message UpdateAppUserAccountRequest {
    string        ID           = 10;
    string        TargetAppID  = 20;
    string        TargetUserID = 30;
    optional bool Active       = 40;
    optional bool Blocked      = 50;
}

message UpdateAppUserAccountResponse {
    Account Info = 10;
}

message GetAccountsRequest {
    string AppID    = 10;
    string UserID   = 20;
    account.manager.account1.v1.AccountUsedFor UsedFor = 30;
    int32  Offset   = 40;
    int32  Limit    = 50;
}

message GetAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}

message GetAppAccountsRequest {
    string AppID    = 10;
    int32  Offset   = 20;
    int32  Limit    = 30;
}

message GetAppAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}

message GetNAppAccountsRequest {
    string TargetAppID = 10;
    int32  Offset      = 20;
    int32  Limit       = 30;
}

message GetNAppAccountsResponse {
    repeated Account Infos = 10;
    uint32           Total = 20;
}
