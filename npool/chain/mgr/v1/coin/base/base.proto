syntax = "proto3";

package chain.manager.coin.base.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mgr/v1/coin/base";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateCoinBase     (CreateCoinBaseRequest)     returns (CreateCoinBaseResponse)     {}
    rpc CreateCoinBases    (CreateCoinBasesRequest)    returns (CreateCoinBasesResponse)    {}
    rpc UpdateCoinBase     (UpdateCoinBaseRequest)     returns (UpdateCoinBaseResponse)        {}
    rpc GetCoinBase        (GetCoinBaseRequest)        returns (GetCoinBaseResponse)        {}
    rpc GetCoinBaseOnly    (GetCoinBaseOnlyRequest)    returns (GetCoinBaseOnlyResponse)    {}
    rpc GetCoinBases       (GetCoinBasesRequest)       returns (GetCoinBasesResponse)       {}
    rpc ExistCoinBase      (ExistCoinBaseRequest)      returns (ExistCoinBaseResponse)      {}
    rpc ExistCoinBaseConds (ExistCoinBaseCondsRequest) returns (ExistCoinBaseCondsResponse) {}
    rpc CountCoinBases     (CountCoinBasesRequest)     returns (CountCoinBasesResponse)     {}
    rpc DeleteCoinBase     (DeleteCoinBaseRequest)     returns (DeleteCoinBaseResponse)     {}
}

message CoinBaseReq {
    optional string    ID             = 10;
    optional string    Name           = 20;
    optional string    Logo           = 30;
    optional bool      Presale        = 40;
    optional string    Unit           = 50;
    optional string    ENV            = 60;
    optional string    ReservedAmount = 70;
    optional bool      ForPay         = 80;
}

message CoinBase {
    string ID             = 10;
    string Name           = 20;
    string Logo           = 30;
    bool   Presale        = 40;
    string Unit           = 50;
    string ENV            = 60;
    string ReservedAmount = 70;
    // Only platform coin can be for pay, then app can be for pay
    bool   ForPay         = 80;
    uint32 CreatedAt      = 90;
    uint32 UpdatedAt      = 100;
}

message Conds {
    optional npool.v1.StringVal ID       = 10;
    optional npool.v1.StringVal Name     = 20;
    optional npool.v1.StringVal ENV      = 30;
    optional npool.v1.BoolVal   Presale  = 40;
    optional npool.v1.BoolVal   ForPay   = 50;
}


message CreateCoinBaseRequest {
    CoinBaseReq Info = 10;
}

message CreateCoinBaseResponse {
    CoinBase Info = 10;
}

message CreateCoinBasesRequest {
    repeated CoinBaseReq Infos = 10;
}

message CreateCoinBasesResponse {
    repeated CoinBase Infos = 10;
}

message UpdateCoinBaseRequest {
    CoinBaseReq Info = 10;
}

message UpdateCoinBaseResponse {
    CoinBase Info = 10;
}

message GetCoinBaseRequest {
    string ID = 10;
}

message GetCoinBaseResponse {
    CoinBase Info = 10;
}

message GetCoinBasesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCoinBasesResponse {
    repeated CoinBase Infos = 10;
    uint32            Total = 20;
}

message GetCoinBaseOnlyRequest {
    Conds Conds = 10;
}

message GetCoinBaseOnlyResponse {
    CoinBase Info = 10;
}

message ExistCoinBaseRequest {
    string ID = 10;
}

message ExistCoinBaseResponse {
    bool Info = 10;
}

message ExistCoinBaseCondsRequest {
    Conds Conds = 10;
}

message ExistCoinBaseCondsResponse {
    bool Info = 10;
}

message CountCoinBasesRequest {
    Conds Conds = 10;
}

message CountCoinBasesResponse {
    uint32 Info = 10;
}

message DeleteCoinBaseRequest {
    string ID = 10;
}

message DeleteCoinBaseResponse {
    CoinBase Info = 10;
}

