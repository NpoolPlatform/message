syntax = "proto3";

package chain.manager.coin.currency.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mgr/v1/coin/currency";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateCurrency     (CreateCurrencyRequest)     returns (CreateCurrencyResponse)     {}
    rpc CreateCurrencies   (CreateCurrenciesRequest)   returns (CreateCurrenciesResponse)   {}
    rpc UpdateCurrency     (UpdateCurrencyRequest)     returns (UpdateCurrencyResponse)     {}
    rpc GetCurrency        (GetCurrencyRequest)        returns (GetCurrencyResponse)        {}
    rpc GetCurrencyOnly    (GetCurrencyOnlyRequest)    returns (GetCurrencyOnlyResponse)    {}
    rpc GetCurrencies      (GetCurrenciesRequest)      returns (GetCurrenciesResponse)      {}
    rpc ExistCurrency      (ExistCurrencyRequest)      returns (ExistCurrencyResponse)      {}
    rpc ExistCurrencyConds (ExistCurrencyCondsRequest) returns (ExistCurrencyCondsResponse) {}
    rpc CountCurrencies    (CountCurrenciesRequest)    returns (CountCurrenciesResponse)    {}
    rpc DeleteCurrency     (DeleteCurrencyRequest)     returns (DeleteCurrencyResponse)     {}
}

enum FeedType {
    DefaultFeedType   = 0;
    CoinGecko         = 10;
    CoinBase          = 20;
    StableUSDHardCode = 30;
}

message CurrencyReq {
    optional string    ID              = 10;
    optional string    CoinTypeID      = 20;
    optional FeedType  FeeType         = 30;
    optional string    MarketValueHigh = 40;
    optional string    MarketValueLow  = 50;
}

message Currency {
    string   ID                = 10;
    string   CoinTypeID        = 20;
    FeedType FeedType          = 30;
    string   MarketValueHigh   = 40;
    string   MarketValueLow    = 50;
    uint32   CreatedAt         = 60;
    uint32   UpdatedAt         = 70;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal CoinTypeID = 20;
    optional npool.v1.Uint32Val StartAt    = 30;
    optional npool.v1.Uint32Val EndAt      = 40;
    optional npool.v1.Int32Val  FeedType   = 50;
}


message CreateCurrencyRequest {
    CurrencyReq Info = 10;
}

message CreateCurrencyResponse {
    Currency Info = 10;
}

message CreateCurrenciesRequest {
    repeated CurrencyReq Infos = 10;
}

message CreateCurrenciesResponse {
    repeated Currency Infos = 10;
}

message UpdateCurrencyRequest {
    CurrencyReq Info = 10;
}

message UpdateCurrencyResponse {
    Currency Info = 10;
}

message GetCurrencyRequest {
    string ID = 10;
}

message GetCurrencyResponse {
    Currency Info = 10;
}

message GetCurrenciesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCurrenciesResponse {
    repeated Currency Infos = 10;
    uint32            Total = 20;
}

message GetCurrencyOnlyRequest {
    Conds Conds = 10;
}

message GetCurrencyOnlyResponse {
    Currency Info = 10;
}

message ExistCurrencyRequest {
    string ID = 10;
}

message ExistCurrencyResponse {
    bool Info = 10;
}

message ExistCurrencyCondsRequest {
    Conds Conds = 10;
}

message ExistCurrencyCondsResponse {
    bool Info = 10;
}

message CountCurrenciesRequest {
    Conds Conds = 10;
}

message CountCurrenciesResponse {
    uint32 Info = 10;
}

message DeleteCurrencyRequest {
    string ID = 10;
}

message DeleteCurrencyResponse {
    Currency Info = 10;
}

