syntax = "proto3";

package chain.manager.coin.fee.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mgr/v1/coin/fee";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateFee     (CreateFeeRequest)     returns (CreateFeeResponse)     {}
    rpc CreateFees    (CreateFeesRequest)    returns (CreateFeesResponse)    {}
    rpc AddFee        (AddFeeRequest)        returns (AddFeeResponse)        {}
    rpc GetFee        (GetFeeRequest)        returns (GetFeeResponse)        {}
    rpc GetFeeOnly    (GetFeeOnlyRequest)    returns (GetFeeOnlyResponse)    {}
    rpc GetFees       (GetFeesRequest)       returns (GetFeesResponse)       {}
    rpc ExistFee      (ExistFeeRequest)      returns (ExistFeeResponse)      {}
    rpc ExistFeeConds (ExistFeeCondsRequest) returns (ExistFeeCondsResponse) {}
    rpc CountFees     (CountFeesRequest)     returns (CountFeesResponse)     {}
    rpc DeleteFee     (DeleteFeeRequest)     returns (DeleteFeeResponse)     {}
}

message FeeReq {
    optional string    ID               = 10;
    optional string    CoinTypeID       = 20;
    optional string    FeeCoinTypeID    = 30;
    optional string    TxFeeAmount      = 40;
    optional string    CollectFeeAmount = 50;
    optional string    LowFeeAmount     = 60;
}

message Fee {
    string ID               = 10;
    string CoinTypeID       = 20;
    string FeeCoinTypeID    = 30;
    string TxFeeAmount      = 40;
    string CollectFeeAmount = 50;
    // Low than this value, we need to deposit gas
    string LowFeeAmount     = 60;
    uint32 CreatedAt        = 70;
    uint32 UpdatedAt        = 80;
}

message Conds {
    optional npool.v1.StringVal ID            = 10;
    optional npool.v1.StringVal CoinTypeID    = 20;
    optional npool.v1.StringVal FeeCoinTypeID = 30;
}


message CreateFeeRequest {
    FeeReq Info = 10;
}

message CreateFeeResponse {
    Fee Info = 10;
}

message CreateFeesRequest {
    repeated FeeReq Infos = 10;
}

message CreateFeesResponse {
    repeated Fee Infos = 10;
}

message AddFeeRequest {
    FeeReq Info = 10;
}

message AddFeeResponse {
    Fee Info = 10;
}

message GetFeeRequest {
    string ID = 10;
}

message GetFeeResponse {
    Fee Info = 10;
}

message GetFeesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetFeesResponse {
    repeated Fee Infos = 10;
    uint32       Total = 20;
}

message GetFeeOnlyRequest {
    Conds Conds = 10;
}

message GetFeeOnlyResponse {
    Fee Info = 10;
}

message ExistFeeRequest {
    string ID = 10;
}

message ExistFeeResponse {
    bool Info = 10;
}

message ExistFeeCondsRequest {
    Conds Conds = 10;
}

message ExistFeeCondsResponse {
    bool Info = 10;
}

message CountFeesRequest {
    Conds Conds = 10;
}

message CountFeesResponse {
    uint32 Info = 10;
}

message DeleteFeeRequest {
    string ID = 10;
}

message DeleteFeeResponse {
    Fee Info = 10;
}

