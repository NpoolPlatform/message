syntax = "proto3";

package chain.manager.coin.legalcurrency.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mgr/v1/coin/legalcurrency";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateLegalCurrency     (CreateLegalCurrencyRequest)     returns (CreateLegalCurrencyResponse)     {}
    rpc CreateLegalCurrencies   (CreateLegalCurrenciesRequest)   returns (CreateLegalCurrenciesResponse)   {}
    rpc UpdateLegalCurrency     (UpdateLegalCurrencyRequest)     returns (UpdateLegalCurrencyResponse)     {}
    rpc GetLegalCurrency        (GetLegalCurrencyRequest)        returns (GetLegalCurrencyResponse)        {}
    rpc GetLegalCurrencyOnly    (GetLegalCurrencyOnlyRequest)    returns (GetLegalCurrencyOnlyResponse)    {}
    rpc GetLegalCurrencies      (GetLegalCurrenciesRequest)      returns (GetLegalCurrenciesResponse)      {}
    rpc ExistLegalCurrency      (ExistLegalCurrencyRequest)      returns (ExistLegalCurrencyResponse)      {}
    rpc ExistLegalCurrencyConds (ExistLegalCurrencyCondsRequest) returns (ExistLegalCurrencyCondsResponse) {}
    rpc CountLegalCurrencies    (CountLegalCurrenciesRequest)    returns (CountLegalCurrenciesResponse)    {}
    rpc DeleteLegalCurrency     (DeleteLegalCurrencyRequest)     returns (DeleteLegalCurrencyResponse)     {}
}

enum FeedType {
    DefaultFeedType   = 0;
    CoinGecko         = 10;
    CoinBase          = 20;
    StableUSDHardCode = 30;
}

message LegalCurrencyReq {
    optional string    ID              = 10;
    optional string    CoinTypeID      = 20;
    optional FeedType  FeedType        = 30;
    optional string    MarketValueHigh = 40;
    optional string    MarketValueLow  = 50;
}

message LegalCurrency {
    string   ID                = 10;
    string   CoinTypeID        = 20;
    FeedType FeedType          = 30;
    string   MarketValueHigh   = 40;
    string   MarketValueLow    = 50;
    uint32   CreatedAt         = 60;
    uint32   UpdatedAt         = 70;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal CoinTypeID = 20;
    optional npool.v1.Uint32Val StartAt    = 30;
    optional npool.v1.Uint32Val EndAt      = 40;
    optional npool.v1.Int32Val  FeedType   = 50;
}


message CreateLegalCurrencyRequest {
    LegalCurrencyReq Info = 10;
}

message CreateLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message CreateLegalCurrenciesRequest {
    repeated LegalCurrencyReq Infos = 10;
}

message CreateLegalCurrenciesResponse {
    repeated LegalCurrency Infos = 10;
}

message UpdateLegalCurrencyRequest {
    LegalCurrencyReq Info = 10;
}

message UpdateLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message GetLegalCurrencyRequest {
    string ID = 10;
}

message GetLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message GetLegalCurrenciesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetLegalCurrenciesResponse {
    repeated LegalCurrency Infos = 10;
    uint32            Total = 20;
}

message GetLegalCurrencyOnlyRequest {
    Conds Conds = 10;
}

message GetLegalCurrencyOnlyResponse {
    LegalCurrency Info = 10;
}

message ExistLegalCurrencyRequest {
    string ID = 10;
}

message ExistLegalCurrencyResponse {
    bool Info = 10;
}

message ExistLegalCurrencyCondsRequest {
    Conds Conds = 10;
}

message ExistLegalCurrencyCondsResponse {
    bool Info = 10;
}

message CountLegalCurrenciesRequest {
    Conds Conds = 10;
}

message CountLegalCurrenciesResponse {
    uint32 Info = 10;
}

message DeleteLegalCurrencyRequest {
    string ID = 10;
}

message DeleteLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

