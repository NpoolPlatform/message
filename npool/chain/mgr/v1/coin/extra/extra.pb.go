// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/chain/mgr/v1/coin/extra/extra.proto

package extra

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoinExtraReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	CoinTypeID *string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	HomePage   *string `protobuf:"bytes,30,opt,name=HomePage,proto3,oneof" json:"HomePage,omitempty"`
	Specs      *string `protobuf:"bytes,40,opt,name=Specs,proto3,oneof" json:"Specs,omitempty"`
}

func (x *CoinExtraReq) Reset() {
	*x = CoinExtraReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinExtraReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinExtraReq) ProtoMessage() {}

func (x *CoinExtraReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinExtraReq.ProtoReflect.Descriptor instead.
func (*CoinExtraReq) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{0}
}

func (x *CoinExtraReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *CoinExtraReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

func (x *CoinExtraReq) GetHomePage() string {
	if x != nil && x.HomePage != nil {
		return *x.HomePage
	}
	return ""
}

func (x *CoinExtraReq) GetSpecs() string {
	if x != nil && x.Specs != nil {
		return *x.Specs
	}
	return ""
}

type CoinExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinTypeID string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	HomePage   string `protobuf:"bytes,30,opt,name=HomePage,proto3" json:"HomePage,omitempty"`
	Specs      string `protobuf:"bytes,40,opt,name=Specs,proto3" json:"Specs,omitempty"`
	CreatedAt  uint32 `protobuf:"varint,50,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  uint32 `protobuf:"varint,60,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *CoinExtra) Reset() {
	*x = CoinExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinExtra) ProtoMessage() {}

func (x *CoinExtra) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinExtra.ProtoReflect.Descriptor instead.
func (*CoinExtra) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{1}
}

func (x *CoinExtra) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinExtra) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinExtra) GetHomePage() string {
	if x != nil {
		return x.HomePage
	}
	return ""
}

func (x *CoinExtra) GetSpecs() string {
	if x != nil {
		return x.Specs
	}
	return ""
}

func (x *CoinExtra) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CoinExtra) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *npool.StringVal `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	CoinTypeID *npool.StringVal `protobuf:"bytes,20,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *npool.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

type CreateCoinExtraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtraReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinExtraRequest) Reset() {
	*x = CreateCoinExtraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinExtraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinExtraRequest) ProtoMessage() {}

func (x *CreateCoinExtraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinExtraRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinExtraRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCoinExtraRequest) GetInfo() *CoinExtraReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinExtraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtra `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinExtraResponse) Reset() {
	*x = CreateCoinExtraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinExtraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinExtraResponse) ProtoMessage() {}

func (x *CreateCoinExtraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinExtraResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinExtraResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCoinExtraResponse) GetInfo() *CoinExtra {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinExtrasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinExtraReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateCoinExtrasRequest) Reset() {
	*x = CreateCoinExtrasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinExtrasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinExtrasRequest) ProtoMessage() {}

func (x *CreateCoinExtrasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinExtrasRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinExtrasRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCoinExtrasRequest) GetInfos() []*CoinExtraReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateCoinExtrasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinExtra `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateCoinExtrasResponse) Reset() {
	*x = CreateCoinExtrasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinExtrasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinExtrasResponse) ProtoMessage() {}

func (x *CreateCoinExtrasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinExtrasResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinExtrasResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCoinExtrasResponse) GetInfos() []*CoinExtra {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateCoinExtraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtraReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinExtraRequest) Reset() {
	*x = UpdateCoinExtraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinExtraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinExtraRequest) ProtoMessage() {}

func (x *UpdateCoinExtraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinExtraRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoinExtraRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCoinExtraRequest) GetInfo() *CoinExtraReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinExtraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtra `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinExtraResponse) Reset() {
	*x = UpdateCoinExtraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinExtraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinExtraResponse) ProtoMessage() {}

func (x *UpdateCoinExtraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinExtraResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoinExtraResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCoinExtraResponse) GetInfo() *CoinExtra {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinExtraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinExtraRequest) Reset() {
	*x = GetCoinExtraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtraRequest) ProtoMessage() {}

func (x *GetCoinExtraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtraRequest.ProtoReflect.Descriptor instead.
func (*GetCoinExtraRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{9}
}

func (x *GetCoinExtraRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinExtraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtra `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinExtraResponse) Reset() {
	*x = GetCoinExtraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtraResponse) ProtoMessage() {}

func (x *GetCoinExtraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtraResponse.ProtoReflect.Descriptor instead.
func (*GetCoinExtraResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{10}
}

func (x *GetCoinExtraResponse) GetInfo() *CoinExtra {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinExtrasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetCoinExtrasRequest) Reset() {
	*x = GetCoinExtrasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtrasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtrasRequest) ProtoMessage() {}

func (x *GetCoinExtrasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtrasRequest.ProtoReflect.Descriptor instead.
func (*GetCoinExtrasRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{11}
}

func (x *GetCoinExtrasRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetCoinExtrasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCoinExtrasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCoinExtrasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinExtra `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetCoinExtrasResponse) Reset() {
	*x = GetCoinExtrasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtrasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtrasResponse) ProtoMessage() {}

func (x *GetCoinExtrasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtrasResponse.ProtoReflect.Descriptor instead.
func (*GetCoinExtrasResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{12}
}

func (x *GetCoinExtrasResponse) GetInfos() []*CoinExtra {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetCoinExtrasResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCoinExtraOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetCoinExtraOnlyRequest) Reset() {
	*x = GetCoinExtraOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtraOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtraOnlyRequest) ProtoMessage() {}

func (x *GetCoinExtraOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtraOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetCoinExtraOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{13}
}

func (x *GetCoinExtraOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetCoinExtraOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtra `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinExtraOnlyResponse) Reset() {
	*x = GetCoinExtraOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinExtraOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinExtraOnlyResponse) ProtoMessage() {}

func (x *GetCoinExtraOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinExtraOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetCoinExtraOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{14}
}

func (x *GetCoinExtraOnlyResponse) GetInfo() *CoinExtra {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistCoinExtraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistCoinExtraRequest) Reset() {
	*x = ExistCoinExtraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinExtraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinExtraRequest) ProtoMessage() {}

func (x *ExistCoinExtraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinExtraRequest.ProtoReflect.Descriptor instead.
func (*ExistCoinExtraRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{15}
}

func (x *ExistCoinExtraRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistCoinExtraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistCoinExtraResponse) Reset() {
	*x = ExistCoinExtraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinExtraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinExtraResponse) ProtoMessage() {}

func (x *ExistCoinExtraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinExtraResponse.ProtoReflect.Descriptor instead.
func (*ExistCoinExtraResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{16}
}

func (x *ExistCoinExtraResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistCoinExtraCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistCoinExtraCondsRequest) Reset() {
	*x = ExistCoinExtraCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinExtraCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinExtraCondsRequest) ProtoMessage() {}

func (x *ExistCoinExtraCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinExtraCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistCoinExtraCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{17}
}

func (x *ExistCoinExtraCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistCoinExtraCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistCoinExtraCondsResponse) Reset() {
	*x = ExistCoinExtraCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinExtraCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinExtraCondsResponse) ProtoMessage() {}

func (x *ExistCoinExtraCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinExtraCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistCoinExtraCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{18}
}

func (x *ExistCoinExtraCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountCoinExtrasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountCoinExtrasRequest) Reset() {
	*x = CountCoinExtrasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCoinExtrasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCoinExtrasRequest) ProtoMessage() {}

func (x *CountCoinExtrasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCoinExtrasRequest.ProtoReflect.Descriptor instead.
func (*CountCoinExtrasRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{19}
}

func (x *CountCoinExtrasRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountCoinExtrasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountCoinExtrasResponse) Reset() {
	*x = CountCoinExtrasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCoinExtrasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCoinExtrasResponse) ProtoMessage() {}

func (x *CountCoinExtrasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCoinExtrasResponse.ProtoReflect.Descriptor instead.
func (*CountCoinExtrasResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{20}
}

func (x *CountCoinExtrasResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteCoinExtraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteCoinExtraRequest) Reset() {
	*x = DeleteCoinExtraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinExtraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinExtraRequest) ProtoMessage() {}

func (x *DeleteCoinExtraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinExtraRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoinExtraRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteCoinExtraRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteCoinExtraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinExtra `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteCoinExtraResponse) Reset() {
	*x = DeleteCoinExtraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinExtraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinExtraResponse) ProtoMessage() {}

func (x *DeleteCoinExtraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinExtraResponse.ProtoReflect.Descriptor instead.
func (*DeleteCoinExtraResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteCoinExtraResponse) GetInfo() *CoinExtra {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_chain_mgr_v1_coin_extra_extra_proto protoreflect.FileDescriptor

var file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x67,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x69,
	0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x73, 0x22, 0xa9, 0x01, 0x0a,
	0x09, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6b, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x53, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x2c, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56,
	0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x16, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2d, 0x0a,
	0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x8c, 0x0a,
	0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x33, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x34,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x30, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8a, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12,
	0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x67, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescOnce sync.Once
	file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescData = file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDesc
)

func file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescGZIP() []byte {
	file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescOnce.Do(func() {
		file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescData)
	})
	return file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDescData
}

var file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_chain_mgr_v1_coin_extra_extra_proto_goTypes = []interface{}{
	(*CoinExtraReq)(nil),                // 0: chain.manager.coin.extra.v1.CoinExtraReq
	(*CoinExtra)(nil),                   // 1: chain.manager.coin.extra.v1.CoinExtra
	(*Conds)(nil),                       // 2: chain.manager.coin.extra.v1.Conds
	(*CreateCoinExtraRequest)(nil),      // 3: chain.manager.coin.extra.v1.CreateCoinExtraRequest
	(*CreateCoinExtraResponse)(nil),     // 4: chain.manager.coin.extra.v1.CreateCoinExtraResponse
	(*CreateCoinExtrasRequest)(nil),     // 5: chain.manager.coin.extra.v1.CreateCoinExtrasRequest
	(*CreateCoinExtrasResponse)(nil),    // 6: chain.manager.coin.extra.v1.CreateCoinExtrasResponse
	(*UpdateCoinExtraRequest)(nil),      // 7: chain.manager.coin.extra.v1.UpdateCoinExtraRequest
	(*UpdateCoinExtraResponse)(nil),     // 8: chain.manager.coin.extra.v1.UpdateCoinExtraResponse
	(*GetCoinExtraRequest)(nil),         // 9: chain.manager.coin.extra.v1.GetCoinExtraRequest
	(*GetCoinExtraResponse)(nil),        // 10: chain.manager.coin.extra.v1.GetCoinExtraResponse
	(*GetCoinExtrasRequest)(nil),        // 11: chain.manager.coin.extra.v1.GetCoinExtrasRequest
	(*GetCoinExtrasResponse)(nil),       // 12: chain.manager.coin.extra.v1.GetCoinExtrasResponse
	(*GetCoinExtraOnlyRequest)(nil),     // 13: chain.manager.coin.extra.v1.GetCoinExtraOnlyRequest
	(*GetCoinExtraOnlyResponse)(nil),    // 14: chain.manager.coin.extra.v1.GetCoinExtraOnlyResponse
	(*ExistCoinExtraRequest)(nil),       // 15: chain.manager.coin.extra.v1.ExistCoinExtraRequest
	(*ExistCoinExtraResponse)(nil),      // 16: chain.manager.coin.extra.v1.ExistCoinExtraResponse
	(*ExistCoinExtraCondsRequest)(nil),  // 17: chain.manager.coin.extra.v1.ExistCoinExtraCondsRequest
	(*ExistCoinExtraCondsResponse)(nil), // 18: chain.manager.coin.extra.v1.ExistCoinExtraCondsResponse
	(*CountCoinExtrasRequest)(nil),      // 19: chain.manager.coin.extra.v1.CountCoinExtrasRequest
	(*CountCoinExtrasResponse)(nil),     // 20: chain.manager.coin.extra.v1.CountCoinExtrasResponse
	(*DeleteCoinExtraRequest)(nil),      // 21: chain.manager.coin.extra.v1.DeleteCoinExtraRequest
	(*DeleteCoinExtraResponse)(nil),     // 22: chain.manager.coin.extra.v1.DeleteCoinExtraResponse
	(*npool.StringVal)(nil),             // 23: npool.v1.StringVal
}
var file_npool_chain_mgr_v1_coin_extra_extra_proto_depIdxs = []int32{
	23, // 0: chain.manager.coin.extra.v1.Conds.ID:type_name -> npool.v1.StringVal
	23, // 1: chain.manager.coin.extra.v1.Conds.CoinTypeID:type_name -> npool.v1.StringVal
	0,  // 2: chain.manager.coin.extra.v1.CreateCoinExtraRequest.Info:type_name -> chain.manager.coin.extra.v1.CoinExtraReq
	1,  // 3: chain.manager.coin.extra.v1.CreateCoinExtraResponse.Info:type_name -> chain.manager.coin.extra.v1.CoinExtra
	0,  // 4: chain.manager.coin.extra.v1.CreateCoinExtrasRequest.Infos:type_name -> chain.manager.coin.extra.v1.CoinExtraReq
	1,  // 5: chain.manager.coin.extra.v1.CreateCoinExtrasResponse.Infos:type_name -> chain.manager.coin.extra.v1.CoinExtra
	0,  // 6: chain.manager.coin.extra.v1.UpdateCoinExtraRequest.Info:type_name -> chain.manager.coin.extra.v1.CoinExtraReq
	1,  // 7: chain.manager.coin.extra.v1.UpdateCoinExtraResponse.Info:type_name -> chain.manager.coin.extra.v1.CoinExtra
	1,  // 8: chain.manager.coin.extra.v1.GetCoinExtraResponse.Info:type_name -> chain.manager.coin.extra.v1.CoinExtra
	2,  // 9: chain.manager.coin.extra.v1.GetCoinExtrasRequest.Conds:type_name -> chain.manager.coin.extra.v1.Conds
	1,  // 10: chain.manager.coin.extra.v1.GetCoinExtrasResponse.Infos:type_name -> chain.manager.coin.extra.v1.CoinExtra
	2,  // 11: chain.manager.coin.extra.v1.GetCoinExtraOnlyRequest.Conds:type_name -> chain.manager.coin.extra.v1.Conds
	1,  // 12: chain.manager.coin.extra.v1.GetCoinExtraOnlyResponse.Info:type_name -> chain.manager.coin.extra.v1.CoinExtra
	2,  // 13: chain.manager.coin.extra.v1.ExistCoinExtraCondsRequest.Conds:type_name -> chain.manager.coin.extra.v1.Conds
	2,  // 14: chain.manager.coin.extra.v1.CountCoinExtrasRequest.Conds:type_name -> chain.manager.coin.extra.v1.Conds
	1,  // 15: chain.manager.coin.extra.v1.DeleteCoinExtraResponse.Info:type_name -> chain.manager.coin.extra.v1.CoinExtra
	3,  // 16: chain.manager.coin.extra.v1.Manager.CreateCoinExtra:input_type -> chain.manager.coin.extra.v1.CreateCoinExtraRequest
	5,  // 17: chain.manager.coin.extra.v1.Manager.CreateCoinExtras:input_type -> chain.manager.coin.extra.v1.CreateCoinExtrasRequest
	7,  // 18: chain.manager.coin.extra.v1.Manager.UpdateCoinExtra:input_type -> chain.manager.coin.extra.v1.UpdateCoinExtraRequest
	9,  // 19: chain.manager.coin.extra.v1.Manager.GetCoinExtra:input_type -> chain.manager.coin.extra.v1.GetCoinExtraRequest
	13, // 20: chain.manager.coin.extra.v1.Manager.GetCoinExtraOnly:input_type -> chain.manager.coin.extra.v1.GetCoinExtraOnlyRequest
	11, // 21: chain.manager.coin.extra.v1.Manager.GetCoinExtras:input_type -> chain.manager.coin.extra.v1.GetCoinExtrasRequest
	15, // 22: chain.manager.coin.extra.v1.Manager.ExistCoinExtra:input_type -> chain.manager.coin.extra.v1.ExistCoinExtraRequest
	17, // 23: chain.manager.coin.extra.v1.Manager.ExistCoinExtraConds:input_type -> chain.manager.coin.extra.v1.ExistCoinExtraCondsRequest
	19, // 24: chain.manager.coin.extra.v1.Manager.CountCoinExtras:input_type -> chain.manager.coin.extra.v1.CountCoinExtrasRequest
	21, // 25: chain.manager.coin.extra.v1.Manager.DeleteCoinExtra:input_type -> chain.manager.coin.extra.v1.DeleteCoinExtraRequest
	4,  // 26: chain.manager.coin.extra.v1.Manager.CreateCoinExtra:output_type -> chain.manager.coin.extra.v1.CreateCoinExtraResponse
	6,  // 27: chain.manager.coin.extra.v1.Manager.CreateCoinExtras:output_type -> chain.manager.coin.extra.v1.CreateCoinExtrasResponse
	8,  // 28: chain.manager.coin.extra.v1.Manager.UpdateCoinExtra:output_type -> chain.manager.coin.extra.v1.UpdateCoinExtraResponse
	10, // 29: chain.manager.coin.extra.v1.Manager.GetCoinExtra:output_type -> chain.manager.coin.extra.v1.GetCoinExtraResponse
	14, // 30: chain.manager.coin.extra.v1.Manager.GetCoinExtraOnly:output_type -> chain.manager.coin.extra.v1.GetCoinExtraOnlyResponse
	12, // 31: chain.manager.coin.extra.v1.Manager.GetCoinExtras:output_type -> chain.manager.coin.extra.v1.GetCoinExtrasResponse
	16, // 32: chain.manager.coin.extra.v1.Manager.ExistCoinExtra:output_type -> chain.manager.coin.extra.v1.ExistCoinExtraResponse
	18, // 33: chain.manager.coin.extra.v1.Manager.ExistCoinExtraConds:output_type -> chain.manager.coin.extra.v1.ExistCoinExtraCondsResponse
	20, // 34: chain.manager.coin.extra.v1.Manager.CountCoinExtras:output_type -> chain.manager.coin.extra.v1.CountCoinExtrasResponse
	22, // 35: chain.manager.coin.extra.v1.Manager.DeleteCoinExtra:output_type -> chain.manager.coin.extra.v1.DeleteCoinExtraResponse
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_npool_chain_mgr_v1_coin_extra_extra_proto_init() }
func file_npool_chain_mgr_v1_coin_extra_extra_proto_init() {
	if File_npool_chain_mgr_v1_coin_extra_extra_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinExtraReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinExtraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinExtraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinExtrasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinExtrasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinExtraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinExtraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtrasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtrasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtraOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinExtraOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinExtraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinExtraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinExtraCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinExtraCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCoinExtrasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCoinExtrasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinExtraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinExtraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_chain_mgr_v1_coin_extra_extra_proto_goTypes,
		DependencyIndexes: file_npool_chain_mgr_v1_coin_extra_extra_proto_depIdxs,
		MessageInfos:      file_npool_chain_mgr_v1_coin_extra_extra_proto_msgTypes,
	}.Build()
	File_npool_chain_mgr_v1_coin_extra_extra_proto = out.File
	file_npool_chain_mgr_v1_coin_extra_extra_proto_rawDesc = nil
	file_npool_chain_mgr_v1_coin_extra_extra_proto_goTypes = nil
	file_npool_chain_mgr_v1_coin_extra_extra_proto_depIdxs = nil
}
