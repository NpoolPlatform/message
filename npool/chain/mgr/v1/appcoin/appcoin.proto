syntax = "proto3";

package chain.manager.appcoin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mgr/v1/appcoin";

import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Manager {
    rpc CreateAppCoin     (CreateAppCoinRequest)     returns (CreateAppCoinResponse)     {}
    rpc CreateAppCoins    (CreateAppCoinsRequest)    returns (CreateAppCoinsResponse)    {}
    rpc UpdateAppCoin     (UpdateAppCoinRequest)     returns (UpdateAppCoinResponse)     {}
    rpc GetAppCoin        (GetAppCoinRequest)        returns (GetAppCoinResponse)        {}
    rpc GetAppCoinOnly    (GetAppCoinOnlyRequest)    returns (GetAppCoinOnlyResponse)    {}
    rpc GetAppCoins       (GetAppCoinsRequest)       returns (GetAppCoinsResponse)       {}
    rpc ExistAppCoin      (ExistAppCoinRequest)      returns (ExistAppCoinResponse)      {}
    rpc ExistAppCoinConds (ExistAppCoinCondsRequest) returns (ExistAppCoinCondsResponse) {}
    rpc CountAppCoins     (CountAppCoinsRequest)     returns (CountAppCoinsResponse)     {}
    rpc DeleteAppCoin     (DeleteAppCoinRequest)     returns (DeleteAppCoinResponse)     {}
}

message AppCoinReq {
    optional string    ID                       = 10;
    optional string    AppID                    = 20;
    optional string    CoinTypeID               = 30;
    optional string    Name                     = 40;
    optional string    Logo                     = 50;
    optional bool      ForPay                   = 60;
    optional string    WithdrawAutoReviewAmount = 70;
}

message AppCoin {
    string ID                       = 10;
    string AppID                    = 20;
    string CoinTypeID               = 30;
    string Name                     = 40;
    string Logo                     = 50;
    bool   ForPay                   = 60;
    string WithdrawAutoReviewAmount = 70;
    uint32 CreatedAt                = 80;
    uint32 UpdatedAt                = 90;
}

message Conds {
    optional npool.v1.StringVal ID         = 10;
    optional npool.v1.StringVal AppID      = 20;
    optional npool.v1.StringVal CoinTypeID = 30;
    optional npool.v1.BoolVal   ForPay     = 40;
}


message CreateAppCoinRequest {
    AppCoinReq Info = 10;
}

message CreateAppCoinResponse {
    AppCoin Info = 10;
}

message CreateAppCoinsRequest {
    repeated AppCoinReq Infos = 10;
}

message CreateAppCoinsResponse {
    repeated AppCoin Infos = 10;
}

message UpdateAppCoinRequest {
    AppCoinReq Info = 10;
}

message UpdateAppCoinResponse {
    AppCoin Info = 10;
}

message GetAppCoinRequest {
    string ID = 10;
}

message GetAppCoinResponse {
    AppCoin Info = 10;
}

message GetAppCoinsRequest {
    Conds Conds = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetAppCoinsResponse {
    repeated AppCoin Infos = 10;
    uint32           Total = 20;
}

message GetAppCoinOnlyRequest {
    Conds Conds = 10;
}

message GetAppCoinOnlyResponse {
    AppCoin Info = 10;
}

message ExistAppCoinRequest {
    string ID = 10;
}

message ExistAppCoinResponse {
    bool Info = 10;
}

message ExistAppCoinCondsRequest {
    Conds Conds = 10;
}

message ExistAppCoinCondsResponse {
    bool Info = 10;
}

message CountAppCoinsRequest {
    Conds Conds = 10;
}

message CountAppCoinsResponse {
    uint32 Info = 10;
}

message DeleteAppCoinRequest {
    string ID = 10;
}

message DeleteAppCoinResponse {
    AppCoin Info = 10;
}

