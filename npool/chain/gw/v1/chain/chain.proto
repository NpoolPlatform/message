syntax = "proto3";

package chain.gateway.chain.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/gw/v1/chain";

import "npool/chain/mw/v1/chain/chain.proto";
import "google/api/annotations.proto";
import "npool/basetypes/v1/gastype.proto";

// Service Name
service Gateway {
  rpc GetChains(GetChainsRequest) returns (GetChainsResponse) {
    option (google.api.http) = {
      post : "/v1/get/chains"
      body : "*"
    };
  }

  // admin
  rpc AdminCreateChain(AdminCreateChainRequest) returns (AdminCreateChainResponse) {
    option (google.api.http) = {
      post : "/v1/admin/create/chain"
      body : "*"
    };
  }
  rpc AdminUpdateChain(AdminUpdateChainRequest) returns (AdminUpdateChainResponse) {
    option (google.api.http) = {
      post : "/v1/admin/update/chain"
      body : "*"
    };
  }
}

message GetChainsRequest {
  int32 Offset = 10;
  int32 Limit = 20;
}

message GetChainsResponse {
  repeated .chain.middleware.chain.v1.Chain Infos = 10;
  uint32 Total = 20;
}

message AdminCreateChainRequest {
  string ChainType = 10;
  optional string Logo = 20;
  optional string ChainID = 30;
  string NativeUnit = 40;
  string AtomicUnit = 50;
  uint32 UnitExp = 60;
  optional string NickName = 70;
  basetypes.v1.GasType GasType = 80;
  string ENV = 90;
}

message AdminCreateChainResponse { .chain.middleware.chain.v1.Chain Info = 10; }

message AdminUpdateChainRequest {
  uint32 ID = 10;
  string EntID = 20;
  optional string ChainType = 30;
  optional string Logo = 40;
  optional string ChainID = 50;
  optional string NativeUnit = 60;
  optional string AtomicUnit = 70;
  optional uint32 UnitExp = 80;
  optional string NickName = 90;
  optional basetypes.v1.GasType GasType = 100;
  optional string ENV = 110;
}

message AdminUpdateChainResponse { .chain.middleware.chain.v1.Chain Info = 10; }
