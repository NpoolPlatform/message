// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/chain/gw/v1/coin/fiatcurrency/fiatcurrency.proto

package fiatcurrency

import (
	_ "github.com/NpoolPlatform/message/npool"
	"github.com/NpoolPlatform/message/npool/chain/mgr/v1/fiatcurrencytype"
	"github.com/NpoolPlatform/message/npool/chain/mw/v1/fiatcurrency"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCoinFiatCurrenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiatCurrencyTypeIDs []string `protobuf:"bytes,10,rep,name=FiatCurrencyTypeIDs,proto3" json:"FiatCurrencyTypeIDs,omitempty"`
	CoinTypeIDs         []string `protobuf:"bytes,20,rep,name=CoinTypeIDs,proto3" json:"CoinTypeIDs,omitempty"`
}

func (x *GetCoinFiatCurrenciesRequest) Reset() {
	*x = GetCoinFiatCurrenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinFiatCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinFiatCurrenciesRequest) ProtoMessage() {}

func (x *GetCoinFiatCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinFiatCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetCoinFiatCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{0}
}

func (x *GetCoinFiatCurrenciesRequest) GetFiatCurrencyTypeIDs() []string {
	if x != nil {
		return x.FiatCurrencyTypeIDs
	}
	return nil
}

func (x *GetCoinFiatCurrenciesRequest) GetCoinTypeIDs() []string {
	if x != nil {
		return x.CoinTypeIDs
	}
	return nil
}

type GetCoinFiatCurrenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*fiatcurrency.FiatCurrency `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetCoinFiatCurrenciesResponse) Reset() {
	*x = GetCoinFiatCurrenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinFiatCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinFiatCurrenciesResponse) ProtoMessage() {}

func (x *GetCoinFiatCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinFiatCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCoinFiatCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{1}
}

func (x *GetCoinFiatCurrenciesResponse) GetInfos() []*fiatcurrency.FiatCurrency {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetHistoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiatCurrencyTypeID *string `protobuf:"bytes,10,opt,name=FiatCurrencyTypeID,proto3,oneof" json:"FiatCurrencyTypeID,omitempty"`
	Offset             int32   `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit              int32   `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
	StartAt            *uint32 `protobuf:"varint,40,opt,name=StartAt,proto3,oneof" json:"StartAt,omitempty"`
	EndAt              *uint32 `protobuf:"varint,50,opt,name=EndAt,proto3,oneof" json:"EndAt,omitempty"`
}

func (x *GetHistoriesRequest) Reset() {
	*x = GetHistoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoriesRequest) ProtoMessage() {}

func (x *GetHistoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoriesRequest.ProtoReflect.Descriptor instead.
func (*GetHistoriesRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{2}
}

func (x *GetHistoriesRequest) GetFiatCurrencyTypeID() string {
	if x != nil && x.FiatCurrencyTypeID != nil {
		return *x.FiatCurrencyTypeID
	}
	return ""
}

func (x *GetHistoriesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetHistoriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetHistoriesRequest) GetStartAt() uint32 {
	if x != nil && x.StartAt != nil {
		return *x.StartAt
	}
	return 0
}

func (x *GetHistoriesRequest) GetEndAt() uint32 {
	if x != nil && x.EndAt != nil {
		return *x.EndAt
	}
	return 0
}

type GetHistoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*fiatcurrency.FiatCurrency `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                       `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetHistoriesResponse) Reset() {
	*x = GetHistoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoriesResponse) ProtoMessage() {}

func (x *GetHistoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoriesResponse.ProtoReflect.Descriptor instead.
func (*GetHistoriesResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{3}
}

func (x *GetHistoriesResponse) GetInfos() []*fiatcurrency.FiatCurrency {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetHistoriesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFiatCurrencyTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetFiatCurrencyTypesRequest) Reset() {
	*x = GetFiatCurrencyTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiatCurrencyTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiatCurrencyTypesRequest) ProtoMessage() {}

func (x *GetFiatCurrencyTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiatCurrencyTypesRequest.ProtoReflect.Descriptor instead.
func (*GetFiatCurrencyTypesRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{4}
}

func (x *GetFiatCurrencyTypesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetFiatCurrencyTypesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetFiatCurrencyTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*fiatcurrencytype.FiatCurrencyType `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32                               `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetFiatCurrencyTypesResponse) Reset() {
	*x = GetFiatCurrencyTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiatCurrencyTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiatCurrencyTypesResponse) ProtoMessage() {}

func (x *GetFiatCurrencyTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiatCurrencyTypesResponse.ProtoReflect.Descriptor instead.
func (*GetFiatCurrencyTypesResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{5}
}

func (x *GetFiatCurrencyTypesResponse) GetInfos() []*fiatcurrencytype.FiatCurrencyType {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetFiatCurrencyTypesResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateFiatCurrencyTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,10,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *CreateFiatCurrencyTypeRequest) Reset() {
	*x = CreateFiatCurrencyTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFiatCurrencyTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFiatCurrencyTypeRequest) ProtoMessage() {}

func (x *CreateFiatCurrencyTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFiatCurrencyTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateFiatCurrencyTypeRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFiatCurrencyTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateFiatCurrencyTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *fiatcurrencytype.FiatCurrencyType `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateFiatCurrencyTypeResponse) Reset() {
	*x = CreateFiatCurrencyTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFiatCurrencyTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFiatCurrencyTypeResponse) ProtoMessage() {}

func (x *CreateFiatCurrencyTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFiatCurrencyTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateFiatCurrencyTypeResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFiatCurrencyTypeResponse) GetInfo() *fiatcurrencytype.FiatCurrencyType {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateFiatCurrencyTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UpdateFiatCurrencyTypeRequest) Reset() {
	*x = UpdateFiatCurrencyTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFiatCurrencyTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFiatCurrencyTypeRequest) ProtoMessage() {}

func (x *UpdateFiatCurrencyTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFiatCurrencyTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateFiatCurrencyTypeRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFiatCurrencyTypeRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateFiatCurrencyTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateFiatCurrencyTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *fiatcurrencytype.FiatCurrencyType `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateFiatCurrencyTypeResponse) Reset() {
	*x = UpdateFiatCurrencyTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFiatCurrencyTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFiatCurrencyTypeResponse) ProtoMessage() {}

func (x *UpdateFiatCurrencyTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFiatCurrencyTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateFiatCurrencyTypeResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFiatCurrencyTypeResponse) GetInfo() *fiatcurrencytype.FiatCurrencyType {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto protoreflect.FileDescriptor

var file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDesc = []byte{
	0x0a, 0x36, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61,
	0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x77, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x6d, 0x67, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x66,
	0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x66, 0x61, 0x69, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x22, 0x6a, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x12, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x46, 0x69,
	0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1d, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x02, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x84,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x1e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x6e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xc7, 0x07, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xc3, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x40, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61,
	0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e,
	0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x3a, 0x01,
	0x2a, 0x12, 0x9f, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xbf, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xc7, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x41, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x69, 0x61, 0x74,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x01, 0x2a, 0x12,
	0xc7, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescOnce sync.Once
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescData = file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDesc
)

func file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescGZIP() []byte {
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescOnce.Do(func() {
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescData)
	})
	return file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDescData
}

var file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_goTypes = []interface{}{
	(*GetCoinFiatCurrenciesRequest)(nil),      // 0: chain.gateway.coin.fiatcurrency.v1.GetCoinFiatCurrenciesRequest
	(*GetCoinFiatCurrenciesResponse)(nil),     // 1: chain.gateway.coin.fiatcurrency.v1.GetCoinFiatCurrenciesResponse
	(*GetHistoriesRequest)(nil),               // 2: chain.gateway.coin.fiatcurrency.v1.GetHistoriesRequest
	(*GetHistoriesResponse)(nil),              // 3: chain.gateway.coin.fiatcurrency.v1.GetHistoriesResponse
	(*GetFiatCurrencyTypesRequest)(nil),       // 4: chain.gateway.coin.fiatcurrency.v1.GetFiatCurrencyTypesRequest
	(*GetFiatCurrencyTypesResponse)(nil),      // 5: chain.gateway.coin.fiatcurrency.v1.GetFiatCurrencyTypesResponse
	(*CreateFiatCurrencyTypeRequest)(nil),     // 6: chain.gateway.coin.fiatcurrency.v1.CreateFiatCurrencyTypeRequest
	(*CreateFiatCurrencyTypeResponse)(nil),    // 7: chain.gateway.coin.fiatcurrency.v1.CreateFiatCurrencyTypeResponse
	(*UpdateFiatCurrencyTypeRequest)(nil),     // 8: chain.gateway.coin.fiatcurrency.v1.UpdateFiatCurrencyTypeRequest
	(*UpdateFiatCurrencyTypeResponse)(nil),    // 9: chain.gateway.coin.fiatcurrency.v1.UpdateFiatCurrencyTypeResponse
	(*fiatcurrency.FiatCurrency)(nil),         // 10: chain.middleware.coin.fiatcurrency.v1.FiatCurrency
	(*fiatcurrencytype.FiatCurrencyType)(nil), // 11: chain.manager.coin.fiatcurrencytype.v1.FiatCurrencyType
}
var file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_depIdxs = []int32{
	10, // 0: chain.gateway.coin.fiatcurrency.v1.GetCoinFiatCurrenciesResponse.Infos:type_name -> chain.middleware.coin.fiatcurrency.v1.FiatCurrency
	10, // 1: chain.gateway.coin.fiatcurrency.v1.GetHistoriesResponse.Infos:type_name -> chain.middleware.coin.fiatcurrency.v1.FiatCurrency
	11, // 2: chain.gateway.coin.fiatcurrency.v1.GetFiatCurrencyTypesResponse.Infos:type_name -> chain.manager.coin.fiatcurrencytype.v1.FiatCurrencyType
	11, // 3: chain.gateway.coin.fiatcurrency.v1.CreateFiatCurrencyTypeResponse.Info:type_name -> chain.manager.coin.fiatcurrencytype.v1.FiatCurrencyType
	11, // 4: chain.gateway.coin.fiatcurrency.v1.UpdateFiatCurrencyTypeResponse.Info:type_name -> chain.manager.coin.fiatcurrencytype.v1.FiatCurrencyType
	0,  // 5: chain.gateway.coin.fiatcurrency.v1.Gateway.GetCoinFiatCurrencies:input_type -> chain.gateway.coin.fiatcurrency.v1.GetCoinFiatCurrenciesRequest
	2,  // 6: chain.gateway.coin.fiatcurrency.v1.Gateway.GetHistories:input_type -> chain.gateway.coin.fiatcurrency.v1.GetHistoriesRequest
	4,  // 7: chain.gateway.coin.fiatcurrency.v1.Gateway.GetFiatCurrencyTypes:input_type -> chain.gateway.coin.fiatcurrency.v1.GetFiatCurrencyTypesRequest
	6,  // 8: chain.gateway.coin.fiatcurrency.v1.Gateway.CreateFiatCurrencyType:input_type -> chain.gateway.coin.fiatcurrency.v1.CreateFiatCurrencyTypeRequest
	8,  // 9: chain.gateway.coin.fiatcurrency.v1.Gateway.UpdateFiatCurrencyType:input_type -> chain.gateway.coin.fiatcurrency.v1.UpdateFiatCurrencyTypeRequest
	1,  // 10: chain.gateway.coin.fiatcurrency.v1.Gateway.GetCoinFiatCurrencies:output_type -> chain.gateway.coin.fiatcurrency.v1.GetCoinFiatCurrenciesResponse
	3,  // 11: chain.gateway.coin.fiatcurrency.v1.Gateway.GetHistories:output_type -> chain.gateway.coin.fiatcurrency.v1.GetHistoriesResponse
	5,  // 12: chain.gateway.coin.fiatcurrency.v1.Gateway.GetFiatCurrencyTypes:output_type -> chain.gateway.coin.fiatcurrency.v1.GetFiatCurrencyTypesResponse
	7,  // 13: chain.gateway.coin.fiatcurrency.v1.Gateway.CreateFiatCurrencyType:output_type -> chain.gateway.coin.fiatcurrency.v1.CreateFiatCurrencyTypeResponse
	9,  // 14: chain.gateway.coin.fiatcurrency.v1.Gateway.UpdateFiatCurrencyType:output_type -> chain.gateway.coin.fiatcurrency.v1.UpdateFiatCurrencyTypeResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_init() }
func file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_init() {
	if File_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinFiatCurrenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinFiatCurrenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFiatCurrencyTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFiatCurrencyTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFiatCurrencyTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFiatCurrencyTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFiatCurrencyTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFiatCurrencyTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_goTypes,
		DependencyIndexes: file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_depIdxs,
		MessageInfos:      file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_msgTypes,
	}.Build()
	File_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto = out.File
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_rawDesc = nil
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_goTypes = nil
	file_npool_chain_gw_v1_coin_fiatcurrency_fiatcurrency_proto_depIdxs = nil
}
