syntax = "proto3";

package chain.gateway.app.coin.description.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/gw/v1/app/coin/description";

import "google/api/annotations.proto";
import "npool/basetypes/v1/usedfor.proto";
import "npool/chain/mw/v1/app/coin/description/description.proto";

// Service Name
service Gateway {
    rpc CreateCoinDescription (CreateCoinDescriptionRequest) returns (CreateCoinDescriptionResponse) {
        option (google.api.http) = {
            post: "/v1/create/coindescription"
            body: "*"
        };
    }
    rpc CreateAppCoinDescription (CreateAppCoinDescriptionRequest) returns (CreateAppCoinDescriptionResponse) {
        option (google.api.http) = {
            post: "/v1/create/app/coindescription"
            body: "*"
        };
    }
    rpc GetCoinDescriptions (GetCoinDescriptionsRequest) returns (GetCoinDescriptionsResponse) {
        option (google.api.http) = {
            post: "/v1/get/coindescriptions"
            body: "*"
        };
    }
    rpc GetAppCoinDescriptions (GetAppCoinDescriptionsRequest) returns (GetAppCoinDescriptionsResponse) {
        option (google.api.http) = {
            post: "/v1/get/app/coindescriptions"
            body: "*"
        };
    }
    rpc UpdateCoinDescription (UpdateCoinDescriptionRequest) returns (UpdateCoinDescriptionResponse) {
        option (google.api.http) = {
            post: "/v1/update/coindescription"
            body: "*"
        };
    }
}

message CreateCoinDescriptionRequest {
    string AppID                 = 10;
    string CoinTypeID            = 20;
    basetypes.v1.UsedFor UsedFor = 30;
    string Title                 = 40;
    string Message               = 50;
}

message CreateCoinDescriptionResponse {
    chain.middleware.app.coin.description.v1.CoinDescription Info = 10;
}

message CreateAppCoinDescriptionRequest {
    string TargetAppID           = 10;
    string CoinTypeID            = 20;
    basetypes.v1.UsedFor UsedFor = 30;
    string Title                 = 40;
    string Message               = 50;
}

message CreateAppCoinDescriptionResponse {
    chain.middleware.app.coin.description.v1.CoinDescription Info = 10;
}

message UpdateCoinDescriptionRequest {
    uint32          ID      = 10;
    string          AppID   = 20;
    optional string Title   = 30;
    optional string Message = 40;
}

message UpdateCoinDescriptionResponse {
    chain.middleware.app.coin.description.v1.CoinDescription Info = 10;
}

message GetCoinDescriptionsRequest {
    string AppID  = 10;
    int32  Offset = 20;
    int32  Limit  = 30;
}

message GetCoinDescriptionsResponse {
    repeated chain.middleware.app.coin.description.v1.CoinDescription Infos = 10;
    uint32                                                            Total = 20;
}

message GetAppCoinDescriptionsRequest {
    string TargetAppID  = 10;
    int32  Offset       = 20;
    int32  Limit        = 30;
}

message GetAppCoinDescriptionsResponse {
    repeated chain.middleware.app.coin.description.v1.CoinDescription Infos = 10;
    uint32                                                            Total = 20;
}

