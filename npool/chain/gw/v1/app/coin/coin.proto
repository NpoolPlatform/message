syntax = "proto3";

package chain.gateway.app.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/gw/v1/app/coin";

import "google/api/annotations.proto";

// Service Name
service Gateway {
  rpc CreateCoin(CreateCoinRequest) returns (CreateCoinResponse) {
    option (google.api.http) = {
      post : "/v1/create/appcoin"
      body : "*"
    };
  }
  rpc GetCoins(GetCoinsRequest) returns (GetCoinsResponse) {
    option (google.api.http) = {
      post : "/v1/get/appcoins"
      body : "*"
    };
  }
  rpc GetAppCoins(GetAppCoinsRequest) returns (GetAppCoinsResponse) {
    option (google.api.http) = {
      post : "/v1/get/n/appcoins"
      body : "*"
    };
  }
  rpc UpdateCoin(UpdateCoinRequest) returns (UpdateCoinResponse) {
    option (google.api.http) = {
      post : "/v1/update/appcoin"
      body : "*"
    };
  }
  rpc DeleteCoin(DeleteCoinRequest) returns (DeleteCoinResponse) {
    option (google.api.http) = {
      post : "/v1/delete/appcoin"
      body : "*"
    };
  }
}

message Coin {
  uint32 ID = 9;
  string EntID = 10;
  string AppID = 20;
  string CoinTypeID = 30;
  string Name = 40;
  string CoinName = 41;
  repeated string DisplayNames = 43;
  string Logo = 50;
  string Unit = 60;
  bool Presale = 70;
  string ReservedAmount = 80;
  bool ForPay = 90;
  string ProductPage = 91;
  bool CoinForPay = 92;
  string ENV = 100;
  string HomePage = 110;
  string Specs = 120;
  bool StableUSD = 101;
  string FeeCoinTypeID = 130;
  string FeeCoinName = 140;
  string FeeCoinLogo = 150;
  string FeeCoinUnit = 160;
  string FeeCoinENV = 170;
  bool WithdrawFeeByStableUSD = 180;
  string WithdrawFeeAmount = 190;
  string CollectFeeAmount = 200;
  string HotWalletFeeAmount = 210;
  string LowFeeAmount = 220;
  string HotWalletAccountAmount = 230;
  string PaymentAccountCollectAmount = 240;
  string WithdrawAutoReviewAmount = 250;
  string MarketValue = 260;
  string SettleValue = 270;
  uint32 SettlePercent = 280;
  string SettleTipsStr = 281;
  repeated string SettleTips = 282;
  string Setter = 290;
  bool Disabled = 300;
  bool CoinDisabled = 310;
  uint32 CreatedAt = 320;
  uint32 UpdatedAt = 330;
  bool Display = 350;
  uint32 DisplayIndex = 360;
  string MaxAmountPerWithdraw = 370;
  string LeastTransferAmount = 380;
  optional string DefaultGoodID = 400;
  bool NeedMemo = 410;
  bool RefreshCurrency = 420;
}

message CreateCoinRequest {
  string TargetAppID = 10;
  string CoinTypeID = 20;
}

message CreateCoinResponse { Coin Info = 10; }

message GetCoinsRequest {
  string AppID = 10;
  optional bool ForPay = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinsResponse {
  repeated Coin Infos = 10;
  uint32 Total = 20;
}

message GetAppCoinsRequest {
  string TargetAppID = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetAppCoinsResponse {
  repeated Coin Infos = 10;
  uint32 Total = 20;
}

message UpdateCoinRequest {
  uint32 ID = 10;
  string AppID = 20;
  optional string Name = 50;
  repeated string DisplayNames = 51;
  optional string Logo = 60;
  optional bool ForPay = 70;
  optional string WithdrawAutoReviewAmount = 80;
  optional string MarketValue = 90;
  optional uint32 SettlePercent = 100;
  repeated string SettleTips = 101;
  optional string ProductPage = 120;
  optional bool Disabled = 130;
  optional bool Display = 140;
  optional uint32 DisplayIndex = 150;
  optional string MaxAmountPerWithdraw = 160;
}

message UpdateCoinResponse { Coin Info = 10; }

message DeleteCoinRequest {
  uint32 ID = 10;
  string TargetAppID = 20;
}

message DeleteCoinResponse { Coin Info = 10; }
