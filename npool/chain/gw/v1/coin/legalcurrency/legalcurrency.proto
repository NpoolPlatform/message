syntax = "proto3";

package chain.gateway.coin.legalcurrency.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/gw/v1/coin/legalcurrency";

import "google/api/annotations.proto";
import "npool/npool.proto";
import "npool/chain/mw/v1/coin/legalcurrency/legalcurrency.proto";

// Service Name
service Gateway {
    rpc GetLegalCurrencies (GetLegalCurrenciesRequest) returns (GetLegalCurrenciesResponse) {
        option (google.api.http) = {
            post: "/v1/get/legalcurrencies"
            body: "*"
        };
    }
    rpc GetCoinLegalCurrencies (GetCoinLegalCurrenciesRequest) returns (GetCoinLegalCurrenciesResponse) {
        option (google.api.http) = {
            post: "/v1/get/coinlegalcurrencies"
            body: "*"
        };
    }
    rpc GetHistories (GetHistoriesRequest) returns (GetHistoriesResponse) {
        option (google.api.http) = {
            post: "/v1/get/histories"
            body: "*"
        };
    }
}

message GetLegalCurrenciesRequest {
    int32 Offset = 10;
    int32 Limit  = 20;
}

message GetLegalCurrenciesResponse {
    repeated chain.middleware.coin.legalcurrency.v1.LegalCurrency Infos = 10;
    uint32                                                          Total = 20;
}

message GetCoinLegalCurrenciesRequest {
    string CoinTypeID = 10;
}

message GetCoinLegalCurrenciesResponse {
    chain.middleware.coin.legalcurrency.v1.LegalCurrency Info = 10;
}

message GetHistoriesRequest {
    optional string CoinTypeID = 10;
    int32           Offset     = 20;
    int32           Limit      = 30;
    optional uint32 StartAt    = 40;
    optional uint32 EndAt      = 50;
}

message GetHistoriesResponse {
    repeated chain.middleware.coin.legalcurrency.v1.LegalCurrency Infos = 10;
    uint32                                                          Total = 20;
}
