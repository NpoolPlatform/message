{
  "swagger": "2.0",
  "info": {
    "title": "npool/chain/gw/v1/coin/currency/currency.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Gateway"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/get/coincurrencies": {
      "post": {
        "operationId": "Gateway_GetCurrencies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrenciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrenciesRequest"
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/v1/get/coincurrency": {
      "post": {
        "operationId": "Gateway_GetCurrency",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
<<<<<<< HEAD
<<<<<<< HEAD
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrencyResponse"
=======
              "$ref": "#/definitions/v1GetHistoriesResponse"
>>>>>>> Add currency history
=======
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrencyResponse"
>>>>>>> Refactor gw proto
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
<<<<<<< HEAD
<<<<<<< HEAD
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrencyRequest"
=======
              "$ref": "#/definitions/v1GetHistoriesRequest"
>>>>>>> Add currency history
=======
              "$ref": "#/definitions/chaingatewaycoincurrencyv1GetCurrencyRequest"
>>>>>>> Refactor gw proto
            }
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    }
  },
  "definitions": {
    "chaingatewaycoincurrencyv1GetCurrenciesRequest": {
      "type": "object",
      "properties": {
        "CoinTypeIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "chaingatewaycoincurrencyv1GetCurrenciesResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
<<<<<<< HEAD
<<<<<<< HEAD
            "$ref": "#/definitions/v1Currency"
=======
            "$ref": "#/definitions/chainmiddlewarecoincurrencyv1Currency"
>>>>>>> Add chain meta
=======
            "$ref": "#/definitions/v1Currency"
>>>>>>> Add currency history
          }
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
<<<<<<< HEAD
<<<<<<< HEAD
    "chaingatewaycoincurrencyv1GetCurrencyRequest": {
=======
    "protobufAny": {
>>>>>>> Add currency history
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
<<<<<<< HEAD
=======
    "chaingatewaycoincurrencyv1GetCurrencyRequest": {
      "type": "object",
      "properties": {
        "CoinTypeID": {
          "type": "string"
        }
      }
    },
>>>>>>> Refactor gw proto
    "chaingatewaycoincurrencyv1GetCurrencyResponse": {
      "type": "object",
      "properties": {
        "Info": {
          "$ref": "#/definitions/v1Currency"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        },
        "Total": {
          "type": "integer",
          "format": "int64"
>>>>>>> Refactor gw proto
=======
>>>>>>> Remove total from get currency
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
=======
    "rpcStatus": {
      "type": "object",
      "properties": {
>>>>>>> Add currency history
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
<<<<<<< HEAD
<<<<<<< HEAD
            "$ref": "#/definitions/protobufAny"
=======
            "$ref": "#/definitions/chainmiddlewarecoincurrencyv1Currency"
>>>>>>> Add chain meta
=======
            "$ref": "#/definitions/protobufAny"
>>>>>>> Add currency history
          }
        }
      }
    },
    "v1Currency": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "@inject_tag: sql:\"id\""
        },
        "CoinTypeID": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_type_id\""
        },
        "CoinName": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_name\""
        },
        "CoinLogo": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_logo\""
        },
        "CoinUnit": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_unit\""
        },
        "CoinENV": {
          "type": "string",
          "title": "@inject_tag: sql:\"coin_env\""
        },
        "CreatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"created_at\""
        },
        "UpdatedAt": {
          "type": "integer",
          "format": "int64",
          "title": "@inject_tag: sql:\"updated_at\""
        },
        "MarketValueHigh": {
          "type": "string",
          "title": "@inject_tag: sql:\"market_value_high\""
        },
        "MarketValueLow": {
          "type": "string",
          "title": "@inject_tag: sql:\"market_value_low\""
        },
        "FeedTypeStr": {
          "type": "string",
          "title": "@inject_tag: sql:\"feed_type\""
        },
        "FeedType": {
<<<<<<< HEAD
<<<<<<< HEAD
          "$ref": "#/definitions/v1CurrencyFeedType"
=======
          "$ref": "#/definitions/v1FeedType"
=======
          "$ref": "#/definitions/v1CurrencyFeedType"
>>>>>>> Add currency history
        }
      }
    },
    "v1CurrencyFeedType": {
      "type": "string",
      "enum": [
        "DefaultFeedType",
        "CoinGecko",
        "CoinBase",
        "StableUSDHardCode"
      ],
      "default": "DefaultFeedType"
<<<<<<< HEAD
    },
    "v1GetHistoriesRequest": {
      "type": "object",
      "properties": {
        "CoinTypeID": {
          "type": "string"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Limit": {
          "type": "integer",
          "format": "int32"
        },
        "StartAt": {
          "type": "integer",
          "format": "int64"
        },
        "EndAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1GetHistoriesResponse": {
      "type": "object",
      "properties": {
        "Infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Currency"
          }
<<<<<<< HEAD
>>>>>>> Add chain meta
        }
      }
    },
    "v1CurrencyFeedType": {
      "type": "string",
      "enum": [
        "DefaultFeedType",
        "CoinGecko",
        "CoinBase",
        "StableUSDHardCode"
      ],
      "default": "DefaultFeedType"
=======
        },
        "Total": {
          "type": "integer",
          "format": "int64"
        }
      }
>>>>>>> Add currency history
=======
>>>>>>> Refactor gw proto
    }
  }
}
