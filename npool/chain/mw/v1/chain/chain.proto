syntax = "proto3";

package chain.middleware.chain.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/chain";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateChain  (CreateChainRequest)  returns (CreateChainResponse)  {}
    rpc GetChain     (GetChainRequest)     returns (GetChainResponse)     {}
    rpc GetChains    (GetChainsRequest)    returns (GetChainsResponse)    {}
    rpc GetChainOnly (GetChainOnlyRequest) returns (GetChainOnlyResponse) {}
    rpc UpdateChain  (UpdateChainRequest)  returns (UpdateChainResponse)  {}
}

message ChainReq {
    optional uint32 ID         = 9;
    optional string EntID      = 10;
    optional string ChainType  = 20;
    optional string Logo       = 30;
    optional string ChainID    = 40;
    optional string NativeUnit = 50;
    optional string AtomicUnit = 60;
    optional int64  UnitDecExp = 70;
    optional string ChainName  = 80;
    optional string ENV        = 90;
}

message Chain {
    // @inject_tag: sql:"id"
    uint32 ID         = 10;
    // @inject_tag: sql:"ent_id"
    string EntID      = 20;
    // @inject_tag: sql:"chain_type"
    string ChainType  = 30;
    // @inject_tag: sql:"logo"
    string Logo       = 40;
    // @inject_tag: sql:"chain_id"
    string ChainID    = 50;
    // @inject_tag: sql:"native_unit"
    string NativeUnit = 60;
    // @inject_tag: sql:"atomic_unit"
    string AtomicUnit = 70;
    // @inject_tag: sql:"unit_dec_exp"
    uint32 UnitDecExp = 80;
    // @inject_tag: sql:"chain_name"
    string ChainName  = 90;
    // @inject_tag: sql:"env"
    string ENV        = 100;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt  = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt  = 1010;
}

message Conds {
    optional basetypes.v1.StringVal      EntID     = 10;
    optional basetypes.v1.StringVal      ChainType = 20;
    optional basetypes.v1.StringVal      ENV       = 30;
    optional basetypes.v1.StringSliceVal EntIDs    = 40;
}

message CreateChainRequest {
    ChainReq Info = 10;
}

message CreateChainResponse {
    Chain Info = 10;
}

message GetChainRequest {
    string EntID = 10;
}

message GetChainResponse {
    Chain Info = 10;
}

message GetChainsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetChainsResponse {
    repeated Chain Infos = 10;
    uint32         Total = 20;
}

message GetChainOnlyRequest {
    Conds Conds  = 10;
}

message GetChainOnlyResponse {
    Chain Info = 10;
}

message UpdateChainRequest {
    ChainReq Info = 10;
}

message UpdateChainResponse {
    Chain Info = 10;
}
