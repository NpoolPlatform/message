syntax = "proto3";

package chain.middleware.appcoin.description.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/appcoin/description";

import "google/protobuf/empty.proto";
import "npool/npool.proto";
import "npool/chain/mgr/v1/appcoin/description/description.proto";

// Service Name
service Middleware {
    rpc CreateCoinDescription     (CreateCoinDescriptionRequest)     returns (CreateCoinDescriptionResponse)     {}
    rpc GetCoinDescription        (GetCoinDescriptionRequest)        returns (GetCoinDescriptionResponse)        {}
    rpc GetCoinDescriptions       (GetCoinDescriptionsRequest)       returns (GetCoinDescriptionsResponse)       {}
    rpc UpdateCoinDescription     (UpdateCoinDescriptionRequest)     returns (UpdateCoinDescriptionResponse)     {}
}

message CoinDescription {
    string  ID         = 10;
    string  AppID      = 20;
    string  CoinTypeID = 30;
    string  CoinName   = 40;
    string  CoinLogo   = 60;
    chain.manager.appcoin.description.v1.UsedFor UsedFor = 70;
    string  Title      = 80;
    string  Message    = 90;
    uint32  CreatedAt  = 100;
    uint32  UpdatedAt  = 110;
}

message CreateCoinDescriptionRequest {
    chain.manager.appcoin.description.v1.CoinDescriptionReq Info = 10;
}

message CreateCoinDescriptionResponse {
    CoinDescription Info = 10;
}

message UpdateCoinDescriptionRequest {
    chain.manager.appcoin.description.v1.CoinDescriptionReq Info = 10;
}

message UpdateCoinDescriptionResponse {
    CoinDescription Info = 10;
}

message GetCoinDescriptionRequest {
    string ID = 10;
}

message GetCoinDescriptionResponse {
    CoinDescription Info = 10;
}

message GetCoinDescriptionsRequest {
    chain.manager.appcoin.description.v1.Conds Conds  = 10;
    int32                                      Offset = 20;
    int32                                      Limit  = 30;
}

message GetCoinDescriptionsResponse {
    repeated CoinDescription Infos = 10;
    uint32                   Total = 20;
}

