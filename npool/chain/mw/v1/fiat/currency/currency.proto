syntax = "proto3";

package chain.middleware.fiat.currency.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/fiat/currency";

import "google/api/annotations.proto";
import "npool/basetypes/v1/conds.proto";
import "npool/basetypes/v1/currencyfeedtype.proto";

// Service Name
service Middleware {
    rpc GetCurrency   (GetCurrencyRequest)   returns (GetCurrencyResponse)   {}
    rpc GetCurrencies (GetCurrenciesRequest) returns (GetCurrenciesResponse) {}
}

message CurrencyReq {
    optional string ID     = 10;
    optional string FiatID = 20;
    optional basetypes.v1.CurrencyFeedType FeedType = 30;
    optional string MarketValueHigh = 40;
    optional string MarketValueLow  = 50;
}

message Currency {
    // @inject_tag: sql:"id"
    string ID              = 10;
    // @inject_tag: sql:"fiat_id"
    string FiatID          = 20;
    // @inject_tag: sql:"feed_type"
    string FeedTypeStr     = 30;
    basetypes.v1.CurrencyFeedType FeedType = 40;
    // @inject_tag: sql:"fiat_name"
    string FiatName        = 50;
    // @inject_tag: sql:"fiat_logo"
    string FiatLogo        = 60;
    // @inject_tag: sql:"fiat_unit"
    string FiatUnit        = 70;
    // @inject_tag: sql:"market_value_high"
    string MarketValueHigh = 80;
    // @inject_tag: sql:"market_value_low"
    string MarketValueLow  = 90;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt       = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt       = 1010;
    // @inject_tag: sql:"coin_type_id"
}

message Conds {
    optional basetypes.v1.StringVal      ID      = 10;
    optional basetypes.v1.StringVal      FiatID  = 20;
    optional basetypes.v1.StringSliceVal FiatIDs = 30;
}

message GetCurrencyRequest {
    string ID = 10;
}

message GetCurrencyResponse {
    Currency Info = 10;
}

message GetCurrenciesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCurrenciesResponse {
    repeated Currency Infos = 10;
    uint32            Total = 20;
}

