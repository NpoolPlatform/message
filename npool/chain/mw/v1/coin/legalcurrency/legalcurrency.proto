syntax = "proto3";

package chain.middleware.coin.legalcurrency.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/coin/legalcurrency";

import "google/api/annotations.proto";
import "npool/npool.proto";
import "npool/chain/mgr/v1/coin/legalcurrency/legalcurrency.proto";

// Service Name
service Middleware {
    rpc CreateLegalCurrency     (CreateLegalCurrencyRequest)    returns (CreateLegalCurrencyResponse)    {}
    rpc CreateLegalCurrencies   (CreateLegalCurrenciesRequest)  returns (CreateLegalCurrenciesResponse)  {}
    rpc RefreshLegalCurrencies  (RefreshLegalCurrenciesRequest) returns (RefreshLegalCurrenciesResponse) {}
    rpc GetLegalCurrency        (GetLegalCurrencyRequest)       returns (GetLegalCurrencyResponse)       {}
    rpc GetCoinLegalCurrency    (GetCoinLegalCurrencyRequest)   returns (GetCoinLegalCurrencyResponse)   {}
    rpc GetLegalCurrencies      (GetLegalCurrenciesRequest)     returns (GetLegalCurrenciesResponse)     {}
    rpc GetHistories            (GetHistoriesRequest)           returns (GetHistoriesResponse)           {}
}

message LegalCurrency {
    // @inject_tag: sql:"id"
    string ID              = 10;
    // @inject_tag: sql:"coin_type_id"
    string LegalTypeID     = 20;
    // @inject_tag: sql:"coin_name"
    string LegalName       = 30;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt       = 40;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt       = 50;
    // @inject_tag: sql:"market_value_high"
    string MarketValueHigh = 60;
    // @inject_tag: sql:"market_value_low"
    string MarketValueLow  = 70;
    // @inject_tag: sql:"feed_type"
    string FeedTypeStr     = 80;
    chain.manager.coin.currency.v1.FeedType FeedType = 90;
}

message Conds {
    optional npool.v1.StringVal      ID           = 10;
    optional npool.v1.StringVal      LegalTypeID  = 20;
    optional npool.v1.StringSliceVal LegalTypeIDs = 30;
    optional npool.v1.Uint32Val      StartAt      = 40;
    optional npool.v1.Uint32Val      EndAt        = 50;
}

message CreateLegalCurrencyRequest {
    chain.manager.coin.currency.v1.LegalCurrencyReq Info = 10;
}

message CreateLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message CreateLegalCurrenciesRequest {
    repeated chain.manager.coin.currency.v1.LegalCurrencyReq Infos = 10;
}

message CreateLegalCurrenciesResponse {
    repeated LegalCurrency Infos = 10;
}

message RefreshLegalCurrenciesRequest {
}

message RefreshLegalCurrenciesResponse {
}

message GetLegalCurrencyRequest {
    string ID = 10;
}

message GetLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message GetCoinLegalCurrencyRequest {
    string CoinTypeID = 10;
}

message GetCoinLegalCurrencyResponse {
    LegalCurrency Info = 10;
}

message GetLegalCurrenciesRequest {
    Conds Conds  = 10;
}

message GetLegalCurrenciesResponse {
    repeated LegalCurrency Infos = 10;
}

message GetHistoriesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetHistoriesResponse {
    repeated LegalCurrency Infos = 10;
    uint32                 Total = 20;
}
