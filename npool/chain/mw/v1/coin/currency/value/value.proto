syntax = "proto3";

package chain.middleware.coin.currency.value.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/coin/currency/value";

import "google/api/annotations.proto";
import "npool/npool.proto";
import "npool/chain/mgr/v1/coin/currency/feed/feed.proto";

// Service Name
service Middleware {
    rpc GetCurrency        (GetCurrencyRequest)      returns (GetCurrencyResponse)       {}
    rpc GetCoinCurrency    (GetCoinCurrencyRequest)  returns (GetCoinCurrencyResponse)   {}
    rpc GetCurrencies      (GetCurrenciesRequest)    returns (GetCurrenciesResponse)     {}
    rpc GetHistories       (GetHistoriesRequest)     returns (GetHistoriesResponse)      {}
}

message Currency {
    // @inject_tag: sql:"id"
    string ID           = 10;
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID   = 20;
    // @inject_tag: sql:"coin_name"
    string CoinName     = 30;
    // @inject_tag: sql:"coin_logo"
    string CoinLogo     = 40;
    // @inject_tag: sql:"coin_unit"
    string CoinUnit     = 50;
    // @inject_tag: sql:"coin_env"
    string CoinENV      = 60;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt    = 70;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt    = 80;
    // @inject_tag: sql:"market_value"
    string MarketValue  = 90;
    // @inject_tag: sql:"feed_type"
    chain.manager.coin.currency.feed.v1.FeedType FeedType = 100;
    // @inject_tag: sql:"feed_source"
    string FeedSource   = 110;
}

message Conds {
    optional npool.v1.StringVal      ID          = 10;
    optional npool.v1.StringVal      CoinTypeID  = 20;
    optional npool.v1.StringSliceVal CoinTypeIDs = 30;
    optional npool.v1.Uint32Val      StartAt     = 40;
    optional npool.v1.Uint32Val      EndAt       = 50;
}

message GetCurrencyRequest {
    string ID = 10;
}

message GetCurrencyResponse {
    Currency Info = 10;
}

message GetCoinCurrencyRequest {
    string CoinTypeID = 10;
}

message GetCoinCurrencyResponse {
    Currency Info = 10;
}

message GetCurrenciesRequest {
    Conds Conds  = 10;
}

message GetCurrenciesResponse {
    repeated Currency Infos = 10;
}

message GetHistoriesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetHistoriesResponse {
    repeated Currency Infos = 10;
    uint32            Total = 20;
}
