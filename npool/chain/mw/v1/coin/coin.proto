syntax = "proto3";

package chain.middleware.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/coin";

import "npool/basetypes/v1/gastype.proto";
import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
  rpc CreateCoin(CreateCoinRequest) returns (CreateCoinResponse) {}
  rpc GetCoin(GetCoinRequest) returns (GetCoinResponse) {}
  rpc ExistCoin(ExistCoinRequest) returns (ExistCoinResponse) {}
  rpc GetCoins(GetCoinsRequest) returns (GetCoinsResponse) {}
  rpc ExistCoinConds(ExistCoinCondsRequest) returns (ExistCoinCondsResponse) {}
  rpc UpdateCoin(UpdateCoinRequest) returns (UpdateCoinResponse) {}
}

message CoinReq {
  optional uint32 ID = 9;
  optional string EntID = 10;
  optional string Name = 20;
  optional string Logo = 30;
  optional bool Presale = 40;
  optional string Unit = 50;
  optional string ENV = 60;
  optional string ReservedAmount = 70;
  optional bool ForPay = 80;
  optional string HomePage = 90;
  optional string Specs = 100;
  optional string FeeCoinTypeID = 110;
  optional bool WithdrawFeeByStableUSD = 120;
  optional string WithdrawFeeAmount = 130;
  optional string CollectFeeAmount = 140;
  optional string HotWalletFeeAmount = 150;
  optional string LowFeeAmount = 160;
  optional string HotLowFeeAmount = 161;
  optional string HotWalletAccountAmount = 170;
  optional string PaymentAccountCollectAmount = 180;
  optional bool Disabled = 190;
  optional bool StableUSD = 200;
  optional string LeastTransferAmount = 210;
  optional bool NeedMemo = 220;
  optional bool RefreshCurrency = 230;
  optional string ChainType = 240;
  optional string ChainNativeUnit = 250;
  optional string ChainAtomicUnit = 260;
  optional uint32 ChainUnitExp = 270;
  optional basetypes.v1.GasType GasType = 280;
  optional string ChainID = 290;
  optional string ChainNickname = 300;
  optional string ChainNativeCoinName = 310;
  optional bool CheckNewAddressBalance = 320;
}

message Coin {
  // @inject_tag: sql:"id"
  uint32 ID = 9;
  // @inject_tag: sql:"ent_id"
  string EntID = 10;
  // @inject_tag: sql:"name"
  string Name = 20;
  // @inject_tag: sql:"logo"
  string Logo = 30;
  // @inject_tag: sql:"presale"
  bool Presale = 40;
  // @inject_tag: sql:"reserved_amount"
  string ReservedAmount = 50;
  // @inject_tag: sql:"unit"
  string Unit = 60;
  // @inject_tag: sql:"env"
  string ENV = 70;
  // @inject_tag: sql:"for_pay"
  bool ForPay = 80;
  // @inject_tag: sql:"home_page"
  string HomePage = 90;
  // @inject_tag: sql:"specs"
  string Specs = 100;
  // @inject_tag: sql:"stable_usd"
  bool StableUSD = 101;
  // @inject_tag: sql:"fee_coin_type_id"
  string FeeCoinTypeID = 110;
  // @inject_tag: sql:"fee_coin_name"
  string FeeCoinName = 120;
  // @inject_tag: sql:"fee_coin_logo"
  string FeeCoinLogo = 130;
  // @inject_tag: sql:"fee_coin_unit"
  string FeeCoinUnit = 140;
  // @inject_tag: sql:"fee_coin_env"
  string FeeCoinENV = 150;
  // @inject_tag: sql:"withdraw_fee_by_stable_usd"
  bool WithdrawFeeByStableUSD = 160;
  // @inject_tag: sql:"withdraw_fee_amount"
  string WithdrawFeeAmount = 170;
  // @inject_tag: sql:"collect_fee_amount"
  string CollectFeeAmount = 180;
  // @inject_tag: sql:"hot_wallet_fee_amount"
  string HotWalletFeeAmount = 190;
  // @inject_tag: sql:"low_fee_amount"
  string LowFeeAmount = 200;
  // @inject_tag: sql:"hot_low_fee_amount"
  string HotLowFeeAmount = 201;
  // @inject_tag: sql:"hot_wallet_account_amount"
  string HotWalletAccountAmount = 210;
  // @inject_tag: sql:"payment_account_collect_amount"
  string PaymentAccountCollectAmount = 220;
  // @inject_tag: sql:"least_transfer_amount"
  string LeastTransferAmount = 221;
  ;
  // @inject_tag: sql:"disabled"
  bool Disabled = 230;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 240;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 250;
  // @inject_tag: sql:"need_memo"
  bool NeedMemo = 260;
  // @inject_tag: sql:"refresh_currency"
  bool RefreshCurrency = 270;
  // @inject_tag: sql:"check_new_address_balance"
  bool CheckNewAddressBalance = 280;
  // @inject_tag: sql:"chain_name"
  string ChainType = 290;
  // @inject_tag: sql:"native_unit"
  string ChainNativeUnit = 300;
  // @inject_tag: sql:"atomic_unit"
  string ChainAtomicUnit = 310;
  // @inject_tag: sql:"unit_dec_exp"
  uint32 ChainUnitExp = 320;
  // @inject_tag: sql:"chain_id"
  string ChainID = 330;
  // @inject_tag: sql:"nickname"
  string ChainNickname = 340;
  // @inject_tag: sql:"gas_type"
  string GasTypeStr = 350;
  basetypes.v1.GasType GasType = 360;
}

message Conds {
  optional basetypes.v1.StringVal EntID = 10;
  optional basetypes.v1.BoolVal Presale = 20;
  optional basetypes.v1.StringVal ENV = 30;
  optional basetypes.v1.BoolVal ForPay = 40;
  optional basetypes.v1.StringSliceVal EntIDs = 50;
  optional basetypes.v1.BoolVal Disabled = 60;
  optional basetypes.v1.StringVal Name = 70;
  optional basetypes.v1.StringSliceVal Names = 80;
}

message CreateCoinRequest { CoinReq Info = 10; }

message CreateCoinResponse { Coin Info = 10; }

message GetCoinRequest { string EntID = 10; }

message GetCoinResponse { Coin Info = 10; }

message ExistCoinRequest { string EntID = 10; }

message ExistCoinResponse { bool Info = 10; }

message GetCoinsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetCoinsResponse {
  repeated Coin Infos = 10;
  uint32 Total = 20;
}

message ExistCoinCondsRequest { Conds Conds = 10; }

message ExistCoinCondsResponse { bool Info = 10; }

message UpdateCoinRequest { CoinReq Info = 10; }

message UpdateCoinResponse { Coin Info = 10; }
