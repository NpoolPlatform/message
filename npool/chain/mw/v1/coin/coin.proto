syntax = "proto3";

package chain.middleware.coin.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/coin";

import "google/api/annotations.proto";
import "npool/npool.proto";

// Service Name
service Middleware {
    rpc CreateCoin     (CreateCoinRequest)   returns (CreateCoinResponse)    {}
    rpc GetCoin        (GetCoinRequest)      returns (GetCoinResponse)       {}
    rpc GetCoins       (GetCoinsRequest)     returns (GetCoinsResponse)      {}
    rpc UpdateCoin     (UpdateCoinRequest)   returns (UpdateCoinResponse)    {}
}

message CoinReq {
    optional string ID                           = 10;
    optional string Name                         = 20;
    optional string Logo                         = 30;
    optional bool   Presale                      = 40;
    optional string Unit                         = 50;
    optional string ENV                          = 60;
    optional string ReservedAmount               = 70;
    optional bool   ForPay                       = 80;
    optional string HomePage                     = 90;
    optional string Specs                        = 100;
    optional string FeeCoinTypeID                = 110;
    optional bool   WithdrawFeeByStableUSD       = 120;
    optional string WithdrawFeeAmount            = 130;
    optional string CollectFeeAmount             = 140;
    optional string HotWalletFeeAmount           = 150;
    optional string PaymentAccountCollectAmount  = 160;
}

message Coin {
    // @inject_tag: sql:"id"
    string ID                           = 10;
    // @inject_tag: sql:"name"
    string Name                         = 20;
    // @inject_tag: sql:"logo"
    string Logo                         = 30;
    // @inject_tag: sql:"presale"
    bool   Presale                      = 40;
    // @inject_tag: sql:"reserved_amount"
    string ReservedAmount               = 50;
    // @inject_tag: sql:"unit"
    string Unit                         = 60;
    // @inject_tag: sql:"for_pay"
    bool   ForPay                       = 70;
    // @inject_tag: sql:"home_page"
    string HomePage                     = 80;
    // @inject_tag: sql:"specs"
    string Specs                        = 90;
    // @inject_tag: sql:"fee_coin_type_id"
    string FeeCoinTypeID                = 100;
    // @inject_tag: sql:"fee_coin_name"
    string FeeCoinName                  = 110;
    // @inject_tag: sql:"fee_coin_logo"
    string FeeCoinLogo                  = 120;
    // @inject_tag: sql:"fee_coin_unit"
    string FeeCoinUnit                  = 130;
    // @inject_tag: sql:"withdraw_fee_by_stable_usd"
    bool   WithdrawFeeByStableUSD       = 140;
    // @inject_tag: sql:"withdraw_fee_amount"
    string WithdrawFeeAmount            = 150;
    // @inject_tag: sql:"collect_fee_amount"
    string CollectFeeAmount             = 160;
    // @inject_tag: sql:"hot_wallet_fee_amount"
    string HotWalletFeeAmount           = 170;
    // @inject_tag: sql:"low_fee_amount"
    string LowFeeAmount                 = 180;
    // @inject_tag: sql:"hot_wallet_account_amount"
    string HotWalletAccountAmount       = 190;
    // @inject_tag: sql:"payment_account_collect_amount"
    string PaymentAccountCollectAmount  = 200;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt                    = 210;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt                    = 220;
}

message Conds {
    optional npool.v1.StringVal  ID           = 10;
    optional npool.v1.BoolVal    Presale      = 20;
    optional npool.v1.StringVal  ENV          = 30;
    optional npool.v1.BoolVal    ForPay       = 40;
}

message CreateCoinRequest {
    CoinReq Info = 10;
}

message CreateCoinResponse {
    Coin Info = 10;
}

message GetCoinRequest {
    string ID = 10;
}

message GetCoinResponse {
    Coin Info = 10;
}

message GetCoinsRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetCoinsResponse {
    repeated Coin Infos = 10;
    uint32        Total = 20;
}

message UpdateCoinRequest {
    CoinReq Info = 10;
}

message UpdateCoinResponse {
    Coin Info = 10;
}
