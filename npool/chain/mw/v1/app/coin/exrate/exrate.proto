syntax = "proto3";

package chain.middleware.app.coin.exchangerate.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/app/coin/exchangerate";

import "npool/basetypes/v1/conds.proto";

// Service Name
service Middleware {
    rpc CreateExchangeRate     (CreateExchangeRateRequest)     returns (CreateExchangeRateResponse)     {}
    rpc CreateExchangeRates    (CreateExchangeRatesRequest)    returns (CreateExchangeRatesResponse)    {}
    rpc UpdateExchangeRate     (UpdateExchangeRateRequest)     returns (UpdateExchangeRateResponse)     {}
    rpc GetExchangeRate        (GetExchangeRateRequest)        returns (GetExchangeRateResponse)        {}
    rpc GetExchangeRateOnly    (GetExchangeRateOnlyRequest)    returns (GetExchangeRateOnlyResponse)    {}
    rpc GetExchangeRates       (GetExchangeRatesRequest)       returns (GetExchangeRatesResponse)       {}
    rpc ExistExchangeRate      (ExistExchangeRateRequest)      returns (ExistExchangeRateResponse)      {}
    rpc ExistExchangeRateConds (ExistExchangeRateCondsRequest) returns (ExistExchangeRateCondsResponse) {}
    rpc CountExchangeRates     (CountExchangeRatesRequest)     returns (CountExchangeRatesResponse)     {}
    rpc DeleteExchangeRate     (DeleteExchangeRateRequest)     returns (DeleteExchangeRateResponse)     {}
}

message ExchangeRateReq {
    optional uint32    ID               = 9;
    optional string    EntID            = 10;
    optional string    AppID            = 20;
    optional string    CoinTypeID       = 30;
    optional string    MarketValue      = 40;
    optional string    SettleValue      = 50;
    optional uint32    SettlePercent    = 60;
    repeated string    SettleTips       = 61;
    optional string    Setter           = 70;
    optional uint32    DeletedAt        = 80;
}

message ExchangeRate {
    // @inject_tag: sql:"id"
    uint32 ID               = 9;
    // @inject_tag: sql:"ent_id"
    string EntID            = 10;
    // @inject_tag: sql:"app_id"
    string AppID            = 20;
    // @inject_tag: sql:"coin_type_id"
    string CoinTypeID       = 30;
    // @inject_tag: sql:"market_value"
    string MarketValue      = 40;
    // @inject_tag: sql:"settle_value"
    string SettleValue      = 50;
    // @inject_tag: sql:"settle_percent"
    uint32 SettlePercent    = 60;
    // @inject_tag: sql:"settle_tips"
    string SettleTipsStr    = 62;
    repeated string SettleTips = 61;
    // @inject_tag: sql:"setter"
    string Setter           = 70;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt        = 80;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt        = 90;
}

message Conds {
    optional basetypes.v1.StringVal EntID      = 10;
    optional basetypes.v1.StringVal AppID      = 20;
    optional basetypes.v1.StringVal CoinTypeID = 30;
}


message CreateExchangeRateRequest {
    ExchangeRateReq Info = 10;
}

message CreateExchangeRateResponse {
    ExchangeRate Info = 10;
}

message CreateExchangeRatesRequest {
    repeated ExchangeRateReq Infos = 10;
}

message CreateExchangeRatesResponse {
    repeated ExchangeRate Infos = 10;
}

message UpdateExchangeRateRequest {
    ExchangeRateReq Info = 10;
}

message UpdateExchangeRateResponse {
    ExchangeRate Info = 10;
}

message GetExchangeRateRequest {
    string EntID = 10;
}

message GetExchangeRateResponse {
    ExchangeRate Info = 10;
}

message GetExchangeRatesRequest {
    Conds Conds  = 10;
    int32 Offset = 20;
    int32 Limit  = 30;
}

message GetExchangeRatesResponse {
    repeated ExchangeRate Infos = 10;
    uint32            Total = 20;
}

message GetExchangeRateOnlyRequest {
    Conds Conds = 10;
}

message GetExchangeRateOnlyResponse {
    ExchangeRate Info = 10;
}

message ExistExchangeRateRequest {
    string EntID = 10;
}

message ExistExchangeRateResponse {
    bool Info = 10;
}

message ExistExchangeRateCondsRequest {
    Conds Conds = 10;
}

message ExistExchangeRateCondsResponse {
    bool Info = 10;
}

message CountExchangeRatesRequest {
    Conds Conds = 10;
}

message CountExchangeRatesResponse {
    uint32 Info = 10;
}

message DeleteExchangeRateRequest {
    ExchangeRateReq Info = 10;
}

message DeleteExchangeRateResponse {
    ExchangeRate Info = 10;
}

