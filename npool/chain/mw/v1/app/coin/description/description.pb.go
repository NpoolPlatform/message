// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/chain/mw/v1/app/coin/description/description.proto

package description

import (
	v1 "github.com/NpoolPlatform/message/npool/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoinDescriptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *uint32     `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID      *string     `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID      *string     `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	CoinTypeID *string     `protobuf:"bytes,30,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	UsedFor    *v1.UsedFor `protobuf:"varint,40,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor,oneof" json:"UsedFor,omitempty"`
	Title      *string     `protobuf:"bytes,50,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Message    *string     `protobuf:"bytes,60,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	DeletedAt  *uint32     `protobuf:"varint,70,opt,name=DeletedAt,proto3,oneof" json:"DeletedAt,omitempty"`
}

func (x *CoinDescriptionReq) Reset() {
	*x = CoinDescriptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinDescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinDescriptionReq) ProtoMessage() {}

func (x *CoinDescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinDescriptionReq.ProtoReflect.Descriptor instead.
func (*CoinDescriptionReq) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{0}
}

func (x *CoinDescriptionReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *CoinDescriptionReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *CoinDescriptionReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *CoinDescriptionReq) GetCoinTypeID() string {
	if x != nil && x.CoinTypeID != nil {
		return *x.CoinTypeID
	}
	return ""
}

func (x *CoinDescriptionReq) GetUsedFor() v1.UsedFor {
	if x != nil && x.UsedFor != nil {
		return *x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *CoinDescriptionReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CoinDescriptionReq) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CoinDescriptionReq) GetDeletedAt() uint32 {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return 0
}

type CoinDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"coin_type_id"
	CoinTypeID string `protobuf:"bytes,30,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty" sql:"coin_type_id"`
	// @inject_tag: sql:"coin_name"
	CoinName string `protobuf:"bytes,40,opt,name=CoinName,proto3" json:"CoinName,omitempty" sql:"coin_name"`
	// @inject_tag: sql:"coin_logo"
	CoinLogo string `protobuf:"bytes,50,opt,name=CoinLogo,proto3" json:"CoinLogo,omitempty" sql:"coin_logo"`
	// @inject_tag: sql:"coin_unit"
	CoinUnit string `protobuf:"bytes,60,opt,name=CoinUnit,proto3" json:"CoinUnit,omitempty" sql:"coin_unit"`
	// @inject_tag: sql:"coin_env"
	CoinENV string `protobuf:"bytes,70,opt,name=CoinENV,proto3" json:"CoinENV,omitempty" sql:"coin_env"`
	// @inject_tag: sql:"used_for"
	UsedForStr string     `protobuf:"bytes,80,opt,name=UsedForStr,proto3" json:"UsedForStr,omitempty" sql:"used_for"`
	UsedFor    v1.UsedFor `protobuf:"varint,90,opt,name=UsedFor,proto3,enum=basetypes.v1.UsedFor" json:"UsedFor,omitempty"`
	// @inject_tag: sql:"title"
	Title string `protobuf:"bytes,100,opt,name=Title,proto3" json:"Title,omitempty" sql:"title"`
	// @inject_tag: sql:"message"
	Message string `protobuf:"bytes,110,opt,name=Message,proto3" json:"Message,omitempty" sql:"message"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,120,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,130,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *CoinDescription) Reset() {
	*x = CoinDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinDescription) ProtoMessage() {}

func (x *CoinDescription) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinDescription.ProtoReflect.Descriptor instead.
func (*CoinDescription) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{1}
}

func (x *CoinDescription) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CoinDescription) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *CoinDescription) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CoinDescription) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinDescription) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *CoinDescription) GetCoinLogo() string {
	if x != nil {
		return x.CoinLogo
	}
	return ""
}

func (x *CoinDescription) GetCoinUnit() string {
	if x != nil {
		return x.CoinUnit
	}
	return ""
}

func (x *CoinDescription) GetCoinENV() string {
	if x != nil {
		return x.CoinENV
	}
	return ""
}

func (x *CoinDescription) GetUsedForStr() string {
	if x != nil {
		return x.UsedForStr
	}
	return ""
}

func (x *CoinDescription) GetUsedFor() v1.UsedFor {
	if x != nil {
		return x.UsedFor
	}
	return v1.UsedFor(0)
}

func (x *CoinDescription) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CoinDescription) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CoinDescription) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CoinDescription) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID      *v1.StringVal `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	AppID      *v1.StringVal `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	CoinTypeID *v1.StringVal `protobuf:"bytes,30,opt,name=CoinTypeID,proto3,oneof" json:"CoinTypeID,omitempty"`
	UsedFor    *v1.Int32Val  `protobuf:"bytes,40,opt,name=UsedFor,proto3,oneof" json:"UsedFor,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetAppID() *v1.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetCoinTypeID() *v1.StringVal {
	if x != nil {
		return x.CoinTypeID
	}
	return nil
}

func (x *Conds) GetUsedFor() *v1.Int32Val {
	if x != nil {
		return x.UsedFor
	}
	return nil
}

type CreateCoinDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinDescriptionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinDescriptionRequest) Reset() {
	*x = CreateCoinDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinDescriptionRequest) ProtoMessage() {}

func (x *CreateCoinDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinDescriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCoinDescriptionRequest) GetInfo() *CoinDescriptionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinDescription `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinDescriptionResponse) Reset() {
	*x = CreateCoinDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinDescriptionResponse) ProtoMessage() {}

func (x *CreateCoinDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinDescriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCoinDescriptionResponse) GetInfo() *CoinDescription {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinDescriptionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinDescriptionRequest) Reset() {
	*x = UpdateCoinDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinDescriptionRequest) ProtoMessage() {}

func (x *UpdateCoinDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinDescriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoinDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCoinDescriptionRequest) GetInfo() *CoinDescriptionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinDescription `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinDescriptionResponse) Reset() {
	*x = UpdateCoinDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinDescriptionResponse) ProtoMessage() {}

func (x *UpdateCoinDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinDescriptionResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoinDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCoinDescriptionResponse) GetInfo() *CoinDescription {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty"`
}

func (x *GetCoinDescriptionRequest) Reset() {
	*x = GetCoinDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinDescriptionRequest) ProtoMessage() {}

func (x *GetCoinDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinDescriptionRequest.ProtoReflect.Descriptor instead.
func (*GetCoinDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{7}
}

func (x *GetCoinDescriptionRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

type GetCoinDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinDescription `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinDescriptionResponse) Reset() {
	*x = GetCoinDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinDescriptionResponse) ProtoMessage() {}

func (x *GetCoinDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinDescriptionResponse.ProtoReflect.Descriptor instead.
func (*GetCoinDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{8}
}

func (x *GetCoinDescriptionResponse) GetInfo() *CoinDescription {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinDescriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetCoinDescriptionsRequest) Reset() {
	*x = GetCoinDescriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinDescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinDescriptionsRequest) ProtoMessage() {}

func (x *GetCoinDescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinDescriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetCoinDescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{9}
}

func (x *GetCoinDescriptionsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetCoinDescriptionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCoinDescriptionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCoinDescriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinDescription `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32             `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetCoinDescriptionsResponse) Reset() {
	*x = GetCoinDescriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinDescriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinDescriptionsResponse) ProtoMessage() {}

func (x *GetCoinDescriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinDescriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetCoinDescriptionsResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{10}
}

func (x *GetCoinDescriptionsResponse) GetInfos() []*CoinDescription {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetCoinDescriptionsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistCoinDescriptionCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistCoinDescriptionCondsRequest) Reset() {
	*x = ExistCoinDescriptionCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinDescriptionCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinDescriptionCondsRequest) ProtoMessage() {}

func (x *ExistCoinDescriptionCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinDescriptionCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistCoinDescriptionCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{11}
}

func (x *ExistCoinDescriptionCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistCoinDescriptionCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistCoinDescriptionCondsResponse) Reset() {
	*x = ExistCoinDescriptionCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinDescriptionCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinDescriptionCondsResponse) ProtoMessage() {}

func (x *ExistCoinDescriptionCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinDescriptionCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistCoinDescriptionCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP(), []int{12}
}

func (x *ExistCoinDescriptionCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

var File_npool_chain_mw_v1_app_coin_description_description_proto protoreflect.FileDescriptor

var file_npool_chain_mw_v1_app_coin_description_description_proto_rawDesc = []byte{
	0x0a, 0x38, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x64, 0x66, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x48, 0x04, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x07, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55,
	0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x99, 0x03, 0x0a, 0x0f, 0x43,
	0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x6f, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e, 0x56, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x4e, 0x56, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72,
	0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48,
	0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x70,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x6e, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x91, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x69, 0x0a, 0x20, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x21, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xea, 0x06, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0xaa,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x47, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x43, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb6, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4a, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4b, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xaa, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x47, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x49, 0x5a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescOnce sync.Once
	file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescData = file_npool_chain_mw_v1_app_coin_description_description_proto_rawDesc
)

func file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescGZIP() []byte {
	file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescOnce.Do(func() {
		file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescData)
	})
	return file_npool_chain_mw_v1_app_coin_description_description_proto_rawDescData
}

var file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_npool_chain_mw_v1_app_coin_description_description_proto_goTypes = []interface{}{
	(*CoinDescriptionReq)(nil),                // 0: chain.middleware.app.coin.description.v1.CoinDescriptionReq
	(*CoinDescription)(nil),                   // 1: chain.middleware.app.coin.description.v1.CoinDescription
	(*Conds)(nil),                             // 2: chain.middleware.app.coin.description.v1.Conds
	(*CreateCoinDescriptionRequest)(nil),      // 3: chain.middleware.app.coin.description.v1.CreateCoinDescriptionRequest
	(*CreateCoinDescriptionResponse)(nil),     // 4: chain.middleware.app.coin.description.v1.CreateCoinDescriptionResponse
	(*UpdateCoinDescriptionRequest)(nil),      // 5: chain.middleware.app.coin.description.v1.UpdateCoinDescriptionRequest
	(*UpdateCoinDescriptionResponse)(nil),     // 6: chain.middleware.app.coin.description.v1.UpdateCoinDescriptionResponse
	(*GetCoinDescriptionRequest)(nil),         // 7: chain.middleware.app.coin.description.v1.GetCoinDescriptionRequest
	(*GetCoinDescriptionResponse)(nil),        // 8: chain.middleware.app.coin.description.v1.GetCoinDescriptionResponse
	(*GetCoinDescriptionsRequest)(nil),        // 9: chain.middleware.app.coin.description.v1.GetCoinDescriptionsRequest
	(*GetCoinDescriptionsResponse)(nil),       // 10: chain.middleware.app.coin.description.v1.GetCoinDescriptionsResponse
	(*ExistCoinDescriptionCondsRequest)(nil),  // 11: chain.middleware.app.coin.description.v1.ExistCoinDescriptionCondsRequest
	(*ExistCoinDescriptionCondsResponse)(nil), // 12: chain.middleware.app.coin.description.v1.ExistCoinDescriptionCondsResponse
	(v1.UsedFor)(0),                           // 13: basetypes.v1.UsedFor
	(*v1.StringVal)(nil),                      // 14: basetypes.v1.StringVal
	(*v1.Int32Val)(nil),                       // 15: basetypes.v1.Int32Val
}
var file_npool_chain_mw_v1_app_coin_description_description_proto_depIdxs = []int32{
	13, // 0: chain.middleware.app.coin.description.v1.CoinDescriptionReq.UsedFor:type_name -> basetypes.v1.UsedFor
	13, // 1: chain.middleware.app.coin.description.v1.CoinDescription.UsedFor:type_name -> basetypes.v1.UsedFor
	14, // 2: chain.middleware.app.coin.description.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	14, // 3: chain.middleware.app.coin.description.v1.Conds.AppID:type_name -> basetypes.v1.StringVal
	14, // 4: chain.middleware.app.coin.description.v1.Conds.CoinTypeID:type_name -> basetypes.v1.StringVal
	15, // 5: chain.middleware.app.coin.description.v1.Conds.UsedFor:type_name -> basetypes.v1.Int32Val
	0,  // 6: chain.middleware.app.coin.description.v1.CreateCoinDescriptionRequest.Info:type_name -> chain.middleware.app.coin.description.v1.CoinDescriptionReq
	1,  // 7: chain.middleware.app.coin.description.v1.CreateCoinDescriptionResponse.Info:type_name -> chain.middleware.app.coin.description.v1.CoinDescription
	0,  // 8: chain.middleware.app.coin.description.v1.UpdateCoinDescriptionRequest.Info:type_name -> chain.middleware.app.coin.description.v1.CoinDescriptionReq
	1,  // 9: chain.middleware.app.coin.description.v1.UpdateCoinDescriptionResponse.Info:type_name -> chain.middleware.app.coin.description.v1.CoinDescription
	1,  // 10: chain.middleware.app.coin.description.v1.GetCoinDescriptionResponse.Info:type_name -> chain.middleware.app.coin.description.v1.CoinDescription
	2,  // 11: chain.middleware.app.coin.description.v1.GetCoinDescriptionsRequest.Conds:type_name -> chain.middleware.app.coin.description.v1.Conds
	1,  // 12: chain.middleware.app.coin.description.v1.GetCoinDescriptionsResponse.Infos:type_name -> chain.middleware.app.coin.description.v1.CoinDescription
	2,  // 13: chain.middleware.app.coin.description.v1.ExistCoinDescriptionCondsRequest.Conds:type_name -> chain.middleware.app.coin.description.v1.Conds
	3,  // 14: chain.middleware.app.coin.description.v1.Middleware.CreateCoinDescription:input_type -> chain.middleware.app.coin.description.v1.CreateCoinDescriptionRequest
	7,  // 15: chain.middleware.app.coin.description.v1.Middleware.GetCoinDescription:input_type -> chain.middleware.app.coin.description.v1.GetCoinDescriptionRequest
	9,  // 16: chain.middleware.app.coin.description.v1.Middleware.GetCoinDescriptions:input_type -> chain.middleware.app.coin.description.v1.GetCoinDescriptionsRequest
	11, // 17: chain.middleware.app.coin.description.v1.Middleware.ExistCoinDescriptionConds:input_type -> chain.middleware.app.coin.description.v1.ExistCoinDescriptionCondsRequest
	5,  // 18: chain.middleware.app.coin.description.v1.Middleware.UpdateCoinDescription:input_type -> chain.middleware.app.coin.description.v1.UpdateCoinDescriptionRequest
	4,  // 19: chain.middleware.app.coin.description.v1.Middleware.CreateCoinDescription:output_type -> chain.middleware.app.coin.description.v1.CreateCoinDescriptionResponse
	8,  // 20: chain.middleware.app.coin.description.v1.Middleware.GetCoinDescription:output_type -> chain.middleware.app.coin.description.v1.GetCoinDescriptionResponse
	10, // 21: chain.middleware.app.coin.description.v1.Middleware.GetCoinDescriptions:output_type -> chain.middleware.app.coin.description.v1.GetCoinDescriptionsResponse
	12, // 22: chain.middleware.app.coin.description.v1.Middleware.ExistCoinDescriptionConds:output_type -> chain.middleware.app.coin.description.v1.ExistCoinDescriptionCondsResponse
	6,  // 23: chain.middleware.app.coin.description.v1.Middleware.UpdateCoinDescription:output_type -> chain.middleware.app.coin.description.v1.UpdateCoinDescriptionResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_npool_chain_mw_v1_app_coin_description_description_proto_init() }
func file_npool_chain_mw_v1_app_coin_description_description_proto_init() {
	if File_npool_chain_mw_v1_app_coin_description_description_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinDescriptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinDescriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinDescriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinDescriptionCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinDescriptionCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_chain_mw_v1_app_coin_description_description_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_chain_mw_v1_app_coin_description_description_proto_goTypes,
		DependencyIndexes: file_npool_chain_mw_v1_app_coin_description_description_proto_depIdxs,
		MessageInfos:      file_npool_chain_mw_v1_app_coin_description_description_proto_msgTypes,
	}.Build()
	File_npool_chain_mw_v1_app_coin_description_description_proto = out.File
	file_npool_chain_mw_v1_app_coin_description_description_proto_rawDesc = nil
	file_npool_chain_mw_v1_app_coin_description_description_proto_goTypes = nil
	file_npool_chain_mw_v1_app_coin_description_description_proto_depIdxs = nil
}
