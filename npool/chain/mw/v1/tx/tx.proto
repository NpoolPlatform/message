syntax = "proto3";

package chain.middleware.tx.v1;

option go_package = "github.com/NpoolPlatform/message/npool/chain/mw/v1/tx";

import "google/api/annotations.proto";
import "npool/npool.proto";
import "npool/chain/mgr/v1/tx/tx.proto";

// Service Name
service Middleware {
    rpc CreateTx     (CreateTxRequest)   returns (CreateTxResponse)    {}
    rpc CreateTxs    (CreateTxsRequest)  returns (CreateTxsResponse)   {}
    rpc GetTx        (GetTxRequest)      returns (GetTxResponse)       {}
    rpc GetTxs       (GetTxsRequest)     returns (GetTxsResponse)      {}
    rpc UpdateTx     (UpdateTxRequest)   returns (UpdateTxResponse)    {}
}

message Tx {
    // @inject_tag: sql:"id"
    string                      ID             = 10;
    // @inject_tag: sql:"coin_type_id"
    string                      CoinTypeID     = 20;
    // @inject_tag: sql:"coin_name"
    string                      CoinName       = 30;
    // @inject_tag: sql:"coin_logo"
    string                      CoinLogo       = 40;
    // @inject_tag: sql:"coin_unit"
    string                      CoinUnit       = 50;
    // @inject_tag: sql:"coin_env"
    string                      CoinENV        = 60;
    // @inject_tag: sql:"from_account_id"
    string                      FromAccountID  = 70;
    // @inject_tag: sql:"to_account_id"
    string                      ToAccountID    = 80;
    // @inject_tag: sql:"amount"
    string                      Amount         = 90;
    // @inject_tag: sql:"fee_amount"
    string                      FeeAmount      = 100;
    // @inject_tag: sql:"chain_tx_id"
    string                      ChainTxID      = 110;
    chain.manager.tx.v1.TxState State          = 120;
    // @inject_tag: sql:"state"
    string                      StateStr       = 130;
    // @inject_tag: sql:"extra"
    string                      Extra          = 140;
    chain.manager.tx.v1.TxType  Type           = 150;
    // @inject_tag: sql:"type"
    string                      TypeStr        = 160;
    // @inject_tag: sql:"created_at"
    uint32                      CreatedAt      = 170;
    // @inject_tag: sql:"updated_at"
    uint32                      UpdatedAt      = 180;
}

message CreateTxRequest {
    chain.manager.tx.v1.TxReq Info = 10;
}

message CreateTxResponse {
    Tx Info = 10;
}

message CreateTxsRequest {
   repeated  chain.manager.tx.v1.TxReq Infos = 10;
}

message CreateTxsResponse {
    repeated Tx Infos = 10;
}

message GetTxRequest {
    string ID = 10;
}

message GetTxResponse {
    Tx Info = 10;
}

message GetTxsRequest {
    chain.manager.tx.v1.Conds Conds  = 10;
    int32                     Offset = 20;
    int32                     Limit  = 30;
}

message GetTxsResponse {
    repeated Tx Infos = 10;
    uint32      Total = 20;
}

message UpdateTxRequest {
    chain.manager.tx.v1.TxReq Info = 10;
}

message UpdateTxResponse {
    Tx Info = 10;
}
