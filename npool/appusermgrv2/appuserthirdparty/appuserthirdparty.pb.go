// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/appusermgrv2/appuserthirdparty/appuserthirdparty.proto

package appuserthirdparty

import (
	npool "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppUserThirdPartyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID               *string `protobuf:"bytes,10,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	ThirdPartyUserID     *string `protobuf:"bytes,20,opt,name=ThirdPartyUserID,proto3,oneof" json:"ThirdPartyUserID,omitempty"`
	ThirdPartyID         *string `protobuf:"bytes,30,opt,name=ThirdPartyID,proto3,oneof" json:"ThirdPartyID,omitempty"`
	ThirdPartyUsername   *string `protobuf:"bytes,40,opt,name=ThirdPartyUsername,proto3,oneof" json:"ThirdPartyUsername,omitempty"`
	ThirdPartyUserAvatar *string `protobuf:"bytes,50,opt,name=ThirdPartyUserAvatar,proto3,oneof" json:"ThirdPartyUserAvatar,omitempty"`
	ID                   *string `protobuf:"bytes,60,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID                *string `protobuf:"bytes,70,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
}

func (x *AppUserThirdPartyReq) Reset() {
	*x = AppUserThirdPartyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUserThirdPartyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUserThirdPartyReq) ProtoMessage() {}

func (x *AppUserThirdPartyReq) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUserThirdPartyReq.ProtoReflect.Descriptor instead.
func (*AppUserThirdPartyReq) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{0}
}

func (x *AppUserThirdPartyReq) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetThirdPartyUserID() string {
	if x != nil && x.ThirdPartyUserID != nil {
		return *x.ThirdPartyUserID
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetThirdPartyID() string {
	if x != nil && x.ThirdPartyID != nil {
		return *x.ThirdPartyID
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetThirdPartyUsername() string {
	if x != nil && x.ThirdPartyUsername != nil {
		return *x.ThirdPartyUsername
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetThirdPartyUserAvatar() string {
	if x != nil && x.ThirdPartyUserAvatar != nil {
		return *x.ThirdPartyUserAvatar
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AppUserThirdPartyReq) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

type AppUserThirdParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID               string `protobuf:"bytes,10,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ThirdPartyUserID     string `protobuf:"bytes,20,opt,name=ThirdPartyUserID,proto3" json:"ThirdPartyUserID,omitempty"`
	ThirdPartyID         string `protobuf:"bytes,30,opt,name=ThirdPartyID,proto3" json:"ThirdPartyID,omitempty"`
	ThirdPartyUsername   string `protobuf:"bytes,40,opt,name=ThirdPartyUsername,proto3" json:"ThirdPartyUsername,omitempty"`
	ThirdPartyUserAvatar string `protobuf:"bytes,50,opt,name=ThirdPartyUserAvatar,proto3" json:"ThirdPartyUserAvatar,omitempty"`
	ID                   string `protobuf:"bytes,60,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID                string `protobuf:"bytes,70,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *AppUserThirdParty) Reset() {
	*x = AppUserThirdParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUserThirdParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUserThirdParty) ProtoMessage() {}

func (x *AppUserThirdParty) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUserThirdParty.ProtoReflect.Descriptor instead.
func (*AppUserThirdParty) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{1}
}

func (x *AppUserThirdParty) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AppUserThirdParty) GetThirdPartyUserID() string {
	if x != nil {
		return x.ThirdPartyUserID
	}
	return ""
}

func (x *AppUserThirdParty) GetThirdPartyID() string {
	if x != nil {
		return x.ThirdPartyID
	}
	return ""
}

func (x *AppUserThirdParty) GetThirdPartyUsername() string {
	if x != nil {
		return x.ThirdPartyUsername
	}
	return ""
}

func (x *AppUserThirdParty) GetThirdPartyUserAvatar() string {
	if x != nil {
		return x.ThirdPartyUserAvatar
	}
	return ""
}

func (x *AppUserThirdParty) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppUserThirdParty) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type CreateAppUserThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdPartyReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserThirdPartyRequest) Reset() {
	*x = CreateAppUserThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserThirdPartyRequest) ProtoMessage() {}

func (x *CreateAppUserThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAppUserThirdPartyRequest) GetInfo() *AppUserThirdPartyReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdParty `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserThirdPartyResponse) Reset() {
	*x = CreateAppUserThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserThirdPartyResponse) ProtoMessage() {}

func (x *CreateAppUserThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppUserThirdPartyResponse) GetInfo() *AppUserThirdParty {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserThirdPartysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserThirdPartyReq `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppUserThirdPartysRequest) Reset() {
	*x = CreateAppUserThirdPartysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserThirdPartysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserThirdPartysRequest) ProtoMessage() {}

func (x *CreateAppUserThirdPartysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserThirdPartysRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserThirdPartysRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppUserThirdPartysRequest) GetInfos() []*AppUserThirdPartyReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateAppUserThirdPartysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserThirdParty `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppUserThirdPartysResponse) Reset() {
	*x = CreateAppUserThirdPartysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserThirdPartysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserThirdPartysResponse) ProtoMessage() {}

func (x *CreateAppUserThirdPartysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserThirdPartysResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserThirdPartysResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAppUserThirdPartysResponse) GetInfos() []*AppUserThirdParty {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetAppUserThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppUserThirdPartyRequest) Reset() {
	*x = GetAppUserThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartyRequest) ProtoMessage() {}

func (x *GetAppUserThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppUserThirdPartyRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppUserThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdParty `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppUserThirdPartyResponse) Reset() {
	*x = GetAppUserThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartyResponse) ProtoMessage() {}

func (x *GetAppUserThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{7}
}

func (x *GetAppUserThirdPartyResponse) GetInfo() *AppUserThirdParty {
	if x != nil {
		return x.Info
	}
	return nil
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID               *npool.StringVal `protobuf:"bytes,10,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ThirdPartyUserID     *npool.StringVal `protobuf:"bytes,20,opt,name=ThirdPartyUserID,proto3" json:"ThirdPartyUserID,omitempty"`
	ThirdPartyID         *npool.StringVal `protobuf:"bytes,30,opt,name=ThirdPartyID,proto3" json:"ThirdPartyID,omitempty"`
	ThirdPartyUsername   *npool.StringVal `protobuf:"bytes,40,opt,name=ThirdPartyUsername,proto3" json:"ThirdPartyUsername,omitempty"`
	ThirdPartyUserAvatar *npool.StringVal `protobuf:"bytes,50,opt,name=ThirdPartyUserAvatar,proto3" json:"ThirdPartyUserAvatar,omitempty"`
	ID                   *npool.StringVal `protobuf:"bytes,60,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID                *npool.StringVal `protobuf:"bytes,70,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{8}
}

func (x *Conds) GetUserID() *npool.StringVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetThirdPartyUserID() *npool.StringVal {
	if x != nil {
		return x.ThirdPartyUserID
	}
	return nil
}

func (x *Conds) GetThirdPartyID() *npool.StringVal {
	if x != nil {
		return x.ThirdPartyID
	}
	return nil
}

func (x *Conds) GetThirdPartyUsername() *npool.StringVal {
	if x != nil {
		return x.ThirdPartyUsername
	}
	return nil
}

func (x *Conds) GetThirdPartyUserAvatar() *npool.StringVal {
	if x != nil {
		return x.ThirdPartyUserAvatar
	}
	return nil
}

func (x *Conds) GetID() *npool.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *npool.StringVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

type GetAppUserThirdPartysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppUserThirdPartysRequest) Reset() {
	*x = GetAppUserThirdPartysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartysRequest) ProtoMessage() {}

func (x *GetAppUserThirdPartysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartysRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartysRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{9}
}

func (x *GetAppUserThirdPartysRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetAppUserThirdPartysRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppUserThirdPartysRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppUserThirdPartysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserThirdParty `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32               `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppUserThirdPartysResponse) Reset() {
	*x = GetAppUserThirdPartysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartysResponse) ProtoMessage() {}

func (x *GetAppUserThirdPartysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartysResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartysResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{10}
}

func (x *GetAppUserThirdPartysResponse) GetInfos() []*AppUserThirdParty {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppUserThirdPartysResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppUserThirdPartyOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetAppUserThirdPartyOnlyRequest) Reset() {
	*x = GetAppUserThirdPartyOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartyOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartyOnlyRequest) ProtoMessage() {}

func (x *GetAppUserThirdPartyOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartyOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartyOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppUserThirdPartyOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetAppUserThirdPartyOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdParty `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppUserThirdPartyOnlyResponse) Reset() {
	*x = GetAppUserThirdPartyOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserThirdPartyOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserThirdPartyOnlyResponse) ProtoMessage() {}

func (x *GetAppUserThirdPartyOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserThirdPartyOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserThirdPartyOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppUserThirdPartyOnlyResponse) GetInfo() *AppUserThirdParty {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppUserThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdPartyReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppUserThirdPartyRequest) Reset() {
	*x = UpdateAppUserThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserThirdPartyRequest) ProtoMessage() {}

func (x *UpdateAppUserThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppUserThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppUserThirdPartyRequest) GetInfo() *AppUserThirdPartyReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppUserThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdParty `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppUserThirdPartyResponse) Reset() {
	*x = UpdateAppUserThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserThirdPartyResponse) ProtoMessage() {}

func (x *UpdateAppUserThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppUserThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAppUserThirdPartyResponse) GetInfo() *AppUserThirdParty {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistAppUserThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistAppUserThirdPartyRequest) Reset() {
	*x = ExistAppUserThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserThirdPartyRequest) ProtoMessage() {}

func (x *ExistAppUserThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*ExistAppUserThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{15}
}

func (x *ExistAppUserThirdPartyRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistAppUserThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppUserThirdPartyResponse) Reset() {
	*x = ExistAppUserThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserThirdPartyResponse) ProtoMessage() {}

func (x *ExistAppUserThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*ExistAppUserThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{16}
}

func (x *ExistAppUserThirdPartyResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistAppUserThirdPartyCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAppUserThirdPartyCondsRequest) Reset() {
	*x = ExistAppUserThirdPartyCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserThirdPartyCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserThirdPartyCondsRequest) ProtoMessage() {}

func (x *ExistAppUserThirdPartyCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserThirdPartyCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAppUserThirdPartyCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{17}
}

func (x *ExistAppUserThirdPartyCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAppUserThirdPartyCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppUserThirdPartyCondsResponse) Reset() {
	*x = ExistAppUserThirdPartyCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserThirdPartyCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserThirdPartyCondsResponse) ProtoMessage() {}

func (x *ExistAppUserThirdPartyCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserThirdPartyCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAppUserThirdPartyCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{18}
}

func (x *ExistAppUserThirdPartyCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountAppUserThirdPartysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountAppUserThirdPartysRequest) Reset() {
	*x = CountAppUserThirdPartysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppUserThirdPartysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppUserThirdPartysRequest) ProtoMessage() {}

func (x *CountAppUserThirdPartysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppUserThirdPartysRequest.ProtoReflect.Descriptor instead.
func (*CountAppUserThirdPartysRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{19}
}

func (x *CountAppUserThirdPartysRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountAppUserThirdPartysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountAppUserThirdPartysResponse) Reset() {
	*x = CountAppUserThirdPartysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppUserThirdPartysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppUserThirdPartysResponse) ProtoMessage() {}

func (x *CountAppUserThirdPartysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppUserThirdPartysResponse.ProtoReflect.Descriptor instead.
func (*CountAppUserThirdPartysResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{20}
}

func (x *CountAppUserThirdPartysResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteAppUserThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAppUserThirdPartyRequest) Reset() {
	*x = DeleteAppUserThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppUserThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppUserThirdPartyRequest) ProtoMessage() {}

func (x *DeleteAppUserThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppUserThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppUserThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAppUserThirdPartyRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteAppUserThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserThirdParty `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAppUserThirdPartyResponse) Reset() {
	*x = DeleteAppUserThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppUserThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppUserThirdPartyResponse) ProtoMessage() {}

func (x *DeleteAppUserThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppUserThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppUserThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAppUserThirdPartyResponse) GetInfo() *AppUserThirdParty {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto protoreflect.FileDescriptor

var file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x72, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x03, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x12, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x14, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x44, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15,
	0x5f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x71,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x6f, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x74, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x72, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2d, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x3f, 0x0a, 0x10, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52,
	0x10, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x37, 0x0a, 0x0c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x0c, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x12, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x12, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x47, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x52, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x29, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x6f, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x2f, 0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x34, 0x0a, 0x1e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x22, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x39, 0x0a, 0x23, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x64, 0x0a, 0x1e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x35, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x1f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xf7, 0x0d, 0x0a,
	0x1f, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0xac, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x56, 0x32, 0x12, 0x45,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xaf, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x56, 0x32, 0x12, 0x46,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xac, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x56, 0x32, 0x12,
	0x45, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa3, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x56, 0x32, 0x12, 0x42, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xaf, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f,
	0x6e, 0x6c, 0x79, 0x56, 0x32, 0x12, 0x46, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x73, 0x56, 0x32, 0x12, 0x43, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xa9, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x56, 0x32, 0x12, 0x44,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb8, 0x01,
	0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x56, 0x32, 0x12,
	0x49, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xac, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x73, 0x56, 0x32, 0x12, 0x45, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xac, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x56, 0x32, 0x12, 0x45, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x76, 0x32, 0x2f, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescOnce sync.Once
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescData = file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDesc
)

func file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescGZIP() []byte {
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescOnce.Do(func() {
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescData)
	})
	return file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDescData
}

var file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_goTypes = []interface{}{
	(*AppUserThirdPartyReq)(nil),                // 0: app.user.manager.appuserthirdparty.v2.AppUserThirdPartyReq
	(*AppUserThirdParty)(nil),                   // 1: app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	(*CreateAppUserThirdPartyRequest)(nil),      // 2: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyRequest
	(*CreateAppUserThirdPartyResponse)(nil),     // 3: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyResponse
	(*CreateAppUserThirdPartysRequest)(nil),     // 4: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysRequest
	(*CreateAppUserThirdPartysResponse)(nil),    // 5: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysResponse
	(*GetAppUserThirdPartyRequest)(nil),         // 6: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyRequest
	(*GetAppUserThirdPartyResponse)(nil),        // 7: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyResponse
	(*Conds)(nil),                               // 8: app.user.manager.appuserthirdparty.v2.Conds
	(*GetAppUserThirdPartysRequest)(nil),        // 9: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysRequest
	(*GetAppUserThirdPartysResponse)(nil),       // 10: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysResponse
	(*GetAppUserThirdPartyOnlyRequest)(nil),     // 11: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyRequest
	(*GetAppUserThirdPartyOnlyResponse)(nil),    // 12: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyResponse
	(*UpdateAppUserThirdPartyRequest)(nil),      // 13: app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyRequest
	(*UpdateAppUserThirdPartyResponse)(nil),     // 14: app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyResponse
	(*ExistAppUserThirdPartyRequest)(nil),       // 15: app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyRequest
	(*ExistAppUserThirdPartyResponse)(nil),      // 16: app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyResponse
	(*ExistAppUserThirdPartyCondsRequest)(nil),  // 17: app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyCondsRequest
	(*ExistAppUserThirdPartyCondsResponse)(nil), // 18: app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyCondsResponse
	(*CountAppUserThirdPartysRequest)(nil),      // 19: app.user.manager.appuserthirdparty.v2.CountAppUserThirdPartysRequest
	(*CountAppUserThirdPartysResponse)(nil),     // 20: app.user.manager.appuserthirdparty.v2.CountAppUserThirdPartysResponse
	(*DeleteAppUserThirdPartyRequest)(nil),      // 21: app.user.manager.appuserthirdparty.v2.DeleteAppUserThirdPartyRequest
	(*DeleteAppUserThirdPartyResponse)(nil),     // 22: app.user.manager.appuserthirdparty.v2.DeleteAppUserThirdPartyResponse
	(*npool.StringVal)(nil),                     // 23: npool.v1.StringVal
}
var file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_depIdxs = []int32{
	0,  // 0: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyRequest.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdPartyReq
	1,  // 1: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyResponse.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	0,  // 2: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysRequest.Infos:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdPartyReq
	1,  // 3: app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysResponse.Infos:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	1,  // 4: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyResponse.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	23, // 5: app.user.manager.appuserthirdparty.v2.Conds.UserID:type_name -> npool.v1.StringVal
	23, // 6: app.user.manager.appuserthirdparty.v2.Conds.ThirdPartyUserID:type_name -> npool.v1.StringVal
	23, // 7: app.user.manager.appuserthirdparty.v2.Conds.ThirdPartyID:type_name -> npool.v1.StringVal
	23, // 8: app.user.manager.appuserthirdparty.v2.Conds.ThirdPartyUsername:type_name -> npool.v1.StringVal
	23, // 9: app.user.manager.appuserthirdparty.v2.Conds.ThirdPartyUserAvatar:type_name -> npool.v1.StringVal
	23, // 10: app.user.manager.appuserthirdparty.v2.Conds.ID:type_name -> npool.v1.StringVal
	23, // 11: app.user.manager.appuserthirdparty.v2.Conds.AppID:type_name -> npool.v1.StringVal
	8,  // 12: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysRequest.Conds:type_name -> app.user.manager.appuserthirdparty.v2.Conds
	1,  // 13: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysResponse.Infos:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	8,  // 14: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyRequest.Conds:type_name -> app.user.manager.appuserthirdparty.v2.Conds
	1,  // 15: app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyResponse.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	0,  // 16: app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyRequest.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdPartyReq
	1,  // 17: app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyResponse.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	8,  // 18: app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyCondsRequest.Conds:type_name -> app.user.manager.appuserthirdparty.v2.Conds
	8,  // 19: app.user.manager.appuserthirdparty.v2.CountAppUserThirdPartysRequest.Conds:type_name -> app.user.manager.appuserthirdparty.v2.Conds
	1,  // 20: app.user.manager.appuserthirdparty.v2.DeleteAppUserThirdPartyResponse.Info:type_name -> app.user.manager.appuserthirdparty.v2.AppUserThirdParty
	2,  // 21: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CreateAppUserThirdPartyV2:input_type -> app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyRequest
	4,  // 22: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CreateAppUserThirdPartysV2:input_type -> app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysRequest
	13, // 23: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.UpdateAppUserThirdPartyV2:input_type -> app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyRequest
	6,  // 24: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartyV2:input_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyRequest
	11, // 25: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartyOnlyV2:input_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyRequest
	9,  // 26: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartysV2:input_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysRequest
	15, // 27: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.ExistAppUserThirdPartyV2:input_type -> app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyRequest
	17, // 28: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.ExistAppUserThirdPartyCondsV2:input_type -> app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyCondsRequest
	19, // 29: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CountAppUserThirdPartysV2:input_type -> app.user.manager.appuserthirdparty.v2.CountAppUserThirdPartysRequest
	21, // 30: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.DeleteAppUserThirdPartyV2:input_type -> app.user.manager.appuserthirdparty.v2.DeleteAppUserThirdPartyRequest
	3,  // 31: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CreateAppUserThirdPartyV2:output_type -> app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartyResponse
	5,  // 32: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CreateAppUserThirdPartysV2:output_type -> app.user.manager.appuserthirdparty.v2.CreateAppUserThirdPartysResponse
	14, // 33: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.UpdateAppUserThirdPartyV2:output_type -> app.user.manager.appuserthirdparty.v2.UpdateAppUserThirdPartyResponse
	7,  // 34: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartyV2:output_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyResponse
	12, // 35: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartyOnlyV2:output_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartyOnlyResponse
	10, // 36: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.GetAppUserThirdPartysV2:output_type -> app.user.manager.appuserthirdparty.v2.GetAppUserThirdPartysResponse
	16, // 37: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.ExistAppUserThirdPartyV2:output_type -> app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyResponse
	18, // 38: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.ExistAppUserThirdPartyCondsV2:output_type -> app.user.manager.appuserthirdparty.v2.ExistAppUserThirdPartyCondsResponse
	20, // 39: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.CountAppUserThirdPartysV2:output_type -> app.user.manager.appuserthirdparty.v2.CountAppUserThirdPartysResponse
	22, // 40: app.user.manager.appuserthirdparty.v2.AppUserManagerAppUserThirdParty.DeleteAppUserThirdPartyV2:output_type -> app.user.manager.appuserthirdparty.v2.DeleteAppUserThirdPartyResponse
	31, // [31:41] is the sub-list for method output_type
	21, // [21:31] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_init() }
func file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_init() {
	if File_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUserThirdPartyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUserThirdParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserThirdPartysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserThirdPartysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartyOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserThirdPartyOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserThirdPartyCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserThirdPartyCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppUserThirdPartysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppUserThirdPartysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppUserThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppUserThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_goTypes,
		DependencyIndexes: file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_depIdxs,
		MessageInfos:      file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_msgTypes,
	}.Build()
	File_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto = out.File
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_rawDesc = nil
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_goTypes = nil
	file_npool_appusermgrv2_appuserthirdparty_appuserthirdparty_proto_depIdxs = nil
}
