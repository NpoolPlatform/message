// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/appusermgrv2/appusersecret/appusersecret.proto

package appusersecret

import (
	_ "github.com/NpoolPlatform/message/npool"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppUserSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *string `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	AppID        *string `protobuf:"bytes,20,opt,name=AppID,proto3,oneof" json:"AppID,omitempty"`
	UserID       *string `protobuf:"bytes,30,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	PasswordHash *string `protobuf:"bytes,40,opt,name=PasswordHash,proto3,oneof" json:"PasswordHash,omitempty"`
	Salt         *string `protobuf:"bytes,50,opt,name=Salt,proto3,oneof" json:"Salt,omitempty"`
	GoogleSecret *string `protobuf:"bytes,60,opt,name=GoogleSecret,proto3,oneof" json:"GoogleSecret,omitempty"`
}

func (x *AppUserSecret) Reset() {
	*x = AppUserSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUserSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUserSecret) ProtoMessage() {}

func (x *AppUserSecret) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUserSecret.ProtoReflect.Descriptor instead.
func (*AppUserSecret) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{0}
}

func (x *AppUserSecret) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *AppUserSecret) GetAppID() string {
	if x != nil && x.AppID != nil {
		return *x.AppID
	}
	return ""
}

func (x *AppUserSecret) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *AppUserSecret) GetPasswordHash() string {
	if x != nil && x.PasswordHash != nil {
		return *x.PasswordHash
	}
	return ""
}

func (x *AppUserSecret) GetSalt() string {
	if x != nil && x.Salt != nil {
		return *x.Salt
	}
	return ""
}

func (x *AppUserSecret) GetGoogleSecret() string {
	if x != nil && x.GoogleSecret != nil {
		return *x.GoogleSecret
	}
	return ""
}

type AppUserSecretRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID       string `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PasswordHash string `protobuf:"bytes,40,opt,name=PasswordHash,proto3" json:"PasswordHash,omitempty"`
	Salt         string `protobuf:"bytes,50,opt,name=Salt,proto3" json:"Salt,omitempty"`
	GoogleSecret string `protobuf:"bytes,60,opt,name=GoogleSecret,proto3" json:"GoogleSecret,omitempty"`
}

func (x *AppUserSecretRes) Reset() {
	*x = AppUserSecretRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUserSecretRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUserSecretRes) ProtoMessage() {}

func (x *AppUserSecretRes) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUserSecretRes.ProtoReflect.Descriptor instead.
func (*AppUserSecretRes) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{1}
}

func (x *AppUserSecretRes) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AppUserSecretRes) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AppUserSecretRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AppUserSecretRes) GetPasswordHash() string {
	if x != nil {
		return x.PasswordHash
	}
	return ""
}

func (x *AppUserSecretRes) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *AppUserSecretRes) GetGoogleSecret() string {
	if x != nil {
		return x.GoogleSecret
	}
	return ""
}

type CreateAppUserSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecret `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserSecretRequest) Reset() {
	*x = CreateAppUserSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserSecretRequest) ProtoMessage() {}

func (x *CreateAppUserSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserSecretRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserSecretRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAppUserSecretRequest) GetInfo() *AppUserSecret {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecretRes `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateAppUserSecretResponse) Reset() {
	*x = CreateAppUserSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserSecretResponse) ProtoMessage() {}

func (x *CreateAppUserSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserSecretResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserSecretResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppUserSecretResponse) GetInfo() *AppUserSecretRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAppUserSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserSecret `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppUserSecretsRequest) Reset() {
	*x = CreateAppUserSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserSecretsRequest) ProtoMessage() {}

func (x *CreateAppUserSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserSecretsRequest.ProtoReflect.Descriptor instead.
func (*CreateAppUserSecretsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAppUserSecretsRequest) GetInfos() []*AppUserSecret {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateAppUserSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserSecretRes `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateAppUserSecretsResponse) Reset() {
	*x = CreateAppUserSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppUserSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppUserSecretsResponse) ProtoMessage() {}

func (x *CreateAppUserSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppUserSecretsResponse.ProtoReflect.Descriptor instead.
func (*CreateAppUserSecretsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAppUserSecretsResponse) GetInfos() []*AppUserSecretRes {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetAppUserSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetAppUserSecretRequest) Reset() {
	*x = GetAppUserSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretRequest) ProtoMessage() {}

func (x *GetAppUserSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppUserSecretRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetAppUserSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecretRes `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppUserSecretResponse) Reset() {
	*x = GetAppUserSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretResponse) ProtoMessage() {}

func (x *GetAppUserSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{7}
}

func (x *GetAppUserSecretResponse) GetInfo() *AppUserSecretRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type IDVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *IDVal) Reset() {
	*x = IDVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDVal) ProtoMessage() {}

func (x *IDVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDVal.ProtoReflect.Descriptor instead.
func (*IDVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{8}
}

func (x *IDVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *IDVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type AppIDVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *AppIDVal) Reset() {
	*x = AppIDVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppIDVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppIDVal) ProtoMessage() {}

func (x *AppIDVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppIDVal.ProtoReflect.Descriptor instead.
func (*AppIDVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{9}
}

func (x *AppIDVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AppIDVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type UserIDVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *UserIDVal) Reset() {
	*x = UserIDVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIDVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIDVal) ProtoMessage() {}

func (x *UserIDVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIDVal.ProtoReflect.Descriptor instead.
func (*UserIDVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{10}
}

func (x *UserIDVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserIDVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type PasswordHashVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *PasswordHashVal) Reset() {
	*x = PasswordHashVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordHashVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordHashVal) ProtoMessage() {}

func (x *PasswordHashVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordHashVal.ProtoReflect.Descriptor instead.
func (*PasswordHashVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{11}
}

func (x *PasswordHashVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PasswordHashVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type SaltVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *SaltVal) Reset() {
	*x = SaltVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaltVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaltVal) ProtoMessage() {}

func (x *SaltVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaltVal.ProtoReflect.Descriptor instead.
func (*SaltVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{12}
}

func (x *SaltVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SaltVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type GoogleSecretVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,10,opt,name=Value,proto3" json:"Value,omitempty"`
	Op    string `protobuf:"bytes,20,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *GoogleSecretVal) Reset() {
	*x = GoogleSecretVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleSecretVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleSecretVal) ProtoMessage() {}

func (x *GoogleSecretVal) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleSecretVal.ProtoReflect.Descriptor instead.
func (*GoogleSecretVal) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{13}
}

func (x *GoogleSecretVal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GoogleSecretVal) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *IDVal           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        *AppIDVal        `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID       *UserIDVal       `protobuf:"bytes,30,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PasswordHash *PasswordHashVal `protobuf:"bytes,40,opt,name=PasswordHash,proto3" json:"PasswordHash,omitempty"`
	Salt         *SaltVal         `protobuf:"bytes,50,opt,name=Salt,proto3" json:"Salt,omitempty"`
	GoogleSecret *GoogleSecretVal `protobuf:"bytes,60,opt,name=GoogleSecret,proto3" json:"GoogleSecret,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{14}
}

func (x *Conds) GetID() *IDVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetAppID() *AppIDVal {
	if x != nil {
		return x.AppID
	}
	return nil
}

func (x *Conds) GetUserID() *UserIDVal {
	if x != nil {
		return x.UserID
	}
	return nil
}

func (x *Conds) GetPasswordHash() *PasswordHashVal {
	if x != nil {
		return x.PasswordHash
	}
	return nil
}

func (x *Conds) GetSalt() *SaltVal {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *Conds) GetGoogleSecret() *GoogleSecretVal {
	if x != nil {
		return x.GoogleSecret
	}
	return nil
}

type GetAppUserSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetAppUserSecretsRequest) Reset() {
	*x = GetAppUserSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretsRequest) ProtoMessage() {}

func (x *GetAppUserSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretsRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppUserSecretsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetAppUserSecretsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAppUserSecretsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAppUserSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*AppUserSecretRes `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32              `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetAppUserSecretsResponse) Reset() {
	*x = GetAppUserSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretsResponse) ProtoMessage() {}

func (x *GetAppUserSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretsResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{16}
}

func (x *GetAppUserSecretsResponse) GetInfos() []*AppUserSecretRes {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAppUserSecretsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAppUserSecretOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetAppUserSecretOnlyRequest) Reset() {
	*x = GetAppUserSecretOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretOnlyRequest) ProtoMessage() {}

func (x *GetAppUserSecretOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{17}
}

func (x *GetAppUserSecretOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetAppUserSecretOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecretRes `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetAppUserSecretOnlyResponse) Reset() {
	*x = GetAppUserSecretOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppUserSecretOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppUserSecretOnlyResponse) ProtoMessage() {}

func (x *GetAppUserSecretOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppUserSecretOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetAppUserSecretOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{18}
}

func (x *GetAppUserSecretOnlyResponse) GetInfo() *AppUserSecretRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppUserSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecret `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppUserSecretRequest) Reset() {
	*x = UpdateAppUserSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserSecretRequest) ProtoMessage() {}

func (x *UpdateAppUserSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserSecretRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppUserSecretRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAppUserSecretRequest) GetInfo() *AppUserSecret {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAppUserSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecretRes `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateAppUserSecretResponse) Reset() {
	*x = UpdateAppUserSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppUserSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppUserSecretResponse) ProtoMessage() {}

func (x *UpdateAppUserSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppUserSecretResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppUserSecretResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAppUserSecretResponse) GetInfo() *AppUserSecretRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistAppUserSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistAppUserSecretRequest) Reset() {
	*x = ExistAppUserSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserSecretRequest) ProtoMessage() {}

func (x *ExistAppUserSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserSecretRequest.ProtoReflect.Descriptor instead.
func (*ExistAppUserSecretRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{21}
}

func (x *ExistAppUserSecretRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistAppUserSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppUserSecretResponse) Reset() {
	*x = ExistAppUserSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserSecretResponse) ProtoMessage() {}

func (x *ExistAppUserSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserSecretResponse.ProtoReflect.Descriptor instead.
func (*ExistAppUserSecretResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{22}
}

func (x *ExistAppUserSecretResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type ExistAppUserSecretCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistAppUserSecretCondsRequest) Reset() {
	*x = ExistAppUserSecretCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserSecretCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserSecretCondsRequest) ProtoMessage() {}

func (x *ExistAppUserSecretCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserSecretCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistAppUserSecretCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{23}
}

func (x *ExistAppUserSecretCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistAppUserSecretCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info bool `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ExistAppUserSecretCondsResponse) Reset() {
	*x = ExistAppUserSecretCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistAppUserSecretCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistAppUserSecretCondsResponse) ProtoMessage() {}

func (x *ExistAppUserSecretCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistAppUserSecretCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistAppUserSecretCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{24}
}

func (x *ExistAppUserSecretCondsResponse) GetInfo() bool {
	if x != nil {
		return x.Info
	}
	return false
}

type CountAppUserSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountAppUserSecretsRequest) Reset() {
	*x = CountAppUserSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppUserSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppUserSecretsRequest) ProtoMessage() {}

func (x *CountAppUserSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppUserSecretsRequest.ProtoReflect.Descriptor instead.
func (*CountAppUserSecretsRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{25}
}

func (x *CountAppUserSecretsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountAppUserSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountAppUserSecretsResponse) Reset() {
	*x = CountAppUserSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAppUserSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAppUserSecretsResponse) ProtoMessage() {}

func (x *CountAppUserSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAppUserSecretsResponse.ProtoReflect.Descriptor instead.
func (*CountAppUserSecretsResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{26}
}

func (x *CountAppUserSecretsResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

type DeleteAppUserSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteAppUserSecretRequest) Reset() {
	*x = DeleteAppUserSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppUserSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppUserSecretRequest) ProtoMessage() {}

func (x *DeleteAppUserSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppUserSecretRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppUserSecretRequest) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAppUserSecretRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteAppUserSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AppUserSecretRes `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteAppUserSecretResponse) Reset() {
	*x = DeleteAppUserSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppUserSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppUserSecretResponse) ProtoMessage() {}

func (x *DeleteAppUserSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppUserSecretResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppUserSecretResponse) Descriptor() ([]byte, []int) {
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteAppUserSecretResponse) GetInfo() *AppUserSecretRes {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_appusermgrv2_appusersecret_appusersecret_proto protoreflect.FileDescriptor

var file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDesc = []byte{
	0x0a, 0x34, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x72, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x0d, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x13, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x0c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x61, 0x6c, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x10,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x62, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x69, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x05, 0x49, 0x44, 0x56, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x22, 0x30, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x56, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x22, 0x31, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x56, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x4f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x22, 0x37, 0x0a, 0x0f,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x4f, 0x70, 0x22, 0x2f, 0x0a, 0x07, 0x53, 0x61, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x22, 0x37, 0x0a, 0x0f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x70, 0x22,
	0xba, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x44, 0x56, 0x61, 0x6c, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x44, 0x56, 0x61, 0x6c, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x56, 0x0a, 0x0c,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48,
	0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x52, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x61, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x52, 0x04,
	0x53, 0x61, 0x6c, 0x74, 0x12, 0x56, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x52, 0x0c,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x88, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x66, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x1e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x1f, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5c, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x31, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x66, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xab, 0x0c, 0x0a, 0x1b, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x56, 0x32, 0x12, 0x3d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x56, 0x32, 0x12, 0x3e,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x32, 0x12, 0x3d, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x56, 0x32, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x56, 0x32, 0x12, 0x3e, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x56, 0x32, 0x12, 0x3b, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x32, 0x12, 0x3c, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa4, 0x01, 0x0a, 0x19, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x56, 0x32, 0x12, 0x41, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x98, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x56, 0x32, 0x12, 0x3d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x56, 0x32, 0x12, 0x3d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x76, 0x32, 0x2f, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescOnce sync.Once
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescData = file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDesc
)

func file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescGZIP() []byte {
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescOnce.Do(func() {
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescData)
	})
	return file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDescData
}

var file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_npool_appusermgrv2_appusersecret_appusersecret_proto_goTypes = []interface{}{
	(*AppUserSecret)(nil),                   // 0: app.user.manager.appusersecret.v2.AppUserSecret
	(*AppUserSecretRes)(nil),                // 1: app.user.manager.appusersecret.v2.AppUserSecretRes
	(*CreateAppUserSecretRequest)(nil),      // 2: app.user.manager.appusersecret.v2.CreateAppUserSecretRequest
	(*CreateAppUserSecretResponse)(nil),     // 3: app.user.manager.appusersecret.v2.CreateAppUserSecretResponse
	(*CreateAppUserSecretsRequest)(nil),     // 4: app.user.manager.appusersecret.v2.CreateAppUserSecretsRequest
	(*CreateAppUserSecretsResponse)(nil),    // 5: app.user.manager.appusersecret.v2.CreateAppUserSecretsResponse
	(*GetAppUserSecretRequest)(nil),         // 6: app.user.manager.appusersecret.v2.GetAppUserSecretRequest
	(*GetAppUserSecretResponse)(nil),        // 7: app.user.manager.appusersecret.v2.GetAppUserSecretResponse
	(*IDVal)(nil),                           // 8: app.user.manager.appusersecret.v2.IDVal
	(*AppIDVal)(nil),                        // 9: app.user.manager.appusersecret.v2.AppIDVal
	(*UserIDVal)(nil),                       // 10: app.user.manager.appusersecret.v2.UserIDVal
	(*PasswordHashVal)(nil),                 // 11: app.user.manager.appusersecret.v2.PasswordHashVal
	(*SaltVal)(nil),                         // 12: app.user.manager.appusersecret.v2.SaltVal
	(*GoogleSecretVal)(nil),                 // 13: app.user.manager.appusersecret.v2.GoogleSecretVal
	(*Conds)(nil),                           // 14: app.user.manager.appusersecret.v2.Conds
	(*GetAppUserSecretsRequest)(nil),        // 15: app.user.manager.appusersecret.v2.GetAppUserSecretsRequest
	(*GetAppUserSecretsResponse)(nil),       // 16: app.user.manager.appusersecret.v2.GetAppUserSecretsResponse
	(*GetAppUserSecretOnlyRequest)(nil),     // 17: app.user.manager.appusersecret.v2.GetAppUserSecretOnlyRequest
	(*GetAppUserSecretOnlyResponse)(nil),    // 18: app.user.manager.appusersecret.v2.GetAppUserSecretOnlyResponse
	(*UpdateAppUserSecretRequest)(nil),      // 19: app.user.manager.appusersecret.v2.UpdateAppUserSecretRequest
	(*UpdateAppUserSecretResponse)(nil),     // 20: app.user.manager.appusersecret.v2.UpdateAppUserSecretResponse
	(*ExistAppUserSecretRequest)(nil),       // 21: app.user.manager.appusersecret.v2.ExistAppUserSecretRequest
	(*ExistAppUserSecretResponse)(nil),      // 22: app.user.manager.appusersecret.v2.ExistAppUserSecretResponse
	(*ExistAppUserSecretCondsRequest)(nil),  // 23: app.user.manager.appusersecret.v2.ExistAppUserSecretCondsRequest
	(*ExistAppUserSecretCondsResponse)(nil), // 24: app.user.manager.appusersecret.v2.ExistAppUserSecretCondsResponse
	(*CountAppUserSecretsRequest)(nil),      // 25: app.user.manager.appusersecret.v2.CountAppUserSecretsRequest
	(*CountAppUserSecretsResponse)(nil),     // 26: app.user.manager.appusersecret.v2.CountAppUserSecretsResponse
	(*DeleteAppUserSecretRequest)(nil),      // 27: app.user.manager.appusersecret.v2.DeleteAppUserSecretRequest
	(*DeleteAppUserSecretResponse)(nil),     // 28: app.user.manager.appusersecret.v2.DeleteAppUserSecretResponse
}
var file_npool_appusermgrv2_appusersecret_appusersecret_proto_depIdxs = []int32{
	0,  // 0: app.user.manager.appusersecret.v2.CreateAppUserSecretRequest.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecret
	1,  // 1: app.user.manager.appusersecret.v2.CreateAppUserSecretResponse.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	0,  // 2: app.user.manager.appusersecret.v2.CreateAppUserSecretsRequest.Infos:type_name -> app.user.manager.appusersecret.v2.AppUserSecret
	1,  // 3: app.user.manager.appusersecret.v2.CreateAppUserSecretsResponse.Infos:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	1,  // 4: app.user.manager.appusersecret.v2.GetAppUserSecretResponse.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	8,  // 5: app.user.manager.appusersecret.v2.Conds.ID:type_name -> app.user.manager.appusersecret.v2.IDVal
	9,  // 6: app.user.manager.appusersecret.v2.Conds.AppID:type_name -> app.user.manager.appusersecret.v2.AppIDVal
	10, // 7: app.user.manager.appusersecret.v2.Conds.UserID:type_name -> app.user.manager.appusersecret.v2.UserIDVal
	11, // 8: app.user.manager.appusersecret.v2.Conds.PasswordHash:type_name -> app.user.manager.appusersecret.v2.PasswordHashVal
	12, // 9: app.user.manager.appusersecret.v2.Conds.Salt:type_name -> app.user.manager.appusersecret.v2.SaltVal
	13, // 10: app.user.manager.appusersecret.v2.Conds.GoogleSecret:type_name -> app.user.manager.appusersecret.v2.GoogleSecretVal
	14, // 11: app.user.manager.appusersecret.v2.GetAppUserSecretsRequest.Conds:type_name -> app.user.manager.appusersecret.v2.Conds
	1,  // 12: app.user.manager.appusersecret.v2.GetAppUserSecretsResponse.Infos:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	14, // 13: app.user.manager.appusersecret.v2.GetAppUserSecretOnlyRequest.Conds:type_name -> app.user.manager.appusersecret.v2.Conds
	1,  // 14: app.user.manager.appusersecret.v2.GetAppUserSecretOnlyResponse.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	0,  // 15: app.user.manager.appusersecret.v2.UpdateAppUserSecretRequest.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecret
	1,  // 16: app.user.manager.appusersecret.v2.UpdateAppUserSecretResponse.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	14, // 17: app.user.manager.appusersecret.v2.ExistAppUserSecretCondsRequest.Conds:type_name -> app.user.manager.appusersecret.v2.Conds
	14, // 18: app.user.manager.appusersecret.v2.CountAppUserSecretsRequest.Conds:type_name -> app.user.manager.appusersecret.v2.Conds
	1,  // 19: app.user.manager.appusersecret.v2.DeleteAppUserSecretResponse.Info:type_name -> app.user.manager.appusersecret.v2.AppUserSecretRes
	2,  // 20: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CreateAppUserSecretV2:input_type -> app.user.manager.appusersecret.v2.CreateAppUserSecretRequest
	4,  // 21: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CreateAppUserSecretsV2:input_type -> app.user.manager.appusersecret.v2.CreateAppUserSecretsRequest
	19, // 22: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.UpdateAppUserSecretV2:input_type -> app.user.manager.appusersecret.v2.UpdateAppUserSecretRequest
	6,  // 23: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretV2:input_type -> app.user.manager.appusersecret.v2.GetAppUserSecretRequest
	17, // 24: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretOnlyV2:input_type -> app.user.manager.appusersecret.v2.GetAppUserSecretOnlyRequest
	15, // 25: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretsV2:input_type -> app.user.manager.appusersecret.v2.GetAppUserSecretsRequest
	21, // 26: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.ExistAppUserSecretV2:input_type -> app.user.manager.appusersecret.v2.ExistAppUserSecretRequest
	23, // 27: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.ExistAppUserSecretCondsV2:input_type -> app.user.manager.appusersecret.v2.ExistAppUserSecretCondsRequest
	25, // 28: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CountAppUserSecretsV2:input_type -> app.user.manager.appusersecret.v2.CountAppUserSecretsRequest
	27, // 29: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.DeleteAppUserSecretV2:input_type -> app.user.manager.appusersecret.v2.DeleteAppUserSecretRequest
	3,  // 30: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CreateAppUserSecretV2:output_type -> app.user.manager.appusersecret.v2.CreateAppUserSecretResponse
	5,  // 31: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CreateAppUserSecretsV2:output_type -> app.user.manager.appusersecret.v2.CreateAppUserSecretsResponse
	20, // 32: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.UpdateAppUserSecretV2:output_type -> app.user.manager.appusersecret.v2.UpdateAppUserSecretResponse
	7,  // 33: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretV2:output_type -> app.user.manager.appusersecret.v2.GetAppUserSecretResponse
	18, // 34: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretOnlyV2:output_type -> app.user.manager.appusersecret.v2.GetAppUserSecretOnlyResponse
	16, // 35: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.GetAppUserSecretsV2:output_type -> app.user.manager.appusersecret.v2.GetAppUserSecretsResponse
	22, // 36: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.ExistAppUserSecretV2:output_type -> app.user.manager.appusersecret.v2.ExistAppUserSecretResponse
	24, // 37: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.ExistAppUserSecretCondsV2:output_type -> app.user.manager.appusersecret.v2.ExistAppUserSecretCondsResponse
	26, // 38: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.CountAppUserSecretsV2:output_type -> app.user.manager.appusersecret.v2.CountAppUserSecretsResponse
	28, // 39: app.user.manager.appusersecret.v2.AppUserManagerAppUserSecret.DeleteAppUserSecretV2:output_type -> app.user.manager.appusersecret.v2.DeleteAppUserSecretResponse
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_npool_appusermgrv2_appusersecret_appusersecret_proto_init() }
func file_npool_appusermgrv2_appusersecret_appusersecret_proto_init() {
	if File_npool_appusermgrv2_appusersecret_appusersecret_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUserSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUserSecretRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppUserSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppIDVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIDVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordHashVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaltVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleSecretVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppUserSecretOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppUserSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserSecretCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistAppUserSecretCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppUserSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAppUserSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppUserSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppUserSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_appusermgrv2_appusersecret_appusersecret_proto_goTypes,
		DependencyIndexes: file_npool_appusermgrv2_appusersecret_appusersecret_proto_depIdxs,
		MessageInfos:      file_npool_appusermgrv2_appusersecret_appusersecret_proto_msgTypes,
	}.Build()
	File_npool_appusermgrv2_appusersecret_appusersecret_proto = out.File
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_rawDesc = nil
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_goTypes = nil
	file_npool_appusermgrv2_appusersecret_appusersecret_proto_depIdxs = nil
}
