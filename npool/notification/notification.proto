syntax = "proto3";

package notification.v1;

option go_package = "github.com/NpoolPlatform/notification/message/npool";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

// Service Name
service Notification {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc CreateAnnouncement(CreateAnnouncementRequest) returns (CreateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/create/announcement"
            body: "*"
        };
    }
    rpc CreateAnnouncementForOtherApp(CreateAnnouncementForOtherAppRequest) returns (CreateAnnouncementForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/announcement/for/other/app"
            body: "*"
        };
    }
    rpc UpdateAnnouncement(UpdateAnnouncementRequest) returns (UpdateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/v1/update/announcement"
            body: "*"
        };
    }
    rpc GetAnnouncementsByApp(GetAnnouncementsByAppRequest) returns (GetAnnouncementsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/announcements/by/app"
            body: "*"
        };
    }
    rpc GetAnnouncementsByOtherApp(GetAnnouncementsByOtherAppRequest) returns (GetAnnouncementsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/announcements/by/other/app"
            body: "*"
        };
    }

    rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse) {
        option (google.api.http) = {
            post: "/v1/create/notification"
            body: "*"
        };
    }
    rpc CreateNotificationForAppOtherUser(CreateNotificationForAppOtherUserRequest) returns (CreateNotificationForAppOtherUserResponse) {
        option (google.api.http) = {
            post: "/v1/create/notification/for/app/other/user"
            body: "*"
        };
    }
    rpc CreateNotificationForOtherAppUser(CreateNotificationForOtherAppUserRequest) returns (CreateNotificationForOtherAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/create/notification/for/other/app/user"
            body: "*"
        };
    }
    rpc UpdateNotification(UpdateNotificationRequest) returns (UpdateNotificationResponse) {
        option (google.api.http) = {
            post: "/v1/update/notification"
            body: "*"
        };
    }
    rpc GetNotificationsByAppUser(GetNotificationsByAppUserRequest) returns (GetNotificationsByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/notifications/by/app/user"
            body: "*"
        };
    }
    rpc GetNotificationsByApp(GetNotificationsByAppRequest) returns (GetNotificationsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/notifications/by/app"
            body: "*"
        };
    }
    rpc GetNotificationsByOtherApp(GetNotificationsByOtherAppRequest) returns (GetNotificationsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/notifications/by/other/app"
            body: "*"
        };
    }

    rpc CreateReadUser(CreateReadUserRequest) returns (CreateReadUserResponse) {
        option (google.api.http) = {
            post: "/v1/create/read/user"
            body: "*"
        };
    }
    rpc CheckReadUser(CheckReadUserRequest) returns (CheckReadUserResponse) {
        option (google.api.http) = {
            post: "/v1/check/read/user"
            body: "*"
        };
    }

    rpc CreateMail(CreateMailRequest) returns (CreateMailResponse) {
        option (google.api.http) = {
            post: "/v1/create/mail"
            body: "*"
        };
    }
    rpc CreateMailForOtherAppUser(CreateMailForOtherAppUserRequest) returns (CreateMailForOtherAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/create/mail/for/other/app/user"
            body: "*"
        };
    }
    rpc UpdateMail(UpdateMailRequest) returns (UpdateMailResponse) {
        option (google.api.http) = {
            post: "/v1/update/mail"
            body: "*"
        };
    }
    rpc GetMails(GetMailsRequest) returns (GetMailsResponse) {
        option (google.api.http) = {
            post: "/v1/get/mails"
            body: "*"
        };
    }
    rpc GetMailsByApp(GetMailsByAppRequest) returns (GetMailsByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/mails/by/app"
            body: "*"
        };
    }
    rpc GetMailsByOtherApp(GetMailsByOtherAppRequest) returns (GetMailsByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/mails/by/other/app"
            body: "*"
        };
    }

    rpc CreateTemplate (CreateTemplateRequest) returns (CreateTemplateResponse) {
        option (google.api.http) = {
            post: "/v1/create/template"
            body: "*"
        };
    }
    rpc CreateTemplateForOtherApp (CreateTemplateForOtherAppRequest) returns (CreateTemplateForOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/create/template/for/other/app"
            body: "*"
        };
    }
    rpc GetTemplate (GetTemplateRequest) returns (GetTemplateResponse) {
        option (google.api.http) = {
            post: "/v1/get/template"
            body: "*"
        };
    }
    rpc UpdateTemplate (UpdateTemplateRequest) returns (UpdateTemplateResponse) {
        option (google.api.http) = {
            post: "/v1/update/template"
            body: "*"
        };
    }
    rpc GetTemplatesByApp (GetTemplatesByAppRequest) returns (GetTemplatesByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/templates/by/app"
            body: "*"
        };
    }
    rpc GetTemplatesByOtherApp (GetTemplatesByOtherAppRequest) returns (GetTemplatesByOtherAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/templates/by/other/app"
            body: "*"
        };
    }
    rpc GetTemplateByAppLangUsedFor (GetTemplateByAppLangUsedForRequest) returns (GetTemplateByAppLangUsedForResponse) {
        option (google.api.http) = {
            post: "/v1/get/template/by/app/lang/usedfor"
            body: "*"
        };
    }
}


message Announcement {
    string ID = 10;
    string AppID = 20;
    string Title = 30;
    string Content = 40;
    uint32 CreateAt = 50;
}

message CreateAnnouncementRequest {
    Announcement Info = 10;
}

message CreateAnnouncementResponse {
    Announcement Info = 10;
}

message CreateAnnouncementForOtherAppRequest {
    string TargetAppID = 10;
    Announcement Info = 20;
}

message CreateAnnouncementForOtherAppResponse {
    Announcement Info = 10;
}

message UpdateAnnouncementRequest {
    Announcement Info = 10;
}

message UpdateAnnouncementResponse {
    Announcement Info = 10;
}

message GetAnnouncementsByAppRequest {
    string AppID = 10;
}

message GetAnnouncementsByAppResponse {
    repeated Announcement Infos = 10;
}

message GetAnnouncementsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetAnnouncementsByOtherAppResponse {
    repeated Announcement Infos = 10;
}

message UserNotification {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string Title = 40;
    string Content = 50;
    bool AlreadyRead = 60;
    uint32 CreateAt = 70;
    uint32 UpdateAt = 80;
}

message CreateNotificationRequest {
    UserNotification Info = 10;
    string Message = 20;
    string LangID = 30;
    string UsedFor = 40;
    string UserName = 50;
}

message CreateNotificationResponse {
    UserNotification Info = 10;
}

message CreateNotificationForAppOtherUserRequest {
    string TargetUserID = 10;
    UserNotification Info = 20;
}

message CreateNotificationForAppOtherUserResponse {
    UserNotification Info = 10;
}

message CreateNotificationForOtherAppUserRequest {
    string TargetAppID = 10;
    string TargetUserID = 20;
    UserNotification Info = 30;
}

message CreateNotificationForOtherAppUserResponse {
    UserNotification Info = 10;
}

message UpdateNotificationRequest {
    UserNotification Info = 10;
}

message UpdateNotificationResponse {
    UserNotification Info = 10;
}

message GetNotificationsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetNotificationsByAppUserResponse {
    repeated UserNotification Infos = 10;
}

message GetNotificationsByAppRequest {
    string AppID = 10;
}

message GetNotificationsByAppResponse {
    repeated UserNotification Infos = 10;
}

message GetNotificationsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetNotificationsByOtherAppResponse {
    repeated UserNotification Infos = 10;
}


message ReadUser {
    string ID = 10;
    string AppID = 20;
    string AnnouncementID = 30;
    string UserID = 40;
    uint32 CreateAt = 50;
}

message CreateReadUserRequest {
    ReadUser Info = 10;
}

message CreateReadUserResponse {
    ReadUser Info = 10;
}

message CheckReadUserRequest {
    ReadUser Info = 10;
}

message CheckReadUserResponse {
    ReadUser Info = 10;
}

message Mail {
    string ID = 10;
    string AppID = 20;
    string FromUserID = 30;
    string ToUserID = 40;
    string Title = 50;
    string Content = 60;
    bool AlreadyRead = 70;
    uint32 CreateAt = 80;
}

message CreateMailRequest {
    string UserID = 50;
    Mail Info = 10;
}

message CreateMailResponse {
    Mail Info = 20;
}

message CreateMailForOtherAppUserRequest {
    string TargetAppID = 5;
    string TargetUserID = 6;
    Mail Info = 10;
}

message CreateMailForOtherAppUserResponse {
    Mail Info = 10;
}

message UpdateMailRequest {
    Mail Info = 10;
}

message UpdateMailResponse {
    Mail Info = 10;
}

message GetMailsRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetMailsResponse {
    repeated Mail Infos = 10;
}

message GetMailsByAppRequest {
    string AppID = 10;
}

message GetMailsByAppResponse {
    repeated Mail Infos = 10;
}

message GetMailsByOtherAppRequest {
    string TargetAppID = 10;
}

message GetMailsByOtherAppResponse {
    repeated Mail Infos = 10;
}

message Template {
    string ID = 10;
    string AppID = 20;
    string LangID = 30;
    string UsedFor = 40;
    string Title = 50;
    string Content = 60;
    uint32 CreateAt = 80;
}

message CreateTemplateRequest {
    Template Info = 10;
}

message CreateTemplateResponse {
    Template Info = 10;
}

message CreateTemplateForOtherAppRequest {
    string TargetAppID = 10;
    Template Info = 20;
}

message CreateTemplateForOtherAppResponse {
    Template Info = 10;
}

message GetTemplateRequest {
    string ID = 10;
}

message GetTemplateResponse {
    Template Info = 10;
}

message UpdateTemplateRequest {
    Template Info = 10;
}

message UpdateTemplateResponse {
    Template Info = 10;
}

message GetTemplateByAppLangUsedForRequest {
    string AppID = 10;
    string LangID = 20;
    string UsedFor = 30;
}

message GetTemplateByAppLangUsedForResponse {
    Template Info = 10;
}

message GetTemplatesByAppRequest {
    string AppID = 10;
}

message GetTemplatesByAppResponse {
    repeated Template Infos = 10;
}

message GetTemplatesByOtherAppRequest {
    string TargetAppID = 10;
}

message GetTemplatesByOtherAppResponse {
    repeated Template Infos = 10;
}
