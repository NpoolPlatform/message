// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/gasfeeder/gasfeeder.proto

package gasfeeder

import (
	npool "github.com/NpoolPlatform/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoinGas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinTypeID       string `protobuf:"bytes,20,opt,name=CoinTypeID,proto3" json:"CoinTypeID,omitempty"`
	GasCoinTypeID    string `protobuf:"bytes,30,opt,name=GasCoinTypeID,proto3" json:"GasCoinTypeID,omitempty"`
	DepositThreshold uint64 `protobuf:"varint,40,opt,name=DepositThreshold,proto3" json:"DepositThreshold,omitempty"`
}

func (x *CoinGas) Reset() {
	*x = CoinGas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGas) ProtoMessage() {}

func (x *CoinGas) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGas.ProtoReflect.Descriptor instead.
func (*CoinGas) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{0}
}

func (x *CoinGas) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinGas) GetCoinTypeID() string {
	if x != nil {
		return x.CoinTypeID
	}
	return ""
}

func (x *CoinGas) GetGasCoinTypeID() string {
	if x != nil {
		return x.GasCoinTypeID
	}
	return ""
}

func (x *CoinGas) GetDepositThreshold() uint64 {
	if x != nil {
		return x.DepositThreshold
	}
	return 0
}

type CreateCoinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinGasRequest) Reset() {
	*x = CreateCoinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinGasRequest) ProtoMessage() {}

func (x *CreateCoinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinGasRequest.ProtoReflect.Descriptor instead.
func (*CreateCoinGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCoinGasRequest) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCoinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCoinGasResponse) Reset() {
	*x = CreateCoinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinGasResponse) ProtoMessage() {}

func (x *CreateCoinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinGasResponse.ProtoReflect.Descriptor instead.
func (*CreateCoinGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCoinGasResponse) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinGasRequest) Reset() {
	*x = UpdateCoinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinGasRequest) ProtoMessage() {}

func (x *UpdateCoinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinGasRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoinGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCoinGasRequest) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCoinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCoinGasResponse) Reset() {
	*x = UpdateCoinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCoinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoinGasResponse) ProtoMessage() {}

func (x *UpdateCoinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoinGasResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoinGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCoinGasResponse) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCoinGasRequest) Reset() {
	*x = GetCoinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasRequest) ProtoMessage() {}

func (x *GetCoinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasRequest.ProtoReflect.Descriptor instead.
func (*GetCoinGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{5}
}

func (x *GetCoinGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCoinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinGasResponse) Reset() {
	*x = GetCoinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasResponse) ProtoMessage() {}

func (x *GetCoinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasResponse.ProtoReflect.Descriptor instead.
func (*GetCoinGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{6}
}

func (x *GetCoinGasResponse) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinGasOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCoinGasOnlyRequest) Reset() {
	*x = GetCoinGasOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasOnlyRequest) ProtoMessage() {}

func (x *GetCoinGasOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetCoinGasOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{7}
}

func (x *GetCoinGasOnlyRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetCoinGasOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetCoinGasOnlyResponse) Reset() {
	*x = GetCoinGasOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasOnlyResponse) ProtoMessage() {}

func (x *GetCoinGasOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetCoinGasOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{8}
}

func (x *GetCoinGasOnlyResponse) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetCoinGasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Offset int32                        `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32                        `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetCoinGasesRequest) Reset() {
	*x = GetCoinGasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasesRequest) ProtoMessage() {}

func (x *GetCoinGasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasesRequest.ProtoReflect.Descriptor instead.
func (*GetCoinGasesRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{9}
}

func (x *GetCoinGasesRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetCoinGasesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCoinGasesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCoinGasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CoinGas `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total int32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetCoinGasesResponse) Reset() {
	*x = GetCoinGasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinGasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinGasesResponse) ProtoMessage() {}

func (x *GetCoinGasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinGasesResponse.ProtoReflect.Descriptor instead.
func (*GetCoinGasesResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{10}
}

func (x *GetCoinGasesResponse) GetInfos() []*CoinGas {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetCoinGasesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistCoinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistCoinGasRequest) Reset() {
	*x = ExistCoinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinGasRequest) ProtoMessage() {}

func (x *ExistCoinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinGasRequest.ProtoReflect.Descriptor instead.
func (*ExistCoinGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{11}
}

func (x *ExistCoinGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistCoinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistCoinGasResponse) Reset() {
	*x = ExistCoinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinGasResponse) ProtoMessage() {}

func (x *ExistCoinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinGasResponse.ProtoReflect.Descriptor instead.
func (*ExistCoinGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{12}
}

func (x *ExistCoinGasResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ExistCoinGasCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExistCoinGasCondsRequest) Reset() {
	*x = ExistCoinGasCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinGasCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinGasCondsRequest) ProtoMessage() {}

func (x *ExistCoinGasCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinGasCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistCoinGasCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{13}
}

func (x *ExistCoinGasCondsRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistCoinGasCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistCoinGasCondsResponse) Reset() {
	*x = ExistCoinGasCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistCoinGasCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistCoinGasCondsResponse) ProtoMessage() {}

func (x *ExistCoinGasCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistCoinGasCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistCoinGasCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{14}
}

func (x *ExistCoinGasCondsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CountCoinGasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CountCoinGasesRequest) Reset() {
	*x = CountCoinGasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCoinGasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCoinGasesRequest) ProtoMessage() {}

func (x *CountCoinGasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCoinGasesRequest.ProtoReflect.Descriptor instead.
func (*CountCoinGasesRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{15}
}

func (x *CountCoinGasesRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountCoinGasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CountCoinGasesResponse) Reset() {
	*x = CountCoinGasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCoinGasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCoinGasesResponse) ProtoMessage() {}

func (x *CountCoinGasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCoinGasesResponse.ProtoReflect.Descriptor instead.
func (*CountCoinGasesResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{16}
}

func (x *CountCoinGasesResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type DeleteCoinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteCoinGasRequest) Reset() {
	*x = DeleteCoinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinGasRequest) ProtoMessage() {}

func (x *DeleteCoinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinGasRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoinGasRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteCoinGasRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteCoinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CoinGas `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteCoinGasResponse) Reset() {
	*x = DeleteCoinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinGasResponse) ProtoMessage() {}

func (x *DeleteCoinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinGasResponse.ProtoReflect.Descriptor instead.
func (*DeleteCoinGasResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCoinGasResponse) GetInfo() *CoinGas {
	if x != nil {
		return x.Info
	}
	return nil
}

type Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AccountID     string `protobuf:"bytes,20,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	DepositAmount uint64 `protobuf:"varint,30,opt,name=DepositAmount,proto3" json:"DepositAmount,omitempty"`
}

func (x *Deposit) Reset() {
	*x = Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit) ProtoMessage() {}

func (x *Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit.ProtoReflect.Descriptor instead.
func (*Deposit) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{19}
}

func (x *Deposit) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Deposit) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Deposit) GetDepositAmount() uint64 {
	if x != nil {
		return x.DepositAmount
	}
	return 0
}

type CreateDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDepositRequest) Reset() {
	*x = CreateDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositRequest) ProtoMessage() {}

func (x *CreateDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositRequest.ProtoReflect.Descriptor instead.
func (*CreateDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{20}
}

func (x *CreateDepositRequest) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDepositResponse) Reset() {
	*x = CreateDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositResponse) ProtoMessage() {}

func (x *CreateDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{21}
}

func (x *CreateDepositResponse) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDepositRequest) Reset() {
	*x = UpdateDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepositRequest) ProtoMessage() {}

func (x *UpdateDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepositRequest.ProtoReflect.Descriptor instead.
func (*UpdateDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateDepositRequest) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDepositResponse) Reset() {
	*x = UpdateDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepositResponse) ProtoMessage() {}

func (x *UpdateDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepositResponse.ProtoReflect.Descriptor instead.
func (*UpdateDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateDepositResponse) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetDepositRequest) Reset() {
	*x = GetDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositRequest) ProtoMessage() {}

func (x *GetDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositRequest.ProtoReflect.Descriptor instead.
func (*GetDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{24}
}

func (x *GetDepositRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetDepositResponse) Reset() {
	*x = GetDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositResponse) ProtoMessage() {}

func (x *GetDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositResponse.ProtoReflect.Descriptor instead.
func (*GetDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{25}
}

func (x *GetDepositResponse) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDepositOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDepositOnlyRequest) Reset() {
	*x = GetDepositOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositOnlyRequest) ProtoMessage() {}

func (x *GetDepositOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetDepositOnlyRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{26}
}

func (x *GetDepositOnlyRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetDepositOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetDepositOnlyResponse) Reset() {
	*x = GetDepositOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositOnlyResponse) ProtoMessage() {}

func (x *GetDepositOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetDepositOnlyResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{27}
}

func (x *GetDepositOnlyResponse) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDepositesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Offset int32                        `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32                        `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetDepositesRequest) Reset() {
	*x = GetDepositesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositesRequest) ProtoMessage() {}

func (x *GetDepositesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositesRequest.ProtoReflect.Descriptor instead.
func (*GetDepositesRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{28}
}

func (x *GetDepositesRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetDepositesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDepositesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetDepositesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Deposit `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total int32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetDepositesResponse) Reset() {
	*x = GetDepositesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositesResponse) ProtoMessage() {}

func (x *GetDepositesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositesResponse.ProtoReflect.Descriptor instead.
func (*GetDepositesResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{29}
}

func (x *GetDepositesResponse) GetInfos() []*Deposit {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetDepositesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExistDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistDepositRequest) Reset() {
	*x = ExistDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistDepositRequest) ProtoMessage() {}

func (x *ExistDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistDepositRequest.ProtoReflect.Descriptor instead.
func (*ExistDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{30}
}

func (x *ExistDepositRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ExistDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistDepositResponse) Reset() {
	*x = ExistDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistDepositResponse) ProtoMessage() {}

func (x *ExistDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistDepositResponse.ProtoReflect.Descriptor instead.
func (*ExistDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{31}
}

func (x *ExistDepositResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ExistDepositCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExistDepositCondsRequest) Reset() {
	*x = ExistDepositCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistDepositCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistDepositCondsRequest) ProtoMessage() {}

func (x *ExistDepositCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistDepositCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistDepositCondsRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{32}
}

func (x *ExistDepositCondsRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistDepositCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *ExistDepositCondsResponse) Reset() {
	*x = ExistDepositCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistDepositCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistDepositCondsResponse) ProtoMessage() {}

func (x *ExistDepositCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistDepositCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistDepositCondsResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{33}
}

func (x *ExistDepositCondsResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CountDepositesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds map[string]*npool.FilterCond `protobuf:"bytes,10,rep,name=Conds,proto3" json:"Conds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CountDepositesRequest) Reset() {
	*x = CountDepositesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDepositesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDepositesRequest) ProtoMessage() {}

func (x *CountDepositesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDepositesRequest.ProtoReflect.Descriptor instead.
func (*CountDepositesRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{34}
}

func (x *CountDepositesRequest) GetConds() map[string]*npool.FilterCond {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountDepositesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,10,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *CountDepositesResponse) Reset() {
	*x = CountDepositesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDepositesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDepositesResponse) ProtoMessage() {}

func (x *CountDepositesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDepositesResponse.ProtoReflect.Descriptor instead.
func (*CountDepositesResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{35}
}

func (x *CountDepositesResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type DeleteDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteDepositRequest) Reset() {
	*x = DeleteDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepositRequest) ProtoMessage() {}

func (x *DeleteDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepositRequest.ProtoReflect.Descriptor instead.
func (*DeleteDepositRequest) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteDepositRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteDepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Deposit `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteDepositResponse) Reset() {
	*x = DeleteDepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepositResponse) ProtoMessage() {}

func (x *DeleteDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_gasfeeder_gasfeeder_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepositResponse.ProtoReflect.Descriptor instead.
func (*DeleteDepositResponse) Descriptor() ([]byte, []int) {
	return file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteDepositResponse) GetInfo() *Deposit {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_gasfeeder_gasfeeder_proto protoreflect.FileDescriptor

var file_npool_gasfeeder_gasfeeder_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x64, 0x65,
	0x72, 0x2f, 0x67, 0x61, 0x73, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b,
	0x01, 0x0a, 0x07, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x61,
	0x73, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x42, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x43, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd8, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x25, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x33, 0x0a, 0x19, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x43, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x43, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x1a,
	0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x44, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67,
	0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x25, 0x0a, 0x13,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x19, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xae, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73,
	0x1a, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x30, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0x92, 0x10, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x64, 0x65, 0x72, 0x12, 0x51, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a,
	0x12, 0x79, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x12, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x12, 0x23, 0x2e, 0x67,
	0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e,
	0x67, 0x61, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x67,
	0x61, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x2f, 0x6f, 0x6e,
	0x6c, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0c, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f, 0x63,
	0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x79, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73,
	0x12, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x23, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x20,
	0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x7e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2f, 0x6f, 0x6e, 0x6c, 0x79, 0x3a, 0x01, 0x2a, 0x12,
	0x74, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x22, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x61, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a,
	0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x61,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x23, 0x2e, 0x67, 0x61, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x3a, 0x01, 0x2a, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x67,
	0x61, 0x73, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_gasfeeder_gasfeeder_proto_rawDescOnce sync.Once
	file_npool_gasfeeder_gasfeeder_proto_rawDescData = file_npool_gasfeeder_gasfeeder_proto_rawDesc
)

func file_npool_gasfeeder_gasfeeder_proto_rawDescGZIP() []byte {
	file_npool_gasfeeder_gasfeeder_proto_rawDescOnce.Do(func() {
		file_npool_gasfeeder_gasfeeder_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_gasfeeder_gasfeeder_proto_rawDescData)
	})
	return file_npool_gasfeeder_gasfeeder_proto_rawDescData
}

var file_npool_gasfeeder_gasfeeder_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_npool_gasfeeder_gasfeeder_proto_goTypes = []interface{}{
	(*CoinGas)(nil),                   // 0: gas.feeder.v1.CoinGas
	(*CreateCoinGasRequest)(nil),      // 1: gas.feeder.v1.CreateCoinGasRequest
	(*CreateCoinGasResponse)(nil),     // 2: gas.feeder.v1.CreateCoinGasResponse
	(*UpdateCoinGasRequest)(nil),      // 3: gas.feeder.v1.UpdateCoinGasRequest
	(*UpdateCoinGasResponse)(nil),     // 4: gas.feeder.v1.UpdateCoinGasResponse
	(*GetCoinGasRequest)(nil),         // 5: gas.feeder.v1.GetCoinGasRequest
	(*GetCoinGasResponse)(nil),        // 6: gas.feeder.v1.GetCoinGasResponse
	(*GetCoinGasOnlyRequest)(nil),     // 7: gas.feeder.v1.GetCoinGasOnlyRequest
	(*GetCoinGasOnlyResponse)(nil),    // 8: gas.feeder.v1.GetCoinGasOnlyResponse
	(*GetCoinGasesRequest)(nil),       // 9: gas.feeder.v1.GetCoinGasesRequest
	(*GetCoinGasesResponse)(nil),      // 10: gas.feeder.v1.GetCoinGasesResponse
	(*ExistCoinGasRequest)(nil),       // 11: gas.feeder.v1.ExistCoinGasRequest
	(*ExistCoinGasResponse)(nil),      // 12: gas.feeder.v1.ExistCoinGasResponse
	(*ExistCoinGasCondsRequest)(nil),  // 13: gas.feeder.v1.ExistCoinGasCondsRequest
	(*ExistCoinGasCondsResponse)(nil), // 14: gas.feeder.v1.ExistCoinGasCondsResponse
	(*CountCoinGasesRequest)(nil),     // 15: gas.feeder.v1.CountCoinGasesRequest
	(*CountCoinGasesResponse)(nil),    // 16: gas.feeder.v1.CountCoinGasesResponse
	(*DeleteCoinGasRequest)(nil),      // 17: gas.feeder.v1.DeleteCoinGasRequest
	(*DeleteCoinGasResponse)(nil),     // 18: gas.feeder.v1.DeleteCoinGasResponse
	(*Deposit)(nil),                   // 19: gas.feeder.v1.Deposit
	(*CreateDepositRequest)(nil),      // 20: gas.feeder.v1.CreateDepositRequest
	(*CreateDepositResponse)(nil),     // 21: gas.feeder.v1.CreateDepositResponse
	(*UpdateDepositRequest)(nil),      // 22: gas.feeder.v1.UpdateDepositRequest
	(*UpdateDepositResponse)(nil),     // 23: gas.feeder.v1.UpdateDepositResponse
	(*GetDepositRequest)(nil),         // 24: gas.feeder.v1.GetDepositRequest
	(*GetDepositResponse)(nil),        // 25: gas.feeder.v1.GetDepositResponse
	(*GetDepositOnlyRequest)(nil),     // 26: gas.feeder.v1.GetDepositOnlyRequest
	(*GetDepositOnlyResponse)(nil),    // 27: gas.feeder.v1.GetDepositOnlyResponse
	(*GetDepositesRequest)(nil),       // 28: gas.feeder.v1.GetDepositesRequest
	(*GetDepositesResponse)(nil),      // 29: gas.feeder.v1.GetDepositesResponse
	(*ExistDepositRequest)(nil),       // 30: gas.feeder.v1.ExistDepositRequest
	(*ExistDepositResponse)(nil),      // 31: gas.feeder.v1.ExistDepositResponse
	(*ExistDepositCondsRequest)(nil),  // 32: gas.feeder.v1.ExistDepositCondsRequest
	(*ExistDepositCondsResponse)(nil), // 33: gas.feeder.v1.ExistDepositCondsResponse
	(*CountDepositesRequest)(nil),     // 34: gas.feeder.v1.CountDepositesRequest
	(*CountDepositesResponse)(nil),    // 35: gas.feeder.v1.CountDepositesResponse
	(*DeleteDepositRequest)(nil),      // 36: gas.feeder.v1.DeleteDepositRequest
	(*DeleteDepositResponse)(nil),     // 37: gas.feeder.v1.DeleteDepositResponse
	nil,                               // 38: gas.feeder.v1.GetCoinGasOnlyRequest.CondsEntry
	nil,                               // 39: gas.feeder.v1.GetCoinGasesRequest.CondsEntry
	nil,                               // 40: gas.feeder.v1.ExistCoinGasCondsRequest.CondsEntry
	nil,                               // 41: gas.feeder.v1.CountCoinGasesRequest.CondsEntry
	nil,                               // 42: gas.feeder.v1.GetDepositOnlyRequest.CondsEntry
	nil,                               // 43: gas.feeder.v1.GetDepositesRequest.CondsEntry
	nil,                               // 44: gas.feeder.v1.ExistDepositCondsRequest.CondsEntry
	nil,                               // 45: gas.feeder.v1.CountDepositesRequest.CondsEntry
	(*npool.FilterCond)(nil),          // 46: npool.v1.FilterCond
	(*emptypb.Empty)(nil),             // 47: google.protobuf.Empty
	(*npool.VersionResponse)(nil),     // 48: npool.v1.VersionResponse
}
var file_npool_gasfeeder_gasfeeder_proto_depIdxs = []int32{
	0,  // 0: gas.feeder.v1.CreateCoinGasRequest.Info:type_name -> gas.feeder.v1.CoinGas
	0,  // 1: gas.feeder.v1.CreateCoinGasResponse.Info:type_name -> gas.feeder.v1.CoinGas
	0,  // 2: gas.feeder.v1.UpdateCoinGasRequest.Info:type_name -> gas.feeder.v1.CoinGas
	0,  // 3: gas.feeder.v1.UpdateCoinGasResponse.Info:type_name -> gas.feeder.v1.CoinGas
	0,  // 4: gas.feeder.v1.GetCoinGasResponse.Info:type_name -> gas.feeder.v1.CoinGas
	38, // 5: gas.feeder.v1.GetCoinGasOnlyRequest.Conds:type_name -> gas.feeder.v1.GetCoinGasOnlyRequest.CondsEntry
	0,  // 6: gas.feeder.v1.GetCoinGasOnlyResponse.Info:type_name -> gas.feeder.v1.CoinGas
	39, // 7: gas.feeder.v1.GetCoinGasesRequest.Conds:type_name -> gas.feeder.v1.GetCoinGasesRequest.CondsEntry
	0,  // 8: gas.feeder.v1.GetCoinGasesResponse.Infos:type_name -> gas.feeder.v1.CoinGas
	40, // 9: gas.feeder.v1.ExistCoinGasCondsRequest.Conds:type_name -> gas.feeder.v1.ExistCoinGasCondsRequest.CondsEntry
	41, // 10: gas.feeder.v1.CountCoinGasesRequest.Conds:type_name -> gas.feeder.v1.CountCoinGasesRequest.CondsEntry
	0,  // 11: gas.feeder.v1.DeleteCoinGasResponse.Info:type_name -> gas.feeder.v1.CoinGas
	19, // 12: gas.feeder.v1.CreateDepositRequest.Info:type_name -> gas.feeder.v1.Deposit
	19, // 13: gas.feeder.v1.CreateDepositResponse.Info:type_name -> gas.feeder.v1.Deposit
	19, // 14: gas.feeder.v1.UpdateDepositRequest.Info:type_name -> gas.feeder.v1.Deposit
	19, // 15: gas.feeder.v1.UpdateDepositResponse.Info:type_name -> gas.feeder.v1.Deposit
	19, // 16: gas.feeder.v1.GetDepositResponse.Info:type_name -> gas.feeder.v1.Deposit
	42, // 17: gas.feeder.v1.GetDepositOnlyRequest.Conds:type_name -> gas.feeder.v1.GetDepositOnlyRequest.CondsEntry
	19, // 18: gas.feeder.v1.GetDepositOnlyResponse.Info:type_name -> gas.feeder.v1.Deposit
	43, // 19: gas.feeder.v1.GetDepositesRequest.Conds:type_name -> gas.feeder.v1.GetDepositesRequest.CondsEntry
	19, // 20: gas.feeder.v1.GetDepositesResponse.Infos:type_name -> gas.feeder.v1.Deposit
	44, // 21: gas.feeder.v1.ExistDepositCondsRequest.Conds:type_name -> gas.feeder.v1.ExistDepositCondsRequest.CondsEntry
	45, // 22: gas.feeder.v1.CountDepositesRequest.Conds:type_name -> gas.feeder.v1.CountDepositesRequest.CondsEntry
	19, // 23: gas.feeder.v1.DeleteDepositResponse.Info:type_name -> gas.feeder.v1.Deposit
	46, // 24: gas.feeder.v1.GetCoinGasOnlyRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 25: gas.feeder.v1.GetCoinGasesRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 26: gas.feeder.v1.ExistCoinGasCondsRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 27: gas.feeder.v1.CountCoinGasesRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 28: gas.feeder.v1.GetDepositOnlyRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 29: gas.feeder.v1.GetDepositesRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 30: gas.feeder.v1.ExistDepositCondsRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	46, // 31: gas.feeder.v1.CountDepositesRequest.CondsEntry.value:type_name -> npool.v1.FilterCond
	47, // 32: gas.feeder.v1.GasFeeder.Version:input_type -> google.protobuf.Empty
	1,  // 33: gas.feeder.v1.GasFeeder.CreateCoinGas:input_type -> gas.feeder.v1.CreateCoinGasRequest
	3,  // 34: gas.feeder.v1.GasFeeder.UpdateCoinGas:input_type -> gas.feeder.v1.UpdateCoinGasRequest
	5,  // 35: gas.feeder.v1.GasFeeder.GetCoinGas:input_type -> gas.feeder.v1.GetCoinGasRequest
	7,  // 36: gas.feeder.v1.GasFeeder.GetCoinGasOnly:input_type -> gas.feeder.v1.GetCoinGasOnlyRequest
	9,  // 37: gas.feeder.v1.GasFeeder.GetCoinGases:input_type -> gas.feeder.v1.GetCoinGasesRequest
	11, // 38: gas.feeder.v1.GasFeeder.ExistCoinGas:input_type -> gas.feeder.v1.ExistCoinGasRequest
	13, // 39: gas.feeder.v1.GasFeeder.ExistCoinGasConds:input_type -> gas.feeder.v1.ExistCoinGasCondsRequest
	17, // 40: gas.feeder.v1.GasFeeder.DeleteCoinGas:input_type -> gas.feeder.v1.DeleteCoinGasRequest
	20, // 41: gas.feeder.v1.GasFeeder.CreateDeposit:input_type -> gas.feeder.v1.CreateDepositRequest
	22, // 42: gas.feeder.v1.GasFeeder.UpdateDeposit:input_type -> gas.feeder.v1.UpdateDepositRequest
	24, // 43: gas.feeder.v1.GasFeeder.GetDeposit:input_type -> gas.feeder.v1.GetDepositRequest
	26, // 44: gas.feeder.v1.GasFeeder.GetDepositOnly:input_type -> gas.feeder.v1.GetDepositOnlyRequest
	28, // 45: gas.feeder.v1.GasFeeder.GetDeposites:input_type -> gas.feeder.v1.GetDepositesRequest
	30, // 46: gas.feeder.v1.GasFeeder.ExistDeposit:input_type -> gas.feeder.v1.ExistDepositRequest
	32, // 47: gas.feeder.v1.GasFeeder.ExistDepositConds:input_type -> gas.feeder.v1.ExistDepositCondsRequest
	36, // 48: gas.feeder.v1.GasFeeder.DeleteDeposit:input_type -> gas.feeder.v1.DeleteDepositRequest
	48, // 49: gas.feeder.v1.GasFeeder.Version:output_type -> npool.v1.VersionResponse
	2,  // 50: gas.feeder.v1.GasFeeder.CreateCoinGas:output_type -> gas.feeder.v1.CreateCoinGasResponse
	4,  // 51: gas.feeder.v1.GasFeeder.UpdateCoinGas:output_type -> gas.feeder.v1.UpdateCoinGasResponse
	6,  // 52: gas.feeder.v1.GasFeeder.GetCoinGas:output_type -> gas.feeder.v1.GetCoinGasResponse
	8,  // 53: gas.feeder.v1.GasFeeder.GetCoinGasOnly:output_type -> gas.feeder.v1.GetCoinGasOnlyResponse
	10, // 54: gas.feeder.v1.GasFeeder.GetCoinGases:output_type -> gas.feeder.v1.GetCoinGasesResponse
	12, // 55: gas.feeder.v1.GasFeeder.ExistCoinGas:output_type -> gas.feeder.v1.ExistCoinGasResponse
	14, // 56: gas.feeder.v1.GasFeeder.ExistCoinGasConds:output_type -> gas.feeder.v1.ExistCoinGasCondsResponse
	18, // 57: gas.feeder.v1.GasFeeder.DeleteCoinGas:output_type -> gas.feeder.v1.DeleteCoinGasResponse
	21, // 58: gas.feeder.v1.GasFeeder.CreateDeposit:output_type -> gas.feeder.v1.CreateDepositResponse
	23, // 59: gas.feeder.v1.GasFeeder.UpdateDeposit:output_type -> gas.feeder.v1.UpdateDepositResponse
	25, // 60: gas.feeder.v1.GasFeeder.GetDeposit:output_type -> gas.feeder.v1.GetDepositResponse
	27, // 61: gas.feeder.v1.GasFeeder.GetDepositOnly:output_type -> gas.feeder.v1.GetDepositOnlyResponse
	29, // 62: gas.feeder.v1.GasFeeder.GetDeposites:output_type -> gas.feeder.v1.GetDepositesResponse
	31, // 63: gas.feeder.v1.GasFeeder.ExistDeposit:output_type -> gas.feeder.v1.ExistDepositResponse
	33, // 64: gas.feeder.v1.GasFeeder.ExistDepositConds:output_type -> gas.feeder.v1.ExistDepositCondsResponse
	37, // 65: gas.feeder.v1.GasFeeder.DeleteDeposit:output_type -> gas.feeder.v1.DeleteDepositResponse
	49, // [49:66] is the sub-list for method output_type
	32, // [32:49] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_npool_gasfeeder_gasfeeder_proto_init() }
func file_npool_gasfeeder_gasfeeder_proto_init() {
	if File_npool_gasfeeder_gasfeeder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCoinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinGasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinGasCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistCoinGasCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCoinGasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCoinGasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCoinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistDepositCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistDepositCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDepositesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDepositesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_gasfeeder_gasfeeder_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_gasfeeder_gasfeeder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_gasfeeder_gasfeeder_proto_goTypes,
		DependencyIndexes: file_npool_gasfeeder_gasfeeder_proto_depIdxs,
		MessageInfos:      file_npool_gasfeeder_gasfeeder_proto_msgTypes,
	}.Build()
	File_npool_gasfeeder_gasfeeder_proto = out.File
	file_npool_gasfeeder_gasfeeder_proto_rawDesc = nil
	file_npool_gasfeeder_gasfeeder_proto_goTypes = nil
	file_npool_gasfeeder_gasfeeder_proto_depIdxs = nil
}
