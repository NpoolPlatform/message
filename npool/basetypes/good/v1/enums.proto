syntax = "proto3";

package basetypes.good.v1;

option go_package = "github.com/NpoolPlatform/message/npool/basetypes/good/v1";

enum BenefitType {
  DefaultBenefitType = 0;
  // Platform receive benefit, then distribute benefit to user
  BenefitTypePlatform = 10;
  // User receive benefit from pool directly
  BenefitTypePool = 20;
  // User do not receive any online reward
  BenefitTypeOffline = 30;
  // User receive reward from smart contract
  BenefitTypeContract = 40;

  // Such as technique fee
  BenefitTypeNone      = 200;
}

enum GoodType {
  DefaultGoodType = 0;

  PowerRental = 10;
  MachineRental = 20;
  MachineCustody = 30;
  LegacyPowerRental = 40;

  TechniqueServiceFee = 1000;
  ElectricityFee = 2000;
}

enum BenefitState {
  DefaultBenefitState = 0;

  BenefitWait = 10;
  BenefitTransferring = 20;
  // Good bookkeeping
  BenefitBookKeeping = 30;
  BenefitUserBookKeeping = 31;
  BenefitSimulateBookKeeping = 32;
  BenefitDone = 40;
  BenefitFail = 50;
}

enum CancelMode {
  DefaultCancelMode = 0;

  CancellableBeforeStart = 10;
  CancellableBeforeBenefit = 20;
  Uncancellable = 30;
  CancellableBeforeUsed = 40;
}

enum GoodLabel {
  DefaultGoodLabel = 0;

  GoodLabelPromotion = 10;
  GoodLabelNoviceExclusive = 20;   // Newbie
  GoodLabelInnovationStarter = 30; // First batch mining
  GoodLabelLoyaltyExclusive = 40;  // User with action credis pass threshold
}

enum GoodTopMostType {
  DefaultGoodTopMostType = 0;

  TopMostPromotion = 10;
  TopMostNoviceExclusive = 20;
  TopMostBestOffer = 30;
  TopMostInnovationStarter = 40;
  TopMostLoyaltyExclusive = 50;
}

enum GoodTopMostConstraint {
    DefaultGoodTopMostConstraint = 0;

    TopMostCreditThreshold = 10;
    TopMostRegisterBefore = 20;
    TopMostOrderThreshold = 30;
    TopMostPaymentAmount = 40;
    TopMostKycMust = 50;
}

enum GoodStartMode {
  DefaultGoodStartMode = 0;

    GoodStartModeTBD       = 10; // Start time will be adjusted in future
    GoodStartModeConfirmed = 20; // Deprecated
    GoodStartModeInstantly = 30; // Start when order paid
    GoodStartModeNextDay   = 40; // Start at next 00:00 UTC
    GoodStartModePreset    = 50; // Start at a preset time
    GoodStartModeWithParent = 60; // Start with parent good
}

enum StockLockState {
    DefaultStockLockState = 0;

    StockLocked     = 10;
    StockChargeBack = 20;
    StockCanceled   = 30;
}

enum AppStockLockState {
  DefaultAppStockLockState = 0;

  AppStockLocked = 10;
  AppStockWaitStart = 20;
  AppStockInService = 30;
  AppStockExpired = 40;
  AppStockChargeBack = 50;
  AppStockRollback = 60;
  AppStockCanceled = 70;
}

enum GoodUnitType {
  DefaultGoodUnitType = 0;

  GoodUnitByDuration = 10;
  GoodUnitByQuantity = 20;
  GoodUnitByDurationAndQuantity = 30;
}

enum GoodUnitCalculateType {
  DefaultGoodUnitCalculateType = 0;

  GoodUnitCalculateBySelf = 10;
  GoodUnitCalculateByParent = 20;
}

enum GoodDurationType {
  DefaultGoodDurationType = 0;

  GoodDurationByHour = 10;
  GoodDurationByDay = 20;
  GoodDurationByMonth = 30;
  GoodDurationByYear = 40;
}

enum GoodSettlementType {
  DefaultGoodSettlementType = 0;

  GoodSettledByPaymentPercent = 10;
  GoodSettledByPaymentAmount  = 20;
  GoodSettledByProfitPercent  = 30; // Percent in default
}

enum GoodSaleMode {
    DefaultGoodSaleMode = 0;

    GoodSaleModeMainnetSpot           = 10;
    GoodSaleModeMainnetPresaleSpot    = 20;
    GoodSaleModeMainnetPresaleScratch = 30;
    GoodSaleModeTestnetPresale        = 40;
}

enum GoodStockMode {
    DefaultGoodStockMode = 0;

    GoodStockByMiningPool = 10;
    GoodStockByUnique     = 20;
}

enum GoodCommentHideReason {
    DefaultGoodCommentHideReason = 0;

    GoodCommentHideBySpam = 10;
    GoodCommentHideByNotThisGood = 20;
    GoodCommentHideByFalseDescription = 30;
}

/* initial state: MiningStockStateWait
                         |
                         v
           MiningStockStateCreateGoodUser---------------
                         |                             |
                         v                             |
            MiningStockStateCheckHashRate---------------
                         |                             |
                         v                             v
               MiningStockStateDone             MiningStockStateFail
*/
enum MiningStockState {
    DefaultMiningStockState = 0;
    MiningStockStateWait = 10;
    MiningStockStateCreateGoodUser = 20;
    MiningStockStateCheckHashRate = 30;
    MiningStockStateDone = 40;
    MiningStockStateFail = 50;
}