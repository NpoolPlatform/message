syntax = "proto3";

package basetypes.order.v1;

option go_package = "github.com/NpoolPlatform/message/npool/basetypes/order/v1";

enum OrderType {
    DefaultOrderType = 0;
    Normal           = 10;
    Offline          = 20;
    Airdrop          = 30;
}

enum OrderState {
    DefaultOrderState = 0;

    // Common state
    OrderStateWaitPayment       = 10;
    OrderStateCheckPayment      = 20;
    OrderStatePaid              = 30;
    OrderStatePaymentTimeout    = 40;
    // Platform confirm canceled
    OrderStateCancelled         = 50;

    // Cyclation order state
    OrderStateInService         = 60;
    OrderStateExpired           = 70;

    // Delivery order state
}

enum PaymentState {
    DefaultPaymentState  = 0;

    PaymentStateWait     = 10;
    PaymentStateDone     = 20;
    PaymentStateCancelled = 30;
    PaymentStateTimeOut  = 40;
}

enum InvestmentType {
    DefaultInvestmentType = 0;

    UnionMining = 10;
    FullPayment = 20;
}

enum PaymentType {
    DefaultPaymentType = 0;

    PayWithBalanceOnly        = 10;
    PayWithTransferOnly       = 20;
    PayWithTransferAndBalance = 30;
    PayWithParentOrder        = 40;
}

enum CompensateType {
    DefaultCompensateType = 0;

    CompensateMalfunction  = 10;
    CompensateWalfare      = 20;
    CompensateStarterDelay = 30;
}

enum BenefitState {
    DefaultBenefitState = 0;

    BenefitWait       = 10;
    BenefitCalculated = 20;
    BenefitDone       = 30;
}

enum OrderStartMode {
    DefaultOrderStartMode = 0;

    OrderStartTBD        = 10;
    OrderStartConfirmed  = 20;
}
