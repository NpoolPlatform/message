// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: npool/basetypes/v1/accountusedfor.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountUsedFor int32

const (
	AccountUsedFor_DefaultAccountUsedFor AccountUsedFor = 0
	AccountUsedFor_GoodBenefit2          AccountUsedFor = 10  // Daily good benefit receiver              - Platform Hot
	AccountUsedFor_UserBenefitHot        AccountUsedFor = 20  // Limited amount money for withdrawal      - Platform Hot
	AccountUsedFor_UserBenefitCold       AccountUsedFor = 30  // Money of user benefit over limitation    - Platform Cold
	AccountUsedFor_PlatformBenefitCold   AccountUsedFor = 40  // Money over limitation                    - Platform Cold
	AccountUsedFor_GasProvider           AccountUsedFor = 50  // Deposit money for transaction gas        - Platform Hot
	AccountUsedFor_UserWithdraw          AccountUsedFor = 60  // User set withdraw address                - User Set
	AccountUsedFor_UserDeposit           AccountUsedFor = 70  // Platform created user deposit address    - Platform Create
	AccountUsedFor_GoodPayment           AccountUsedFor = 80  // Platform created for good payment        - Platform Created
	AccountUsedFor_PaymentCollector      AccountUsedFor = 90  // Money for payment over limitation        - Platform Cold
	AccountUsedFor_UserDirectBenefit     AccountUsedFor = 100 // Benefit address for user set to product  - User set
)

// Enum value maps for AccountUsedFor.
var (
	AccountUsedFor_name = map[int32]string{
		0:   "DefaultAccountUsedFor",
		10:  "GoodBenefit2",
		20:  "UserBenefitHot",
		30:  "UserBenefitCold",
		40:  "PlatformBenefitCold",
		50:  "GasProvider",
		60:  "UserWithdraw",
		70:  "UserDeposit",
		80:  "GoodPayment",
		90:  "PaymentCollector",
		100: "UserDirectBenefit",
	}
	AccountUsedFor_value = map[string]int32{
		"DefaultAccountUsedFor": 0,
		"GoodBenefit2":          10,
		"UserBenefitHot":        20,
		"UserBenefitCold":       30,
		"PlatformBenefitCold":   40,
		"GasProvider":           50,
		"UserWithdraw":          60,
		"UserDeposit":           70,
		"GoodPayment":           80,
		"PaymentCollector":      90,
		"UserDirectBenefit":     100,
	}
)

func (x AccountUsedFor) Enum() *AccountUsedFor {
	p := new(AccountUsedFor)
	*p = x
	return p
}

func (x AccountUsedFor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountUsedFor) Descriptor() protoreflect.EnumDescriptor {
	return file_npool_basetypes_v1_accountusedfor_proto_enumTypes[0].Descriptor()
}

func (AccountUsedFor) Type() protoreflect.EnumType {
	return &file_npool_basetypes_v1_accountusedfor_proto_enumTypes[0]
}

func (x AccountUsedFor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountUsedFor.Descriptor instead.
func (AccountUsedFor) EnumDescriptor() ([]byte, []int) {
	return file_npool_basetypes_v1_accountusedfor_proto_rawDescGZIP(), []int{0}
}

var File_npool_basetypes_v1_accountusedfor_proto protoreflect.FileDescriptor

var file_npool_basetypes_v1_accountusedfor_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x75, 0x73, 0x65, 0x64,
	0x66, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2a, 0xf1, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x32, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x48, 0x6f, 0x74, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x64, 0x10, 0x1e,
	0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x43, 0x6f, 0x6c, 0x64, 0x10, 0x28, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x61, 0x73,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x32, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x3c, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x46, 0x12, 0x0f, 0x0a,
	0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x50, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x10, 0x5a, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x10, 0x64, 0x42, 0x35, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_basetypes_v1_accountusedfor_proto_rawDescOnce sync.Once
	file_npool_basetypes_v1_accountusedfor_proto_rawDescData = file_npool_basetypes_v1_accountusedfor_proto_rawDesc
)

func file_npool_basetypes_v1_accountusedfor_proto_rawDescGZIP() []byte {
	file_npool_basetypes_v1_accountusedfor_proto_rawDescOnce.Do(func() {
		file_npool_basetypes_v1_accountusedfor_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_basetypes_v1_accountusedfor_proto_rawDescData)
	})
	return file_npool_basetypes_v1_accountusedfor_proto_rawDescData
}

var file_npool_basetypes_v1_accountusedfor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_npool_basetypes_v1_accountusedfor_proto_goTypes = []interface{}{
	(AccountUsedFor)(0), // 0: basetypes.v1.AccountUsedFor
}
var file_npool_basetypes_v1_accountusedfor_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_npool_basetypes_v1_accountusedfor_proto_init() }
func file_npool_basetypes_v1_accountusedfor_proto_init() {
	if File_npool_basetypes_v1_accountusedfor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_basetypes_v1_accountusedfor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_npool_basetypes_v1_accountusedfor_proto_goTypes,
		DependencyIndexes: file_npool_basetypes_v1_accountusedfor_proto_depIdxs,
		EnumInfos:         file_npool_basetypes_v1_accountusedfor_proto_enumTypes,
	}.Build()
	File_npool_basetypes_v1_accountusedfor_proto = out.File
	file_npool_basetypes_v1_accountusedfor_proto_rawDesc = nil
	file_npool_basetypes_v1_accountusedfor_proto_goTypes = nil
	file_npool_basetypes_v1_accountusedfor_proto_depIdxs = nil
}
