syntax = "proto3";

package project.info.manager.v1;

option go_package = "github.com/NpoolPlatform/message/npool/project-info-manager";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

service ProjectInfoManager {
  rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
    option (google.api.http) = {
        post: "/version"
        body: "*"
    };
  }

  rpc CreateCoinDescription (CreateCoinDescriptionRequest) returns (CreateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/description"
        body: "*"
    };
  }

  rpc CreateCoinDescriptions (CreateCoinDescriptionsRequest) returns (CreateCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/descriptions"
        body: "*"
    };
  }

  rpc CreateAppCoinDescription (CreateAppCoinDescriptionRequest) returns (CreateAppCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/description"
        body: "*"
    };
  }

  rpc CreateAppCoinDescriptions (CreateAppCoinDescriptionsRequest) returns (CreateAppCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/descriptions"
        body: "*"
    };
  }

  rpc UpdateCoinDescription (UpdateCoinDescriptionRequest) returns (UpdateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/update/coin/description"
        body: "*"
    };
  }

  rpc GetCoinDescription (GetCoinDescriptionRequest) returns (GetCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/description"
        body: "*"
    };
  }

  rpc GetCoinDescriptions (GetCoinDescriptionsRequest) returns (GetCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/descriptions"
        body: "*"
    };
  }

  rpc GetCoinDescriptionOnly (GetCoinDescriptionOnlyRequest) returns (GetCoinDescriptionOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/description/only"
        body: "*"
    };
  }

  rpc GetAppCoinDescriptions (GetAppCoinDescriptionsRequest) returns (GetAppCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/descriptions"
        body: "*"
    };
  }

  rpc GetAppCoinDescriptionOnly (GetAppCoinDescriptionOnlyRequest) returns (GetAppCoinDescriptionOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/description/only"
        body: "*"
    };
  }

  rpc DeleteCoinDescription (DeleteCoinDescriptionRequest) returns (DeleteCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/delete/coin/description"
        body: "*"
    };
  }

  rpc CreateCoinProductInfo (CreateCoinProductInfoRequest) returns (CreateCoinProductInfoResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/productinfo"
        body: "*"
    };
  }

  rpc CreateCoinProductInfos (CreateCoinProductInfosRequest) returns (CreateCoinProductInfosResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/productinfos"
        body: "*"
    };
  }

  rpc CreateAppCoinProductInfo (CreateAppCoinProductInfoRequest) returns (CreateAppCoinProductInfoResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/productinfo"
        body: "*"
    };
  }

  rpc CreateAppCoinProductInfos (CreateAppCoinProductInfosRequest) returns (CreateAppCoinProductInfosResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/productinfos"
        body: "*"
    };
  }

  rpc UpdateCoinProductInfo (UpdateCoinProductInfoRequest) returns (UpdateCoinProductInfoResponse) {
    option (google.api.http) = {
        post: "/v1/update/coin/productinfo"
        body: "*"
    };
  }

  rpc GetCoinProductInfo (GetCoinProductInfoRequest) returns (GetCoinProductInfoResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/productinfo"
        body: "*"
    };
  }

  rpc GetCoinProductInfos (GetCoinProductInfosRequest) returns (GetCoinProductInfosResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/productinfos"
        body: "*"
    };
  }

  rpc GetCoinProductInfoOnly (GetCoinProductInfoOnlyRequest) returns (GetCoinProductInfoOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/productinfo/only"
        body: "*"
    };
  }

  rpc GetAppCoinProductInfos (GetAppCoinProductInfosRequest) returns (GetAppCoinProductInfosResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/productinfos"
        body: "*"
    };
  }

  rpc GetAppCoinProductInfoOnly (GetAppCoinProductInfoOnlyRequest) returns (GetAppCoinProductInfoOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/productinfo/only"
        body: "*"
    };
  }

  rpc DeleteCoinProductInfo (DeleteCoinProductInfoRequest) returns (DeleteCoinProductInfoResponse) {
    option (google.api.http) = {
        post: "/v1/delete/coin/productinfo"
        body: "*"
    };
  }
}

message CoinDescription {
  string ID         = 10;
  string AppID      = 20;
  string CoinTypeID = 30;
  string Title      = 40;
  string Message    = 50;
  string UsedFor    = 60;
  uint32 CreateAt = 70;
  uint32 UpdateAt = 80;
}

// create
message CreateCoinDescriptionRequest  {
  CoinDescription Info = 10;
}

message CreateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message CreateCoinDescriptionsRequest {
  string AppID = 10;
  repeated CoinDescription Infos = 20;
}

message CreateCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
}

message CreateAppCoinDescriptionRequest  {
  string TargetAppID = 10;
  CoinDescription Info = 20;
}

message CreateAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message CreateAppCoinDescriptionsRequest {
  string TargetAppID = 10;
  repeated CoinDescription Infos = 20;
}

message CreateAppCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
}

// update
message UpdateCoinDescriptionRequest {
  CoinDescription Info = 20;
}

message UpdateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

// get
message GetCoinDescriptionRequest {
  string ID = 20;
}

message GetCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message GetCoinDescriptionsRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

message GetCoinDescriptionOnlyRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinDescriptionOnlyResponse {
  CoinDescription Info = 10;
}

message GetAppCoinDescriptionsRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

message GetAppCoinDescriptionOnlyRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinDescriptionOnlyResponse {
  CoinDescription Info = 10;
}

// delete
message DeleteCoinDescriptionRequest {
  string ID = 10;
}

message DeleteCoinDescriptionResponse {
  CoinDescription Info = 10;
}



message CoinProductInfo {
  string ID = 10;
  string AppID = 20;
  string CoinTypeID = 30;
  string ProductPage = 40;
}

// create
message CreateCoinProductInfoRequest  {
  CoinProductInfo Info = 10;
}

message CreateCoinProductInfoResponse {
  CoinProductInfo Info = 10;
}

message CreateCoinProductInfosRequest {
  string AppID = 10;
  repeated CoinProductInfo Infos = 20;
}

message CreateCoinProductInfosResponse {
  repeated CoinProductInfo Infos = 10;
}

message CreateAppCoinProductInfoRequest  {
  string TargetAppID = 10;
  CoinProductInfo Info = 20;
}

message CreateAppCoinProductInfoResponse {
  CoinProductInfo Info = 10;
}

message CreateAppCoinProductInfosRequest {
  string TargetAppID = 10;
  repeated CoinProductInfo Infos = 20;
}

message CreateAppCoinProductInfosResponse {
  repeated CoinProductInfo Infos = 10;
}

// update
message UpdateCoinProductInfoRequest {
  CoinProductInfo Info = 20;
}

message UpdateCoinProductInfoResponse {
  CoinProductInfo Info = 10;
}

// get
message GetCoinProductInfoRequest {
  string ID = 20;
}

message GetCoinProductInfoResponse {
  CoinProductInfo Info = 10;
}

message GetCoinProductInfosRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinProductInfosResponse {
  repeated CoinProductInfo Infos = 10;
  int32 Total = 20;
}

message GetCoinProductInfoOnlyRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinProductInfoOnlyResponse {
  CoinProductInfo Info = 10;
}

message GetAppCoinProductInfosRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinProductInfosResponse {
  repeated CoinProductInfo Infos = 10;
  int32 Total = 20;
}

message GetAppCoinProductInfoOnlyRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinProductInfoOnlyResponse {
  CoinProductInfo Info = 10;
}

// delete
message DeleteCoinProductInfoRequest {
  string ID = 10;
}

message DeleteCoinProductInfoResponse {
  CoinProductInfo Info = 10;
}
