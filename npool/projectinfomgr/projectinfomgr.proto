syntax = "proto3";

package project.info.manager.v1;

option go_package = "github.com/NpoolPlatform/message/npool/project-info-manager";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "npool/npool.proto";

service ProjectInfoManager {
  rpc Version (google.protobuf.Empty) returns (npool.v1.VersionResponse){
    option (google.api.http) = {
        post: "/version"
        body: "*"
    };
  }

  rpc CreateCoinDescription (CreateCoinDescriptionRequest) returns (CreateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/description"
        body: "*"
    };
  }

  rpc CreateCoinDescriptions (CreateCoinDescriptionsRequest) returns (CreateCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/create/coin/descriptions"
        body: "*"
    };
  }

  rpc CreateAppCoinDescription (CreateAppCoinDescriptionRequest) returns (CreateAppCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/description"
        body: "*"
    };
  }

  rpc CreateAppCoinDescriptions (CreateAppCoinDescriptionsRequest) returns (CreateAppCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/create/app/coin/descriptions"
        body: "*"
    };
  }

  rpc UpdateCoinDescription (UpdateCoinDescriptionRequest) returns (UpdateCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/update/coin/description"
        body: "*"
    };
  }

  rpc GetCoinDescription (GetCoinDescriptionRequest) returns (GetCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/description"
        body: "*"
    };
  }


  rpc GetCoinDescriptions (GetCoinDescriptionsRequest) returns (GetCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/descriptions"
        body: "*"
    };
  }

  rpc GetCoinDescriptionOnly (GetCoinDescriptionOnlyRequest) returns (GetCoinDescriptionOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/coin/description/only"
        body: "*"
    };
  }

  rpc GetAppCoinDescription (GetAppCoinDescriptionRequest) returns (GetAppCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/description"
        body: "*"
    };
  }


  rpc GetAppCoinDescriptions (GetAppCoinDescriptionsRequest) returns (GetAppCoinDescriptionsResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/descriptions"
        body: "*"
    };
  }

  rpc GetAppCoinDescriptionOnly (GetAppCoinDescriptionOnlyRequest) returns (GetAppCoinDescriptionOnlyResponse) {
    option (google.api.http) = {
        post: "/v1/get/app/coin/description/only"
        body: "*"
    };
  }

  rpc DeleteCoinDescription (DeleteCoinDescriptionRequest) returns (DeleteCoinDescriptionResponse) {
    option (google.api.http) = {
        post: "/v1/delete/coin/description"
        body: "*"
    };
  }
}

message CoinDescription {
  string ID         = 10;
  string AppID      = 20;
  string CoinTypeID = 30;
  string Title      = 40;
  string Message    = 50;
  string UsedFor    = 60;
  uint32 CreateAt = 70;
  uint32 UpdateAt = 80;
}
// create
message CreateCoinDescriptionRequest  {
  CoinDescription Info=10;
}

message CreateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message CreateCoinDescriptionsRequest {
  string AppID = 10;
  repeated CoinDescription Infos = 20;
}

message CreateCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
}

message CreateAppCoinDescriptionRequest  {
  CoinDescription Info=10;
}

message CreateAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message CreateAppCoinDescriptionsRequest {
  string TargetAppID = 10;
  repeated CoinDescription Infos = 20;
}

message CreateAppCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
}

// update
message UpdateCoinDescriptionRequest {
  CoinDescription Info = 20;
}

message UpdateCoinDescriptionResponse {
  CoinDescription Info = 10;
}

// get
message GetCoinDescriptionRequest {
  string ID = 20;
}

message GetCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message GetCoinDescriptionsRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

message GetCoinDescriptionOnlyRequest {
  string AppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetCoinDescriptionOnlyResponse {
  CoinDescription Info = 10;
}

message GetAppCoinDescriptionRequest {
  string ID = 20;
}

message GetAppCoinDescriptionResponse {
  CoinDescription Info = 10;
}

message GetAppCoinDescriptionsRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinDescriptionsResponse {
  repeated CoinDescription Infos = 10;
  int32 Total = 20;
}

message GetAppCoinDescriptionOnlyRequest {
  string TargetAppID = 10;
  map<string, npool.v1.FilterCond> Conds = 20;
  int32 Offset = 30;
  int32 Limit = 40;
}

message GetAppCoinDescriptionOnlyResponse {
  CoinDescription Info = 10;
}

// delete
message DeleteCoinDescriptionRequest {
  string ID = 20;
}

message DeleteCoinDescriptionResponse {
  CoinDescription Info = 10;
}